{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/photo/index.html","path":"photo/index.html","modified":1,"renderable":0},{"_id":"source/learning/close.jpg","path":"learning/close.jpg","modified":1,"renderable":0},{"_id":"source/learning/search.png","path":"learning/search.png","modified":1,"renderable":0},{"_id":"source/learning/top.jpg","path":"learning/top.jpg","modified":1,"renderable":0},{"_id":"themes/yilia/source/main.css","path":"main.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/article-nav.scss","path":"css/article-nav.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/archive-inner.scss","path":"css/archive-inner.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/article-inner.scss","path":"css/article-inner.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/article-main.scss","path":"css/article-main.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/article.scss","path":"css/article.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/duoshuo.scss","path":"css/duoshuo.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/footer.scss","path":"css/footer.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/archive.scss","path":"css/archive.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts.scss","path":"css/fonts.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/global.scss","path":"css/global.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/main.scss","path":"css/main.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/highlight.scss","path":"css/highlight.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/page.scss","path":"css/page.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/grid.scss","path":"css/grid.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/social.scss","path":"css/social.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/left.scss","path":"css/left.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/scroll.scss","path":"css/scroll.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/switch.scss","path":"css/switch.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/mobile.scss","path":"css/mobile.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/tags-cloud.scss","path":"css/tags-cloud.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/tags.scss","path":"css/tags.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/tools.scss","path":"css/tools.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.svg","path":"fonts/default-skin.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/icomoon.eot","path":"fonts/icomoon.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/archive-inner.js","path":"js/archive-inner.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/browser.js","path":"js/browser.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/fix-page.js","path":"js/fix-page.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/icomoon.woff","path":"fonts/icomoon.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/icomoon.ttf","path":"fonts/icomoon.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/tags.js","path":"js/tags.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/tools.js","path":"js/tools.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/icomoon.svg","path":"fonts/icomoon.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/photo.js","path":"js/photo.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/util.js","path":"js/util.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/viewer.js","path":"js/viewer.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/photoSwipe/photoswipe-ui-default.js","path":"photoSwipe/photoswipe-ui-default.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/photoSwipe/photoswipe-ui-default.min.js","path":"photoSwipe/photoswipe-ui-default.min.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.js","path":"main.js","modified":1,"renderable":1},{"_id":"source/learning/overviews.jpg","path":"learning/overviews.jpg","modified":1,"renderable":0},{"_id":"themes/yilia/source/photoSwipe/photoswipe.min.js","path":"photoSwipe/photoswipe.min.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/mobile-slider.scss","path":"css/mobile-slider.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/photoSwipe/photoswipe.scss","path":"photoSwipe/photoswipe.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/photoSwipe/photoswipe.js","path":"photoSwipe/photoswipe.js","modified":1,"renderable":1},{"_id":"source/learning/overviews2.jpg","path":"learning/overviews2.jpg","modified":1,"renderable":0},{"_id":"source/learning/overviews4.jpg","path":"learning/overviews4.jpg","modified":1,"renderable":0},{"_id":"themes/yilia/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/coderwall.png","path":"css/img/coderwall.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/black-scales.png","path":"css/img/black-scales.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/douban.png","path":"css/img/douban.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/facebook.png","path":"css/img/facebook.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/linkedin.png","path":"css/img/linkedin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/github.png","path":"css/img/github.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/google.png","path":"css/img/google.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/pinboard.png","path":"css/img/pinboard.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/mail.png","path":"css/img/mail.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/stackoverflow.png","path":"css/img/stackoverflow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/pinterest.png","path":"css/img/pinterest.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/scrollbar_arrow.png","path":"css/img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/rss.png","path":"css/img/rss.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/twitter.png","path":"css/img/twitter.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/photoSwipe/default-skin/default-skin.png","path":"photoSwipe/default-skin/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/weibo.png","path":"css/img/weibo.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/zhihu.png","path":"css/img/zhihu.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/photoSwipe/default-skin/default-skin.svg","path":"photoSwipe/default-skin/default-skin.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/photoSwipe/default-skin/default-skin.scss","path":"photoSwipe/default-skin/default-skin.scss","modified":1,"renderable":1},{"_id":"themes/yilia/source/photoSwipe/default-skin/preloader.gif","path":"photoSwipe/default-skin/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/black.png","path":"css/img/black.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/img/background.png","path":"css/img/background.png","modified":1,"renderable":1},{"_id":"source/learning/overviews3.jpg","path":"learning/overviews3.jpg","modified":1,"renderable":0},{"_id":"source/learning/1.mp3","path":"learning/1.mp3","modified":1,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"10b0e14cd8c94af101a2e2652fe80c1655a18380","modified":1516430677516},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1480315154261},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1480315154255},{"_id":"themes/yilia/README.md","hash":"9b4c1fa6eda1bcb158d40abab29798229152dd21","modified":1480315154275},{"_id":"themes/yilia/webpack.config.js","hash":"447b7469d79be7cf86a28805e0ef56d6e98895e0","modified":1480315155321},{"_id":"themes/yilia/_config.yml","hash":"54573b6bd9079fbc477377d8a80a511ebfc160b5","modified":1512289010847},{"_id":"themes/yilia/package.json","hash":"2535ba634f8b4ea2ddceff2543907859fc54a443","modified":1480315154605},{"_id":"source/_posts/2017-6-08.md","hash":"62a4255735026e4450b2f2a662e6f5f3925627b8","modified":1516430677519},{"_id":"source/_posts/AJAX2.md","hash":"02d18163e12ee61efe4cd42e99bf2354c79550f0","modified":1516430677521},{"_id":"source/Index/index.md","hash":"b124b72d4382b498dfd019c3acef5613aac903f5","modified":1516430677518},{"_id":"source/_posts/Cookie学习笔记.md","hash":"dd93f038ebf199d843319e3e49cfd45b4dbfcd2f","modified":1516430677526},{"_id":"source/_posts/April-Fifth(pwd).md","hash":"64e5f70d4bc44b62d3277340605cc8e56e728936","modified":1516430677522},{"_id":"source/_posts/April-Third.md","hash":"b49c574c953c7e7f2fe1e991569ccad41ca575a3","modified":1516430677524},{"_id":"source/_posts/JAVA中堆内存和栈内存详解.md","hash":"96bc20a52cfa1d6967e71a96e491011e4d1abf66","modified":1516430677528},{"_id":"source/_posts/CSS学习笔记.md","hash":"55149b91db561702f48339fa78ff0339ee272339","modified":1516430677525},{"_id":"source/_posts/Generic-Sum.md","hash":"a5e3f8de2b0c1b85ec8ce0627de81b55f2013bc8","modified":1516430677527},{"_id":"source/_posts/JDBC学习笔记.md","hash":"7aba26f1750a20ef11e2182525257e67e57061cd","modified":1516430677530},{"_id":"source/_posts/JDBC学习笔记2.md","hash":"ac7935f04cd0001fe950858a4b14372ed817150b","modified":1516430677531},{"_id":"source/_posts/JDBC学习笔记3.md","hash":"826d2778a0de9d0d836563c3135abfe0d26498b5","modified":1516430677532},{"_id":"source/_posts/AJAX.md","hash":"462da6ab936a04ab88018765b517a0a488934ef3","modified":1516430677520},{"_id":"source/_posts/JAVA学习笔记Collection基本功能.md","hash":"0f0140d8c9274717d7c10b60e4f32967d4b32e99","modified":1516430677529},{"_id":"source/_posts/JDBC学习笔记4.md","hash":"1b06cad2aaf60aeddfbb78de6d8bc55533b5003b","modified":1516430677533},{"_id":"source/_posts/JSP学习笔记1.md","hash":"fd81be81d00ef4d704ec6d992d5f532907d55b4a","modified":1516430677534},{"_id":"source/_posts/JSP学习笔记2.md","hash":"f023e5e9d9530994ec79ea75dc1c7d0f1a4e69a4","modified":1516430677535},{"_id":"source/_posts/JSTL标签库.md","hash":"5af6081fd8b404cbc24b4ced07d9d644a75873e7","modified":1516430677536},{"_id":"source/_posts/JS学习笔记1.md","hash":"e644146bfa05bfc879cbaab2e525c27a2aead1be","modified":1516430677537},{"_id":"source/_posts/JS学习笔记2.md","hash":"379fc567e1da7cd08569f955857178bdb8004bb6","modified":1516430677538},{"_id":"source/_posts/JS学习笔记3之BOM,DOM对象.md","hash":"c70637caca09a565dcf9c1eb81814088f1d30f91","modified":1516430677539},{"_id":"source/_posts/JS学习笔记4.md","hash":"dbbf3a58fee74d3a03eb8a380a5003c3ebc8da71","modified":1516430677540},{"_id":"source/_posts/Java学习笔记List特有的功能.md","hash":"679571dfdc558022047ef3269ca350e6bf1a096f","modified":1516430677541},{"_id":"source/_posts/Java学习笔记Math-Random-System-BigInteger-BigDecimal-DateFormat-Calendar.md","hash":"6896050d1f085b8bf560744be54324d50e50cca6","modified":1516430677544},{"_id":"source/_posts/Java学习笔记Set.md","hash":"b6b5cbd96ee9391ca21f52acabdbac6c15aa7b3e","modified":1516430677546},{"_id":"source/_posts/Java学习笔记Map.md","hash":"a26cbf7311ca230881c0cf3cd44500d3ed628931","modified":1516430677543},{"_id":"source/_posts/Java学习笔记String.md","hash":"5a6d04e811133b06206d6247653d2d28cf59414c","modified":1516430677547},{"_id":"source/_posts/Java学习笔记StringBuffer和Arrays，Integer-Character.md","hash":"0a98a91fe310a1799e7247383b5aac22453b75d0","modified":1516430677550},{"_id":"source/_posts/Java学习笔记Vector-LinkedList-泛型-静态导入-可变参数-asList.md","hash":"744ad02618042206b8c28361b5fc97d338f70e9b","modified":1516430677552},{"_id":"source/_posts/Java学习笔记之IO流.md","hash":"03bd1de408ea769e610c13d34c7c8574ee706058","modified":1516430677553},{"_id":"source/_posts/Java学习笔记之IO流2.md","hash":"85d60dfe3ef4815f17ef8de47709f88bacd68581","modified":1516430677555},{"_id":"source/_posts/Java学习笔记之多线程1.md","hash":"6a485eb6b524a64f1fd057a1e30eade3039a89e7","modified":1516430677557},{"_id":"source/_posts/Java学习笔记之多线程2和设计模式.md","hash":"aa137ba63974e6e0878803bc80228e252bd4d3de","modified":1516430677559},{"_id":"source/_posts/Java学习笔记之网络编程.md","hash":"65faccd090394b41cdfe94491ec8ba79d09c5692","modified":1516430677561},{"_id":"source/_posts/Java学习笔记异常和File.md","hash":"d2e32f9de897d34e24f1d80395d95b27af602112","modified":1516430677563},{"_id":"source/_posts/Java学习笔记内部类.md","hash":"f142cc7a1d61e1ca421416f6163c9da9bdcbc314","modified":1516430677562},{"_id":"source/_posts/Log4j.md","hash":"1d2e7f05ceeeb3370a7e1aabd5da568a89ba722b","modified":1516430677565},{"_id":"source/_posts/Java学习笔记之反射和JDK新特性.md","hash":"73f594108b3fdc0e7e4feec049fac8f4e4ab4256","modified":1516430677556},{"_id":"source/_posts/Java学习笔记正则表达式.md","hash":"db5f19f6ae83b7ca341d23af4ed7059243337d7c","modified":1516430677564},{"_id":"source/_posts/March-20th(pwd).md","hash":"fdb02d0f0ef596ca0cec5c18b1d9870b37d3aada","modified":1516430677569},{"_id":"source/_posts/March-15th(pwd).md","hash":"6cf65a6a7900695cddb239a22f30db539b9cc6db","modified":1516430677566},{"_id":"source/_posts/March-16th(pwd).md","hash":"7070bc7733dd868e40a311048542ecd447253e73","modified":1516430677567},{"_id":"source/_posts/Over-the-rainbow.md","hash":"3141287d578f94ddcfef70a10d5182da1b2fa8c2","modified":1516430677574},{"_id":"source/_posts/N的阶乘位数.cpp","hash":"0b92cab06e3041149b2346a3ef95a409101cb16a","modified":1516430677571},{"_id":"source/_posts/Maven.md","hash":"135e9d6eb7a17ea008b46fc21d15433abe7d76cb","modified":1516430677570},{"_id":"source/_posts/N的阶乘和结果-C.md","hash":"c972d0e1c5424662ec7767e4a2b146b37e0d7898","modified":1516430677573},{"_id":"source/_posts/Selfish-human(pwd).md","hash":"5af80029ca5ed90b38c104aae02ab4017a9ae6b8","modified":1516430677576},{"_id":"source/_posts/Session学习笔记.md","hash":"b5b10f8a61b97580e11d6e48a8c436d0089e6d6d","modified":1516430677579},{"_id":"source/_posts/Servlet线程安全.md","hash":"bc1fbc3c4130811ef490b1062ce571991262388d","modified":1516430677578},{"_id":"source/_posts/N的阶乘位数及结果.cpp","hash":"dffc988928f6cece830bab3089398395f7d52215","modified":1516430677572},{"_id":"source/_posts/bat脚本自动发布博客.md","hash":"f53855efb2259599c1b67087ae8dbe4dbef88161","modified":1516432986422},{"_id":"source/_posts/dom4j学习笔记.md","hash":"dbce36ed9a21d77b7e9f1e6f9758f4b223d247f8","modified":1516430677582},{"_id":"source/_posts/essay(pwd).md","hash":"beff1685097d9fc8e81fcafcd741c4728cc003b5","modified":1516430677583},{"_id":"source/_posts/hexo博客文章加密案例.md","hash":"561edbc4ae1656cad554bde8dbef8ba8c11f039a","modified":1516430677584},{"_id":"source/_posts/hibernate01.md","hash":"736e0c4aa42fc841c00e27906979aefc0ef910c2","modified":1516430677585},{"_id":"source/_posts/hibernate连接数据库乱码问题.md","hash":"6311400f74854bdefa9cedc92a67536f46da14c7","modified":1516430677590},{"_id":"source/_posts/XML学习笔记.md","hash":"9bd1c49ad9608755c1f7a20487e057ed5453e5ab","modified":1516430677580},{"_id":"source/_posts/hibernate02.md","hash":"d7dc6fc5db6690a7399f9a26700b2ea274ad51cf","modified":1516430677587},{"_id":"source/_posts/Servlet3-0的异步处理和上传支持.md","hash":"1036692d9c76a51d5c3ef11f506e77c7826024c2","modified":1516430677577},{"_id":"source/_posts/hibernate04.md","hash":"cdaa4b9a58387698bcbc77b2ce8b60bc677ed28f","modified":1516430677589},{"_id":"source/_posts/java集合.md","hash":"abe06cf6ae468c41be4d0d93e8b513111eb7b4b5","modified":1516430677591},{"_id":"source/_posts/hibernate03.md","hash":"487aefb50ab90b94e62535f0ed8133281626ef4c","modified":1516430677588},{"_id":"source/_posts/linux硬链接和软链接的区别.md","hash":"f36e01e88ccefa1a7b3552e755b23492a7084f40","modified":1516430677596},{"_id":"source/_posts/jaxp学习笔记.md","hash":"fe150350d7eb453c27539ee1e0127d6e1efade77","modified":1516433325636},{"_id":"source/_posts/linux常用命令.md","hash":"eb33f2a29067a1d70d7f4cb68dbf7ffe22ed08e7","modified":1516430677594},{"_id":"source/_posts/mybatis.md","hash":"c93376982c97c511e5f079672b17a01946570c32","modified":1516430677598},{"_id":"source/_posts/request-response学习笔记.md","hash":"20c03102aa46f1314be7c4596c21a5aac59e0aae","modified":1516430677599},{"_id":"source/_posts/servlet学习笔记.md","hash":"8cdac24012cdc70d54a806734624c5cd19b41370","modified":1516430677602},{"_id":"source/_posts/spring01.md","hash":"4a109c1170a3e127a5952158701f4cef1cd827ad","modified":1516430677604},{"_id":"source/_posts/spring02.md","hash":"b8a48d7a8ca1a99e641fdf62d22b6da2923cd07f","modified":1516430677608},{"_id":"source/_posts/spring03.md","hash":"d393f8cbf0bebfeb7efa65ab547dfa76a9a4c4b0","modified":1516430677611},{"_id":"source/_posts/spring04.md","hash":"a4d40ebea82eb81d5e1b180382e662bdf083dd58","modified":1516430677613},{"_id":"source/_posts/struts2-01.md","hash":"53ab15667348516cb927f4fb52e51c7ab6fafe32","modified":1516430677614},{"_id":"source/_posts/struts2-02.md","hash":"34e5121685d66a64f28fe92b4dbce37af881cfee","modified":1516430677620},{"_id":"source/_posts/struts2-03.md","hash":"b603f3ad405e10ab9aabdb9e793fdfa1242ef953","modified":1516430677622},{"_id":"source/_posts/不负红尘.md","hash":"89db041cc9778bdec433358c351eab0b0a205391","modified":1516430677634},{"_id":"source/_posts/struts2-04.md","hash":"0965943f7fe174ac19835cb4ff394f99cd3c2e5d","modified":1516430677623},{"_id":"source/_posts/《深入理解Java虚拟机》阅读笔记.md","hash":"63efe42064fb79adf4b287c04bb6afaccab6772c","modified":1516430677625},{"_id":"source/_posts/不顾一切的走下去.md","hash":"71dcc0cc0b01b26bdaff724759e1793f29ed31b8","modified":1516430677635},{"_id":"source/_posts/写给自己.md","hash":"b270954aa623034e6c9e601ec993dbd2e9c90ac6","modified":1516430677639},{"_id":"source/_posts/上传下载.md","hash":"9d691b4c9475d2d33ccd2704e6c4aa5f8731f95d","modified":1516430677632},{"_id":"source/_posts/刀剑乱舞.md","hash":"07ae90fb0edc72ff89f1933ac462b05a7aac1c0c","modified":1516430677641},{"_id":"source/_posts/分页功能实现.md","hash":"0b21dada556c98e446fe91c7e1cfa8c9222b4c59","modified":1516430677648},{"_id":"source/_posts/动态代理和类加载器简介.md","hash":"c67d3e28637d75c29a9ba0b766cf4287b75ac047","modified":1516430677654},{"_id":"source/_posts/卒業旅行.md","hash":"6c3e38b94263b29add85869510dc5b68fc993dee","modified":1516430677655},{"_id":"source/_posts/分IP统计访问次数案例.md","hash":"766d854d6b5300b7e75f2de2443cd92f5b06586e","modified":1516430677646},{"_id":"source/_posts/人物.md","hash":"81aa12d72111b32d02c13fa93e473504ec3f034a","modified":1516430677637},{"_id":"source/_posts/卡文迪许的性格和成就.md","hash":"df5c496753fd9c96a10347bf8d11a45f78dfda70","modified":1516430677657},{"_id":"source/_posts/司庆日总结.md","hash":"31daa3967d3f51d7068d2d32be9e65305d408cf0","modified":1516430677661},{"_id":"source/_posts/可念不可说.md","hash":"38e56e705a611cf68797c0a1fd9da3eca604d853","modified":1516430677658},{"_id":"source/_posts/图片上传预览功能.md","hash":"37b588136c677fc735b9348af87f765bc5ea5d30","modified":1516430677663},{"_id":"source/_posts/回乡偶书-6-19-6-25.md","hash":"a203c457f881eb3b083b0b6f2dc3e43551b3f7eb","modified":1516430677662},{"_id":"source/_posts/如果什么时候能俯瞰世界的话.md","hash":"fcafc757830189a72bc08d0d7b1140262ab495a8","modified":1516430677671},{"_id":"source/_posts/夜雪.md","hash":"fa4bef04a8ff92d92ffe76a0be24b7a1e3ac3f61","modified":1516430677667},{"_id":"source/_posts/少年与刀.md","hash":"539343fddd342e316d47cfe5cb03e214c74d0e31","modified":1516430677672},{"_id":"source/_posts/感悟5-19.md","hash":"61921603b6cbc1314afe0d53ab3dddf0f2490382","modified":1516430677673},{"_id":"source/_posts/排序算法.md","hash":"cdbfb231d36750bfb2fc3b32975fba6ea6c31c74","modified":1516430677677},{"_id":"source/_posts/我与四月は君の嘘.md","hash":"3bf434975c7ca41a951ea4f20b1dcc4d73223da0","modified":1516430677674},{"_id":"source/_posts/绯.md","hash":"151f983d7f2c43ccb9d3c597dfadd1b20d1470b1","modified":1516430677683},{"_id":"source/_posts/模拟登录教务系统.md","hash":"a1c555e88a7a86a610cc175ad6864fd23adfafcd","modified":1516430677678},{"_id":"source/_posts/登录注册练习.md","hash":"a012c0e3bc60a78b678426b6745dc9e7f81d7325","modified":1516430677680},{"_id":"source/_posts/监听器学习笔记.md","hash":"57db17c9378464e3e35b6e1d10cf26ef736e3fc4","modified":1516430677681},{"_id":"source/_posts/英语学习1.md","hash":"dd859666ff2cbd3fafa5f8a55ffece4ee8be9425","modified":1516430677685},{"_id":"source/_posts/越人歌.md","hash":"f507b1d55db2072453a6e973958015b2afbba8b1","modified":1516430677692},{"_id":"source/_posts/落花该为何色.md","hash":"5bce78bf481e3e9f0f03bc30da085173f08e032c","modified":1516430677686},{"_id":"source/_posts/过滤器.md","hash":"c89490ebab0ae5ea97efe74e385de8778ec4e804","modified":1516430677694},{"_id":"source/_posts/言叶之庭.md","hash":"4f167e594d4951d70217623a86bd3b43b13858cc","modified":1516430677687},{"_id":"source/_posts/过去与未来.md","hash":"bd86c962f2c57cfefe7f5af7163466787f19cf7f","modified":1516430677693},{"_id":"source/_posts/谷雨.md","hash":"52af3068715315e5af49d24f00850efb5f4c0d56","modified":1516430677692},{"_id":"source/_posts/途中.md","hash":"50245804745c1af0001497b5132608d6ec8627d4","modified":1516430677697},{"_id":"source/_posts/通配符-注解-反射.md","hash":"5c71745ba2e2a9c014fa630b361ed13ea270f1f7","modified":1516430677698},{"_id":"source/_posts/邮件.md","hash":"54d1ab537eb6094ecd5a2c95430a718a0650da16","modified":1516430677700},{"_id":"source/_posts/雨中记.md","hash":"9784d5fbc67940267434af6bc3a49bc37fa65a23","modified":1516430677703},{"_id":"source/_posts/页面国际化.md","hash":"3a730e1586466015842b59efcbda6704e9e68250","modified":1516430677707},{"_id":"source/_posts/随笔.md","hash":"ce00e43c51482e856e28ac563797d3ddd4603a10","modified":1516430677701},{"_id":"source/_posts/青春之旅.md","hash":"ac55310f1294ab38e5e974c056bd7ee1324f1dd7","modified":1516430677705},{"_id":"source/_posts/静态代码块，代码块和构造函数的初始化顺序.md","hash":"f8bf95d5cf4840a76c2268bc0c12695635b089cf","modified":1516430677706},{"_id":"source/daily-log/index.md","hash":"89b9741e7c0544fe4286aeaa593cd4946a5da37f","modified":1516455577639},{"_id":"source/photo/index.html","hash":"1c1c182174c26b3f3c7c32dbe88cb013dccb26d9","modified":1516430677936},{"_id":"source/learning/close.jpg","hash":"b9b50480acd8221372555314870edc7154056953","modified":1516430677805},{"_id":"source/learning/index.md","hash":"8076b94f5a28599e1df0dbfd5c7cf728572bd451","modified":1516430677822},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1480315154210},{"_id":"themes/yilia/.git/config","hash":"316bc92d9936dc739c39161838a28fb4641cbea2","modified":1480315154235},{"_id":"source/programming/index.md","hash":"6dd7f9aa864a18240d2f9e601ec54311fcc392fb","modified":1516430677938},{"_id":"source/learning/search.png","hash":"55e60663402fb15dcab4e7d3b24b81a7b5c29179","modified":1516430677930},{"_id":"source/learning/top.jpg","hash":"834ed157f3b7a8fcd11d67e1a696dab7772ed66a","modified":1516430677932},{"_id":"themes/yilia/.git/index","hash":"8f72dedae669fb90ee22b75c00e7d9d2bf9cbcd4","modified":1496896637590},{"_id":"themes/yilia/.git/FETCH_HEAD","hash":"1089ae7c2f0601c3f54150ba335083f6d7d5b014","modified":1480318166516},{"_id":"themes/yilia/.git/ORIG_HEAD","hash":"7d29517ca5afc54a26c7377b089279838f73665d","modified":1480318166621},{"_id":"themes/yilia/.git/packed-refs","hash":"66e5b3c358108538085741207eca84fea5dcbebf","modified":1480315154193},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1480315154297},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1480315154292},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1480315154308},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1480315154313},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1480315154287},{"_id":"themes/yilia/layout/layout.ejs","hash":"4369b89c1c60fc673be6f9b08c6505b3dbca1a05","modified":1516625964997},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1480315154303},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1480315154319},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1480315154561},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1480315154594},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1480315154566},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1480315154592},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1480315154572},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1480315154600},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1480315147186},{"_id":"themes/yilia/source/main.css","hash":"614e1a85d485ecea2661fe85955acfd4e9e32613","modified":1513576004557},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1480315147192},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1480315147200},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1480315147210},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1480315147194},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1480315147242},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1480315147202},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1480315147249},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1480315147228},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1480315147217},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1480315147243},{"_id":"themes/yilia/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1480315147234},{"_id":"themes/yilia/.git/logs/HEAD","hash":"0a8eca715946330d633739fed1756af3ad5f9533","modified":1480315154219},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"4ffc84365feb74a54fb5e7fbe695654af6309b60","modified":1516870594328},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"ca14abbf538e21b15a715976d1f1c0d88f14ac9e","modified":1514650179887},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"ef0205fa690a388e48ddcb62ed77f05c753a7b9d","modified":1490349418295},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1480315154414},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"2b91d1b256dd6142984a085fd2fb24481766a236","modified":1512151768556},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"d4473a4935c9f2e91d99c07d0c589fa0ffaabd7d","modified":1492405575452},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1480315154359},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1480315154460},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"2a5bf6023662259676c9799015efc46e22be4f94","modified":1492228005918},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1480315154556},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"906f2fccc36a70ff807a71a666fa296fa0e616a6","modified":1512222865845},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"324f809c7d1505cbf1ef3a479782c67ae90dfa81","modified":1480315154465},{"_id":"themes/yilia/source/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1480315154614},{"_id":"themes/yilia/source/css/article-nav.scss","hash":"d046414a96adc400b54897fc236b3272e6deeafd","modified":1480315154652},{"_id":"themes/yilia/source/css/archive-inner.scss","hash":"55c6e8576d6c9cb2b6df0eb5d05c16a26973c77f","modified":1480315154629},{"_id":"themes/yilia/source/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1480315154622},{"_id":"themes/yilia/source/css/article-inner.scss","hash":"4edb98e196eac9e67f86b76e39a2a03673391842","modified":1480315154640},{"_id":"themes/yilia/source/css/article-main.scss","hash":"000a5875e1e46116b824c9ac0657178093ce4a17","modified":1480315154646},{"_id":"themes/yilia/source/css/article.scss","hash":"b1add6b3c05416ac854ec5dd9d4cc20be3fafc1f","modified":1480315154657},{"_id":"themes/yilia/source/css/duoshuo.scss","hash":"1a4be8634b8dcf271cebad1feb687e96a038ffbf","modified":1480315154710},{"_id":"themes/yilia/source/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1480315154751},{"_id":"themes/yilia/source/css/archive.scss","hash":"b750499d5120f963b683d0c96ac3f345c714e448","modified":1480315154635},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1480315154335},{"_id":"themes/yilia/source/css/fonts.scss","hash":"f5ee21869fcd3e2b257b49b0f680c78763d416dd","modified":1480315154717},{"_id":"themes/yilia/source/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1480315154757},{"_id":"themes/yilia/source/css/main.scss","hash":"5ffabb8323ff8cd26be466c7e02a6affc0f08da7","modified":1480315154810},{"_id":"themes/yilia/source/css/highlight.scss","hash":"819774a2979d0d94eb4e3ebf62afc96f803bac67","modified":1480315154769},{"_id":"themes/yilia/source/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1480315154827},{"_id":"themes/yilia/source/css/grid.scss","hash":"9ffd1bb579b67738c151a5ce88f16023de8204d2","modified":1480315154762},{"_id":"themes/yilia/source/css/social.scss","hash":"5b4a2cfd8a26687dc7bc44a4fa55ebb7d1ffe363","modified":1480315154839},{"_id":"themes/yilia/source/css/left.scss","hash":"2a261fa2e402909a866c648a5de8eb287da6fba9","modified":1512410755590},{"_id":"themes/yilia/source/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1480315154834},{"_id":"themes/yilia/source/css/switch.scss","hash":"795b0d1ad5ff278933409a1ab7451483fe6ceae5","modified":1480315154846},{"_id":"themes/yilia/source/css/mobile.scss","hash":"c170329ef2e7c2dcec58b1134793beac521133d4","modified":1480315154822},{"_id":"themes/yilia/source/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1480315154852},{"_id":"themes/yilia/source/css/tags.scss","hash":"79d3fad4fcda15210410774089b0ee7fe8d58810","modified":1480315154857},{"_id":"themes/yilia/source/css/tools.scss","hash":"059b6799ee21e63d05162d7ed0e1935b6574f52a","modified":1480315154863},{"_id":"themes/yilia/source/fonts/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1480315155196},{"_id":"themes/yilia/source/fonts/icomoon.eot","hash":"9a661069e1255d10032926a8ef87502f445f4e20","modified":1480315155203},{"_id":"themes/yilia/source/js/archive-inner.js","hash":"da4a770ccb23ca1ded23fa6475ce1379f0c10604","modified":1480315154875},{"_id":"themes/yilia/source/js/browser.js","hash":"8ca48b006591bbf6d75688637c14fd1b5bdd650f","modified":1480315154883},{"_id":"themes/yilia/source/js/fix-page.js","hash":"f18e33e99b1032b95a60b018960bed64235c1a29","modified":1480315154891},{"_id":"themes/yilia/source/fonts/icomoon.woff","hash":"a5c2eb785800a3a0aeaf2284d191d69df1893d6d","modified":1480315155225},{"_id":"themes/yilia/source/fonts/icomoon.ttf","hash":"9f1e824fc076dbfedf186609a2664558d5e3e986","modified":1480315155217},{"_id":"themes/yilia/source/js/jquery.lazyload.js","hash":"37961302284435b2677b7fd1e0c0f7624e226e4a","modified":1480315154962},{"_id":"themes/yilia/source/js/tags.js","hash":"f259b3f808df3a8523a42978f922bb9eda76e0ee","modified":1480315155002},{"_id":"themes/yilia/source/js/main.js","hash":"f5799e344aa50b6ae85b3a77d67a5a0e99c20282","modified":1480505819273},{"_id":"themes/yilia/source/js/tools.js","hash":"ed69771cd501770c2c303ae6ae695d2a9a187cdd","modified":1480315155013},{"_id":"themes/yilia/source/fonts/icomoon.svg","hash":"56ba63db8bfe20347e0457b4c583dd18e29ca701","modified":1480315155210},{"_id":"themes/yilia/source/js/photo.js","hash":"a0ffe16d2bd84336fbded55102a5e3ad3d3b62b5","modified":1490072732982},{"_id":"themes/yilia/source/js/mobile.js","hash":"4d79f5f2d789e6cddfd7b502df238107e9c63aac","modified":1480315154993},{"_id":"themes/yilia/source/js/util.js","hash":"28c66c54cab81b2a6c8c393226f5bd30f369e1bb","modified":1480315155032},{"_id":"themes/yilia/source/js/viewer.js","hash":"8842418f90ac630de1ea3c3a2035458efe0897cf","modified":1480315155043},{"_id":"themes/yilia/source/photoSwipe/photoswipe-ui-default.js","hash":"724162c14e5722a2ce1f44cf086dcea7b6855b80","modified":1480315155077},{"_id":"themes/yilia/source/photoSwipe/photoswipe-ui-default.min.js","hash":"38557bef17c33e172bc8e1670cd302d91622dfad","modified":1480315155111},{"_id":"themes/yilia/source/main.js","hash":"974de2eb2318d5c5947d3146f467b47a9e153753","modified":1512222960194},{"_id":"source/learning/overviews.jpg","hash":"acd04642d722883e338e3a7716b902f9ffa954f3","modified":1516430677830},{"_id":"themes/yilia/source/photoSwipe/photoswipe.min.js","hash":"e3267f5ae23f00c1ae052d019f12787296e34afc","modified":1480315155187},{"_id":"themes/yilia/source/css/mobile-slider.scss","hash":"4277e4b7e8fef5480d8e2b9574cbfdf59f0225c8","modified":1480315154816},{"_id":"themes/yilia/source/photoSwipe/photoswipe.scss","hash":"838d43529282b91a60934bbd39f3f9f5dbefee98","modified":1480315155194},{"_id":"themes/yilia/source/photoSwipe/photoswipe.js","hash":"ff9e3cc58b44a61144a9e211503755b170c24e91","modified":1480315155141},{"_id":"source/learning/overviews2.jpg","hash":"d4e4acbdc126bbda545c37bec6cfb1d206841f27","modified":1516430677837},{"_id":"source/learning/overviews4.jpg","hash":"dd277020a0054710241d68bb241a0a03aa28799d","modified":1516430677855},{"_id":"themes/yilia/.git/objects/pack/pack-d425f59c2bed444a7a9439b91119b415a6aec1db.idx","hash":"3cb395b9f44eb021cdc6d89dc164ea6d44e4bc1e","modified":1480315154038},{"_id":"themes/yilia/.git/refs/heads/master","hash":"7d29517ca5afc54a26c7377b089279838f73665d","modified":1480315154217},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"2ab4308d013dcb1f0898cf112e3f75573e597e33","modified":1480315154484},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"62cde65a4ab7aef85a4390308bc7608f59463e02","modified":1480315154479},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"d9fa04c06319510bd088ca9c286af947da3cfb38","modified":1480315154510},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1480315154498},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"a59c83e46aaccb053b60bb41369dfcd6848cbd69","modified":1480315154518},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1480315154535},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"3a44b657ebdeed1764d90f81b43e91e5a8f25c21","modified":1492773255241},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1480315154504},{"_id":"themes/yilia/source/css/core/_animation.scss","hash":"6f44ec8ff32515280c0b7ea8ad7e4cb5f4dfcd84","modified":1480315154666},{"_id":"themes/yilia/source/css/core/_mixin.scss","hash":"042b04e2b9e4de923dfae4649da054919a7ed370","modified":1512395300428},{"_id":"themes/yilia/source/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1480315154696},{"_id":"themes/yilia/source/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1480315154676},{"_id":"themes/yilia/source/css/fonts/icomoon.eot","hash":"9a661069e1255d10032926a8ef87502f445f4e20","modified":1480315154726},{"_id":"themes/yilia/source/css/fonts/icomoon.svg","hash":"56ba63db8bfe20347e0457b4c583dd18e29ca701","modified":1480315154733},{"_id":"themes/yilia/source/css/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1480315154776},{"_id":"themes/yilia/source/css/fonts/icomoon.ttf","hash":"9f1e824fc076dbfedf186609a2664558d5e3e986","modified":1480315154739},{"_id":"themes/yilia/source/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1497095472447},{"_id":"themes/yilia/source/css/img/black-scales.png","hash":"243ea748d016704922ccfc0b6c18d97472c27bff","modified":1480315154772},{"_id":"themes/yilia/source/css/fonts/icomoon.woff","hash":"a5c2eb785800a3a0aeaf2284d191d69df1893d6d","modified":1480315154746},{"_id":"themes/yilia/source/css/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1480315154778},{"_id":"themes/yilia/source/css/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1480315154779},{"_id":"themes/yilia/source/css/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1480315154784},{"_id":"themes/yilia/source/css/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1480315154781},{"_id":"themes/yilia/source/css/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1480315154783},{"_id":"themes/yilia/source/css/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1480315154788},{"_id":"themes/yilia/source/css/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1480315154786},{"_id":"themes/yilia/source/css/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1480315154794},{"_id":"themes/yilia/source/css/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1480315154789},{"_id":"themes/yilia/source/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1480315154793},{"_id":"themes/yilia/source/css/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1480315154791},{"_id":"themes/yilia/source/css/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1480315154796},{"_id":"themes/yilia/source/photoSwipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1480315155045},{"_id":"themes/yilia/source/css/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1480315154797},{"_id":"themes/yilia/source/css/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1480315154799},{"_id":"themes/yilia/source/photoSwipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1480315155058},{"_id":"themes/yilia/source/photoSwipe/default-skin/default-skin.scss","hash":"91f44576a5f5ccff4740ff5020656bd2f00ca13c","modified":1480315155051},{"_id":"themes/yilia/source/photoSwipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1480315155059},{"_id":"themes/yilia/source/css/img/black.png","hash":"a180d3109a5cb6b9b9aa60d81730446ebe275473","modified":1480315154771},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"0a8eca715946330d633739fed1756af3ad5f9533","modified":1480315154221},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1480315154208},{"_id":"themes/yilia/source/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1480315154944},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"0a8eca715946330d633739fed1756af3ad5f9533","modified":1480315154202},{"_id":"themes/yilia/source/css/img/background.png","hash":"ad082fb6dab7a38ddb2b2360fa9f95afdb8e37be","modified":1492050494204},{"_id":"source/learning/overviews3.jpg","hash":"ac7c0f65de22947cc8402559e349eab87338d794","modified":1516430677853},{"_id":"source/learning/1.mp3","hash":"646c4f3419a91026e4d7984c82758ae09bdcb388","modified":1516430677788},{"_id":"themes/yilia/.git/objects/pack/pack-d425f59c2bed444a7a9439b91119b415a6aec1db.pack","hash":"a32917d31b5cafeaa5cdef9e95382d977c3e3e51","modified":1480315154113},{"_id":"public/content.json","hash":"57ccb7014c15e7b5b6962efd316b08107e617c16","modified":1516870657285},{"_id":"public/Index/index.html","hash":"085f6c9905ca361076c28beaf87a92bdaa7fa11b","modified":1516870658952},{"_id":"public/daily-log/index.html","hash":"c4a869a1cff29467973e77fe15efd0e5e2fa5e7f","modified":1516870658959},{"_id":"public/learning/index.html","hash":"7f8c4b0411f544cf09aa7268403fe898723b1168","modified":1516870658960},{"_id":"public/programming/index.html","hash":"f9208935abe58e104b269a487e4695ede48827bd","modified":1516870658960},{"_id":"public/2017/12/26/卡文迪许的性格和成就/index.html","hash":"a71954207fb46d27b58e6debfc82a396bb57a3cd","modified":1516870658960},{"_id":"public/2017/12/02/bat脚本自动发布博客/index.html","hash":"4fd6f3d018fca1c5acacc475fd2d822c4f88e5e4","modified":1516870658960},{"_id":"public/2017/11/23/linux常用命令/index.html","hash":"1cedc40e7c81abb2eb5a63398ae0b9095139d4f3","modified":1516870658960},{"_id":"public/2017/10/29/卒業旅行/index.html","hash":"f116c915eb4fddfe64b927be51c76689b177b5e3","modified":1516870658960},{"_id":"public/2017/10/09/排序算法/index.html","hash":"3eb710532dc40e34221e5f1abe8f98c267308389","modified":1516870658960},{"_id":"public/2017/09/30/java集合/index.html","hash":"ec0d35dd99c17c682663536177d3fafd636061bc","modified":1516870658960},{"_id":"public/2017/09/10/linux硬链接和软链接的区别/index.html","hash":"01958aabe1cc4540d6d5f97eff5ec906c8f19dc4","modified":1516870658960},{"_id":"public/2017/09/04/mybatis/index.html","hash":"3b8ec73f75230f8846ff51283ca9448752d932c6","modified":1516870658960},{"_id":"public/2017/08/30/Over-the-rainbow/index.html","hash":"d3175933661d801ae7d5a9a247b2d1489f4cd0b3","modified":1516870658960},{"_id":"public/2017/08/24/hibernate连接数据库乱码问题/index.html","hash":"a9b648d7b69758c228142768099e20062821909f","modified":1516870658960},{"_id":"public/2017/07/13/Maven/index.html","hash":"e4e423848088db50fad46fc5fc73268e42515494","modified":1516870658960},{"_id":"public/2017/07/07/spring04/index.html","hash":"edbb72de1f0acb08a0c3c32386bd788a78f2e29e","modified":1516870658960},{"_id":"public/2017/06/30/spring03/index.html","hash":"81eb437854a907386fbfe0ff60f34d4dc9050446","modified":1516870658960},{"_id":"public/2017/06/29/绯/index.html","hash":"06b07c8f885d3c577cd377e7c79a4af48dc1d80c","modified":1516870658960},{"_id":"public/2017/06/29/Log4j/index.html","hash":"ff7ccf97863a9e33a5efdd5ed7d20a961d4b301c","modified":1516870658961},{"_id":"public/2017/06/29/spring02/index.html","hash":"cf81d48207834d74ebf2a42bfa2b6c82ee6b8298","modified":1516870658961},{"_id":"public/2017/06/26/spring01/index.html","hash":"ae9384abdb2b5c88cf4841c23b03b2fce7fbdd4e","modified":1516870658961},{"_id":"public/2017/06/26/回乡偶书-6-19-6-25/index.html","hash":"ae168e881a7cd059155d6236a9bf0a5551afea32","modified":1516870658961},{"_id":"public/2017/06/16/struts2-04/index.html","hash":"752ba06b0a8ede479fbfd5e7792459d1318dc6d2","modified":1516870658961},{"_id":"public/2017/06/15/struts2-03/index.html","hash":"39d5419c9d4aefb3efe4a52f5819378de49307a5","modified":1516870658961},{"_id":"public/2017/06/12/struts2-02/index.html","hash":"af9c9502833743fd9e3db96f967ffd6931f2175d","modified":1516870658961},{"_id":"public/2017/06/11/《深入理解Java虚拟机》阅读笔记/index.html","hash":"e4e3d35be5300b0a4e10321269d99c06812314f8","modified":1516870658961},{"_id":"public/2017/06/08/2017-6-08/index.html","hash":"d262b17c25b0dc87e1cf9c79549a9f66c8e949a1","modified":1516870658961},{"_id":"public/2017/06/08/struts2-01/index.html","hash":"d6f42297965c44cb9c5972b6148d13fafb01f54e","modified":1516870658961},{"_id":"public/2017/06/05/雨中记/index.html","hash":"ccb29c064e3c1a654c2aabc704244e13ce7f5d19","modified":1516870658961},{"_id":"public/2017/06/05/hibernate04/index.html","hash":"9d80a12ce43823e1070e0e9270fbaa4c4719fa8a","modified":1516870658961},{"_id":"public/2017/06/01/落花该为何色/index.html","hash":"8a1027ca9d1694bac9ce929f0a465560aabb430f","modified":1516870658961},{"_id":"public/2017/05/26/司庆日总结/index.html","hash":"4d4edc9bf6934cf31be7afbc6deee4500f915366","modified":1516870658961},{"_id":"public/2017/05/26/如果什么时候能俯瞰世界的话/index.html","hash":"dc712c2f09b0c1caab293030a2a4546978f11436","modified":1516870658961},{"_id":"public/2017/05/20/Servlet线程安全/index.html","hash":"426082a2a1ee62e575dafca9024dae1d430e1497","modified":1516870658961},{"_id":"public/2017/05/19/感悟5-19/index.html","hash":"d098a9dc236940680d1d48d0f81fc6f282e3dc8e","modified":1516870658961},{"_id":"public/2017/05/15/hibernate03/index.html","hash":"a8802ccefdb3c54ee2652018b3033da32f9e02df","modified":1516870658962},{"_id":"public/2017/05/11/hibernate02/index.html","hash":"bd8f7b45660c4643b583eb75236e6e8341b103bf","modified":1516870658962},{"_id":"public/2017/05/10/不负红尘/index.html","hash":"222a2f00e6ad02478b7dc95d9d89a43d13180926","modified":1516870658962},{"_id":"public/2017/05/10/hibernate01/index.html","hash":"a28e06776b733d2909a18ae4931dd982337b9fa0","modified":1516870658962},{"_id":"public/2017/05/09/Generic-Sum/index.html","hash":"4beb47a1846e2dfeb01b14448761fa706624303b","modified":1516870658962},{"_id":"public/2017/05/08/动态代理和类加载器简介/index.html","hash":"81be4e9023798c854c36f89b797544f05730e066","modified":1516870658962},{"_id":"public/2017/05/08/Servlet3-0的异步处理和上传支持/index.html","hash":"049a818dd5471b80eb9cb4c3c09e97275df468b0","modified":1516870658962},{"_id":"public/2017/05/05/通配符-注解-反射/index.html","hash":"8ad99afaaabe0b1fd548b3840e712f0c4e92c47d","modified":1516870658962},{"_id":"public/2017/05/04/可念不可说/index.html","hash":"c8c28594bb854f3941178d985d755525163e9de8","modified":1516870658962},{"_id":"public/2017/04/27/人物/index.html","hash":"9bfff3cf41515d6776032b77db066ccd7f2b3837","modified":1516870658962},{"_id":"public/2017/04/27/图片上传预览功能/index.html","hash":"9eba6ebe9dc0e99defe2d92b5580ce6306f8ef64","modified":1516870658962},{"_id":"public/2017/04/25/AJAX2/index.html","hash":"3c1d26932a15e8db0fe1e22d9e71684cafff07d5","modified":1516870658962},{"_id":"public/2017/04/24/AJAX/index.html","hash":"67f2ede51608e66abdbbd2ca348b76d21f63d3c7","modified":1516870658962},{"_id":"public/2017/04/24/英语学习1/index.html","hash":"40d9ae80695b515ae30c0bb8b1eec4d217d3ef6f","modified":1516870658963},{"_id":"public/2017/04/23/Selfish-human(pwd)/index.html","hash":"e23d8e521ecb0a9d7f2f88337349240ed228511a","modified":1516870658963},{"_id":"public/2017/04/21/不顾一切的走下去/index.html","hash":"e84bc6f0f2261675672df707933ea4c433515ca5","modified":1516870658963},{"_id":"public/2017/04/20/邮件/index.html","hash":"a3e5bfa85a69530c25e6403a03a8256a29793789","modified":1516870658963},{"_id":"public/2017/04/20/上传下载/index.html","hash":"a93bf079ba3e062643dcd8d0b1c61c3cc47db0d8","modified":1516870658963},{"_id":"public/2017/04/20/谷雨/index.html","hash":"36f10f9eed0020df05cd32a3e741253132c8ef5a","modified":1516870658963},{"_id":"public/2017/04/19/过滤器/index.html","hash":"3f4537d514a462ce2b3d5bb2acb79f7b43ea665b","modified":1516870658963},{"_id":"public/2017/04/19/JDBC学习笔记4/index.html","hash":"eae276599a79cfd6281577f34295c970fb2f15c5","modified":1516870658963},{"_id":"public/2017/04/19/分IP统计访问次数案例/index.html","hash":"a03799af6ceb75a2d9197e35e1afb054be2a8633","modified":1516870658963},{"_id":"public/2017/04/18/页面国际化/index.html","hash":"e0c8c02250227e344c22b1dfa9baeea2d699fbb4","modified":1516870658963},{"_id":"public/2017/04/18/监听器学习笔记/index.html","hash":"3bac4f0947a3d06d13c1d9c2d60ea6e58f4acc0f","modified":1516870658963},{"_id":"public/2017/04/17/过去与未来/index.html","hash":"974bf1d21ce5acbd4d6a21f8c10cac0e31091a93","modified":1516870658963},{"_id":"public/2017/04/17/分页功能实现/index.html","hash":"76e0add7f5aaca9dd690792eabb32c9342250f42","modified":1516870658963},{"_id":"public/2017/04/14/hexo博客文章加密案例/index.html","hash":"8a859022cc444a62d93ddec537e9591691b6f780","modified":1516870658964},{"_id":"public/2017/04/14/刀剑乱舞/index.html","hash":"f48c61d51bff68ac3a251f66a35a033b137dc3b7","modified":1516870658964},{"_id":"public/2017/04/13/JDBC学习笔记3/index.html","hash":"07ed69bcf625792444bca4572f9f55350a4cbda8","modified":1516870658964},{"_id":"public/2017/04/12/JDBC学习笔记2/index.html","hash":"4ae227799f9fd41edc3b5fc29da56b5e03334581","modified":1516870658964},{"_id":"public/2017/04/11/少年与刀/index.html","hash":"7ddc513b60157ed32c7d1772980b682ea75b89bf","modified":1516870658964},{"_id":"public/2017/04/11/登录注册练习/index.html","hash":"f782731fda039771e8ff44589a8795df04c45074","modified":1516870658964},{"_id":"public/2017/04/11/JDBC学习笔记/index.html","hash":"c423b2582e4dd7a69dd488e71f57880bf208514d","modified":1516870658964},{"_id":"public/2017/04/07/JSTL标签库/index.html","hash":"2f7186942fa9a9163dd0bc1b4d226939b73d45be","modified":1516870658964},{"_id":"public/2017/04/06/青春之旅/index.html","hash":"7c5dfbb9389ec151bd4ab04b06b6ae1eeaee2181","modified":1516870658964},{"_id":"public/2017/04/06/我与四月は君の嘘/index.html","hash":"3d47f79054a84d5e3ada04062ebcd8e5c3472654","modified":1516870658964},{"_id":"public/2017/04/06/JSP学习笔记2/index.html","hash":"bfe0aac21c996541fe53ae2ae0e6e07a372e5072","modified":1516870658964},{"_id":"public/2017/04/05/April-Fifth(pwd)/index.html","hash":"3bccdde426c5204fa72ad490b709ac158f011f74","modified":1516870658964},{"_id":"public/2017/04/05/Session学习笔记/index.html","hash":"990714371b7c9a87d68635a7a3528801c5b127fe","modified":1516870658964},{"_id":"public/2017/04/05/Cookie学习笔记/index.html","hash":"ec6761ce5c046fa1a86144fa7b6ba6d85aff3006","modified":1516870658965},{"_id":"public/2017/04/05/JSP学习笔记1/index.html","hash":"b5876a774a588ebbdc8822f1a865705fd66f0868","modified":1516870658965},{"_id":"public/2017/04/03/April-Third/index.html","hash":"b1ae45c564bab091f3e0306c82c0cc27f70a68db","modified":1516870658965},{"_id":"public/2017/03/31/request-response学习笔记/index.html","hash":"9e371037224c933ef57271f98f7e0c960df58f2f","modified":1516870658965},{"_id":"public/2017/03/30/模拟登录教务系统/index.html","hash":"a44c25aa81c7327c73452d1049952b6764720bc1","modified":1516870658965},{"_id":"public/2017/03/24/servlet学习笔记/index.html","hash":"cacac59ae5fe881c50b148ba06040a945d237740","modified":1516870658965},{"_id":"public/2017/03/23/essay(pwd)/index.html","hash":"bfae37bdb5f0156fac7fa5784fc7c83d4da46b67","modified":1516870658965},{"_id":"public/2017/03/22/dom4j学习笔记/index.html","hash":"5646a52fe85c1218cadc4584b3674afbf1a9c575","modified":1516870658965},{"_id":"public/2017/03/22/jaxp学习笔记/index.html","hash":"c598814c47547ae45a6268a8ac532c375b65085e","modified":1516870658965},{"_id":"public/2017/03/21/XML学习笔记/index.html","hash":"ac9b4178eecaba5512c39067e0a2bbf476ce5e67","modified":1516870658965},{"_id":"public/2017/03/20/March-20th(pwd)/index.html","hash":"9d661d44a0bff8d07fba58f20490a417d01e52ab","modified":1516870658965},{"_id":"public/2017/03/20/JS学习笔记4/index.html","hash":"01c9b78a55423b1a747a05de00e97794b619fe3c","modified":1516870658965},{"_id":"public/2017/03/20/JS学习笔记3之BOM,DOM对象/index.html","hash":"b733e43b8f2f2567e6f00cc31f299666b0714414","modified":1516870658965},{"_id":"public/2017/03/20/JS学习笔记2/index.html","hash":"bb6e29f291c5f27c2ab275a8b3cfb62e11a5fc2b","modified":1516870658965},{"_id":"public/2017/03/17/JS学习笔记1/index.html","hash":"3743c3f3c42be9aca14be321b8ccf98fe2257793","modified":1516870658966},{"_id":"public/2017/03/17/CSS学习笔记/index.html","hash":"1177a55da68de4c7c6287fd3dcc79f95f014173d","modified":1516870658966},{"_id":"public/2017/03/16/March-16th(pwd)/index.html","hash":"842a47c46a53fec2fc54a1cc83dc55ce0603ac5c","modified":1516870658966},{"_id":"public/2017/03/16/Java学习笔记之反射和JDK新特性/index.html","hash":"ba4b6dd384efde2ae1cc6049f2428f9eccb366a4","modified":1516870658966},{"_id":"public/2017/03/15/March-15th(pwd)/index.html","hash":"3f08b47c0c49ee55854c17a5ffd0dde458966827","modified":1516870658966},{"_id":"public/2017/03/15/Java学习笔记之多线程2和设计模式/index.html","hash":"5c5440f4f479c9f5d38a7422b5107cf56f7f5fe0","modified":1516870658966},{"_id":"public/2017/03/15/Java学习笔记之多线程1/index.html","hash":"6e78942a055b786112adc323e7ed756b7f3c60f0","modified":1516870658966},{"_id":"public/2017/03/15/Java学习笔记之网络编程/index.html","hash":"ba55def0a86e420528f4e3f5409cee83caa48675","modified":1516870658966},{"_id":"public/2017/03/14/Java学习笔记之IO流2/index.html","hash":"9551497fd7e983a619f5c209f0ada1a57571e530","modified":1516870658966},{"_id":"public/2017/03/13/写给自己/index.html","hash":"40125c610704a8c89b79d11ba6575a05eafb37b0","modified":1516870658966},{"_id":"public/2017/03/13/Java学习笔记之IO流/index.html","hash":"bc0ee4d2e1e6996b36f408ec920bd82cf8dcd850","modified":1516870658966},{"_id":"public/2017/03/13/Java学习笔记异常和File/index.html","hash":"fe4bf470f2b5fd55b0175ac659e6f7ea1009db59","modified":1516870658966},{"_id":"public/2017/03/10/Java学习笔记Map/index.html","hash":"355d8d419899ed39bf3d601481bb91acf3638a4c","modified":1516870658966},{"_id":"public/2017/03/10/越人歌/index.html","hash":"f64a90db8b571aa291277d0180988a7c3d7d30b3","modified":1516870658967},{"_id":"public/2017/03/10/Java学习笔记Set/index.html","hash":"d258a63660efce29b77233b68a35fdfb904ea684","modified":1516870658967},{"_id":"public/2017/03/09/Java学习笔记Vector-LinkedList-泛型-静态导入-可变参数-asList/index.html","hash":"2939cb071b74f2c55cbfc33e9ed6b05c5c13e74b","modified":1516870658967},{"_id":"public/2017/03/09/Java学习笔记Math-Random-System-BigInteger-BigDecimal-DateFormat-Calendar/index.html","hash":"8a5f15e80b5400ade96aa8e206488d9b3dc65a84","modified":1516870658967},{"_id":"public/2017/03/08/Java学习笔记StringBuffer和Arrays，Integer-Character/index.html","hash":"9340eae7cb553b147d5a32dae7a78e35a618abe9","modified":1516870658967},{"_id":"public/2017/03/08/Java学习笔记String/index.html","hash":"c7decca57557ef0a7fd422df38058e0cba236832","modified":1516870658967},{"_id":"public/2017/03/07/Java学习笔记内部类/index.html","hash":"7031d6c599cd40e0e6aa8296cf39940115e9ce4c","modified":1516870658967},{"_id":"public/2017/03/07/Java学习笔记正则表达式/index.html","hash":"449ed8336aaad02d9e664dc345796f697a0b5265","modified":1516870658967},{"_id":"public/2017/03/07/Java学习笔记List特有的功能/index.html","hash":"193b7b33bb079d9a4ffb1c5d5e09501860832a64","modified":1516870658967},{"_id":"public/2017/03/06/JAVA学习笔记Collection基本功能/index.html","hash":"ca409fbf26fab2e2d3b84c5822e4bf22857b423f","modified":1516870658967},{"_id":"public/2017/03/06/JAVA中堆内存和栈内存详解/index.html","hash":"8a2fbbd3b379648944ab58aff5ba08bbf0331ef3","modified":1516870658967},{"_id":"public/2017/02/15/静态代码块，代码块和构造函数的初始化顺序/index.html","hash":"937a82b07766e15e1b839f9256d5a514e3d2ab26","modified":1516870658967},{"_id":"public/2017/02/11/N的阶乘和结果-C/index.html","hash":"068faa61ffe48eee1889106ff96a4c2bb8cc158d","modified":1516870658967},{"_id":"public/2016/12/10/随笔/index.html","hash":"43636f1552178d85bbd783ba80813a963087418f","modified":1516870658967},{"_id":"public/2016/12/01/言叶之庭/index.html","hash":"b6297fecb974ba9fac085e2e61dad7c43f1bfec4","modified":1516870658968},{"_id":"public/2016/11/30/途中/index.html","hash":"bcfe130957e28e4c73dab7c5cd1f1804b395a874","modified":1516870658968},{"_id":"public/2016/11/29/夜雪/index.html","hash":"562da18364b0fce8437185ee6e5f5b7efe4fd79a","modified":1516870658968},{"_id":"public/archives/index.html","hash":"6a8047b15ecd19dbcaeb87b3971cf4b391d5510f","modified":1516870658968},{"_id":"public/archives/2016/index.html","hash":"fe2731535fd54135bd3031d6d779777a3e641e56","modified":1516870658968},{"_id":"public/archives/2016/11/index.html","hash":"474a93e8bb91971076e837fa1337180bb7d1a6c0","modified":1516870658968},{"_id":"public/archives/2016/12/index.html","hash":"8a2dc3c502fff26cd5f545e5888f6d1501bcbc6b","modified":1516870658968},{"_id":"public/archives/2017/index.html","hash":"3b1ff54e8b3a521a2018122fe2036c2ef98612d0","modified":1516870658968},{"_id":"public/archives/2017/02/index.html","hash":"2d2512b6f99e340b272d3c4c39aeb65a6ec91d7b","modified":1516870658968},{"_id":"public/archives/2017/03/index.html","hash":"8fbe1e60d5d2e7f03533eddc3240b2d5412b9925","modified":1516870658968},{"_id":"public/archives/2017/04/index.html","hash":"2170b4886c40a74a031ace056c5cd647db883bc6","modified":1516870658968},{"_id":"public/archives/2017/05/index.html","hash":"23d36d7bdc625d26edc3bf01d5972e4452490b94","modified":1516870658968},{"_id":"public/archives/2017/06/index.html","hash":"09dd060784c92eafd90b6a468d029c1a15280c0a","modified":1516870658969},{"_id":"public/archives/2017/07/index.html","hash":"2641eef0fa5c8314a3c418f2ad230e1c6db01eda","modified":1516870658969},{"_id":"public/archives/2017/08/index.html","hash":"4de1ffd561eebafc752a7dad190c0af63bf03fb8","modified":1516870658969},{"_id":"public/archives/2017/09/index.html","hash":"efa89e20b2cb041c5b8ddac1489d0088896c3840","modified":1516870658969},{"_id":"public/archives/2017/10/index.html","hash":"977d7f2410f3c818cab900aeb281fd00eb8a41ba","modified":1516870658969},{"_id":"public/archives/2017/11/index.html","hash":"edd8e8d72e94e4a3f3c812f32da240e0fcd2526c","modified":1516870658970},{"_id":"public/archives/2017/12/index.html","hash":"daa364e7b42ffa7899c419259b66a7ae55549844","modified":1516870658970},{"_id":"public/index.html","hash":"8ccf4852293b9d8411bf89ee04d230beb7c06c22","modified":1516870658970},{"_id":"public/page/2/index.html","hash":"28270469f651788f639d4317e5752cce883914a5","modified":1516870658970},{"_id":"public/page/3/index.html","hash":"70d4f12ae418f3978285edd97bd4cd5c00e9b858","modified":1516870658970},{"_id":"public/page/4/index.html","hash":"dc828cea2773bc3ee67d180e1e7920abec13c002","modified":1516870658970},{"_id":"public/page/5/index.html","hash":"0444724f47e1ec1d5bb1e3c50630d637dc2b8d18","modified":1516870658971},{"_id":"public/page/6/index.html","hash":"278f909600fae14fc02bb7caa3988c9250c1a5ca","modified":1516870658971},{"_id":"public/page/7/index.html","hash":"5b47265ec302e35151550781360d65245c054b11","modified":1516870658971},{"_id":"public/page/8/index.html","hash":"c1b26d508c30207e8d68f814dc3320b3f1041755","modified":1516870658971},{"_id":"public/page/9/index.html","hash":"ca3939eb7767b78eceb1df6596b3597d18dfd9da","modified":1516870658971},{"_id":"public/page/10/index.html","hash":"9b27fe0028f50fcab71b9099eae468017d4feb57","modified":1516870658971},{"_id":"public/page/11/index.html","hash":"04f43679b7e8b8ff7e9a356e06adf7bb54deb79c","modified":1516870658971},{"_id":"public/page/12/index.html","hash":"f3f153226ceb435c632ff4bc9f4e8a2db5d5182e","modified":1516870658971},{"_id":"public/page/13/index.html","hash":"2f0e585fce1b2c61e5cde96b0acd4fb1fb7dee00","modified":1516870658971},{"_id":"public/page/14/index.html","hash":"5a582b39d4a7653a835d6fc7625af90a8e66ead5","modified":1516870658971},{"_id":"public/page/15/index.html","hash":"3c53b90a92573f9a7301cee346b915543c217b1a","modified":1516870658971},{"_id":"public/page/16/index.html","hash":"f3257ffda13c5bf15ca150a2d1a4cd52983496dd","modified":1516870658971},{"_id":"public/page/17/index.html","hash":"f98c945a64f69b5701e9ae1c795e6fa1681092ee","modified":1516870658971},{"_id":"public/page/18/index.html","hash":"6c0cc5334d445a1e0edce51f450268646e75e45d","modified":1516870658971},{"_id":"public/page/19/index.html","hash":"7ff59166dacc83cd4df3d7127b6941b322bc55b5","modified":1516870658971},{"_id":"public/page/20/index.html","hash":"edff741e3d469e636e6eed409d535bd1d2a55230","modified":1516870658971},{"_id":"public/page/21/index.html","hash":"57833f35378f4b347618329aebbacb1d34f7357a","modified":1516870658972},{"_id":"public/page/22/index.html","hash":"7880c4283d471f0e969865f187a2bf3de9ae7281","modified":1516870658972},{"_id":"public/page/23/index.html","hash":"ab2d5e0f1e56ab33b44f609bcb0eb02d4b34ae16","modified":1516870658972},{"_id":"public/page/24/index.html","hash":"e6774e2e8319f59c5cd8b44f2ec189e07bec7672","modified":1516870658972},{"_id":"public/page/25/index.html","hash":"172f83dc38eb7e7f1d981dc5ffbcc4c9d99c03a4","modified":1516870658972},{"_id":"public/page/26/index.html","hash":"34742e810e96018921b597e1f80f40db1d18a662","modified":1516870658972},{"_id":"public/page/27/index.html","hash":"158edc994d07074b6d7bd38b5aacf040b946a648","modified":1516870658972},{"_id":"public/page/28/index.html","hash":"1f25a9198ce2a00875cc048243bd853eff6586c6","modified":1516870658972},{"_id":"public/page/29/index.html","hash":"1298a8d7bdaabddbd18b2b2c31ae3ebe2af83753","modified":1516870658972},{"_id":"public/tags/Web/index.html","hash":"ebabff4617dca17881fe83462e514e550d6cb847","modified":1516870658972},{"_id":"public/tags/Web/page/2/index.html","hash":"f3a7a0f5350e3746c65f80cffbfd894109fb29a5","modified":1516870658972},{"_id":"public/tags/Web/page/3/index.html","hash":"8d91c942dd56642ee50935c2d87f6e8c541749d4","modified":1516870658972},{"_id":"public/tags/Web/page/4/index.html","hash":"3b21a6a353b7eae3a14626af7967ca8810aee96d","modified":1516870658972},{"_id":"public/tags/Web/page/5/index.html","hash":"2bafbb7dcf98aa8cc588c73a7c9dd65c0836562e","modified":1516870658972},{"_id":"public/tags/Web/page/6/index.html","hash":"eb88a5c6aa60b3b4ae7366751f52c83572bfc494","modified":1516870658973},{"_id":"public/tags/Web/page/7/index.html","hash":"ddb036027e1dba41e5c1d26bc685aff61e23ba55","modified":1516870658973},{"_id":"public/tags/Web/page/8/index.html","hash":"3d46e304d45c578bf1aba0dc65618fa0d984cee4","modified":1516870658973},{"_id":"public/tags/Web/page/9/index.html","hash":"0edc768701620d1110f048a796fceedf50b37e4d","modified":1516870658973},{"_id":"public/tags/AJAX/index.html","hash":"b4d3504af6799ab9bb112dfefd1c26307a195206","modified":1516870658973},{"_id":"public/tags/生活/index.html","hash":"9bfa9be4c941cf0855ca281ddd4908a050f45e3d","modified":1516870658973},{"_id":"public/tags/生活/page/2/index.html","hash":"c409d6365ea83eb0667054da2310495566bc0156","modified":1516870658973},{"_id":"public/tags/生活/page/3/index.html","hash":"83881dd2311c2a7dc1b2b37ea48bdb408c08c32d","modified":1516870658973},{"_id":"public/tags/生活/page/4/index.html","hash":"4d6fc987a06c97b168929f2507f6bb28ca2c664a","modified":1516870658973},{"_id":"public/tags/生活/page/5/index.html","hash":"10bdb60904843baa172a0b8b56ff3bc418e7c6ba","modified":1516870658973},{"_id":"public/tags/cookie/index.html","hash":"2448952d3693bf4834c39f947ba296b79ab89d49","modified":1516870658973},{"_id":"public/tags/essay/index.html","hash":"aedd2b3c8e6fbf1488e418a383a10d69869674ca","modified":1516870658973},{"_id":"public/tags/essay/page/2/index.html","hash":"f8ee982b50b2e81ceb9fb6069ad33b745d51e6ae","modified":1516870658973},{"_id":"public/tags/essay/page/3/index.html","hash":"f688a0139b270072c712b570c5a76c565763eb5d","modified":1516870658974},{"_id":"public/tags/essay/page/4/index.html","hash":"648027cd58468478e35fa5d0d930b130b943bbe1","modified":1516870658974},{"_id":"public/tags/essay/page/5/index.html","hash":"c2f93951ec9fc1acc8ea2cf44bf14a8d7a40c34d","modified":1516870658974},{"_id":"public/tags/CSS/index.html","hash":"974610da551a3e869f470e010af1da69fc959154","modified":1516870658974},{"_id":"public/tags/数学/index.html","hash":"882464e623959949d1e1041488d3d01e2a91e563","modified":1516870658974},{"_id":"public/tags/Java基础/index.html","hash":"abf1c53d303c395381b63d66f8805862fec85ca1","modified":1516870658974},{"_id":"public/tags/Java基础/page/2/index.html","hash":"6393984c4e1078e417527ea6bdccdbdbf828fafa","modified":1516870658974},{"_id":"public/tags/Java基础/page/3/index.html","hash":"cd650b19d5d462d4b449e2ff4fece8af85f43d7f","modified":1516870658974},{"_id":"public/tags/Java基础/page/4/index.html","hash":"caa265d66c4ad159665b05ed962a5baf2a2f39a7","modified":1516870658974},{"_id":"public/tags/Java基础/page/5/index.html","hash":"14c62fbd12f6a31c4042b3826a670f6000824791","modified":1516870658974},{"_id":"public/tags/Java基础/page/6/index.html","hash":"fb935578af3fe3c185d5b38564cd55f97a30d3a1","modified":1516870658974},{"_id":"public/tags/Java基础/page/7/index.html","hash":"be967063c8bca3b5edf79cd10d850a512852ca92","modified":1516870658974},{"_id":"public/tags/Java基础/page/8/index.html","hash":"d5292adcfae9c5c54a8643c3a4f702f1d20d03cd","modified":1516870658974},{"_id":"public/tags/Java基础/page/9/index.html","hash":"2a6d841e9c136eab59ff4b498306343c9e539a37","modified":1516870658974},{"_id":"public/tags/Java基础/page/10/index.html","hash":"4f00e6f460330c1883b2bbdec7e395f13909b4e5","modified":1516870658974},{"_id":"public/tags/JSP/index.html","hash":"b5a2cc1356b849297b5a4a35ab25f4b19af80f29","modified":1516870658975},{"_id":"public/tags/数据库/index.html","hash":"114cb1098e5faf1e8950ed01fbc75df0f628557b","modified":1516870658975},{"_id":"public/tags/JSTL/index.html","hash":"06c3a173ccd9c12db4659c07238be0dd3ebc51fd","modified":1516870658975},{"_id":"public/tags/JS/index.html","hash":"3b2314af6521b4808ebc9ad7a3a416fbf6113a2d","modified":1516870658975},{"_id":"public/tags/JS/page/2/index.html","hash":"3d4adc49329236bc84cc2e7dfa9d10b659331583","modified":1516870658975},{"_id":"public/tags/C/index.html","hash":"dbf411e9778b9564a9b2084daa831aa466fdb5b9","modified":1516870658975},{"_id":"public/tags/编程/index.html","hash":"5ded877fde14dae8cbc745d3c9182cd7f9c9089f","modified":1516870658975},{"_id":"public/tags/编程/page/2/index.html","hash":"e42a4efa5829fb6c623ddbfa300a383e6cfc444c","modified":1516870658975},{"_id":"public/tags/Session/index.html","hash":"1698796774dd04eab4586fd52c140c1802325531","modified":1516870658975},{"_id":"public/tags/dom4j/index.html","hash":"7ea5faae704dd354b5ca3cf972699ed14758521d","modified":1516870658975},{"_id":"public/tags/XML/index.html","hash":"5951cffad35119c7d63ad93b9b1f310bc2a60f91","modified":1516870658975},{"_id":"public/tags/文学/index.html","hash":"66d77b5f35c927cde2b43e62e184eb68ca0b3ee7","modified":1516870658975},{"_id":"public/tags/文学/page/2/index.html","hash":"dc81f9590e315378dc62f12bb18c25fa3220d3c3","modified":1516870658975},{"_id":"public/tags/文学/page/3/index.html","hash":"e5627c87d0d6eba7413312f7e7253a8cb6b827b4","modified":1516870658975},{"_id":"public/tags/demo/index.html","hash":"b84269ec9c084cdb2c179f48d3003cc88c6e9687","modified":1516870658976},{"_id":"public/tags/jaxp/index.html","hash":"b746033615f7845c90ff12874a026e2ff63fed55","modified":1516870658976},{"_id":"public/tags/Servlet/index.html","hash":"f73377e76f567567264a56df125b8346972544ae","modified":1516870658976},{"_id":"public/tags/JVM/index.html","hash":"1aafe1aa6a2214e989c81581e3f11d1c026fd387","modified":1516870658976},{"_id":"public/tags/物理学/index.html","hash":"ce74c8f30d2cb6e609604173c6ab4a351761eed2","modified":1516870658976},{"_id":"public/tags/数据结构/index.html","hash":"81cab2d03c7764f7c53c6cb0fc8c78d27e7b5a36","modified":1516870658976},{"_id":"public/tags/英语/index.html","hash":"f27b53eed3bfccbecd99527cc0646e0d47ee0049","modified":1516870658976},{"_id":"public/tags/监听器/index.html","hash":"d5de87fa1cf7bf79464c961a7900228e20427172","modified":1516870658976},{"_id":"public/tags/过滤器/index.html","hash":"729f97f87042fefff3f0417168932ceb79e906ef","modified":1516870658976},{"_id":"public/tags/文学/page/4/index.html","hash":"d93e5a661b4bc0958c9e2eafdc1cde6b6523cfc2","modified":1516870658999},{"_id":"public/learning/close.jpg","hash":"b9b50480acd8221372555314870edc7154056953","modified":1516870658999},{"_id":"public/CNAME","hash":"10b0e14cd8c94af101a2e2652fe80c1655a18380","modified":1516870658999},{"_id":"public/learning/top.jpg","hash":"834ed157f3b7a8fcd11d67e1a696dab7772ed66a","modified":1516870658999},{"_id":"public/photo/index.html","hash":"1c1c182174c26b3f3c7c32dbe88cb013dccb26d9","modified":1516870658999},{"_id":"public/css/article-nav.scss","hash":"d046414a96adc400b54897fc236b3272e6deeafd","modified":1516870658999},{"_id":"public/learning/search.png","hash":"55e60663402fb15dcab4e7d3b24b81a7b5c29179","modified":1516870659000},{"_id":"public/css/archive-inner.scss","hash":"55c6e8576d6c9cb2b6df0eb5d05c16a26973c77f","modified":1516870659000},{"_id":"public/css/article-inner.scss","hash":"4edb98e196eac9e67f86b76e39a2a03673391842","modified":1516870659006},{"_id":"public/css/article-main.scss","hash":"000a5875e1e46116b824c9ac0657178093ce4a17","modified":1516870659007},{"_id":"public/css/article.scss","hash":"b1add6b3c05416ac854ec5dd9d4cc20be3fafc1f","modified":1516870659007},{"_id":"public/css/duoshuo.scss","hash":"1a4be8634b8dcf271cebad1feb687e96a038ffbf","modified":1516870659007},{"_id":"public/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1516870659007},{"_id":"public/css/archive.scss","hash":"b750499d5120f963b683d0c96ac3f345c714e448","modified":1516870659007},{"_id":"public/css/fonts.scss","hash":"f5ee21869fcd3e2b257b49b0f680c78763d416dd","modified":1516870659007},{"_id":"public/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1516870659007},{"_id":"public/css/main.scss","hash":"5ffabb8323ff8cd26be466c7e02a6affc0f08da7","modified":1516870659007},{"_id":"public/css/highlight.scss","hash":"819774a2979d0d94eb4e3ebf62afc96f803bac67","modified":1516870659007},{"_id":"public/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1516870659007},{"_id":"public/css/grid.scss","hash":"9ffd1bb579b67738c151a5ce88f16023de8204d2","modified":1516870659007},{"_id":"public/css/social.scss","hash":"5b4a2cfd8a26687dc7bc44a4fa55ebb7d1ffe363","modified":1516870659007},{"_id":"public/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1516870659007},{"_id":"public/css/left.scss","hash":"2a261fa2e402909a866c648a5de8eb287da6fba9","modified":1516870659007},{"_id":"public/css/switch.scss","hash":"795b0d1ad5ff278933409a1ab7451483fe6ceae5","modified":1516870659007},{"_id":"public/css/mobile.scss","hash":"c170329ef2e7c2dcec58b1134793beac521133d4","modified":1516870659008},{"_id":"public/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1516870659008},{"_id":"public/css/tags.scss","hash":"79d3fad4fcda15210410774089b0ee7fe8d58810","modified":1516870659008},{"_id":"public/css/tools.scss","hash":"059b6799ee21e63d05162d7ed0e1935b6574f52a","modified":1516870659008},{"_id":"public/fonts/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1516870659008},{"_id":"public/fonts/icomoon.eot","hash":"9a661069e1255d10032926a8ef87502f445f4e20","modified":1516870659008},{"_id":"public/fonts/icomoon.woff","hash":"a5c2eb785800a3a0aeaf2284d191d69df1893d6d","modified":1516870659008},{"_id":"public/fonts/icomoon.ttf","hash":"9f1e824fc076dbfedf186609a2664558d5e3e986","modified":1516870659008},{"_id":"public/fonts/icomoon.svg","hash":"56ba63db8bfe20347e0457b4c583dd18e29ca701","modified":1516870659008},{"_id":"public/css/mobile-slider.scss","hash":"4277e4b7e8fef5480d8e2b9574cbfdf59f0225c8","modified":1516870659008},{"_id":"public/photoSwipe/photoswipe.scss","hash":"838d43529282b91a60934bbd39f3f9f5dbefee98","modified":1516870659008},{"_id":"public/css/fonts/icomoon.svg","hash":"56ba63db8bfe20347e0457b4c583dd18e29ca701","modified":1516870659009},{"_id":"public/css/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1516870659009},{"_id":"public/css/fonts/icomoon.eot","hash":"9a661069e1255d10032926a8ef87502f445f4e20","modified":1516870659009},{"_id":"public/css/fonts/icomoon.ttf","hash":"9f1e824fc076dbfedf186609a2664558d5e3e986","modified":1516870659009},{"_id":"public/css/img/black-scales.png","hash":"243ea748d016704922ccfc0b6c18d97472c27bff","modified":1516870659009},{"_id":"public/css/fonts/icomoon.woff","hash":"a5c2eb785800a3a0aeaf2284d191d69df1893d6d","modified":1516870659009},{"_id":"public/css/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1516870659009},{"_id":"public/css/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1516870659009},{"_id":"public/css/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1516870659009},{"_id":"public/css/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1516870659009},{"_id":"public/css/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1516870659009},{"_id":"public/css/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1516870659009},{"_id":"public/css/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1516870659009},{"_id":"public/css/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1516870659009},{"_id":"public/css/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1516870659009},{"_id":"public/css/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1516870659010},{"_id":"public/css/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1516870659010},{"_id":"public/css/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1516870659010},{"_id":"public/photoSwipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1516870659010},{"_id":"public/photoSwipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1516870659010},{"_id":"public/css/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1516870659010},{"_id":"public/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1516870659010},{"_id":"public/photoSwipe/default-skin/default-skin.scss","hash":"91f44576a5f5ccff4740ff5020656bd2f00ca13c","modified":1516870659010},{"_id":"public/photoSwipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1516870659010},{"_id":"public/css/img/black.png","hash":"a180d3109a5cb6b9b9aa60d81730446ebe275473","modified":1516870659042},{"_id":"public/js/browser.js","hash":"8ca48b006591bbf6d75688637c14fd1b5bdd650f","modified":1516870659066},{"_id":"public/js/archive-inner.js","hash":"da4a770ccb23ca1ded23fa6475ce1379f0c10604","modified":1516870659066},{"_id":"public/js/tags.js","hash":"f259b3f808df3a8523a42978f922bb9eda76e0ee","modified":1516870659066},{"_id":"public/js/main.js","hash":"65020a2b6c40d114f7ec2b7676d07ff549129972","modified":1516870659066},{"_id":"public/js/tools.js","hash":"ed69771cd501770c2c303ae6ae695d2a9a187cdd","modified":1516870659066},{"_id":"public/js/photo.js","hash":"11b1935eae60a26f511597417610e3218406fc6c","modified":1516870659066},{"_id":"public/js/mobile.js","hash":"4d79f5f2d789e6cddfd7b502df238107e9c63aac","modified":1516870659066},{"_id":"public/js/util.js","hash":"28c66c54cab81b2a6c8c393226f5bd30f369e1bb","modified":1516870659066},{"_id":"public/js/viewer.js","hash":"8842418f90ac630de1ea3c3a2035458efe0897cf","modified":1516870659066},{"_id":"public/photoSwipe/photoswipe-ui-default.min.js","hash":"38557bef17c33e172bc8e1670cd302d91622dfad","modified":1516870659066},{"_id":"public/js/fix-page.js","hash":"f18e33e99b1032b95a60b018960bed64235c1a29","modified":1516870659066},{"_id":"public/js/jquery.lazyload.js","hash":"37961302284435b2677b7fd1e0c0f7624e226e4a","modified":1516870659066},{"_id":"public/main.css","hash":"aed74529215ba5b2bacadda6871f04749ffb6893","modified":1516870659067},{"_id":"public/photoSwipe/photoswipe-ui-default.js","hash":"724162c14e5722a2ce1f44cf086dcea7b6855b80","modified":1516870659067},{"_id":"public/main.js","hash":"2f3f25865c4c8ecc2ffce940917c80971dd3b607","modified":1516870659067},{"_id":"public/photoSwipe/photoswipe.js","hash":"ff9e3cc58b44a61144a9e211503755b170c24e91","modified":1516870659067},{"_id":"public/photoSwipe/photoswipe.min.js","hash":"e3267f5ae23f00c1ae052d019f12787296e34afc","modified":1516870659067},{"_id":"public/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1516870659067},{"_id":"public/learning/overviews.jpg","hash":"acd04642d722883e338e3a7716b902f9ffa954f3","modified":1516870659096},{"_id":"public/learning/overviews2.jpg","hash":"d4e4acbdc126bbda545c37bec6cfb1d206841f27","modified":1516870659117},{"_id":"public/learning/overviews4.jpg","hash":"dd277020a0054710241d68bb241a0a03aa28799d","modified":1516870659117},{"_id":"public/css/img/background.png","hash":"ad082fb6dab7a38ddb2b2360fa9f95afdb8e37be","modified":1516870659602},{"_id":"public/learning/overviews3.jpg","hash":"ac7c0f65de22947cc8402559e349eab87338d794","modified":1516870659617},{"_id":"public/learning/1.mp3","hash":"646c4f3419a91026e4d7984c82758ae09bdcb388","modified":1516870659639}],"Category":[],"Data":[],"Page":[{"title":"Index","date":"2017-05-09T03:13:35.000Z","_content":"<div style=\"background: url('http://wx3.sinaimg.cn/large/005P8ayVgy1fectyz9k2fj31hc0u012d.jpg') no-repeat;\n \t \">\n<h2>Welcome</h2>\n欢迎来到我的博客，这是一个HEXO的静态博客，主题为yilia。\n我们先表面上感谢一下他们，实际上我们心里都在想<span class=\"heimu\">写的真垃圾。(开个玩笑，还是非常感谢他们对hexo的贡献。)</span>\n当然也有自己的一些改动在上面。<span class=\"heimu\">前端的学习我都会拿这个博客做实验......所以博客有点丑就请各位见谅了</span>\n<h2>Info</h2>\n\n此博客存放着自己学习的一些笔记\n喜欢的诗句和文学作品\n对生活的一些感悟和记录(带有pwd的为个人日记)\n// TODO\n后续还可能收藏一些自己喜欢的壁纸\n分享自己喜欢的歌曲\n<h2>Contact</h2>\n邮箱 814467344@qq.com\n手机 18582451444\n</div>\n\n","source":"Index/index.md","raw":"---\ntitle: Index\ndate: 2017-05-09 11:13:35\n---\n<div style=\"background: url('http://wx3.sinaimg.cn/large/005P8ayVgy1fectyz9k2fj31hc0u012d.jpg') no-repeat;\n \t \">\n<h2>Welcome</h2>\n欢迎来到我的博客，这是一个HEXO的静态博客，主题为yilia。\n我们先表面上感谢一下他们，实际上我们心里都在想<span class=\"heimu\">写的真垃圾。(开个玩笑，还是非常感谢他们对hexo的贡献。)</span>\n当然也有自己的一些改动在上面。<span class=\"heimu\">前端的学习我都会拿这个博客做实验......所以博客有点丑就请各位见谅了</span>\n<h2>Info</h2>\n\n此博客存放着自己学习的一些笔记\n喜欢的诗句和文学作品\n对生活的一些感悟和记录(带有pwd的为个人日记)\n// TODO\n后续还可能收藏一些自己喜欢的壁纸\n分享自己喜欢的歌曲\n<h2>Contact</h2>\n邮箱 814467344@qq.com\n手机 18582451444\n</div>\n\n","updated":"2018-01-20T06:44:37.518Z","path":"Index/index.html","comments":1,"layout":"page","_id":"cjcu9m8u7000144wax9y8kthb","content":"<div style=\"background: url('http://wx3.sinaimg.cn/large/005P8ayVgy1fectyz9k2fj31hc0u012d.jpg') no-repeat;\n      \"><br><h2>Welcome</h2><br>欢迎来到我的博客，这是一个HEXO的静态博客，主题为yilia。<br>我们先表面上感谢一下他们，实际上我们心里都在想<span class=\"heimu\">写的真垃圾。(开个玩笑，还是非常感谢他们对hexo的贡献。)</span><br>当然也有自己的一些改动在上面。<span class=\"heimu\">前端的学习我都会拿这个博客做实验……所以博客有点丑就请各位见谅了</span><br><h2>Info</h2><br><br>此博客存放着自己学习的一些笔记<br>喜欢的诗句和文学作品<br>对生活的一些感悟和记录(带有pwd的为个人日记)<br>// TODO<br>后续还可能收藏一些自己喜欢的壁纸<br>分享自己喜欢的歌曲<br><h2>Contact</h2><br>邮箱 814467344@qq.com<br>手机 18582451444<br></div>\n\n","excerpt":"","more":"<div style=\"background: url('http://wx3.sinaimg.cn/large/005P8ayVgy1fectyz9k2fj31hc0u012d.jpg') no-repeat;\n      \"><br><h2>Welcome</h2><br>欢迎来到我的博客，这是一个HEXO的静态博客，主题为yilia。<br>我们先表面上感谢一下他们，实际上我们心里都在想<span class=\"heimu\">写的真垃圾。(开个玩笑，还是非常感谢他们对hexo的贡献。)</span><br>当然也有自己的一些改动在上面。<span class=\"heimu\">前端的学习我都会拿这个博客做实验……所以博客有点丑就请各位见谅了</span><br><h2>Info</h2><br><br>此博客存放着自己学习的一些笔记<br>喜欢的诗句和文学作品<br>对生活的一些感悟和记录(带有pwd的为个人日记)<br>// TODO<br>后续还可能收藏一些自己喜欢的壁纸<br>分享自己喜欢的歌曲<br><h2>Contact</h2><br>邮箱 814467344@qq.com<br>手机 18582451444<br></div>\n\n"},{"title":"每日杂记","toc":true,"date":"2017-06-28T01:40:54.000Z","tags":["杂记"],"_content":"### 2018-01-05 19:32:38\n身边感冒的人很多，希望大家都能早点好起来。网易云重新买了曾轶可的版权，很高兴。\n### 2017-12-09 14:52:29\n老杨找到工作一起吃饭。\n### 2017-12-03 02:03:42\n博客添加go-top和站内搜索功能。\n### 2017-11-19 13:21:07\n将博客从github迁移到自己VPS，访问速度有所提升。\n### 2017-10-26 15:54:21\n亦余心之所善兮，虽九死其犹未悔。\n### 2017-10-04 13:30:16\n中秋节没什么事情，离毕业似乎只差几个学分、1份实习的工作、1份毕业设计。\n### 2017-08-27 21:14:23\n大四，就像光脚踩在油迹斑斑的路面上一样邻人作呕。\n开学季到了，希望大家能开心的面对。\n### 2017-08-14 17:40:46\n昨天搬回学校住了，实习也接近尾声了，虽然实习没给公司做什么东西，但是自己感觉还是学了点东西。接下来只要把实习报告水过去就万事大吉了，英语太差了，要好好背单词才行。\n还是学校好啊，有同学玩。\n### 2017-07-05 12:03:13\n今天看课表发现暑期学堂选上了清水河的课，但是就刚刚12点结课。\n哈哈我的内心有点想笑，教务科说如果能选清水河的课会跟我联系的，但是....\n\n算了，一切随缘，还是看看下学期的课表吧\n```\n物理学与社会进步\n医疗信息化与实践\n照明设计基础\nCorelDRAW平面广告设计\n创业管理\n```\n### 2017-07-03 18:14:57\n不知不觉，实习要接近尾声了。老师告诉我们最后答辩要拿出1个项目来，光写一些学习文档是不给过的。就想着和小伙伴一起写个东西。\nspring的东西确实是有点多，让我有点不想学，也知道心急吃不了热豆腐，所以准备调整下心态。\n看了进击的巨人2，发现自由这东西真的很奇妙。大家都觉得日本人变态，可我觉得他们关于人性的思考确实很到位。最后还有兵长的SP，喜欢兵长可以去看一下。\n一人之下的漫画也有追，王也道长真的洒脱，超喜欢。\n最近想玩下AE和AI，可是发现没什么时间，软件的东西多的都学不完，还有单片机编程的DIY也很想玩。只能等到以后了，也可能一直没有机会玩吧。\n### 2017-06-28 10:45:35\n昨天放弃了概率论的重修考试，希望下一年能过。\n买了bilibili的免流卡，却因为信号太差体验爆炸。\n身份证半个月就过期了，不知道如何是好。\n最近迷上了朴树，就各种单曲循环。\n学分差的有点多，下一年要参加几个比赛混几个学分。\n\n\n\n\n\n\n","source":"daily-log/index.md","raw":"---\n# @Last Modified time: ### 2018-01-20 21:36:05\ntitle: 每日杂记\ntoc: true\ndate: 2017-06-28 09:40:54\ntags:\n- 杂记\n---\n### 2018-01-05 19:32:38\n身边感冒的人很多，希望大家都能早点好起来。网易云重新买了曾轶可的版权，很高兴。\n### 2017-12-09 14:52:29\n老杨找到工作一起吃饭。\n### 2017-12-03 02:03:42\n博客添加go-top和站内搜索功能。\n### 2017-11-19 13:21:07\n将博客从github迁移到自己VPS，访问速度有所提升。\n### 2017-10-26 15:54:21\n亦余心之所善兮，虽九死其犹未悔。\n### 2017-10-04 13:30:16\n中秋节没什么事情，离毕业似乎只差几个学分、1份实习的工作、1份毕业设计。\n### 2017-08-27 21:14:23\n大四，就像光脚踩在油迹斑斑的路面上一样邻人作呕。\n开学季到了，希望大家能开心的面对。\n### 2017-08-14 17:40:46\n昨天搬回学校住了，实习也接近尾声了，虽然实习没给公司做什么东西，但是自己感觉还是学了点东西。接下来只要把实习报告水过去就万事大吉了，英语太差了，要好好背单词才行。\n还是学校好啊，有同学玩。\n### 2017-07-05 12:03:13\n今天看课表发现暑期学堂选上了清水河的课，但是就刚刚12点结课。\n哈哈我的内心有点想笑，教务科说如果能选清水河的课会跟我联系的，但是....\n\n算了，一切随缘，还是看看下学期的课表吧\n```\n物理学与社会进步\n医疗信息化与实践\n照明设计基础\nCorelDRAW平面广告设计\n创业管理\n```\n### 2017-07-03 18:14:57\n不知不觉，实习要接近尾声了。老师告诉我们最后答辩要拿出1个项目来，光写一些学习文档是不给过的。就想着和小伙伴一起写个东西。\nspring的东西确实是有点多，让我有点不想学，也知道心急吃不了热豆腐，所以准备调整下心态。\n看了进击的巨人2，发现自由这东西真的很奇妙。大家都觉得日本人变态，可我觉得他们关于人性的思考确实很到位。最后还有兵长的SP，喜欢兵长可以去看一下。\n一人之下的漫画也有追，王也道长真的洒脱，超喜欢。\n最近想玩下AE和AI，可是发现没什么时间，软件的东西多的都学不完，还有单片机编程的DIY也很想玩。只能等到以后了，也可能一直没有机会玩吧。\n### 2017-06-28 10:45:35\n昨天放弃了概率论的重修考试，希望下一年能过。\n买了bilibili的免流卡，却因为信号太差体验爆炸。\n身份证半个月就过期了，不知道如何是好。\n最近迷上了朴树，就各种单曲循环。\n学分差的有点多，下一年要参加几个比赛混几个学分。\n\n\n\n\n\n\n","updated":"2018-01-20T13:39:37.639Z","path":"daily-log/index.html","comments":1,"layout":"page","_id":"cjcu9m8ub000344wa34z5rph9","content":"<h3 id=\"2018-01-05-19-32-38\"><a href=\"#2018-01-05-19-32-38\" class=\"headerlink\" title=\"2018-01-05 19:32:38\"></a>2018-01-05 19:32:38</h3><p>身边感冒的人很多，希望大家都能早点好起来。网易云重新买了曾轶可的版权，很高兴。</p>\n<h3 id=\"2017-12-09-14-52-29\"><a href=\"#2017-12-09-14-52-29\" class=\"headerlink\" title=\"2017-12-09 14:52:29\"></a>2017-12-09 14:52:29</h3><p>老杨找到工作一起吃饭。</p>\n<h3 id=\"2017-12-03-02-03-42\"><a href=\"#2017-12-03-02-03-42\" class=\"headerlink\" title=\"2017-12-03 02:03:42\"></a>2017-12-03 02:03:42</h3><p>博客添加go-top和站内搜索功能。</p>\n<h3 id=\"2017-11-19-13-21-07\"><a href=\"#2017-11-19-13-21-07\" class=\"headerlink\" title=\"2017-11-19 13:21:07\"></a>2017-11-19 13:21:07</h3><p>将博客从github迁移到自己VPS，访问速度有所提升。</p>\n<h3 id=\"2017-10-26-15-54-21\"><a href=\"#2017-10-26-15-54-21\" class=\"headerlink\" title=\"2017-10-26 15:54:21\"></a>2017-10-26 15:54:21</h3><p>亦余心之所善兮，虽九死其犹未悔。</p>\n<h3 id=\"2017-10-04-13-30-16\"><a href=\"#2017-10-04-13-30-16\" class=\"headerlink\" title=\"2017-10-04 13:30:16\"></a>2017-10-04 13:30:16</h3><p>中秋节没什么事情，离毕业似乎只差几个学分、1份实习的工作、1份毕业设计。</p>\n<h3 id=\"2017-08-27-21-14-23\"><a href=\"#2017-08-27-21-14-23\" class=\"headerlink\" title=\"2017-08-27 21:14:23\"></a>2017-08-27 21:14:23</h3><p>大四，就像光脚踩在油迹斑斑的路面上一样邻人作呕。<br>开学季到了，希望大家能开心的面对。</p>\n<h3 id=\"2017-08-14-17-40-46\"><a href=\"#2017-08-14-17-40-46\" class=\"headerlink\" title=\"2017-08-14 17:40:46\"></a>2017-08-14 17:40:46</h3><p>昨天搬回学校住了，实习也接近尾声了，虽然实习没给公司做什么东西，但是自己感觉还是学了点东西。接下来只要把实习报告水过去就万事大吉了，英语太差了，要好好背单词才行。<br>还是学校好啊，有同学玩。</p>\n<h3 id=\"2017-07-05-12-03-13\"><a href=\"#2017-07-05-12-03-13\" class=\"headerlink\" title=\"2017-07-05 12:03:13\"></a>2017-07-05 12:03:13</h3><p>今天看课表发现暑期学堂选上了清水河的课，但是就刚刚12点结课。<br>哈哈我的内心有点想笑，教务科说如果能选清水河的课会跟我联系的，但是….</p>\n<p>算了，一切随缘，还是看看下学期的课表吧<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">物理学与社会进步</div><div class=\"line\">医疗信息化与实践</div><div class=\"line\">照明设计基础</div><div class=\"line\">CorelDRAW平面广告设计</div><div class=\"line\">创业管理</div></pre></td></tr></table></figure></p>\n<h3 id=\"2017-07-03-18-14-57\"><a href=\"#2017-07-03-18-14-57\" class=\"headerlink\" title=\"2017-07-03 18:14:57\"></a>2017-07-03 18:14:57</h3><p>不知不觉，实习要接近尾声了。老师告诉我们最后答辩要拿出1个项目来，光写一些学习文档是不给过的。就想着和小伙伴一起写个东西。<br>spring的东西确实是有点多，让我有点不想学，也知道心急吃不了热豆腐，所以准备调整下心态。<br>看了进击的巨人2，发现自由这东西真的很奇妙。大家都觉得日本人变态，可我觉得他们关于人性的思考确实很到位。最后还有兵长的SP，喜欢兵长可以去看一下。<br>一人之下的漫画也有追，王也道长真的洒脱，超喜欢。<br>最近想玩下AE和AI，可是发现没什么时间，软件的东西多的都学不完，还有单片机编程的DIY也很想玩。只能等到以后了，也可能一直没有机会玩吧。</p>\n<h3 id=\"2017-06-28-10-45-35\"><a href=\"#2017-06-28-10-45-35\" class=\"headerlink\" title=\"2017-06-28 10:45:35\"></a>2017-06-28 10:45:35</h3><p>昨天放弃了概率论的重修考试，希望下一年能过。<br>买了bilibili的免流卡，却因为信号太差体验爆炸。<br>身份证半个月就过期了，不知道如何是好。<br>最近迷上了朴树，就各种单曲循环。<br>学分差的有点多，下一年要参加几个比赛混几个学分。</p>\n","excerpt":"","more":"<h3 id=\"2018-01-05-19-32-38\"><a href=\"#2018-01-05-19-32-38\" class=\"headerlink\" title=\"2018-01-05 19:32:38\"></a>2018-01-05 19:32:38</h3><p>身边感冒的人很多，希望大家都能早点好起来。网易云重新买了曾轶可的版权，很高兴。</p>\n<h3 id=\"2017-12-09-14-52-29\"><a href=\"#2017-12-09-14-52-29\" class=\"headerlink\" title=\"2017-12-09 14:52:29\"></a>2017-12-09 14:52:29</h3><p>老杨找到工作一起吃饭。</p>\n<h3 id=\"2017-12-03-02-03-42\"><a href=\"#2017-12-03-02-03-42\" class=\"headerlink\" title=\"2017-12-03 02:03:42\"></a>2017-12-03 02:03:42</h3><p>博客添加go-top和站内搜索功能。</p>\n<h3 id=\"2017-11-19-13-21-07\"><a href=\"#2017-11-19-13-21-07\" class=\"headerlink\" title=\"2017-11-19 13:21:07\"></a>2017-11-19 13:21:07</h3><p>将博客从github迁移到自己VPS，访问速度有所提升。</p>\n<h3 id=\"2017-10-26-15-54-21\"><a href=\"#2017-10-26-15-54-21\" class=\"headerlink\" title=\"2017-10-26 15:54:21\"></a>2017-10-26 15:54:21</h3><p>亦余心之所善兮，虽九死其犹未悔。</p>\n<h3 id=\"2017-10-04-13-30-16\"><a href=\"#2017-10-04-13-30-16\" class=\"headerlink\" title=\"2017-10-04 13:30:16\"></a>2017-10-04 13:30:16</h3><p>中秋节没什么事情，离毕业似乎只差几个学分、1份实习的工作、1份毕业设计。</p>\n<h3 id=\"2017-08-27-21-14-23\"><a href=\"#2017-08-27-21-14-23\" class=\"headerlink\" title=\"2017-08-27 21:14:23\"></a>2017-08-27 21:14:23</h3><p>大四，就像光脚踩在油迹斑斑的路面上一样邻人作呕。<br>开学季到了，希望大家能开心的面对。</p>\n<h3 id=\"2017-08-14-17-40-46\"><a href=\"#2017-08-14-17-40-46\" class=\"headerlink\" title=\"2017-08-14 17:40:46\"></a>2017-08-14 17:40:46</h3><p>昨天搬回学校住了，实习也接近尾声了，虽然实习没给公司做什么东西，但是自己感觉还是学了点东西。接下来只要把实习报告水过去就万事大吉了，英语太差了，要好好背单词才行。<br>还是学校好啊，有同学玩。</p>\n<h3 id=\"2017-07-05-12-03-13\"><a href=\"#2017-07-05-12-03-13\" class=\"headerlink\" title=\"2017-07-05 12:03:13\"></a>2017-07-05 12:03:13</h3><p>今天看课表发现暑期学堂选上了清水河的课，但是就刚刚12点结课。<br>哈哈我的内心有点想笑，教务科说如果能选清水河的课会跟我联系的，但是….</p>\n<p>算了，一切随缘，还是看看下学期的课表吧<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">物理学与社会进步</div><div class=\"line\">医疗信息化与实践</div><div class=\"line\">照明设计基础</div><div class=\"line\">CorelDRAW平面广告设计</div><div class=\"line\">创业管理</div></pre></td></tr></table></figure></p>\n<h3 id=\"2017-07-03-18-14-57\"><a href=\"#2017-07-03-18-14-57\" class=\"headerlink\" title=\"2017-07-03 18:14:57\"></a>2017-07-03 18:14:57</h3><p>不知不觉，实习要接近尾声了。老师告诉我们最后答辩要拿出1个项目来，光写一些学习文档是不给过的。就想着和小伙伴一起写个东西。<br>spring的东西确实是有点多，让我有点不想学，也知道心急吃不了热豆腐，所以准备调整下心态。<br>看了进击的巨人2，发现自由这东西真的很奇妙。大家都觉得日本人变态，可我觉得他们关于人性的思考确实很到位。最后还有兵长的SP，喜欢兵长可以去看一下。<br>一人之下的漫画也有追，王也道长真的洒脱，超喜欢。<br>最近想玩下AE和AI，可是发现没什么时间，软件的东西多的都学不完，还有单片机编程的DIY也很想玩。只能等到以后了，也可能一直没有机会玩吧。</p>\n<h3 id=\"2017-06-28-10-45-35\"><a href=\"#2017-06-28-10-45-35\" class=\"headerlink\" title=\"2017-06-28 10:45:35\"></a>2017-06-28 10:45:35</h3><p>昨天放弃了概率论的重修考试，希望下一年能过。<br>买了bilibili的免流卡，却因为信号太差体验爆炸。<br>身份证半个月就过期了，不知道如何是好。<br>最近迷上了朴树，就各种单曲循环。<br>学分差的有点多，下一年要参加几个比赛混几个学分。</p>\n"},{"title":"学习","date":"2017-05-22T10:38:13.000Z","_content":"<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/数学\" target=\"_self\">数学</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/英语\" target=\"_self\">英语</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/物理学\" target=\"_self\">物理学</a>\n<style type=\"text/css\">\n.btn {\n  display: block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  font-size: 20px;\n  color: black;\n  text-align: center;\n  border: 2px solid rgba(0,0,0,0.5);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(255,255,0,0);\n}\n.btn:hover {\n  background: rgba(0,0,0,0.5);\n  color: black;\n}\n</style>","source":"learning/index.md","raw":"---\ntitle: 学习\ndate: 2017-05-22 18:38:13\n---\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/数学\" target=\"_self\">数学</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/英语\" target=\"_self\">英语</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/物理学\" target=\"_self\">物理学</a>\n<style type=\"text/css\">\n.btn {\n  display: block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  font-size: 20px;\n  color: black;\n  text-align: center;\n  border: 2px solid rgba(0,0,0,0.5);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(255,255,0,0);\n}\n.btn:hover {\n  background: rgba(0,0,0,0.5);\n  color: black;\n}\n</style>","updated":"2018-01-20T06:44:37.822Z","path":"learning/index.html","comments":1,"layout":"page","_id":"cjcu9m8uk000644wabbnoorvg","content":"<p><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/数学\" target=\"_self\">数学</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/英语\" target=\"_self\">英语</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/物理学\" target=\"_self\">物理学</a></p>\n<style type=\"text/css\">\n.btn {\n  display: block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  font-size: 20px;\n  color: black;\n  text-align: center;\n  border: 2px solid rgba(0,0,0,0.5);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(255,255,0,0);\n}\n.btn:hover {\n  background: rgba(0,0,0,0.5);\n  color: black;\n}\n</style>","excerpt":"","more":"<p><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/数学\" target=\"_self\">数学</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/英语\" target=\"_self\">英语</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/物理学\" target=\"_self\">物理学</a></p>\n<style type=\"text/css\">\n.btn {\n  display: block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  font-size: 20px;\n  color: black;\n  text-align: center;\n  border: 2px solid rgba(0,0,0,0.5);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(255,255,0,0);\n}\n.btn:hover {\n  background: rgba(0,0,0,0.5);\n  color: black;\n}\n</style>"},{"title":"编程","date":"2017-05-22T10:18:53.000Z","_content":"\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/Java基础\" target=\"_self\">Java基础</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/CSS\" target=\"_self\">CSS</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/JS\" target=\"_self\">JS</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/Web\" target=\"_self\">Web</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/demo/\" target=\"_self\">demo</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/编程\" target=\"_self\">其他编程</a>\n<a class=\"btn\" href=\"http://yasuoo.org/2017/06/11/%E3%80%8A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/\" target=\"_self\">Java虚拟机</a>\n\n\n<style type=\"text/css\">\n.btn {\n  display: block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  font-size: 20px;\n  color: black;\n  text-align: center;\n  border: 2px solid rgba(0,0,0,0.5);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(255,255,0,0);\n}\n.btn:hover {\n  background: rgba(0,0,0,0.5);\n  color: black;\n}\n</style>","source":"programming/index.md","raw":"---\ntitle: 编程\ndate: 2017-05-22 18:18:53\n---\n\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/Java基础\" target=\"_self\">Java基础</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/CSS\" target=\"_self\">CSS</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/JS\" target=\"_self\">JS</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/Web\" target=\"_self\">Web</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/demo/\" target=\"_self\">demo</a>\n<a class=\"btn\" href=\"https://superqiang4444.github.io/tags/编程\" target=\"_self\">其他编程</a>\n<a class=\"btn\" href=\"http://yasuoo.org/2017/06/11/%E3%80%8A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/\" target=\"_self\">Java虚拟机</a>\n\n\n<style type=\"text/css\">\n.btn {\n  display: block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  font-size: 20px;\n  color: black;\n  text-align: center;\n  border: 2px solid rgba(0,0,0,0.5);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(255,255,0,0);\n}\n.btn:hover {\n  background: rgba(0,0,0,0.5);\n  color: black;\n}\n</style>","updated":"2018-01-20T06:44:37.938Z","path":"programming/index.html","comments":1,"layout":"page","_id":"cjcu9m8ut000844ward2dtdp6","content":"<p><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/Java基础\" target=\"_self\">Java基础</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/CSS\" target=\"_self\">CSS</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/JS\" target=\"_self\">JS</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/Web\" target=\"_self\">Web</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/demo/\" target=\"_self\">demo</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/编程\" target=\"_self\">其他编程</a><br><a class=\"btn\" href=\"http://yasuoo.org/2017/06/11/%E3%80%8A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/\" target=\"_self\">Java虚拟机</a></p>\n<style type=\"text/css\">\n.btn {\n  display: block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  font-size: 20px;\n  color: black;\n  text-align: center;\n  border: 2px solid rgba(0,0,0,0.5);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(255,255,0,0);\n}\n.btn:hover {\n  background: rgba(0,0,0,0.5);\n  color: black;\n}\n</style>","excerpt":"","more":"<p><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/Java基础\" target=\"_self\">Java基础</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/CSS\" target=\"_self\">CSS</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/JS\" target=\"_self\">JS</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/Web\" target=\"_self\">Web</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/demo/\" target=\"_self\">demo</a><br><a class=\"btn\" href=\"https://superqiang4444.github.io/tags/编程\" target=\"_self\">其他编程</a><br><a class=\"btn\" href=\"http://yasuoo.org/2017/06/11/%E3%80%8A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/\" target=\"_self\">Java虚拟机</a></p>\n<style type=\"text/css\">\n.btn {\n  display: block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  font-size: 20px;\n  color: black;\n  text-align: center;\n  border: 2px solid rgba(0,0,0,0.5);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(255,255,0,0);\n}\n.btn:hover {\n  background: rgba(0,0,0,0.5);\n  color: black;\n}\n</style>"}],"Post":[{"title":"AJAX2","date":"2017-04-25T08:58:49.000Z","toc":true,"_content":"XStream\nJSON,json-lib\n<!--more-->\n# XStream\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo7lnk4j30vt0b2jvb.jpg)\n# JSON\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fgeqo85tc5j30ef07wab3.jpg)\n# json-lib\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo8krgaj30ix07bq3t.jpg)\n# ajaxutils.js\n```\n//创建request\nfunction createXMLHttpRequest() {\n\ttry{\n\t\treturn new XMLHttpRequest();//大多数浏览器\n\t}catch (e) {\n\t\ttry{\n\t\t\treturn ActvieXObject(\"Msxm12.XMLHTTP\");//IE6.0\n\t\t}catch (e) {\n\t\t\ttry {\n\t\t\t\treturn ActvieXObject(\"Microsoft.XMLHTTP\");//IE5.5\n\t\t\t}catch (e) {\n\t\t\t\talert(\"您用的什么浏览器？\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction ajax(option) {\n\t//1.得到xmlHttp\n\tvar xmlHttp = createXMLHttpRequest();\n\t//2.打开连接\n\tif(!option.method) {//默认get\n\t\toption.method = \"GET\";\n\t}\n\tif(option.asyn == undefined) {//默认异步\n\t\toption.asyn = true;\n\t}\n\txmlHttp.open(option.method, option.url, option.asyn);\n\t//3.判断是否为POST\n\tif(\"POST\" == option.method) {\n\t\txmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t}\n\t//4.发送请求\n\txmlHttp.send(option.params);\n\t//5.注册监听\n\txmlHttp.onreadystatechange = function() {\n\t\tif(xmlHttp.readyState == 4 && xmlHttp.status == 200) {\n\t\t\tvar data;\n\t\t\tif(!option.type) {\n\t\t\t\tdata = xmlHttp.responseText;\n\t\t\t} else if(option.type == \"xml\") {\n\t\t\t\tdata = xmlHttp.responseXML;\n\t\t\t} else if(option.type == \"text\") {\n\t\t\t\tdata = xmlHttp.responseText;\n\t\t\t} else if(option.type == \"json\") {\n\t\t\t\tvar text = xmlHttp.responseText;\n\t\t\t\tdata = eval(\"(\" + text + \")\");\n\t\t\t}\n\t\t\t\n\t\t\toption.callback(data);\n\t\t\t\n\t\t}\n\t};\n};\n```\n\n","source":"_posts/AJAX2.md","raw":"---\ntitle: AJAX2\ndate: 2017-04-25 16:58:49\ntags:\n- Web\n- AJAX\ntoc: true\n---\nXStream\nJSON,json-lib\n<!--more-->\n# XStream\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo7lnk4j30vt0b2jvb.jpg)\n# JSON\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fgeqo85tc5j30ef07wab3.jpg)\n# json-lib\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo8krgaj30ix07bq3t.jpg)\n# ajaxutils.js\n```\n//创建request\nfunction createXMLHttpRequest() {\n\ttry{\n\t\treturn new XMLHttpRequest();//大多数浏览器\n\t}catch (e) {\n\t\ttry{\n\t\t\treturn ActvieXObject(\"Msxm12.XMLHTTP\");//IE6.0\n\t\t}catch (e) {\n\t\t\ttry {\n\t\t\t\treturn ActvieXObject(\"Microsoft.XMLHTTP\");//IE5.5\n\t\t\t}catch (e) {\n\t\t\t\talert(\"您用的什么浏览器？\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction ajax(option) {\n\t//1.得到xmlHttp\n\tvar xmlHttp = createXMLHttpRequest();\n\t//2.打开连接\n\tif(!option.method) {//默认get\n\t\toption.method = \"GET\";\n\t}\n\tif(option.asyn == undefined) {//默认异步\n\t\toption.asyn = true;\n\t}\n\txmlHttp.open(option.method, option.url, option.asyn);\n\t//3.判断是否为POST\n\tif(\"POST\" == option.method) {\n\t\txmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t}\n\t//4.发送请求\n\txmlHttp.send(option.params);\n\t//5.注册监听\n\txmlHttp.onreadystatechange = function() {\n\t\tif(xmlHttp.readyState == 4 && xmlHttp.status == 200) {\n\t\t\tvar data;\n\t\t\tif(!option.type) {\n\t\t\t\tdata = xmlHttp.responseText;\n\t\t\t} else if(option.type == \"xml\") {\n\t\t\t\tdata = xmlHttp.responseXML;\n\t\t\t} else if(option.type == \"text\") {\n\t\t\t\tdata = xmlHttp.responseText;\n\t\t\t} else if(option.type == \"json\") {\n\t\t\t\tvar text = xmlHttp.responseText;\n\t\t\t\tdata = eval(\"(\" + text + \")\");\n\t\t\t}\n\t\t\t\n\t\t\toption.callback(data);\n\t\t\t\n\t\t}\n\t};\n};\n```\n\n","slug":"AJAX2","published":1,"updated":"2018-01-20T06:44:37.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8u0000044wa4p0vwt3n","content":"<p>XStream<br>JSON,json-lib<br><a id=\"more\"></a></p>\n<h1 id=\"XStream\"><a href=\"#XStream\" class=\"headerlink\" title=\"XStream\"></a>XStream</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo7lnk4j30vt0b2jvb.jpg\" alt=\"\"></p>\n<h1 id=\"JSON\"><a href=\"#JSON\" class=\"headerlink\" title=\"JSON\"></a>JSON</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fgeqo85tc5j30ef07wab3.jpg\" alt=\"\"></p>\n<h1 id=\"json-lib\"><a href=\"#json-lib\" class=\"headerlink\" title=\"json-lib\"></a>json-lib</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo8krgaj30ix07bq3t.jpg\" alt=\"\"></p>\n<h1 id=\"ajaxutils-js\"><a href=\"#ajaxutils-js\" class=\"headerlink\" title=\"ajaxutils.js\"></a>ajaxutils.js</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//创建request</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createXMLHttpRequest</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> XMLHttpRequest();<span class=\"comment\">//大多数浏览器</span></div><div class=\"line\"> &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">  <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">   <span class=\"keyword\">return</span> ActvieXObject(<span class=\"string\">\"Msxm12.XMLHTTP\"</span>);<span class=\"comment\">//IE6.0</span></div><div class=\"line\">  &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">   <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> ActvieXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);<span class=\"comment\">//IE5.5</span></div><div class=\"line\">   &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">    alert(<span class=\"string\">\"您用的什么浏览器？\"</span>);</div><div class=\"line\">    <span class=\"keyword\">throw</span> e;</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ajax</span>(<span class=\"params\">option</span>) </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//1.得到xmlHttp</span></div><div class=\"line\"> <span class=\"keyword\">var</span> xmlHttp = createXMLHttpRequest();</div><div class=\"line\"> <span class=\"comment\">//2.打开连接</span></div><div class=\"line\"> <span class=\"keyword\">if</span>(!option.method) &#123;<span class=\"comment\">//默认get</span></div><div class=\"line\">  option.method = <span class=\"string\">\"GET\"</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">if</span>(option.asyn == <span class=\"literal\">undefined</span>) &#123;<span class=\"comment\">//默认异步</span></div><div class=\"line\">  option.asyn = <span class=\"literal\">true</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> xmlHttp.open(option.method, option.url, option.asyn);</div><div class=\"line\"> <span class=\"comment\">//3.判断是否为POST</span></div><div class=\"line\"> <span class=\"keyword\">if</span>(<span class=\"string\">\"POST\"</span> == option.method) &#123;</div><div class=\"line\">  xmlHttp.setRequestHeader(<span class=\"string\">\"Content-Type\"</span>, <span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//4.发送请求</span></div><div class=\"line\"> xmlHttp.send(option.params);</div><div class=\"line\"> <span class=\"comment\">//5.注册监听</span></div><div class=\"line\"> xmlHttp.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(xmlHttp.readyState == <span class=\"number\">4</span> &amp;&amp; xmlHttp.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">   <span class=\"keyword\">var</span> data;</div><div class=\"line\">   <span class=\"keyword\">if</span>(!option.type) &#123;</div><div class=\"line\">    data = xmlHttp.responseText;</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(option.type == <span class=\"string\">\"xml\"</span>) &#123;</div><div class=\"line\">    data = xmlHttp.responseXML;</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(option.type == <span class=\"string\">\"text\"</span>) &#123;</div><div class=\"line\">    data = xmlHttp.responseText;</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(option.type == <span class=\"string\">\"json\"</span>) &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> text = xmlHttp.responseText;</div><div class=\"line\">    data = <span class=\"built_in\">eval</span>(<span class=\"string\">\"(\"</span> + text + <span class=\"string\">\")\"</span>);</div><div class=\"line\">   &#125;</div><div class=\"line\">   </div><div class=\"line\">   option.callback(data);</div><div class=\"line\">   </div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n","excerpt":"<p>XStream<br>JSON,json-lib<br>","more":"</p>\n<h1 id=\"XStream\"><a href=\"#XStream\" class=\"headerlink\" title=\"XStream\"></a>XStream</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo7lnk4j30vt0b2jvb.jpg\" alt=\"\"></p>\n<h1 id=\"JSON\"><a href=\"#JSON\" class=\"headerlink\" title=\"JSON\"></a>JSON</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fgeqo85tc5j30ef07wab3.jpg\" alt=\"\"></p>\n<h1 id=\"json-lib\"><a href=\"#json-lib\" class=\"headerlink\" title=\"json-lib\"></a>json-lib</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo8krgaj30ix07bq3t.jpg\" alt=\"\"></p>\n<h1 id=\"ajaxutils-js\"><a href=\"#ajaxutils-js\" class=\"headerlink\" title=\"ajaxutils.js\"></a>ajaxutils.js</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//创建request</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createXMLHttpRequest</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> XMLHttpRequest();<span class=\"comment\">//大多数浏览器</span></div><div class=\"line\"> &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">  <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">   <span class=\"keyword\">return</span> ActvieXObject(<span class=\"string\">\"Msxm12.XMLHTTP\"</span>);<span class=\"comment\">//IE6.0</span></div><div class=\"line\">  &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">   <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> ActvieXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);<span class=\"comment\">//IE5.5</span></div><div class=\"line\">   &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">    alert(<span class=\"string\">\"您用的什么浏览器？\"</span>);</div><div class=\"line\">    <span class=\"keyword\">throw</span> e;</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ajax</span>(<span class=\"params\">option</span>) </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//1.得到xmlHttp</span></div><div class=\"line\"> <span class=\"keyword\">var</span> xmlHttp = createXMLHttpRequest();</div><div class=\"line\"> <span class=\"comment\">//2.打开连接</span></div><div class=\"line\"> <span class=\"keyword\">if</span>(!option.method) &#123;<span class=\"comment\">//默认get</span></div><div class=\"line\">  option.method = <span class=\"string\">\"GET\"</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">if</span>(option.asyn == <span class=\"literal\">undefined</span>) &#123;<span class=\"comment\">//默认异步</span></div><div class=\"line\">  option.asyn = <span class=\"literal\">true</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> xmlHttp.open(option.method, option.url, option.asyn);</div><div class=\"line\"> <span class=\"comment\">//3.判断是否为POST</span></div><div class=\"line\"> <span class=\"keyword\">if</span>(<span class=\"string\">\"POST\"</span> == option.method) &#123;</div><div class=\"line\">  xmlHttp.setRequestHeader(<span class=\"string\">\"Content-Type\"</span>, <span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//4.发送请求</span></div><div class=\"line\"> xmlHttp.send(option.params);</div><div class=\"line\"> <span class=\"comment\">//5.注册监听</span></div><div class=\"line\"> xmlHttp.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(xmlHttp.readyState == <span class=\"number\">4</span> &amp;&amp; xmlHttp.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">   <span class=\"keyword\">var</span> data;</div><div class=\"line\">   <span class=\"keyword\">if</span>(!option.type) &#123;</div><div class=\"line\">    data = xmlHttp.responseText;</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(option.type == <span class=\"string\">\"xml\"</span>) &#123;</div><div class=\"line\">    data = xmlHttp.responseXML;</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(option.type == <span class=\"string\">\"text\"</span>) &#123;</div><div class=\"line\">    data = xmlHttp.responseText;</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(option.type == <span class=\"string\">\"json\"</span>) &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> text = xmlHttp.responseText;</div><div class=\"line\">    data = <span class=\"built_in\">eval</span>(<span class=\"string\">\"(\"</span> + text + <span class=\"string\">\")\"</span>);</div><div class=\"line\">   &#125;</div><div class=\"line\">   </div><div class=\"line\">   option.callback(data);</div><div class=\"line\">   </div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>"},{"title":"2017.6.08","date":"2017-06-08T09:00:35.000Z","toc":true,"_content":"不可思议的四面塚\n\n阳光会从树林中洒下\n\n伴着雨水而下\n\n是如此漫长的雨季\n\n有些人会被你所看不见的河流吞噬。","source":"_posts/2017-6-08.md","raw":"---\ntitle: 2017.6.08\ndate: 2017-06-08 17:00:35\ntags:\n- 生活\ntoc: true\n---\n不可思议的四面塚\n\n阳光会从树林中洒下\n\n伴着雨水而下\n\n是如此漫长的雨季\n\n有些人会被你所看不见的河流吞噬。","slug":"2017-6-08","published":1,"updated":"2018-01-20T06:44:37.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8u8000244wa6ykgkfhj","content":"<p>不可思议的四面塚</p>\n<p>阳光会从树林中洒下</p>\n<p>伴着雨水而下</p>\n<p>是如此漫长的雨季</p>\n<p>有些人会被你所看不见的河流吞噬。</p>\n","excerpt":"","more":"<p>不可思议的四面塚</p>\n<p>阳光会从树林中洒下</p>\n<p>伴着雨水而下</p>\n<p>是如此漫长的雨季</p>\n<p>有些人会被你所看不见的河流吞噬。</p>\n"},{"title":"Cookie学习笔记","date":"2017-04-05T06:04:49.000Z","toc":true,"_content":"Cookie\n<!--more-->\nCookie\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1febrwfltpcj30wb0a6q7r.jpg)\n缓存原理\nhttp://www.lai18.com/content/7450277.html\n","source":"_posts/Cookie学习笔记.md","raw":"---\ntitle: Cookie学习笔记\ndate: 2017-04-05 14:04:49\ntags:\n- cookie\n- Web\ntoc: true\n---\nCookie\n<!--more-->\nCookie\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1febrwfltpcj30wb0a6q7r.jpg)\n缓存原理\nhttp://www.lai18.com/content/7450277.html\n","slug":"Cookie学习笔记","published":1,"updated":"2018-01-20T06:44:37.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8ui000544wa5d5xxd68","content":"<p>Cookie<br><a id=\"more\"></a><br>Cookie<br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1febrwfltpcj30wb0a6q7r.jpg\" alt=\"\"><br>缓存原理<br><a href=\"http://www.lai18.com/content/7450277.html\" target=\"_blank\" rel=\"external\">http://www.lai18.com/content/7450277.html</a></p>\n","excerpt":"<p>Cookie<br>","more":"<br>Cookie<br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1febrwfltpcj30wb0a6q7r.jpg\" alt=\"\"><br>缓存原理<br><a href=\"http://www.lai18.com/content/7450277.html\">http://www.lai18.com/content/7450277.html</a></p>"},{"title":"April Third","date":"2017-04-03T13:38:39.000Z","toc":true,"_content":"essay\n<!--more-->\n\t\t\n\t放假之后的第一天就匆匆从清水河回到沙河。\n\n\t魏铭辰说好久不见想要个礼物，我就专门去逛了次商场。\n\n\t找了好久才找到一家卖礼物的店，里面的东西都很温馨，找了个符合他气质的瓶子就包了起来。\n\t\t\n\t4.2回到学校之后大家就一起去吃了顿火锅，很开心，不知为何我却略感寂寞。\n\t\t\n\t晚上回来第一次剁手在steam上买了刺客信条2(看电影被圈粉的)，感觉很帅，代表鹰的精神，对自由的追求与向往。\n\n<hr>\n\t\t\n\t4.3本来约好去租自行车骑行到黄龙溪，由于魏铭辰身体不适就取消了行程。\n\t\t\n\t之后我们改去动物园，动物园的人很多，大部分都是家长带着小盆友来玩的。\n\t\t\n\t动物园的动物很少，我们就跟着人群前行，走到游乐场的时候买了4张票，做了2次游乐设施。\n\t\t\n\t我非常的想去看看蛇，我们就把动物园走了一遍才找到。\n\t\t\n\t当我们想要离开的时候，一个小男孩就过来找我说想借我手机给妈妈打个电话，说是走丢了。魏铭辰就去找工作人员，我就在旁边守着小男孩。\n\t\t\n\t刚想要给他妈妈打电话的时候，他妈妈就过来看到了他。小男孩就高兴的跑了过去，他妈妈还对我们说了谢谢。我在想如果是小男孩对我们说谢谢的话，我会高兴一整天吧。\n\t之后就走到了旁边的昭觉寺，昭觉寺以前是一个非常有名的寺庙。据说当时有很多国外的人慕名而来，但是当某- 党建立的时候为了打压宗教势力，将寺庙的后院改成了动物园。。。\n\n<hr>\n\t\t\n\t晚上回来我们去吃了港菜，略贵而且不好吃。吃完就骑着小黄车去西西弗书店看书。\n\t\t\n\t里面有一本书的名字叫做坚强工作，温柔生活。我非常的喜欢，是一个叫做佐佐木常夫的日本人写的，以后有时间可以考虑入手1本。\n\t\t\n\t好了，美好的假期到此就结束了。希望大家都能跟我一样有个愉快的假期。\n\n","source":"_posts/April-Third.md","raw":"---\ntitle: April Third\ndate: 2017-04-03 21:38:39\ntags:\n- essay\n- 生活\ntoc: true\n---\nessay\n<!--more-->\n\t\t\n\t放假之后的第一天就匆匆从清水河回到沙河。\n\n\t魏铭辰说好久不见想要个礼物，我就专门去逛了次商场。\n\n\t找了好久才找到一家卖礼物的店，里面的东西都很温馨，找了个符合他气质的瓶子就包了起来。\n\t\t\n\t4.2回到学校之后大家就一起去吃了顿火锅，很开心，不知为何我却略感寂寞。\n\t\t\n\t晚上回来第一次剁手在steam上买了刺客信条2(看电影被圈粉的)，感觉很帅，代表鹰的精神，对自由的追求与向往。\n\n<hr>\n\t\t\n\t4.3本来约好去租自行车骑行到黄龙溪，由于魏铭辰身体不适就取消了行程。\n\t\t\n\t之后我们改去动物园，动物园的人很多，大部分都是家长带着小盆友来玩的。\n\t\t\n\t动物园的动物很少，我们就跟着人群前行，走到游乐场的时候买了4张票，做了2次游乐设施。\n\t\t\n\t我非常的想去看看蛇，我们就把动物园走了一遍才找到。\n\t\t\n\t当我们想要离开的时候，一个小男孩就过来找我说想借我手机给妈妈打个电话，说是走丢了。魏铭辰就去找工作人员，我就在旁边守着小男孩。\n\t\t\n\t刚想要给他妈妈打电话的时候，他妈妈就过来看到了他。小男孩就高兴的跑了过去，他妈妈还对我们说了谢谢。我在想如果是小男孩对我们说谢谢的话，我会高兴一整天吧。\n\t之后就走到了旁边的昭觉寺，昭觉寺以前是一个非常有名的寺庙。据说当时有很多国外的人慕名而来，但是当某- 党建立的时候为了打压宗教势力，将寺庙的后院改成了动物园。。。\n\n<hr>\n\t\t\n\t晚上回来我们去吃了港菜，略贵而且不好吃。吃完就骑着小黄车去西西弗书店看书。\n\t\t\n\t里面有一本书的名字叫做坚强工作，温柔生活。我非常的喜欢，是一个叫做佐佐木常夫的日本人写的，以后有时间可以考虑入手1本。\n\t\t\n\t好了，美好的假期到此就结束了。希望大家都能跟我一样有个愉快的假期。\n\n","slug":"April-Third","published":1,"updated":"2018-01-20T06:44:37.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8uo000744waqopy3vi6","content":"<p>essay<br><a id=\"more\"></a></p>\n<pre><code>放假之后的第一天就匆匆从清水河回到沙河。\n\n魏铭辰说好久不见想要个礼物，我就专门去逛了次商场。\n\n找了好久才找到一家卖礼物的店，里面的东西都很温馨，找了个符合他气质的瓶子就包了起来。\n\n4.2回到学校之后大家就一起去吃了顿火锅，很开心，不知为何我却略感寂寞。\n\n晚上回来第一次剁手在steam上买了刺客信条2(看电影被圈粉的)，感觉很帅，代表鹰的精神，对自由的追求与向往。\n</code></pre><hr>\n\n<pre><code>4.3本来约好去租自行车骑行到黄龙溪，由于魏铭辰身体不适就取消了行程。\n\n之后我们改去动物园，动物园的人很多，大部分都是家长带着小盆友来玩的。\n\n动物园的动物很少，我们就跟着人群前行，走到游乐场的时候买了4张票，做了2次游乐设施。\n\n我非常的想去看看蛇，我们就把动物园走了一遍才找到。\n\n当我们想要离开的时候，一个小男孩就过来找我说想借我手机给妈妈打个电话，说是走丢了。魏铭辰就去找工作人员，我就在旁边守着小男孩。\n\n刚想要给他妈妈打电话的时候，他妈妈就过来看到了他。小男孩就高兴的跑了过去，他妈妈还对我们说了谢谢。我在想如果是小男孩对我们说谢谢的话，我会高兴一整天吧。\n之后就走到了旁边的昭觉寺，昭觉寺以前是一个非常有名的寺庙。据说当时有很多国外的人慕名而来，但是当某- 党建立的时候为了打压宗教势力，将寺庙的后院改成了动物园。。。\n</code></pre><hr>\n\n<pre><code>晚上回来我们去吃了港菜，略贵而且不好吃。吃完就骑着小黄车去西西弗书店看书。\n\n里面有一本书的名字叫做坚强工作，温柔生活。我非常的喜欢，是一个叫做佐佐木常夫的日本人写的，以后有时间可以考虑入手1本。\n\n好了，美好的假期到此就结束了。希望大家都能跟我一样有个愉快的假期。\n</code></pre>","excerpt":"<p>essay<br>","more":"</p>\n<pre><code>放假之后的第一天就匆匆从清水河回到沙河。\n\n魏铭辰说好久不见想要个礼物，我就专门去逛了次商场。\n\n找了好久才找到一家卖礼物的店，里面的东西都很温馨，找了个符合他气质的瓶子就包了起来。\n\n4.2回到学校之后大家就一起去吃了顿火锅，很开心，不知为何我却略感寂寞。\n\n晚上回来第一次剁手在steam上买了刺客信条2(看电影被圈粉的)，感觉很帅，代表鹰的精神，对自由的追求与向往。\n</code></pre><hr>\n\n<pre><code>4.3本来约好去租自行车骑行到黄龙溪，由于魏铭辰身体不适就取消了行程。\n\n之后我们改去动物园，动物园的人很多，大部分都是家长带着小盆友来玩的。\n\n动物园的动物很少，我们就跟着人群前行，走到游乐场的时候买了4张票，做了2次游乐设施。\n\n我非常的想去看看蛇，我们就把动物园走了一遍才找到。\n\n当我们想要离开的时候，一个小男孩就过来找我说想借我手机给妈妈打个电话，说是走丢了。魏铭辰就去找工作人员，我就在旁边守着小男孩。\n\n刚想要给他妈妈打电话的时候，他妈妈就过来看到了他。小男孩就高兴的跑了过去，他妈妈还对我们说了谢谢。我在想如果是小男孩对我们说谢谢的话，我会高兴一整天吧。\n之后就走到了旁边的昭觉寺，昭觉寺以前是一个非常有名的寺庙。据说当时有很多国外的人慕名而来，但是当某- 党建立的时候为了打压宗教势力，将寺庙的后院改成了动物园。。。\n</code></pre><hr>\n\n<pre><code>晚上回来我们去吃了港菜，略贵而且不好吃。吃完就骑着小黄车去西西弗书店看书。\n\n里面有一本书的名字叫做坚强工作，温柔生活。我非常的喜欢，是一个叫做佐佐木常夫的日本人写的，以后有时间可以考虑入手1本。\n\n好了，美好的假期到此就结束了。希望大家都能跟我一样有个愉快的假期。\n</code></pre>"},{"title":"CSS学习笔记","date":"2017-03-17T07:16:45.000Z","toc":true,"_content":"\nCSS和HTML结合的4种方式\nCSS三种基本选择器\nCSS的扩展选择器\nCSS的盒子模型\nCSS的布局的漂浮\nCSS的布局的定位\n<!--more-->\n# CSS和HTML结合的4种方式\n\t1.在每个html标签上面都有一个属性style，把css和html结合在一起\n\t\t<div style=\"background-color:red;\">\n\t2.使用html的一个标签实现<style>标签，写在head里面\n\t\t<style type=\"text/css\">\n\t\t\tcss代码;\n\t\t</style>\n\t3.在style标签里面 使用语句\n\t\t<style type=\"text/css\">\n\t\t\t@import url(css文件的路径)；\n\t\t</style>\n\t4.使用头标签link,引入外部css文件\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css文件的路径\" />\n# CSS基本选择器\n\t1.标签选择器\n\t\tdiv {\n\t\t\tbackground-color:gray;\n\t\t\tcolor:white;\n\t\t}\n\t2.class选择器\n\t\t<div class=\"haha\">aaaa</div>\n\t\t.haha {\n\t\t\tbackground-color:gray;\n\t\t}\n\t3.id选择器\n\t\t<div id=\"hehe\">bbbb</div>\n\t\t#hehe {\n\t\t\tbackground-color:gray;\n\t\t}\n\t优先级\n\t\tstyle > id选择器 > class选择器 > 标签选择器\n\n# CSS的扩展选择器\n\t1.关联选择器\n\t\t<div><p>wwwww</p></div>\n\t\tdiv p {\n\t\t\tbackground-color:orange;\n\t\t}\n\t\t//设置div里面的p标签\n\t2.组合选择器\n\t\t<div>1111</div>\n\t\t<p>2222</p>\n\t\tdiv,p {\n\t\t\tbackground-color:blue;\n\t\t}\n\t\t//同时设置div和p标签\n\t3.伪元素选择器\n\t\t//CSS里面提供了一些定义好的元素，可以直接使用\n\t\t//比如超链接\n\t\t:link :hover :active :visited\n# CSS的盒子模型\n\t//布局的时候把数据装进（div）\n\t1.边框\n\t\tborder\n\t\tborder-top\n\t\tborder-bottom\n\t\tborder-left\n\t\tborder-right\n\t2.内边距\n\t\tpadding(上下左右)\n\t3.外边距\n\t\tmargin（上下左右）\n# CSS的布局的漂浮\n\tfloat\n\t\tleft : 文本流向对象的右边\n\t\tright : 文本流向对象的左边\n# CSS的布局的定位\n\tposition\n\t\tabsolute : 将对象从文档流中拖出\n\t\t\t可以用top、bottom等属性定位\n\t\trelative : 不会把对象从文档流中拖出\n\t\t\t可以用top、bottom等属性定位\n","source":"_posts/CSS学习笔记.md","raw":"---\ntitle: CSS学习笔记\ndate: 2017-03-17 15:16:45\ntags:\n- CSS\n- Web\ntoc: true\n---\n\nCSS和HTML结合的4种方式\nCSS三种基本选择器\nCSS的扩展选择器\nCSS的盒子模型\nCSS的布局的漂浮\nCSS的布局的定位\n<!--more-->\n# CSS和HTML结合的4种方式\n\t1.在每个html标签上面都有一个属性style，把css和html结合在一起\n\t\t<div style=\"background-color:red;\">\n\t2.使用html的一个标签实现<style>标签，写在head里面\n\t\t<style type=\"text/css\">\n\t\t\tcss代码;\n\t\t</style>\n\t3.在style标签里面 使用语句\n\t\t<style type=\"text/css\">\n\t\t\t@import url(css文件的路径)；\n\t\t</style>\n\t4.使用头标签link,引入外部css文件\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css文件的路径\" />\n# CSS基本选择器\n\t1.标签选择器\n\t\tdiv {\n\t\t\tbackground-color:gray;\n\t\t\tcolor:white;\n\t\t}\n\t2.class选择器\n\t\t<div class=\"haha\">aaaa</div>\n\t\t.haha {\n\t\t\tbackground-color:gray;\n\t\t}\n\t3.id选择器\n\t\t<div id=\"hehe\">bbbb</div>\n\t\t#hehe {\n\t\t\tbackground-color:gray;\n\t\t}\n\t优先级\n\t\tstyle > id选择器 > class选择器 > 标签选择器\n\n# CSS的扩展选择器\n\t1.关联选择器\n\t\t<div><p>wwwww</p></div>\n\t\tdiv p {\n\t\t\tbackground-color:orange;\n\t\t}\n\t\t//设置div里面的p标签\n\t2.组合选择器\n\t\t<div>1111</div>\n\t\t<p>2222</p>\n\t\tdiv,p {\n\t\t\tbackground-color:blue;\n\t\t}\n\t\t//同时设置div和p标签\n\t3.伪元素选择器\n\t\t//CSS里面提供了一些定义好的元素，可以直接使用\n\t\t//比如超链接\n\t\t:link :hover :active :visited\n# CSS的盒子模型\n\t//布局的时候把数据装进（div）\n\t1.边框\n\t\tborder\n\t\tborder-top\n\t\tborder-bottom\n\t\tborder-left\n\t\tborder-right\n\t2.内边距\n\t\tpadding(上下左右)\n\t3.外边距\n\t\tmargin（上下左右）\n# CSS的布局的漂浮\n\tfloat\n\t\tleft : 文本流向对象的右边\n\t\tright : 文本流向对象的左边\n# CSS的布局的定位\n\tposition\n\t\tabsolute : 将对象从文档流中拖出\n\t\t\t可以用top、bottom等属性定位\n\t\trelative : 不会把对象从文档流中拖出\n\t\t\t可以用top、bottom等属性定位\n","slug":"CSS学习笔记","published":1,"updated":"2018-01-20T06:44:37.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8uu000944wasnnan8v7","content":"<p>CSS和HTML结合的4种方式<br>CSS三种基本选择器<br>CSS的扩展选择器<br>CSS的盒子模型<br>CSS的布局的漂浮<br>CSS的布局的定位<br><a id=\"more\"></a></p>\n<h1 id=\"CSS和HTML结合的4种方式\"><a href=\"#CSS和HTML结合的4种方式\" class=\"headerlink\" title=\"CSS和HTML结合的4种方式\"></a>CSS和HTML结合的4种方式</h1><pre><code>1.在每个html标签上面都有一个属性style，把css和html结合在一起\n    &lt;div style=&quot;background-color:red;&quot;&gt;\n2.使用html的一个标签实现&lt;style&gt;标签，写在head里面\n    &lt;style type=&quot;text/css&quot;&gt;\n        css代码;\n    &lt;/style&gt;\n3.在style标签里面 使用语句\n    &lt;style type=&quot;text/css&quot;&gt;\n        @import url(css文件的路径)；\n    &lt;/style&gt;\n4.使用头标签link,引入外部css文件\n    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css文件的路径&quot; /&gt;\n</code></pre><h1 id=\"CSS基本选择器\"><a href=\"#CSS基本选择器\" class=\"headerlink\" title=\"CSS基本选择器\"></a>CSS基本选择器</h1><pre><code>1.标签选择器\n    div {\n        background-color:gray;\n        color:white;\n    }\n2.class选择器\n    &lt;div class=&quot;haha&quot;&gt;aaaa&lt;/div&gt;\n    .haha {\n        background-color:gray;\n    }\n3.id选择器\n    &lt;div id=&quot;hehe&quot;&gt;bbbb&lt;/div&gt;\n    #hehe {\n        background-color:gray;\n    }\n优先级\n    style &gt; id选择器 &gt; class选择器 &gt; 标签选择器\n</code></pre><h1 id=\"CSS的扩展选择器\"><a href=\"#CSS的扩展选择器\" class=\"headerlink\" title=\"CSS的扩展选择器\"></a>CSS的扩展选择器</h1><pre><code>1.关联选择器\n    &lt;div&gt;&lt;p&gt;wwwww&lt;/p&gt;&lt;/div&gt;\n    div p {\n        background-color:orange;\n    }\n    //设置div里面的p标签\n2.组合选择器\n    &lt;div&gt;1111&lt;/div&gt;\n    &lt;p&gt;2222&lt;/p&gt;\n    div,p {\n        background-color:blue;\n    }\n    //同时设置div和p标签\n3.伪元素选择器\n    //CSS里面提供了一些定义好的元素，可以直接使用\n    //比如超链接\n    :link :hover :active :visited\n</code></pre><h1 id=\"CSS的盒子模型\"><a href=\"#CSS的盒子模型\" class=\"headerlink\" title=\"CSS的盒子模型\"></a>CSS的盒子模型</h1><pre><code>//布局的时候把数据装进（div）\n1.边框\n    border\n    border-top\n    border-bottom\n    border-left\n    border-right\n2.内边距\n    padding(上下左右)\n3.外边距\n    margin（上下左右）\n</code></pre><h1 id=\"CSS的布局的漂浮\"><a href=\"#CSS的布局的漂浮\" class=\"headerlink\" title=\"CSS的布局的漂浮\"></a>CSS的布局的漂浮</h1><pre><code>float\n    left : 文本流向对象的右边\n    right : 文本流向对象的左边\n</code></pre><h1 id=\"CSS的布局的定位\"><a href=\"#CSS的布局的定位\" class=\"headerlink\" title=\"CSS的布局的定位\"></a>CSS的布局的定位</h1><pre><code>position\n    absolute : 将对象从文档流中拖出\n        可以用top、bottom等属性定位\n    relative : 不会把对象从文档流中拖出\n        可以用top、bottom等属性定位\n</code></pre>","excerpt":"<p>CSS和HTML结合的4种方式<br>CSS三种基本选择器<br>CSS的扩展选择器<br>CSS的盒子模型<br>CSS的布局的漂浮<br>CSS的布局的定位<br>","more":"</p>\n<h1 id=\"CSS和HTML结合的4种方式\"><a href=\"#CSS和HTML结合的4种方式\" class=\"headerlink\" title=\"CSS和HTML结合的4种方式\"></a>CSS和HTML结合的4种方式</h1><pre><code>1.在每个html标签上面都有一个属性style，把css和html结合在一起\n    &lt;div style=&quot;background-color:red;&quot;&gt;\n2.使用html的一个标签实现&lt;style&gt;标签，写在head里面\n    &lt;style type=&quot;text/css&quot;&gt;\n        css代码;\n    &lt;/style&gt;\n3.在style标签里面 使用语句\n    &lt;style type=&quot;text/css&quot;&gt;\n        @import url(css文件的路径)；\n    &lt;/style&gt;\n4.使用头标签link,引入外部css文件\n    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css文件的路径&quot; /&gt;\n</code></pre><h1 id=\"CSS基本选择器\"><a href=\"#CSS基本选择器\" class=\"headerlink\" title=\"CSS基本选择器\"></a>CSS基本选择器</h1><pre><code>1.标签选择器\n    div {\n        background-color:gray;\n        color:white;\n    }\n2.class选择器\n    &lt;div class=&quot;haha&quot;&gt;aaaa&lt;/div&gt;\n    .haha {\n        background-color:gray;\n    }\n3.id选择器\n    &lt;div id=&quot;hehe&quot;&gt;bbbb&lt;/div&gt;\n    #hehe {\n        background-color:gray;\n    }\n优先级\n    style &gt; id选择器 &gt; class选择器 &gt; 标签选择器\n</code></pre><h1 id=\"CSS的扩展选择器\"><a href=\"#CSS的扩展选择器\" class=\"headerlink\" title=\"CSS的扩展选择器\"></a>CSS的扩展选择器</h1><pre><code>1.关联选择器\n    &lt;div&gt;&lt;p&gt;wwwww&lt;/p&gt;&lt;/div&gt;\n    div p {\n        background-color:orange;\n    }\n    //设置div里面的p标签\n2.组合选择器\n    &lt;div&gt;1111&lt;/div&gt;\n    &lt;p&gt;2222&lt;/p&gt;\n    div,p {\n        background-color:blue;\n    }\n    //同时设置div和p标签\n3.伪元素选择器\n    //CSS里面提供了一些定义好的元素，可以直接使用\n    //比如超链接\n    :link :hover :active :visited\n</code></pre><h1 id=\"CSS的盒子模型\"><a href=\"#CSS的盒子模型\" class=\"headerlink\" title=\"CSS的盒子模型\"></a>CSS的盒子模型</h1><pre><code>//布局的时候把数据装进（div）\n1.边框\n    border\n    border-top\n    border-bottom\n    border-left\n    border-right\n2.内边距\n    padding(上下左右)\n3.外边距\n    margin（上下左右）\n</code></pre><h1 id=\"CSS的布局的漂浮\"><a href=\"#CSS的布局的漂浮\" class=\"headerlink\" title=\"CSS的布局的漂浮\"></a>CSS的布局的漂浮</h1><pre><code>float\n    left : 文本流向对象的右边\n    right : 文本流向对象的左边\n</code></pre><h1 id=\"CSS的布局的定位\"><a href=\"#CSS的布局的定位\" class=\"headerlink\" title=\"CSS的布局的定位\"></a>CSS的布局的定位</h1><pre><code>position\n    absolute : 将对象从文档流中拖出\n        可以用top、bottom等属性定位\n    relative : 不会把对象从文档流中拖出\n        可以用top、bottom等属性定位\n</code></pre>"},{"title":"Generic Sum","date":"2017-05-09T06:54:37.000Z","toc":true,"_content":"今天给大家介绍的是\nGeneric Sum本质和\n<!--more-->\n# 本质和应该遵循的2个性质\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fff4n4md7pj30gx0cm42n.jpg)\n# 本质和求不收敛级数的和\n在高数中我们是无法求不收敛的级数的和的，但是在这里我们就能得到很神奇的答案\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fff4n593gxj30gj091whr.jpg)\n\t一群正数加起来结果居然是负数！这看起来非常的不可思议，但是在现实世界中也是有这样的例子存在的！\n\n\t那就是Casimir效应\n\tE=A∑n\n\t这个式子代表的是量子力学中2个板子之间的能量\n\t其中A表示的是一个系数，跟2个板子之间的距离a有关，a越小，A越大\n\t∑n为全体自然数之和\n\n\t可以看出当a不断变小的话，A就变大，如果∑n>0，E就变大。\n\t那么2个板子之间的力为斥力，但是结果测出来2个板子之间的力为引力。\n\t所以∑n<0.\n\n\t2001年意大利帕多瓦大学的科学家完成了试验，测得了Casimir效应。\n# 总结\n\t世界就是这么的有趣，你为什么不去学习呢？\n\n\n\n","source":"_posts/Generic-Sum.md","raw":"---\ntitle: Generic Sum\ndate: 2017-05-09 14:54:37\ntags:\n- 数学\ntoc: true\n---\n今天给大家介绍的是\nGeneric Sum本质和\n<!--more-->\n# 本质和应该遵循的2个性质\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fff4n4md7pj30gx0cm42n.jpg)\n# 本质和求不收敛级数的和\n在高数中我们是无法求不收敛的级数的和的，但是在这里我们就能得到很神奇的答案\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fff4n593gxj30gj091whr.jpg)\n\t一群正数加起来结果居然是负数！这看起来非常的不可思议，但是在现实世界中也是有这样的例子存在的！\n\n\t那就是Casimir效应\n\tE=A∑n\n\t这个式子代表的是量子力学中2个板子之间的能量\n\t其中A表示的是一个系数，跟2个板子之间的距离a有关，a越小，A越大\n\t∑n为全体自然数之和\n\n\t可以看出当a不断变小的话，A就变大，如果∑n>0，E就变大。\n\t那么2个板子之间的力为斥力，但是结果测出来2个板子之间的力为引力。\n\t所以∑n<0.\n\n\t2001年意大利帕多瓦大学的科学家完成了试验，测得了Casimir效应。\n# 总结\n\t世界就是这么的有趣，你为什么不去学习呢？\n\n\n\n","slug":"Generic-Sum","published":1,"updated":"2018-01-20T06:44:37.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8uv000b44wan90u3x5l","content":"<p>今天给大家介绍的是<br>Generic Sum本质和<br><a id=\"more\"></a></p>\n<h1 id=\"本质和应该遵循的2个性质\"><a href=\"#本质和应该遵循的2个性质\" class=\"headerlink\" title=\"本质和应该遵循的2个性质\"></a>本质和应该遵循的2个性质</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fff4n4md7pj30gx0cm42n.jpg\" alt=\"\"></p>\n<h1 id=\"本质和求不收敛级数的和\"><a href=\"#本质和求不收敛级数的和\" class=\"headerlink\" title=\"本质和求不收敛级数的和\"></a>本质和求不收敛级数的和</h1><p>在高数中我们是无法求不收敛的级数的和的，但是在这里我们就能得到很神奇的答案<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fff4n593gxj30gj091whr.jpg\" alt=\"\"><br>    一群正数加起来结果居然是负数！这看起来非常的不可思议，但是在现实世界中也是有这样的例子存在的！</p>\n<pre><code>那就是Casimir效应\nE=A∑n\n这个式子代表的是量子力学中2个板子之间的能量\n其中A表示的是一个系数，跟2个板子之间的距离a有关，a越小，A越大\n∑n为全体自然数之和\n\n可以看出当a不断变小的话，A就变大，如果∑n&gt;0，E就变大。\n那么2个板子之间的力为斥力，但是结果测出来2个板子之间的力为引力。\n所以∑n&lt;0.\n\n2001年意大利帕多瓦大学的科学家完成了试验，测得了Casimir效应。\n</code></pre><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><pre><code>世界就是这么的有趣，你为什么不去学习呢？\n</code></pre>","excerpt":"<p>今天给大家介绍的是<br>Generic Sum本质和<br>","more":"</p>\n<h1 id=\"本质和应该遵循的2个性质\"><a href=\"#本质和应该遵循的2个性质\" class=\"headerlink\" title=\"本质和应该遵循的2个性质\"></a>本质和应该遵循的2个性质</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fff4n4md7pj30gx0cm42n.jpg\" alt=\"\"></p>\n<h1 id=\"本质和求不收敛级数的和\"><a href=\"#本质和求不收敛级数的和\" class=\"headerlink\" title=\"本质和求不收敛级数的和\"></a>本质和求不收敛级数的和</h1><p>在高数中我们是无法求不收敛的级数的和的，但是在这里我们就能得到很神奇的答案<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fff4n593gxj30gj091whr.jpg\" alt=\"\"><br>    一群正数加起来结果居然是负数！这看起来非常的不可思议，但是在现实世界中也是有这样的例子存在的！</p>\n<pre><code>那就是Casimir效应\nE=A∑n\n这个式子代表的是量子力学中2个板子之间的能量\n其中A表示的是一个系数，跟2个板子之间的距离a有关，a越小，A越大\n∑n为全体自然数之和\n\n可以看出当a不断变小的话，A就变大，如果∑n&gt;0，E就变大。\n那么2个板子之间的力为斥力，但是结果测出来2个板子之间的力为引力。\n所以∑n&lt;0.\n\n2001年意大利帕多瓦大学的科学家完成了试验，测得了Casimir效应。\n</code></pre><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><pre><code>世界就是这么的有趣，你为什么不去学习呢？\n</code></pre>"},{"title":"JDBC学习笔记","date":"2017-04-11T11:24:06.000Z","toc":true,"_content":"Class.forName(\"com.mysql.jdbc.Driver\");//加载驱动类\nConnection con = DriverManager.getConnection(url,username,password);\nStatement stmt = con.createStatement();\n//Statement stmt = con.createStatement(int,int);\n//这个带参数的语句决定ResultSet是否可滚动、是否敏感、是否可更新\n<!--more-->\n# ResultSet\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1feizipe9b0j30ix0crtar.jpg)\n# 获取结果集元数据\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feizipztf1j30cw03774m.jpg)\n# 遍历\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feiziqe105j30bz056q3e.jpg)\nPrepareStatement\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feizw9313bj30dd07idg9.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feizyxxpqlj30ht06iwev.jpg)\n# sql时间和util时间的转换\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fej04ends3j30j70cvjsf.jpg)\njava.util.Date-->java.sql.Date的转换：\n```\n\tjava.util.Date date = new java.util.Date();\n\tlong l = date.getTime();\n\tjava.sql.Date sqlDate = new java.sql.Date(l);\n```\t\n# blob类型\n这里就不写了\n# 批处理\npstmt.addBatch();//添加批！\npstmt.executeBatch();//执行批！","source":"_posts/JDBC学习笔记.md","raw":"---\ntitle: JDBC学习笔记\ndate: 2017-04-11 19:24:06\ntags:\n- Web\ntoc: true\n---\nClass.forName(\"com.mysql.jdbc.Driver\");//加载驱动类\nConnection con = DriverManager.getConnection(url,username,password);\nStatement stmt = con.createStatement();\n//Statement stmt = con.createStatement(int,int);\n//这个带参数的语句决定ResultSet是否可滚动、是否敏感、是否可更新\n<!--more-->\n# ResultSet\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1feizipe9b0j30ix0crtar.jpg)\n# 获取结果集元数据\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feizipztf1j30cw03774m.jpg)\n# 遍历\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feiziqe105j30bz056q3e.jpg)\nPrepareStatement\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feizw9313bj30dd07idg9.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feizyxxpqlj30ht06iwev.jpg)\n# sql时间和util时间的转换\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fej04ends3j30j70cvjsf.jpg)\njava.util.Date-->java.sql.Date的转换：\n```\n\tjava.util.Date date = new java.util.Date();\n\tlong l = date.getTime();\n\tjava.sql.Date sqlDate = new java.sql.Date(l);\n```\t\n# blob类型\n这里就不写了\n# 批处理\npstmt.addBatch();//添加批！\npstmt.executeBatch();//执行批！","slug":"JDBC学习笔记","published":1,"updated":"2018-01-20T06:44:37.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8ux000c44waq6jdfxj1","content":"<p>Class.forName(“com.mysql.jdbc.Driver”);//加载驱动类<br>Connection con = DriverManager.getConnection(url,username,password);<br>Statement stmt = con.createStatement();<br>//Statement stmt = con.createStatement(int,int);<br>//这个带参数的语句决定ResultSet是否可滚动、是否敏感、是否可更新<br><a id=\"more\"></a></p>\n<h1 id=\"ResultSet\"><a href=\"#ResultSet\" class=\"headerlink\" title=\"ResultSet\"></a>ResultSet</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1feizipe9b0j30ix0crtar.jpg\" alt=\"\"></p>\n<h1 id=\"获取结果集元数据\"><a href=\"#获取结果集元数据\" class=\"headerlink\" title=\"获取结果集元数据\"></a>获取结果集元数据</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feizipztf1j30cw03774m.jpg\" alt=\"\"></p>\n<h1 id=\"遍历\"><a href=\"#遍历\" class=\"headerlink\" title=\"遍历\"></a>遍历</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feiziqe105j30bz056q3e.jpg\" alt=\"\"><br>PrepareStatement<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feizw9313bj30dd07idg9.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feizyxxpqlj30ht06iwev.jpg\" alt=\"\"></p>\n<h1 id=\"sql时间和util时间的转换\"><a href=\"#sql时间和util时间的转换\" class=\"headerlink\" title=\"sql时间和util时间的转换\"></a>sql时间和util时间的转换</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fej04ends3j30j70cvjsf.jpg\" alt=\"\"><br>java.util.Date–&gt;java.sql.Date的转换：</p>\n<pre><code>java.util.Date date = new java.util.Date();\nlong l = date.getTime();\njava.sql.Date sqlDate = new java.sql.Date(l);\n</code></pre><h1 id=\"blob类型\"><a href=\"#blob类型\" class=\"headerlink\" title=\"blob类型\"></a>blob类型</h1><p>这里就不写了</p>\n<h1 id=\"批处理\"><a href=\"#批处理\" class=\"headerlink\" title=\"批处理\"></a>批处理</h1><p>pstmt.addBatch();//添加批！<br>pstmt.executeBatch();//执行批！</p>\n","excerpt":"<p>Class.forName(“com.mysql.jdbc.Driver”);//加载驱动类<br>Connection con = DriverManager.getConnection(url,username,password);<br>Statement stmt = con.createStatement();<br>//Statement stmt = con.createStatement(int,int);<br>//这个带参数的语句决定ResultSet是否可滚动、是否敏感、是否可更新<br>","more":"</p>\n<h1 id=\"ResultSet\"><a href=\"#ResultSet\" class=\"headerlink\" title=\"ResultSet\"></a>ResultSet</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1feizipe9b0j30ix0crtar.jpg\" alt=\"\"></p>\n<h1 id=\"获取结果集元数据\"><a href=\"#获取结果集元数据\" class=\"headerlink\" title=\"获取结果集元数据\"></a>获取结果集元数据</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feizipztf1j30cw03774m.jpg\" alt=\"\"></p>\n<h1 id=\"遍历\"><a href=\"#遍历\" class=\"headerlink\" title=\"遍历\"></a>遍历</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feiziqe105j30bz056q3e.jpg\" alt=\"\"><br>PrepareStatement<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feizw9313bj30dd07idg9.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feizyxxpqlj30ht06iwev.jpg\" alt=\"\"></p>\n<h1 id=\"sql时间和util时间的转换\"><a href=\"#sql时间和util时间的转换\" class=\"headerlink\" title=\"sql时间和util时间的转换\"></a>sql时间和util时间的转换</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fej04ends3j30j70cvjsf.jpg\" alt=\"\"><br>java.util.Date–&gt;java.sql.Date的转换：</p>\n<pre><code>java.util.Date date = new java.util.Date();\nlong l = date.getTime();\njava.sql.Date sqlDate = new java.sql.Date(l);\n</code></pre><h1 id=\"blob类型\"><a href=\"#blob类型\" class=\"headerlink\" title=\"blob类型\"></a>blob类型</h1><p>这里就不写了</p>\n<h1 id=\"批处理\"><a href=\"#批处理\" class=\"headerlink\" title=\"批处理\"></a>批处理</h1><p>pstmt.addBatch();//添加批！<br>pstmt.executeBatch();//执行批！</p>"},{"title":"April Fifth(pwd)","date":"2017-04-05T11:47:01.000Z","toc":true,"_content":"essay\n<!--more-->\n\n<script type=\"text/javascript\">\nstrHTML=\"\";\nstrHTML+=\"XX%13%0D9%0D@C%5C%0A_ZV%5DU%0D%3F%u4E65%u5927%u8F48%u9694%u845E%u4E3E%\";\nstrHTML+=\"u4E28%uFF3B%u9765%u517C%u6D5B%u7485%u7896%u53F4%u5DDD%u3066%3Ak%u6222%\";\nstrHTML+=\"u8FEA%u4E1B%u4E8A%u976F%u5E01%u76B0%u55FF%u6B1B%u4E32%u96D1%u5919%uFF3\";\nstrHTML+=\"F%u53DA%u8098%u56D2%u4E09%u968B%u594A%u6616%u5BBC%u976E%u76E0%u8C54%u5\";\nstrHTML+=\"FB4%uFF6F%u666B%u4E3C%u7752%u89AD%u4E6F%u538E%u4ED6%u7752%u5FA6%u6CB9%\";\nstrHTML+=\"u4E31%u4EA2%u3036i%u72D5%u81D3%u5415%u7770%u4E38%u96DD%u5895%uFF3E%u4E\";\nstrHTML+=\"CC%u4F38%u6517%u4E13%u4E23%u757B%u9099%u5069%u4EB3%u4E68%u6754%uFF3A%u\";\nstrHTML+=\"673A%u70DD%u8F4B%u5F8A%uFF3F%u5FD4%u4F15%u5344%u8223%u903B%u76B0%u617C\";\nstrHTML+=\"%u89F0%u303B3%u4F76%u661C%u661D%u663F%u6261%u96C4%u4EE5%uFF6F%u6279%u4\";\nstrHTML+=\"ED0%u76C3%u5254%07%u708C%u8FA4%u627C%u7757%u7773%uFF68%u8FE8%u664E%u6B\";\nstrHTML+=\"E7%u8FB0%u6024%u6263%u96C6%u76BD%u3036i3%u4EF3%u5910%u65D9%u4E39%u4E6A\";\nstrHTML+=\"%u89E4%u7155%u5E0B%u658A%u8D14%uFF35%u56D5%u4E0D%u89E5%u538E%u8D43%u8F\";\nstrHTML+=\"05%u4E3B%u73DB%u3031%u7EB7%u67AC%u4E6C%u51C9%u6273%u65A8%uFF3C%u663E%u\";\nstrHTML+=\"6636%u6CBD%u6CEA%u76BD%u4E39%u5910%u30329%09JQ%5C%07%06%07%09%18%14GP%\";\nstrHTML+=\"5D%3B%0A%5B%16%0E%5DCAT%0E%0DZ%5B%07%5C%073%u612F%u89FA%u81DF%u5D94%u6\";\nstrHTML+=\"5D2%u835C%u538C%u6532%uFF35%u976B%u5E0F%u4E9F%u6012%uFF39%u538C%u80CC%\";\nstrHTML+=\"u6619%u6C0B%u8FB8%u4E6F%u951E%u4E3E%u5914%u4EB7%u3032%3B3%u6225%u664C%\";\nstrHTML+=\"u5711%u51D9%u5E4D%u527D%u8B8B%u4E3E%u8FA2%u610D%u6728%uFF6F%u5E6F%u672\";\nstrHTML+=\"2%u81DF%u5DC6%u6C5C%u8FE9%u4E38%u89E2%u954E%u5911%uFF3F%u4F22%u661F%u7\";\nstrHTML+=\"EB2%u67AF%u5347%u661E%u53DA%u6738%u4E39%u537E%u5BFD%u7389%u4EBF%u303B%\";\nstrHTML+=\"3A9%u8879%u4E5F%u661D%u6C92%u676A%u951C%u591E%uFF39%u53D8%u664B%u5BEA%\";\nstrHTML+=\"u8A35%u89A1%u8243%u76B2%u80CE%u52FF%u5344%u4E6C%u50FC%u4EFD%u527C%u4E3\";\nstrHTML+=\"0%u6806%u5910%u772B%u306133%u7389%u5718%u76B7%u6224%u4F7F%u5FD5%u8662%\";\nstrHTML+=\"uFF6F%u4F79%u56D9%u4E0F%u81DD%u5D95%u76B1%u5E49%u7A79%u612E%u89FF%u81D\";\nstrHTML+=\"9%u5D95%u4E3E%u5117%u4EE5%u4E89%u680D%u680C%u4E3C%u515C%uFF38%u4E3C%u8\";\nstrHTML+=\"B81%u6228%u6C01%u8FEC%u4E6C%u4E38%u4F7F%u61F0%u5218%u4ED9%u574B%u60CA%\";\nstrHTML+=\"u4EF5%u4E7F%u5443%u3037%3Fi%u6220%u6E33%u6969%u76E0%u612F%u89A8%u5203%\";\nstrHTML+=\"u81D9%u5DC0%u4E3E%u5147%u4EEF%u4E8E%u76E7%u96AD%u963B%u303B%3A9%u5C04%\";\nstrHTML+=\"u8FBB%u6223%u4EDF%u53B2%u5C6C%0D%u4E1F%uFF3B%u617B%u89FC%u4E6A%u664C%u\";\nstrHTML+=\"65D1%u6CE3%u4E97%u5FA7%uFF3C%u4E3E%u8B8B%u5914%u5B87%u90CD%u5FB9%u5B5D\";\nstrHTML+=\"%u72D8%u5444%uFF35%u4E66%u5E35%u672B%u4EE5%u4ED9V%u4E18%u80CE%u621D%u5\";\nstrHTML+=\"253%u77DC%u5DC4%u3035n%3F%u5FBD%u55FF%u6B13%u5939%u76DD%u5943%u4E8A%u7\";\nstrHTML+=\"6E5%u4E33%u53D6%u8BEC%u3032%3B3%u6225%u4E63%u76CD%u90C4%u6616%u5B54%u5\";\nstrHTML+=\"366%u4E35%u4EDF%uFF3E%u864E%u7155%u8FBA%u9E84%u8BC1%u53D8%u8099%u5FBD%\";\nstrHTML+=\"u5972%u6049%uFF3D%u4F70%u6222%u5E12%u6C91%u6768%u612C%u5203%u5B55%u536\";\nstrHTML+=\"5%uFF3D%u4E34%u8FF3%u6272%u6126%u5209%u5FB1%u6082%u4F17%u3037o8%01R%u5\";\nstrHTML+=\"CE2%u76BD%u6224%u7387%u574C%u53FD%u54B9R%00%u5CB7%u76B7%u6275%u6739%u4\";\nstrHTML+=\"EA1%u4E7B%u5309%u521A%u5452%uFF3D%u4E66%u8B8C%u5C52%u50F6%u720F%u6BF4%\";\nstrHTML+=\"u6270%u8BC7%u76B1%u90C6%u6805%u8FEB%u574B%u9731%u661C%u53EE%u9031%u677\";\nstrHTML+=\"B%u3037%3Fi%u6545%u4E1C%u4E25%u7528%u4F0C%u4E2F%u53D9%u673A%u6220%u4E3\";\nstrHTML+=\"0%u4E1B%u4E83%u5068%u574B%u53A6%u5709%u303B%u65C6%u95C7%u5C04%u8FBC%u6\";\nstrHTML+=\"805%u9EEB%u9EBB%u76E7%u6D78%u6DF9%uFF3B%u5310%u4F09%u4E7B%u554C%u72DD%\";\nstrHTML+=\"u62BC%u6222%u753D%u5718%u4EE7%u53AC%u5703%u3033%3A%3B%u4EEF%u4ED8P%u4E\";\nstrHTML+=\"13%u90C4%u6730%u4EB6%u5940%u673E%u53AE%uFF3E%01%u4E49%u5D91%u7EF6%u7EE\";\nstrHTML+=\"6%u5A6D%u4EE2%uFF39%u4E0F%u4EE5%u752E%u6D0D%u803F%u52D7%u78BC%u306399%\";\nstrHTML+=\"u6220%u5452%u55AD%u6B1B%u7BB4%u5336%u76BD%u7526%u6D02%uFF3C%u4E3E%u5E3\";\nstrHTML+=\"9%u677E%u673B%u967F%u757C%u4ED9%u4EF2%u5150%u6226%u76E0%u4E23%u7579%uF\";\nstrHTML+=\"F6F%u72DD%u81DC%u4E33%u4EDE%u8FF7%u6E64%u95C1%u4E27%u81DB%u5718%u76B5%\";\nstrHTML+=\"u7526%u6D0F%u30613%05%16S%5CQ%00%0C%0FL%13KP%09n%09%5D%11%0F%3C%0F%14B\";\nstrHTML+=\"%04%0D%0FR_U%5C%0Ai%u504F%u710F%u5415%u5200%u4E34%u9767%u76E1%u6B7E%uF\";\nstrHTML+=\"F3F%u6B2F%u8BAE%u4FEE%u5341%u6128%u89AD%u5FBD%u7385%u5BFD%uFF3D%u803A%\";\nstrHTML+=\"u4E27%u676D%u752F%u6D5A%u76B7%u53A9%u91FC%u612F%u30333%3E%u4E68%u975B%\";\nstrHTML+=\"u6616%u4E69%u962F%u76B7%u7BB5%u4EAE%089%u4E64%u809E%u976B%u5E41%u65F2%\";\nstrHTML+=\"u5EF3%u7BB5%u4EFEi8%u4E31%u80CE%u9736%u5E44%u65A4%u5EA4%uFF3F%u661E%u4\";\nstrHTML+=\"E1D%u56CC%u591E%u9672%u7790%u5B8F%u5EBD%u76BD%u4E30%u651C%u53D3%u7C1E%\";\nstrHTML+=\"u6475%u6EE9%u4E33%u967C%uFF35%u7504%u8454%u4EFE%u5376%u3034%u5391%u7AF\";\nstrHTML+=\"A%u3037%u59DF%u8D37%u54BC%u5C6E%u8026%u7B7A%u56EA%u543D%u6221%u5461%u7\";\nstrHTML+=\"EF0%u6273%u303B%0B%09%00%05%u5E41%uFF69%u4E62%u962C%u9079%u8FA4%u7F68%\";\nstrHTML+=\"u7EE9%u72DB%u7AAF%u53E4%u5E36%u4E6E%u63E3%u7503%u5366%u6696%u303A%u4E6\";\nstrHTML+=\"C%u4E34%u80CE%u76B5%u55AC%u5256%u3032%u3036Q%09%08%09%u5E44%02%04%u676\";\nstrHTML+=\"D%03%01%u6586%uFF6F%u4E69%u962A%u53E6%u8828%u99A3%u5F15%u546F%u543C%u4\";\nstrHTML+=\"E25%u8FA2%u306E%u4E37%u809C%u9761%u5E47%u65F4%u5EA7%u303A%u303B%3Ei%u4\";\nstrHTML+=\"E69%u9626%u6229%u54689%3C%u4E5E%u5503%1C%u546A%u4EB5%uFF23%3F%3Dm%u845\";\nstrHTML+=\"6%u4EAF%u5320%uFF39%u4EBA%u5370%uFF68%u8453S%03%03%01%uFF39%3B3%3D%u5C\";\nstrHTML+=\"6C%u53CE%uFF23%u53CB%u7AFB%13f%0D%5BGC\\/%5CP%3Dn%3C%u8D28%u539B%uFF2B%u\";\nstrHTML+=\"59DA%u8D60n%3Ah%u9F20%uFF29%u5C3E%u8025%3B3%3D%u63B3%u740D%uFF23%u5221\";\nstrHTML+=\"%u9008%u65BF%3Fo%u4E62%u962C%u4EE8%u8F9A3%3C%u4E67%u967B%u76B1%u4E0E%u\";\nstrHTML+=\"8172%u661E%u4E36%u5BCA%u53B5%u5C3F%uFF6D%u4EE5%u4EDF%u6738%u4E30%u4E1B\";\nstrHTML+=\"%u5910%u772B%u76E7%u689F%u60CA%uFF35%u5C01%u661C%u9AA4%u7725%u9E07%u9E\";\nstrHTML+=\"2C%u7A1C%u8DE9%u77CA%u5B83%u5EB3%u7850%u70F7%u76B1%u8834%u9062%uFF3A%u\";\nstrHTML+=\"4EE5%u4E88%u542F%u5550%u7773%u8BE4%u6B7D%u4F10%u5976%u76BD%u4EBF%u8F9A\";\nstrHTML+=\"%u8892%u5E3B%u4EAC%u6C8F%u7773%u94F4%u8F0D%u54BE%u6C22%u5FA0%u6CD0%u75\";\nstrHTML+=\"6D%u53D6%u8004%u769C%u4F15%u7775%uFF6F%u4EE7%u4EDA%u661C%u6C75%u5FF3%u\";\nstrHTML+=\"6CD2%u7BEE%u7058%u666B%u4F2A%u76B5%u5E01%u5B96%uFF6F%u7EF6%u5E01%u6D78\";\nstrHTML+=\"%u8FEE%u4EBD%u70D2%u9919%u6478%u4E3D%u9131%u99E5%uFF35%u5FED%u60F2%u4E\";\nstrHTML+=\"EA%u81DF%u5DC4%u7F75%u7EF6%u76B2%u764E%u6581%u6896%uFF6D%u5347%u4E3E%u\";\nstrHTML+=\"98A0%u7E71%u76B5%u53FB%u5294%u5525%u4E23%u6F2D%u51C3%uFF3C%u63A1%u7EF6\";\nstrHTML+=\"%u4E3A%u95C0%u6550%u3061%u4EB5%u4ED5%u76B1%u6227%u543C%u53ED%u4EB3%u53\";\nstrHTML+=\"AB%u53E9%uFF3A%u4E08%u5555%u8FE8%u669F%u6090%u8FF4%u5FD6%u90F1%u75F6%u\";\nstrHTML+=\"FF35%u538F%u4EE5%u79DF%u76BE%u5CA2%u4FDE%u5148%uFF39%u4F45%u8BC6%u8DDC\";\nstrHTML+=\"%u8FA4%u82D2%u5370%u4E2E%u7528%u76E0%u9657%u8408%u6058%u80CC%u773D%u52\";\nstrHTML+=\"03%u4E64%u4E1A%u951E%u5344%u53E2%u9763%u5E44%u4F7F%u590D%u62AE%u7457%u\";\nstrHTML+=\"76BD%u8E92%u5F48%uFF3C%u5347%u53FD%u5685%u4E08%u6C27%u5759%u5949%u8FFE\";\nstrHTML+=\"%u5B51%u72DB%u8068%u65D5%u4E8F%u6501%u8FE0%uFF3A%u4F75%u4EA1%u4EF5%u66\";\nstrHTML+=\"4E%u903C%u8FF4%u5E9C%u9652%u541D%u909A%u67B5%u8197%u76BD%u740D%u58C9%u\";\nstrHTML+=\"FF3C%u4E6C%u661A%u4E65%u79FF%u4E98%u53B4%u30613%3F%u9769%u5E5C%u55A9%u\";\nstrHTML+=\"6B17%u4E33%u962E%u4EBD%u8FCA%uFF68%u8281%u5328%u4E28%u752C%u76B5%u9652\";\nstrHTML+=\"%u840C%u6002%u80C9%u7768%u5209%u4E39%u4E13%u954F%u5344%u53E4%u9737%u5E\";\nstrHTML+=\"46%u4F7D%u5957%u62F9%u740D%u76B1%u8E9C%u5F15%u3037%3F_%1EU%5C%00U_%0F%\";\nstrHTML+=\"1CABT%07%3E_QK%07%u4E30%u4EA8%u5419%u53AE%u8BF6%u8B89%u6272%u4E3C%u5FB\";\nstrHTML+=\"1%u55A9%u6B15n%09E%11T%08%0F%07_%05V%0D%3B%u592A%u6541%u4E83%06V%u5CB8\";\nstrHTML+=\"%u5C08%u6B42%u4EB6%uFF3F%u4E35%u7691%u5202%04V%u5CE2%u6274%u57FE%u3035\";\nstrHTML+=\"%u538B%u6224%u4E38%u615C%u613E%u8FEF%u6804%u3066%3Ak%u752C%u4EBD%u7437\";\nstrHTML+=\"%u60C3%uFF3D%u6B42%u4EBA%u6B51%u6722%u303B3%0C%1CV%0AVV%5Dj%05%1AG%16P\";\nstrHTML+=\"%0B\";\n\n\n\nfunction XOR(strV,strPass){\n\tvar intPassLength=strPass.length;\n\tvar re=\"\";\n\tfor(var i=0;i<strV.length;i++){\n\t\tre+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n\t}\n\treturn(re);\n}\nvar STR =\n{\n\thexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\tb64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n\tchrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\t\n\tb64_hmac_md5:\n\t\tfunction(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\t\t\n\tb64_md5:\n\t\tfunction(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\t\t\n\tbinl2b64:\n\t\tfunction(binarray){\n\t\t  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i += 3)\n\t\t  {\n\t\t    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n\t\t                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n\t\t                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n\t\t    for(var j = 0; j < 4; j++)\n\t\t    {\n\t\t      if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n\t\t      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\t\t    }\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\t\n\tbinl2hex:\n\t\tfunction(binarray){\n\t\t  var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i++)\n\t\t  {\n\t\t    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n\t\t           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\n\tbinl2str:\n\t\tfunction(bin){\n\t\t  var str = \"\";\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < bin.length * 32; i += this.chrsz)\n\t\t    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n\t\t  return str;\n\t\t},\n\t\t\n\tbit_rol:\n\t\tfunction(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\t\t\n\tcore_hmac_md5:\n\t\tfunction(key, data){\n\t\t  var bkey = str2binl(key);\n\t\t  if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\t\t\n\t\t  var ipad = Array(16), opad = Array(16);\n\t\t  for(var i = 0; i < 16; i++)\n\t\t  {\n\t\t    ipad[i] = bkey[i] ^ 0x36363636;\n\t\t    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t\t  }\n\t\t\n\t\t  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n\t\t  return core_md5(opad.concat(hash), 512 + 128);\n\t\t},\n\t\t\n\tcore_md5:\n\t\tfunction(x, len){\n\t\t  /* append padding */\n\t\t  x[len >> 5] |= 0x80 << ((len) % 32);\n\t\t  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\t\t\n\t\t  var a =  1732584193;\n\t\t  var b = -271733879;\n\t\t  var c = -1732584194;\n\t\t  var d =  271733878;\n\t\t\n\t\t  for(var i = 0; i < x.length; i += 16)\n\t\t  {\n\t\t    var olda = a;\n\t\t    var oldb = b;\n\t\t    var oldc = c;\n\t\t    var oldd = d;\n\t\t\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\t\t\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\t\t\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\t\t\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\t\t\n\t\t    a = this.safe_add(a, olda);\n\t\t    b = this.safe_add(b, oldb);\n\t\t    c = this.safe_add(c, oldc);\n\t\t    d = this.safe_add(d, oldd);\n\t\t  }\n\t\t  return Array(a, b, c, d);\n\t\t},\n\t\t\n\thex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\t\n\thex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\t\n\tmd5:function(s){return(this.hex_md5(s));},\n\n\tmd5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n\tmd5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n\tmd5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n\tmd5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n\tmd5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n\tmd5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\t\n\tsafe_add:\n\t\tfunction(x, y){\n\t\t  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t\t  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t\t  return (msw << 16) | (lsw & 0xFFFF);\n\t\t},\n\t\t\n\tstr2binl:\n\t\tfunction(str){\n\t\t  var bin = Array();\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n\t\t    bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n\t\t  return bin;\n\t\t},\n\n\tstr_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n\tstr_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\nfunction performPage(strPass){\n\tif(strPass){\n\t\tdocument.cookie=\"password=\"+escape(strPass);\n\t\tdocument.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n\t\treturn(false);\n\t}\n\t//**********如果需要自动记住密码，请将下面的注释改成代码\n\t/*\n\tvar pass=document.cookie.match(/password=([^;]+)/i);\n\tif(pass){\n\t\tpass=unescape(pass[1]);\n\t\tdocument.write(XOR(unescape(strHTML),STR.md5(pass)));\n\t\treturn(false);\n\t}\n\t*/\n\t//*************\n\tstrAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n\tstrAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n\tstrAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n\tdocument.write(strAskPass);\n}\nperformPage();\n</script> ","source":"_posts/April-Fifth(pwd).md","raw":"---\ntitle: April Fifth(pwd)\ndate: 2017-04-05 19:47:01\ntags:\n- essay\n- 生活\ntoc: true\n---\nessay\n<!--more-->\n\n<script type=\"text/javascript\">\nstrHTML=\"\";\nstrHTML+=\"XX%13%0D9%0D@C%5C%0A_ZV%5DU%0D%3F%u4E65%u5927%u8F48%u9694%u845E%u4E3E%\";\nstrHTML+=\"u4E28%uFF3B%u9765%u517C%u6D5B%u7485%u7896%u53F4%u5DDD%u3066%3Ak%u6222%\";\nstrHTML+=\"u8FEA%u4E1B%u4E8A%u976F%u5E01%u76B0%u55FF%u6B1B%u4E32%u96D1%u5919%uFF3\";\nstrHTML+=\"F%u53DA%u8098%u56D2%u4E09%u968B%u594A%u6616%u5BBC%u976E%u76E0%u8C54%u5\";\nstrHTML+=\"FB4%uFF6F%u666B%u4E3C%u7752%u89AD%u4E6F%u538E%u4ED6%u7752%u5FA6%u6CB9%\";\nstrHTML+=\"u4E31%u4EA2%u3036i%u72D5%u81D3%u5415%u7770%u4E38%u96DD%u5895%uFF3E%u4E\";\nstrHTML+=\"CC%u4F38%u6517%u4E13%u4E23%u757B%u9099%u5069%u4EB3%u4E68%u6754%uFF3A%u\";\nstrHTML+=\"673A%u70DD%u8F4B%u5F8A%uFF3F%u5FD4%u4F15%u5344%u8223%u903B%u76B0%u617C\";\nstrHTML+=\"%u89F0%u303B3%u4F76%u661C%u661D%u663F%u6261%u96C4%u4EE5%uFF6F%u6279%u4\";\nstrHTML+=\"ED0%u76C3%u5254%07%u708C%u8FA4%u627C%u7757%u7773%uFF68%u8FE8%u664E%u6B\";\nstrHTML+=\"E7%u8FB0%u6024%u6263%u96C6%u76BD%u3036i3%u4EF3%u5910%u65D9%u4E39%u4E6A\";\nstrHTML+=\"%u89E4%u7155%u5E0B%u658A%u8D14%uFF35%u56D5%u4E0D%u89E5%u538E%u8D43%u8F\";\nstrHTML+=\"05%u4E3B%u73DB%u3031%u7EB7%u67AC%u4E6C%u51C9%u6273%u65A8%uFF3C%u663E%u\";\nstrHTML+=\"6636%u6CBD%u6CEA%u76BD%u4E39%u5910%u30329%09JQ%5C%07%06%07%09%18%14GP%\";\nstrHTML+=\"5D%3B%0A%5B%16%0E%5DCAT%0E%0DZ%5B%07%5C%073%u612F%u89FA%u81DF%u5D94%u6\";\nstrHTML+=\"5D2%u835C%u538C%u6532%uFF35%u976B%u5E0F%u4E9F%u6012%uFF39%u538C%u80CC%\";\nstrHTML+=\"u6619%u6C0B%u8FB8%u4E6F%u951E%u4E3E%u5914%u4EB7%u3032%3B3%u6225%u664C%\";\nstrHTML+=\"u5711%u51D9%u5E4D%u527D%u8B8B%u4E3E%u8FA2%u610D%u6728%uFF6F%u5E6F%u672\";\nstrHTML+=\"2%u81DF%u5DC6%u6C5C%u8FE9%u4E38%u89E2%u954E%u5911%uFF3F%u4F22%u661F%u7\";\nstrHTML+=\"EB2%u67AF%u5347%u661E%u53DA%u6738%u4E39%u537E%u5BFD%u7389%u4EBF%u303B%\";\nstrHTML+=\"3A9%u8879%u4E5F%u661D%u6C92%u676A%u951C%u591E%uFF39%u53D8%u664B%u5BEA%\";\nstrHTML+=\"u8A35%u89A1%u8243%u76B2%u80CE%u52FF%u5344%u4E6C%u50FC%u4EFD%u527C%u4E3\";\nstrHTML+=\"0%u6806%u5910%u772B%u306133%u7389%u5718%u76B7%u6224%u4F7F%u5FD5%u8662%\";\nstrHTML+=\"uFF6F%u4F79%u56D9%u4E0F%u81DD%u5D95%u76B1%u5E49%u7A79%u612E%u89FF%u81D\";\nstrHTML+=\"9%u5D95%u4E3E%u5117%u4EE5%u4E89%u680D%u680C%u4E3C%u515C%uFF38%u4E3C%u8\";\nstrHTML+=\"B81%u6228%u6C01%u8FEC%u4E6C%u4E38%u4F7F%u61F0%u5218%u4ED9%u574B%u60CA%\";\nstrHTML+=\"u4EF5%u4E7F%u5443%u3037%3Fi%u6220%u6E33%u6969%u76E0%u612F%u89A8%u5203%\";\nstrHTML+=\"u81D9%u5DC0%u4E3E%u5147%u4EEF%u4E8E%u76E7%u96AD%u963B%u303B%3A9%u5C04%\";\nstrHTML+=\"u8FBB%u6223%u4EDF%u53B2%u5C6C%0D%u4E1F%uFF3B%u617B%u89FC%u4E6A%u664C%u\";\nstrHTML+=\"65D1%u6CE3%u4E97%u5FA7%uFF3C%u4E3E%u8B8B%u5914%u5B87%u90CD%u5FB9%u5B5D\";\nstrHTML+=\"%u72D8%u5444%uFF35%u4E66%u5E35%u672B%u4EE5%u4ED9V%u4E18%u80CE%u621D%u5\";\nstrHTML+=\"253%u77DC%u5DC4%u3035n%3F%u5FBD%u55FF%u6B13%u5939%u76DD%u5943%u4E8A%u7\";\nstrHTML+=\"6E5%u4E33%u53D6%u8BEC%u3032%3B3%u6225%u4E63%u76CD%u90C4%u6616%u5B54%u5\";\nstrHTML+=\"366%u4E35%u4EDF%uFF3E%u864E%u7155%u8FBA%u9E84%u8BC1%u53D8%u8099%u5FBD%\";\nstrHTML+=\"u5972%u6049%uFF3D%u4F70%u6222%u5E12%u6C91%u6768%u612C%u5203%u5B55%u536\";\nstrHTML+=\"5%uFF3D%u4E34%u8FF3%u6272%u6126%u5209%u5FB1%u6082%u4F17%u3037o8%01R%u5\";\nstrHTML+=\"CE2%u76BD%u6224%u7387%u574C%u53FD%u54B9R%00%u5CB7%u76B7%u6275%u6739%u4\";\nstrHTML+=\"EA1%u4E7B%u5309%u521A%u5452%uFF3D%u4E66%u8B8C%u5C52%u50F6%u720F%u6BF4%\";\nstrHTML+=\"u6270%u8BC7%u76B1%u90C6%u6805%u8FEB%u574B%u9731%u661C%u53EE%u9031%u677\";\nstrHTML+=\"B%u3037%3Fi%u6545%u4E1C%u4E25%u7528%u4F0C%u4E2F%u53D9%u673A%u6220%u4E3\";\nstrHTML+=\"0%u4E1B%u4E83%u5068%u574B%u53A6%u5709%u303B%u65C6%u95C7%u5C04%u8FBC%u6\";\nstrHTML+=\"805%u9EEB%u9EBB%u76E7%u6D78%u6DF9%uFF3B%u5310%u4F09%u4E7B%u554C%u72DD%\";\nstrHTML+=\"u62BC%u6222%u753D%u5718%u4EE7%u53AC%u5703%u3033%3A%3B%u4EEF%u4ED8P%u4E\";\nstrHTML+=\"13%u90C4%u6730%u4EB6%u5940%u673E%u53AE%uFF3E%01%u4E49%u5D91%u7EF6%u7EE\";\nstrHTML+=\"6%u5A6D%u4EE2%uFF39%u4E0F%u4EE5%u752E%u6D0D%u803F%u52D7%u78BC%u306399%\";\nstrHTML+=\"u6220%u5452%u55AD%u6B1B%u7BB4%u5336%u76BD%u7526%u6D02%uFF3C%u4E3E%u5E3\";\nstrHTML+=\"9%u677E%u673B%u967F%u757C%u4ED9%u4EF2%u5150%u6226%u76E0%u4E23%u7579%uF\";\nstrHTML+=\"F6F%u72DD%u81DC%u4E33%u4EDE%u8FF7%u6E64%u95C1%u4E27%u81DB%u5718%u76B5%\";\nstrHTML+=\"u7526%u6D0F%u30613%05%16S%5CQ%00%0C%0FL%13KP%09n%09%5D%11%0F%3C%0F%14B\";\nstrHTML+=\"%04%0D%0FR_U%5C%0Ai%u504F%u710F%u5415%u5200%u4E34%u9767%u76E1%u6B7E%uF\";\nstrHTML+=\"F3F%u6B2F%u8BAE%u4FEE%u5341%u6128%u89AD%u5FBD%u7385%u5BFD%uFF3D%u803A%\";\nstrHTML+=\"u4E27%u676D%u752F%u6D5A%u76B7%u53A9%u91FC%u612F%u30333%3E%u4E68%u975B%\";\nstrHTML+=\"u6616%u4E69%u962F%u76B7%u7BB5%u4EAE%089%u4E64%u809E%u976B%u5E41%u65F2%\";\nstrHTML+=\"u5EF3%u7BB5%u4EFEi8%u4E31%u80CE%u9736%u5E44%u65A4%u5EA4%uFF3F%u661E%u4\";\nstrHTML+=\"E1D%u56CC%u591E%u9672%u7790%u5B8F%u5EBD%u76BD%u4E30%u651C%u53D3%u7C1E%\";\nstrHTML+=\"u6475%u6EE9%u4E33%u967C%uFF35%u7504%u8454%u4EFE%u5376%u3034%u5391%u7AF\";\nstrHTML+=\"A%u3037%u59DF%u8D37%u54BC%u5C6E%u8026%u7B7A%u56EA%u543D%u6221%u5461%u7\";\nstrHTML+=\"EF0%u6273%u303B%0B%09%00%05%u5E41%uFF69%u4E62%u962C%u9079%u8FA4%u7F68%\";\nstrHTML+=\"u7EE9%u72DB%u7AAF%u53E4%u5E36%u4E6E%u63E3%u7503%u5366%u6696%u303A%u4E6\";\nstrHTML+=\"C%u4E34%u80CE%u76B5%u55AC%u5256%u3032%u3036Q%09%08%09%u5E44%02%04%u676\";\nstrHTML+=\"D%03%01%u6586%uFF6F%u4E69%u962A%u53E6%u8828%u99A3%u5F15%u546F%u543C%u4\";\nstrHTML+=\"E25%u8FA2%u306E%u4E37%u809C%u9761%u5E47%u65F4%u5EA7%u303A%u303B%3Ei%u4\";\nstrHTML+=\"E69%u9626%u6229%u54689%3C%u4E5E%u5503%1C%u546A%u4EB5%uFF23%3F%3Dm%u845\";\nstrHTML+=\"6%u4EAF%u5320%uFF39%u4EBA%u5370%uFF68%u8453S%03%03%01%uFF39%3B3%3D%u5C\";\nstrHTML+=\"6C%u53CE%uFF23%u53CB%u7AFB%13f%0D%5BGC\\/%5CP%3Dn%3C%u8D28%u539B%uFF2B%u\";\nstrHTML+=\"59DA%u8D60n%3Ah%u9F20%uFF29%u5C3E%u8025%3B3%3D%u63B3%u740D%uFF23%u5221\";\nstrHTML+=\"%u9008%u65BF%3Fo%u4E62%u962C%u4EE8%u8F9A3%3C%u4E67%u967B%u76B1%u4E0E%u\";\nstrHTML+=\"8172%u661E%u4E36%u5BCA%u53B5%u5C3F%uFF6D%u4EE5%u4EDF%u6738%u4E30%u4E1B\";\nstrHTML+=\"%u5910%u772B%u76E7%u689F%u60CA%uFF35%u5C01%u661C%u9AA4%u7725%u9E07%u9E\";\nstrHTML+=\"2C%u7A1C%u8DE9%u77CA%u5B83%u5EB3%u7850%u70F7%u76B1%u8834%u9062%uFF3A%u\";\nstrHTML+=\"4EE5%u4E88%u542F%u5550%u7773%u8BE4%u6B7D%u4F10%u5976%u76BD%u4EBF%u8F9A\";\nstrHTML+=\"%u8892%u5E3B%u4EAC%u6C8F%u7773%u94F4%u8F0D%u54BE%u6C22%u5FA0%u6CD0%u75\";\nstrHTML+=\"6D%u53D6%u8004%u769C%u4F15%u7775%uFF6F%u4EE7%u4EDA%u661C%u6C75%u5FF3%u\";\nstrHTML+=\"6CD2%u7BEE%u7058%u666B%u4F2A%u76B5%u5E01%u5B96%uFF6F%u7EF6%u5E01%u6D78\";\nstrHTML+=\"%u8FEE%u4EBD%u70D2%u9919%u6478%u4E3D%u9131%u99E5%uFF35%u5FED%u60F2%u4E\";\nstrHTML+=\"EA%u81DF%u5DC4%u7F75%u7EF6%u76B2%u764E%u6581%u6896%uFF6D%u5347%u4E3E%u\";\nstrHTML+=\"98A0%u7E71%u76B5%u53FB%u5294%u5525%u4E23%u6F2D%u51C3%uFF3C%u63A1%u7EF6\";\nstrHTML+=\"%u4E3A%u95C0%u6550%u3061%u4EB5%u4ED5%u76B1%u6227%u543C%u53ED%u4EB3%u53\";\nstrHTML+=\"AB%u53E9%uFF3A%u4E08%u5555%u8FE8%u669F%u6090%u8FF4%u5FD6%u90F1%u75F6%u\";\nstrHTML+=\"FF35%u538F%u4EE5%u79DF%u76BE%u5CA2%u4FDE%u5148%uFF39%u4F45%u8BC6%u8DDC\";\nstrHTML+=\"%u8FA4%u82D2%u5370%u4E2E%u7528%u76E0%u9657%u8408%u6058%u80CC%u773D%u52\";\nstrHTML+=\"03%u4E64%u4E1A%u951E%u5344%u53E2%u9763%u5E44%u4F7F%u590D%u62AE%u7457%u\";\nstrHTML+=\"76BD%u8E92%u5F48%uFF3C%u5347%u53FD%u5685%u4E08%u6C27%u5759%u5949%u8FFE\";\nstrHTML+=\"%u5B51%u72DB%u8068%u65D5%u4E8F%u6501%u8FE0%uFF3A%u4F75%u4EA1%u4EF5%u66\";\nstrHTML+=\"4E%u903C%u8FF4%u5E9C%u9652%u541D%u909A%u67B5%u8197%u76BD%u740D%u58C9%u\";\nstrHTML+=\"FF3C%u4E6C%u661A%u4E65%u79FF%u4E98%u53B4%u30613%3F%u9769%u5E5C%u55A9%u\";\nstrHTML+=\"6B17%u4E33%u962E%u4EBD%u8FCA%uFF68%u8281%u5328%u4E28%u752C%u76B5%u9652\";\nstrHTML+=\"%u840C%u6002%u80C9%u7768%u5209%u4E39%u4E13%u954F%u5344%u53E4%u9737%u5E\";\nstrHTML+=\"46%u4F7D%u5957%u62F9%u740D%u76B1%u8E9C%u5F15%u3037%3F_%1EU%5C%00U_%0F%\";\nstrHTML+=\"1CABT%07%3E_QK%07%u4E30%u4EA8%u5419%u53AE%u8BF6%u8B89%u6272%u4E3C%u5FB\";\nstrHTML+=\"1%u55A9%u6B15n%09E%11T%08%0F%07_%05V%0D%3B%u592A%u6541%u4E83%06V%u5CB8\";\nstrHTML+=\"%u5C08%u6B42%u4EB6%uFF3F%u4E35%u7691%u5202%04V%u5CE2%u6274%u57FE%u3035\";\nstrHTML+=\"%u538B%u6224%u4E38%u615C%u613E%u8FEF%u6804%u3066%3Ak%u752C%u4EBD%u7437\";\nstrHTML+=\"%u60C3%uFF3D%u6B42%u4EBA%u6B51%u6722%u303B3%0C%1CV%0AVV%5Dj%05%1AG%16P\";\nstrHTML+=\"%0B\";\n\n\n\nfunction XOR(strV,strPass){\n\tvar intPassLength=strPass.length;\n\tvar re=\"\";\n\tfor(var i=0;i<strV.length;i++){\n\t\tre+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n\t}\n\treturn(re);\n}\nvar STR =\n{\n\thexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\tb64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n\tchrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\t\n\tb64_hmac_md5:\n\t\tfunction(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\t\t\n\tb64_md5:\n\t\tfunction(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\t\t\n\tbinl2b64:\n\t\tfunction(binarray){\n\t\t  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i += 3)\n\t\t  {\n\t\t    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n\t\t                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n\t\t                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n\t\t    for(var j = 0; j < 4; j++)\n\t\t    {\n\t\t      if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n\t\t      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\t\t    }\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\t\n\tbinl2hex:\n\t\tfunction(binarray){\n\t\t  var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i++)\n\t\t  {\n\t\t    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n\t\t           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\n\tbinl2str:\n\t\tfunction(bin){\n\t\t  var str = \"\";\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < bin.length * 32; i += this.chrsz)\n\t\t    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n\t\t  return str;\n\t\t},\n\t\t\n\tbit_rol:\n\t\tfunction(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\t\t\n\tcore_hmac_md5:\n\t\tfunction(key, data){\n\t\t  var bkey = str2binl(key);\n\t\t  if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\t\t\n\t\t  var ipad = Array(16), opad = Array(16);\n\t\t  for(var i = 0; i < 16; i++)\n\t\t  {\n\t\t    ipad[i] = bkey[i] ^ 0x36363636;\n\t\t    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t\t  }\n\t\t\n\t\t  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n\t\t  return core_md5(opad.concat(hash), 512 + 128);\n\t\t},\n\t\t\n\tcore_md5:\n\t\tfunction(x, len){\n\t\t  /* append padding */\n\t\t  x[len >> 5] |= 0x80 << ((len) % 32);\n\t\t  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\t\t\n\t\t  var a =  1732584193;\n\t\t  var b = -271733879;\n\t\t  var c = -1732584194;\n\t\t  var d =  271733878;\n\t\t\n\t\t  for(var i = 0; i < x.length; i += 16)\n\t\t  {\n\t\t    var olda = a;\n\t\t    var oldb = b;\n\t\t    var oldc = c;\n\t\t    var oldd = d;\n\t\t\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\t\t\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\t\t\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\t\t\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\t\t\n\t\t    a = this.safe_add(a, olda);\n\t\t    b = this.safe_add(b, oldb);\n\t\t    c = this.safe_add(c, oldc);\n\t\t    d = this.safe_add(d, oldd);\n\t\t  }\n\t\t  return Array(a, b, c, d);\n\t\t},\n\t\t\n\thex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\t\n\thex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\t\n\tmd5:function(s){return(this.hex_md5(s));},\n\n\tmd5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n\tmd5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n\tmd5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n\tmd5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n\tmd5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n\tmd5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\t\n\tsafe_add:\n\t\tfunction(x, y){\n\t\t  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t\t  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t\t  return (msw << 16) | (lsw & 0xFFFF);\n\t\t},\n\t\t\n\tstr2binl:\n\t\tfunction(str){\n\t\t  var bin = Array();\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n\t\t    bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n\t\t  return bin;\n\t\t},\n\n\tstr_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n\tstr_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\nfunction performPage(strPass){\n\tif(strPass){\n\t\tdocument.cookie=\"password=\"+escape(strPass);\n\t\tdocument.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n\t\treturn(false);\n\t}\n\t//**********如果需要自动记住密码，请将下面的注释改成代码\n\t/*\n\tvar pass=document.cookie.match(/password=([^;]+)/i);\n\tif(pass){\n\t\tpass=unescape(pass[1]);\n\t\tdocument.write(XOR(unescape(strHTML),STR.md5(pass)));\n\t\treturn(false);\n\t}\n\t*/\n\t//*************\n\tstrAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n\tstrAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n\tstrAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n\tdocument.write(strAskPass);\n}\nperformPage();\n</script> ","slug":"April-Fifth(pwd)","published":1,"updated":"2018-01-20T06:44:37.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8v1000e44wahxoth76u","content":"<p>essay<br><a id=\"more\"></a></p>\n<script type=\"text/javascript\">\nstrHTML=\"\";\nstrHTML+=\"XX%13%0D9%0D@C%5C%0A_ZV%5DU%0D%3F%u4E65%u5927%u8F48%u9694%u845E%u4E3E%\";\nstrHTML+=\"u4E28%uFF3B%u9765%u517C%u6D5B%u7485%u7896%u53F4%u5DDD%u3066%3Ak%u6222%\";\nstrHTML+=\"u8FEA%u4E1B%u4E8A%u976F%u5E01%u76B0%u55FF%u6B1B%u4E32%u96D1%u5919%uFF3\";\nstrHTML+=\"F%u53DA%u8098%u56D2%u4E09%u968B%u594A%u6616%u5BBC%u976E%u76E0%u8C54%u5\";\nstrHTML+=\"FB4%uFF6F%u666B%u4E3C%u7752%u89AD%u4E6F%u538E%u4ED6%u7752%u5FA6%u6CB9%\";\nstrHTML+=\"u4E31%u4EA2%u3036i%u72D5%u81D3%u5415%u7770%u4E38%u96DD%u5895%uFF3E%u4E\";\nstrHTML+=\"CC%u4F38%u6517%u4E13%u4E23%u757B%u9099%u5069%u4EB3%u4E68%u6754%uFF3A%u\";\nstrHTML+=\"673A%u70DD%u8F4B%u5F8A%uFF3F%u5FD4%u4F15%u5344%u8223%u903B%u76B0%u617C\";\nstrHTML+=\"%u89F0%u303B3%u4F76%u661C%u661D%u663F%u6261%u96C4%u4EE5%uFF6F%u6279%u4\";\nstrHTML+=\"ED0%u76C3%u5254%07%u708C%u8FA4%u627C%u7757%u7773%uFF68%u8FE8%u664E%u6B\";\nstrHTML+=\"E7%u8FB0%u6024%u6263%u96C6%u76BD%u3036i3%u4EF3%u5910%u65D9%u4E39%u4E6A\";\nstrHTML+=\"%u89E4%u7155%u5E0B%u658A%u8D14%uFF35%u56D5%u4E0D%u89E5%u538E%u8D43%u8F\";\nstrHTML+=\"05%u4E3B%u73DB%u3031%u7EB7%u67AC%u4E6C%u51C9%u6273%u65A8%uFF3C%u663E%u\";\nstrHTML+=\"6636%u6CBD%u6CEA%u76BD%u4E39%u5910%u30329%09JQ%5C%07%06%07%09%18%14GP%\";\nstrHTML+=\"5D%3B%0A%5B%16%0E%5DCAT%0E%0DZ%5B%07%5C%073%u612F%u89FA%u81DF%u5D94%u6\";\nstrHTML+=\"5D2%u835C%u538C%u6532%uFF35%u976B%u5E0F%u4E9F%u6012%uFF39%u538C%u80CC%\";\nstrHTML+=\"u6619%u6C0B%u8FB8%u4E6F%u951E%u4E3E%u5914%u4EB7%u3032%3B3%u6225%u664C%\";\nstrHTML+=\"u5711%u51D9%u5E4D%u527D%u8B8B%u4E3E%u8FA2%u610D%u6728%uFF6F%u5E6F%u672\";\nstrHTML+=\"2%u81DF%u5DC6%u6C5C%u8FE9%u4E38%u89E2%u954E%u5911%uFF3F%u4F22%u661F%u7\";\nstrHTML+=\"EB2%u67AF%u5347%u661E%u53DA%u6738%u4E39%u537E%u5BFD%u7389%u4EBF%u303B%\";\nstrHTML+=\"3A9%u8879%u4E5F%u661D%u6C92%u676A%u951C%u591E%uFF39%u53D8%u664B%u5BEA%\";\nstrHTML+=\"u8A35%u89A1%u8243%u76B2%u80CE%u52FF%u5344%u4E6C%u50FC%u4EFD%u527C%u4E3\";\nstrHTML+=\"0%u6806%u5910%u772B%u306133%u7389%u5718%u76B7%u6224%u4F7F%u5FD5%u8662%\";\nstrHTML+=\"uFF6F%u4F79%u56D9%u4E0F%u81DD%u5D95%u76B1%u5E49%u7A79%u612E%u89FF%u81D\";\nstrHTML+=\"9%u5D95%u4E3E%u5117%u4EE5%u4E89%u680D%u680C%u4E3C%u515C%uFF38%u4E3C%u8\";\nstrHTML+=\"B81%u6228%u6C01%u8FEC%u4E6C%u4E38%u4F7F%u61F0%u5218%u4ED9%u574B%u60CA%\";\nstrHTML+=\"u4EF5%u4E7F%u5443%u3037%3Fi%u6220%u6E33%u6969%u76E0%u612F%u89A8%u5203%\";\nstrHTML+=\"u81D9%u5DC0%u4E3E%u5147%u4EEF%u4E8E%u76E7%u96AD%u963B%u303B%3A9%u5C04%\";\nstrHTML+=\"u8FBB%u6223%u4EDF%u53B2%u5C6C%0D%u4E1F%uFF3B%u617B%u89FC%u4E6A%u664C%u\";\nstrHTML+=\"65D1%u6CE3%u4E97%u5FA7%uFF3C%u4E3E%u8B8B%u5914%u5B87%u90CD%u5FB9%u5B5D\";\nstrHTML+=\"%u72D8%u5444%uFF35%u4E66%u5E35%u672B%u4EE5%u4ED9V%u4E18%u80CE%u621D%u5\";\nstrHTML+=\"253%u77DC%u5DC4%u3035n%3F%u5FBD%u55FF%u6B13%u5939%u76DD%u5943%u4E8A%u7\";\nstrHTML+=\"6E5%u4E33%u53D6%u8BEC%u3032%3B3%u6225%u4E63%u76CD%u90C4%u6616%u5B54%u5\";\nstrHTML+=\"366%u4E35%u4EDF%uFF3E%u864E%u7155%u8FBA%u9E84%u8BC1%u53D8%u8099%u5FBD%\";\nstrHTML+=\"u5972%u6049%uFF3D%u4F70%u6222%u5E12%u6C91%u6768%u612C%u5203%u5B55%u536\";\nstrHTML+=\"5%uFF3D%u4E34%u8FF3%u6272%u6126%u5209%u5FB1%u6082%u4F17%u3037o8%01R%u5\";\nstrHTML+=\"CE2%u76BD%u6224%u7387%u574C%u53FD%u54B9R%00%u5CB7%u76B7%u6275%u6739%u4\";\nstrHTML+=\"EA1%u4E7B%u5309%u521A%u5452%uFF3D%u4E66%u8B8C%u5C52%u50F6%u720F%u6BF4%\";\nstrHTML+=\"u6270%u8BC7%u76B1%u90C6%u6805%u8FEB%u574B%u9731%u661C%u53EE%u9031%u677\";\nstrHTML+=\"B%u3037%3Fi%u6545%u4E1C%u4E25%u7528%u4F0C%u4E2F%u53D9%u673A%u6220%u4E3\";\nstrHTML+=\"0%u4E1B%u4E83%u5068%u574B%u53A6%u5709%u303B%u65C6%u95C7%u5C04%u8FBC%u6\";\nstrHTML+=\"805%u9EEB%u9EBB%u76E7%u6D78%u6DF9%uFF3B%u5310%u4F09%u4E7B%u554C%u72DD%\";\nstrHTML+=\"u62BC%u6222%u753D%u5718%u4EE7%u53AC%u5703%u3033%3A%3B%u4EEF%u4ED8P%u4E\";\nstrHTML+=\"13%u90C4%u6730%u4EB6%u5940%u673E%u53AE%uFF3E%01%u4E49%u5D91%u7EF6%u7EE\";\nstrHTML+=\"6%u5A6D%u4EE2%uFF39%u4E0F%u4EE5%u752E%u6D0D%u803F%u52D7%u78BC%u306399%\";\nstrHTML+=\"u6220%u5452%u55AD%u6B1B%u7BB4%u5336%u76BD%u7526%u6D02%uFF3C%u4E3E%u5E3\";\nstrHTML+=\"9%u677E%u673B%u967F%u757C%u4ED9%u4EF2%u5150%u6226%u76E0%u4E23%u7579%uF\";\nstrHTML+=\"F6F%u72DD%u81DC%u4E33%u4EDE%u8FF7%u6E64%u95C1%u4E27%u81DB%u5718%u76B5%\";\nstrHTML+=\"u7526%u6D0F%u30613%05%16S%5CQ%00%0C%0FL%13KP%09n%09%5D%11%0F%3C%0F%14B\";\nstrHTML+=\"%04%0D%0FR_U%5C%0Ai%u504F%u710F%u5415%u5200%u4E34%u9767%u76E1%u6B7E%uF\";\nstrHTML+=\"F3F%u6B2F%u8BAE%u4FEE%u5341%u6128%u89AD%u5FBD%u7385%u5BFD%uFF3D%u803A%\";\nstrHTML+=\"u4E27%u676D%u752F%u6D5A%u76B7%u53A9%u91FC%u612F%u30333%3E%u4E68%u975B%\";\nstrHTML+=\"u6616%u4E69%u962F%u76B7%u7BB5%u4EAE%089%u4E64%u809E%u976B%u5E41%u65F2%\";\nstrHTML+=\"u5EF3%u7BB5%u4EFEi8%u4E31%u80CE%u9736%u5E44%u65A4%u5EA4%uFF3F%u661E%u4\";\nstrHTML+=\"E1D%u56CC%u591E%u9672%u7790%u5B8F%u5EBD%u76BD%u4E30%u651C%u53D3%u7C1E%\";\nstrHTML+=\"u6475%u6EE9%u4E33%u967C%uFF35%u7504%u8454%u4EFE%u5376%u3034%u5391%u7AF\";\nstrHTML+=\"A%u3037%u59DF%u8D37%u54BC%u5C6E%u8026%u7B7A%u56EA%u543D%u6221%u5461%u7\";\nstrHTML+=\"EF0%u6273%u303B%0B%09%00%05%u5E41%uFF69%u4E62%u962C%u9079%u8FA4%u7F68%\";\nstrHTML+=\"u7EE9%u72DB%u7AAF%u53E4%u5E36%u4E6E%u63E3%u7503%u5366%u6696%u303A%u4E6\";\nstrHTML+=\"C%u4E34%u80CE%u76B5%u55AC%u5256%u3032%u3036Q%09%08%09%u5E44%02%04%u676\";\nstrHTML+=\"D%03%01%u6586%uFF6F%u4E69%u962A%u53E6%u8828%u99A3%u5F15%u546F%u543C%u4\";\nstrHTML+=\"E25%u8FA2%u306E%u4E37%u809C%u9761%u5E47%u65F4%u5EA7%u303A%u303B%3Ei%u4\";\nstrHTML+=\"E69%u9626%u6229%u54689%3C%u4E5E%u5503%1C%u546A%u4EB5%uFF23%3F%3Dm%u845\";\nstrHTML+=\"6%u4EAF%u5320%uFF39%u4EBA%u5370%uFF68%u8453S%03%03%01%uFF39%3B3%3D%u5C\";\nstrHTML+=\"6C%u53CE%uFF23%u53CB%u7AFB%13f%0D%5BGC\\/%5CP%3Dn%3C%u8D28%u539B%uFF2B%u\";\nstrHTML+=\"59DA%u8D60n%3Ah%u9F20%uFF29%u5C3E%u8025%3B3%3D%u63B3%u740D%uFF23%u5221\";\nstrHTML+=\"%u9008%u65BF%3Fo%u4E62%u962C%u4EE8%u8F9A3%3C%u4E67%u967B%u76B1%u4E0E%u\";\nstrHTML+=\"8172%u661E%u4E36%u5BCA%u53B5%u5C3F%uFF6D%u4EE5%u4EDF%u6738%u4E30%u4E1B\";\nstrHTML+=\"%u5910%u772B%u76E7%u689F%u60CA%uFF35%u5C01%u661C%u9AA4%u7725%u9E07%u9E\";\nstrHTML+=\"2C%u7A1C%u8DE9%u77CA%u5B83%u5EB3%u7850%u70F7%u76B1%u8834%u9062%uFF3A%u\";\nstrHTML+=\"4EE5%u4E88%u542F%u5550%u7773%u8BE4%u6B7D%u4F10%u5976%u76BD%u4EBF%u8F9A\";\nstrHTML+=\"%u8892%u5E3B%u4EAC%u6C8F%u7773%u94F4%u8F0D%u54BE%u6C22%u5FA0%u6CD0%u75\";\nstrHTML+=\"6D%u53D6%u8004%u769C%u4F15%u7775%uFF6F%u4EE7%u4EDA%u661C%u6C75%u5FF3%u\";\nstrHTML+=\"6CD2%u7BEE%u7058%u666B%u4F2A%u76B5%u5E01%u5B96%uFF6F%u7EF6%u5E01%u6D78\";\nstrHTML+=\"%u8FEE%u4EBD%u70D2%u9919%u6478%u4E3D%u9131%u99E5%uFF35%u5FED%u60F2%u4E\";\nstrHTML+=\"EA%u81DF%u5DC4%u7F75%u7EF6%u76B2%u764E%u6581%u6896%uFF6D%u5347%u4E3E%u\";\nstrHTML+=\"98A0%u7E71%u76B5%u53FB%u5294%u5525%u4E23%u6F2D%u51C3%uFF3C%u63A1%u7EF6\";\nstrHTML+=\"%u4E3A%u95C0%u6550%u3061%u4EB5%u4ED5%u76B1%u6227%u543C%u53ED%u4EB3%u53\";\nstrHTML+=\"AB%u53E9%uFF3A%u4E08%u5555%u8FE8%u669F%u6090%u8FF4%u5FD6%u90F1%u75F6%u\";\nstrHTML+=\"FF35%u538F%u4EE5%u79DF%u76BE%u5CA2%u4FDE%u5148%uFF39%u4F45%u8BC6%u8DDC\";\nstrHTML+=\"%u8FA4%u82D2%u5370%u4E2E%u7528%u76E0%u9657%u8408%u6058%u80CC%u773D%u52\";\nstrHTML+=\"03%u4E64%u4E1A%u951E%u5344%u53E2%u9763%u5E44%u4F7F%u590D%u62AE%u7457%u\";\nstrHTML+=\"76BD%u8E92%u5F48%uFF3C%u5347%u53FD%u5685%u4E08%u6C27%u5759%u5949%u8FFE\";\nstrHTML+=\"%u5B51%u72DB%u8068%u65D5%u4E8F%u6501%u8FE0%uFF3A%u4F75%u4EA1%u4EF5%u66\";\nstrHTML+=\"4E%u903C%u8FF4%u5E9C%u9652%u541D%u909A%u67B5%u8197%u76BD%u740D%u58C9%u\";\nstrHTML+=\"FF3C%u4E6C%u661A%u4E65%u79FF%u4E98%u53B4%u30613%3F%u9769%u5E5C%u55A9%u\";\nstrHTML+=\"6B17%u4E33%u962E%u4EBD%u8FCA%uFF68%u8281%u5328%u4E28%u752C%u76B5%u9652\";\nstrHTML+=\"%u840C%u6002%u80C9%u7768%u5209%u4E39%u4E13%u954F%u5344%u53E4%u9737%u5E\";\nstrHTML+=\"46%u4F7D%u5957%u62F9%u740D%u76B1%u8E9C%u5F15%u3037%3F_%1EU%5C%00U_%0F%\";\nstrHTML+=\"1CABT%07%3E_QK%07%u4E30%u4EA8%u5419%u53AE%u8BF6%u8B89%u6272%u4E3C%u5FB\";\nstrHTML+=\"1%u55A9%u6B15n%09E%11T%08%0F%07_%05V%0D%3B%u592A%u6541%u4E83%06V%u5CB8\";\nstrHTML+=\"%u5C08%u6B42%u4EB6%uFF3F%u4E35%u7691%u5202%04V%u5CE2%u6274%u57FE%u3035\";\nstrHTML+=\"%u538B%u6224%u4E38%u615C%u613E%u8FEF%u6804%u3066%3Ak%u752C%u4EBD%u7437\";\nstrHTML+=\"%u60C3%uFF3D%u6B42%u4EBA%u6B51%u6722%u303B3%0C%1CV%0AVV%5Dj%05%1AG%16P\";\nstrHTML+=\"%0B\";\n\n\n\nfunction XOR(strV,strPass){\n    var intPassLength=strPass.length;\n    var re=\"\";\n    for(var i=0;i<strV.length;i++){\n        re+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n    }\n    return(re);\n}\nvar STR =\n{\n    hexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n    b64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n    chrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n    b64_hmac_md5:\n        function(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\n    b64_md5:\n        function(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\n    binl2b64:\n        function(binarray){\n          var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i += 3)\n          {\n            var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n                        | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n                        |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n            for(var j = 0; j < 4; j++)\n            {\n              if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n              else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n            }\n          }\n          return str;\n        },\n\n    binl2hex:\n        function(binarray){\n          var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i++)\n          {\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n                   hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n          }\n          return str;\n        },\n\n    binl2str:\n        function(bin){\n          var str = \"\";\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < bin.length * 32; i += this.chrsz)\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n          return str;\n        },\n\n    bit_rol:\n        function(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\n    core_hmac_md5:\n        function(key, data){\n          var bkey = str2binl(key);\n          if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\n          var ipad = Array(16), opad = Array(16);\n          for(var i = 0; i < 16; i++)\n          {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n          }\n\n          var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n          return core_md5(opad.concat(hash), 512 + 128);\n        },\n\n    core_md5:\n        function(x, len){\n          /* append padding */\n          x[len >> 5] |= 0x80 << ((len) % 32);\n          x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n          var a =  1732584193;\n          var b = -271733879;\n          var c = -1732584194;\n          var d =  271733878;\n\n          for(var i = 0; i < x.length; i += 16)\n          {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n            d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n            d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n            d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n            d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n            c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n            d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n            d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n            d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n            d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n          }\n          return Array(a, b, c, d);\n        },\n\n    hex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\n    hex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\n    md5:function(s){return(this.hex_md5(s));},\n\n    md5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n    md5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n    md5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n    md5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n    md5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n    md5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\n    safe_add:\n        function(x, y){\n          var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n          var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n          return (msw << 16) | (lsw & 0xFFFF);\n        },\n\n    str2binl:\n        function(str){\n          var bin = Array();\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n            bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n          return bin;\n        },\n\n    str_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n    str_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\nfunction performPage(strPass){\n    if(strPass){\n        document.cookie=\"password=\"+escape(strPass);\n        document.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n        return(false);\n    }\n    //**********如果需要自动记住密码，请将下面的注释改成代码\n    /*\n    var pass=document.cookie.match(/password=([^;]+)/i);\n    if(pass){\n        pass=unescape(pass[1]);\n        document.write(XOR(unescape(strHTML),STR.md5(pass)));\n        return(false);\n    }\n    */\n    //*************\n    strAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n    strAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n    strAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n    document.write(strAskPass);\n}\nperformPage();\n</script> ","excerpt":"<p>essay<br>","more":"</p>\n<script type=\"text/javascript\">\nstrHTML=\"\";\nstrHTML+=\"XX%13%0D9%0D@C%5C%0A_ZV%5DU%0D%3F%u4E65%u5927%u8F48%u9694%u845E%u4E3E%\";\nstrHTML+=\"u4E28%uFF3B%u9765%u517C%u6D5B%u7485%u7896%u53F4%u5DDD%u3066%3Ak%u6222%\";\nstrHTML+=\"u8FEA%u4E1B%u4E8A%u976F%u5E01%u76B0%u55FF%u6B1B%u4E32%u96D1%u5919%uFF3\";\nstrHTML+=\"F%u53DA%u8098%u56D2%u4E09%u968B%u594A%u6616%u5BBC%u976E%u76E0%u8C54%u5\";\nstrHTML+=\"FB4%uFF6F%u666B%u4E3C%u7752%u89AD%u4E6F%u538E%u4ED6%u7752%u5FA6%u6CB9%\";\nstrHTML+=\"u4E31%u4EA2%u3036i%u72D5%u81D3%u5415%u7770%u4E38%u96DD%u5895%uFF3E%u4E\";\nstrHTML+=\"CC%u4F38%u6517%u4E13%u4E23%u757B%u9099%u5069%u4EB3%u4E68%u6754%uFF3A%u\";\nstrHTML+=\"673A%u70DD%u8F4B%u5F8A%uFF3F%u5FD4%u4F15%u5344%u8223%u903B%u76B0%u617C\";\nstrHTML+=\"%u89F0%u303B3%u4F76%u661C%u661D%u663F%u6261%u96C4%u4EE5%uFF6F%u6279%u4\";\nstrHTML+=\"ED0%u76C3%u5254%07%u708C%u8FA4%u627C%u7757%u7773%uFF68%u8FE8%u664E%u6B\";\nstrHTML+=\"E7%u8FB0%u6024%u6263%u96C6%u76BD%u3036i3%u4EF3%u5910%u65D9%u4E39%u4E6A\";\nstrHTML+=\"%u89E4%u7155%u5E0B%u658A%u8D14%uFF35%u56D5%u4E0D%u89E5%u538E%u8D43%u8F\";\nstrHTML+=\"05%u4E3B%u73DB%u3031%u7EB7%u67AC%u4E6C%u51C9%u6273%u65A8%uFF3C%u663E%u\";\nstrHTML+=\"6636%u6CBD%u6CEA%u76BD%u4E39%u5910%u30329%09JQ%5C%07%06%07%09%18%14GP%\";\nstrHTML+=\"5D%3B%0A%5B%16%0E%5DCAT%0E%0DZ%5B%07%5C%073%u612F%u89FA%u81DF%u5D94%u6\";\nstrHTML+=\"5D2%u835C%u538C%u6532%uFF35%u976B%u5E0F%u4E9F%u6012%uFF39%u538C%u80CC%\";\nstrHTML+=\"u6619%u6C0B%u8FB8%u4E6F%u951E%u4E3E%u5914%u4EB7%u3032%3B3%u6225%u664C%\";\nstrHTML+=\"u5711%u51D9%u5E4D%u527D%u8B8B%u4E3E%u8FA2%u610D%u6728%uFF6F%u5E6F%u672\";\nstrHTML+=\"2%u81DF%u5DC6%u6C5C%u8FE9%u4E38%u89E2%u954E%u5911%uFF3F%u4F22%u661F%u7\";\nstrHTML+=\"EB2%u67AF%u5347%u661E%u53DA%u6738%u4E39%u537E%u5BFD%u7389%u4EBF%u303B%\";\nstrHTML+=\"3A9%u8879%u4E5F%u661D%u6C92%u676A%u951C%u591E%uFF39%u53D8%u664B%u5BEA%\";\nstrHTML+=\"u8A35%u89A1%u8243%u76B2%u80CE%u52FF%u5344%u4E6C%u50FC%u4EFD%u527C%u4E3\";\nstrHTML+=\"0%u6806%u5910%u772B%u306133%u7389%u5718%u76B7%u6224%u4F7F%u5FD5%u8662%\";\nstrHTML+=\"uFF6F%u4F79%u56D9%u4E0F%u81DD%u5D95%u76B1%u5E49%u7A79%u612E%u89FF%u81D\";\nstrHTML+=\"9%u5D95%u4E3E%u5117%u4EE5%u4E89%u680D%u680C%u4E3C%u515C%uFF38%u4E3C%u8\";\nstrHTML+=\"B81%u6228%u6C01%u8FEC%u4E6C%u4E38%u4F7F%u61F0%u5218%u4ED9%u574B%u60CA%\";\nstrHTML+=\"u4EF5%u4E7F%u5443%u3037%3Fi%u6220%u6E33%u6969%u76E0%u612F%u89A8%u5203%\";\nstrHTML+=\"u81D9%u5DC0%u4E3E%u5147%u4EEF%u4E8E%u76E7%u96AD%u963B%u303B%3A9%u5C04%\";\nstrHTML+=\"u8FBB%u6223%u4EDF%u53B2%u5C6C%0D%u4E1F%uFF3B%u617B%u89FC%u4E6A%u664C%u\";\nstrHTML+=\"65D1%u6CE3%u4E97%u5FA7%uFF3C%u4E3E%u8B8B%u5914%u5B87%u90CD%u5FB9%u5B5D\";\nstrHTML+=\"%u72D8%u5444%uFF35%u4E66%u5E35%u672B%u4EE5%u4ED9V%u4E18%u80CE%u621D%u5\";\nstrHTML+=\"253%u77DC%u5DC4%u3035n%3F%u5FBD%u55FF%u6B13%u5939%u76DD%u5943%u4E8A%u7\";\nstrHTML+=\"6E5%u4E33%u53D6%u8BEC%u3032%3B3%u6225%u4E63%u76CD%u90C4%u6616%u5B54%u5\";\nstrHTML+=\"366%u4E35%u4EDF%uFF3E%u864E%u7155%u8FBA%u9E84%u8BC1%u53D8%u8099%u5FBD%\";\nstrHTML+=\"u5972%u6049%uFF3D%u4F70%u6222%u5E12%u6C91%u6768%u612C%u5203%u5B55%u536\";\nstrHTML+=\"5%uFF3D%u4E34%u8FF3%u6272%u6126%u5209%u5FB1%u6082%u4F17%u3037o8%01R%u5\";\nstrHTML+=\"CE2%u76BD%u6224%u7387%u574C%u53FD%u54B9R%00%u5CB7%u76B7%u6275%u6739%u4\";\nstrHTML+=\"EA1%u4E7B%u5309%u521A%u5452%uFF3D%u4E66%u8B8C%u5C52%u50F6%u720F%u6BF4%\";\nstrHTML+=\"u6270%u8BC7%u76B1%u90C6%u6805%u8FEB%u574B%u9731%u661C%u53EE%u9031%u677\";\nstrHTML+=\"B%u3037%3Fi%u6545%u4E1C%u4E25%u7528%u4F0C%u4E2F%u53D9%u673A%u6220%u4E3\";\nstrHTML+=\"0%u4E1B%u4E83%u5068%u574B%u53A6%u5709%u303B%u65C6%u95C7%u5C04%u8FBC%u6\";\nstrHTML+=\"805%u9EEB%u9EBB%u76E7%u6D78%u6DF9%uFF3B%u5310%u4F09%u4E7B%u554C%u72DD%\";\nstrHTML+=\"u62BC%u6222%u753D%u5718%u4EE7%u53AC%u5703%u3033%3A%3B%u4EEF%u4ED8P%u4E\";\nstrHTML+=\"13%u90C4%u6730%u4EB6%u5940%u673E%u53AE%uFF3E%01%u4E49%u5D91%u7EF6%u7EE\";\nstrHTML+=\"6%u5A6D%u4EE2%uFF39%u4E0F%u4EE5%u752E%u6D0D%u803F%u52D7%u78BC%u306399%\";\nstrHTML+=\"u6220%u5452%u55AD%u6B1B%u7BB4%u5336%u76BD%u7526%u6D02%uFF3C%u4E3E%u5E3\";\nstrHTML+=\"9%u677E%u673B%u967F%u757C%u4ED9%u4EF2%u5150%u6226%u76E0%u4E23%u7579%uF\";\nstrHTML+=\"F6F%u72DD%u81DC%u4E33%u4EDE%u8FF7%u6E64%u95C1%u4E27%u81DB%u5718%u76B5%\";\nstrHTML+=\"u7526%u6D0F%u30613%05%16S%5CQ%00%0C%0FL%13KP%09n%09%5D%11%0F%3C%0F%14B\";\nstrHTML+=\"%04%0D%0FR_U%5C%0Ai%u504F%u710F%u5415%u5200%u4E34%u9767%u76E1%u6B7E%uF\";\nstrHTML+=\"F3F%u6B2F%u8BAE%u4FEE%u5341%u6128%u89AD%u5FBD%u7385%u5BFD%uFF3D%u803A%\";\nstrHTML+=\"u4E27%u676D%u752F%u6D5A%u76B7%u53A9%u91FC%u612F%u30333%3E%u4E68%u975B%\";\nstrHTML+=\"u6616%u4E69%u962F%u76B7%u7BB5%u4EAE%089%u4E64%u809E%u976B%u5E41%u65F2%\";\nstrHTML+=\"u5EF3%u7BB5%u4EFEi8%u4E31%u80CE%u9736%u5E44%u65A4%u5EA4%uFF3F%u661E%u4\";\nstrHTML+=\"E1D%u56CC%u591E%u9672%u7790%u5B8F%u5EBD%u76BD%u4E30%u651C%u53D3%u7C1E%\";\nstrHTML+=\"u6475%u6EE9%u4E33%u967C%uFF35%u7504%u8454%u4EFE%u5376%u3034%u5391%u7AF\";\nstrHTML+=\"A%u3037%u59DF%u8D37%u54BC%u5C6E%u8026%u7B7A%u56EA%u543D%u6221%u5461%u7\";\nstrHTML+=\"EF0%u6273%u303B%0B%09%00%05%u5E41%uFF69%u4E62%u962C%u9079%u8FA4%u7F68%\";\nstrHTML+=\"u7EE9%u72DB%u7AAF%u53E4%u5E36%u4E6E%u63E3%u7503%u5366%u6696%u303A%u4E6\";\nstrHTML+=\"C%u4E34%u80CE%u76B5%u55AC%u5256%u3032%u3036Q%09%08%09%u5E44%02%04%u676\";\nstrHTML+=\"D%03%01%u6586%uFF6F%u4E69%u962A%u53E6%u8828%u99A3%u5F15%u546F%u543C%u4\";\nstrHTML+=\"E25%u8FA2%u306E%u4E37%u809C%u9761%u5E47%u65F4%u5EA7%u303A%u303B%3Ei%u4\";\nstrHTML+=\"E69%u9626%u6229%u54689%3C%u4E5E%u5503%1C%u546A%u4EB5%uFF23%3F%3Dm%u845\";\nstrHTML+=\"6%u4EAF%u5320%uFF39%u4EBA%u5370%uFF68%u8453S%03%03%01%uFF39%3B3%3D%u5C\";\nstrHTML+=\"6C%u53CE%uFF23%u53CB%u7AFB%13f%0D%5BGC\\/%5CP%3Dn%3C%u8D28%u539B%uFF2B%u\";\nstrHTML+=\"59DA%u8D60n%3Ah%u9F20%uFF29%u5C3E%u8025%3B3%3D%u63B3%u740D%uFF23%u5221\";\nstrHTML+=\"%u9008%u65BF%3Fo%u4E62%u962C%u4EE8%u8F9A3%3C%u4E67%u967B%u76B1%u4E0E%u\";\nstrHTML+=\"8172%u661E%u4E36%u5BCA%u53B5%u5C3F%uFF6D%u4EE5%u4EDF%u6738%u4E30%u4E1B\";\nstrHTML+=\"%u5910%u772B%u76E7%u689F%u60CA%uFF35%u5C01%u661C%u9AA4%u7725%u9E07%u9E\";\nstrHTML+=\"2C%u7A1C%u8DE9%u77CA%u5B83%u5EB3%u7850%u70F7%u76B1%u8834%u9062%uFF3A%u\";\nstrHTML+=\"4EE5%u4E88%u542F%u5550%u7773%u8BE4%u6B7D%u4F10%u5976%u76BD%u4EBF%u8F9A\";\nstrHTML+=\"%u8892%u5E3B%u4EAC%u6C8F%u7773%u94F4%u8F0D%u54BE%u6C22%u5FA0%u6CD0%u75\";\nstrHTML+=\"6D%u53D6%u8004%u769C%u4F15%u7775%uFF6F%u4EE7%u4EDA%u661C%u6C75%u5FF3%u\";\nstrHTML+=\"6CD2%u7BEE%u7058%u666B%u4F2A%u76B5%u5E01%u5B96%uFF6F%u7EF6%u5E01%u6D78\";\nstrHTML+=\"%u8FEE%u4EBD%u70D2%u9919%u6478%u4E3D%u9131%u99E5%uFF35%u5FED%u60F2%u4E\";\nstrHTML+=\"EA%u81DF%u5DC4%u7F75%u7EF6%u76B2%u764E%u6581%u6896%uFF6D%u5347%u4E3E%u\";\nstrHTML+=\"98A0%u7E71%u76B5%u53FB%u5294%u5525%u4E23%u6F2D%u51C3%uFF3C%u63A1%u7EF6\";\nstrHTML+=\"%u4E3A%u95C0%u6550%u3061%u4EB5%u4ED5%u76B1%u6227%u543C%u53ED%u4EB3%u53\";\nstrHTML+=\"AB%u53E9%uFF3A%u4E08%u5555%u8FE8%u669F%u6090%u8FF4%u5FD6%u90F1%u75F6%u\";\nstrHTML+=\"FF35%u538F%u4EE5%u79DF%u76BE%u5CA2%u4FDE%u5148%uFF39%u4F45%u8BC6%u8DDC\";\nstrHTML+=\"%u8FA4%u82D2%u5370%u4E2E%u7528%u76E0%u9657%u8408%u6058%u80CC%u773D%u52\";\nstrHTML+=\"03%u4E64%u4E1A%u951E%u5344%u53E2%u9763%u5E44%u4F7F%u590D%u62AE%u7457%u\";\nstrHTML+=\"76BD%u8E92%u5F48%uFF3C%u5347%u53FD%u5685%u4E08%u6C27%u5759%u5949%u8FFE\";\nstrHTML+=\"%u5B51%u72DB%u8068%u65D5%u4E8F%u6501%u8FE0%uFF3A%u4F75%u4EA1%u4EF5%u66\";\nstrHTML+=\"4E%u903C%u8FF4%u5E9C%u9652%u541D%u909A%u67B5%u8197%u76BD%u740D%u58C9%u\";\nstrHTML+=\"FF3C%u4E6C%u661A%u4E65%u79FF%u4E98%u53B4%u30613%3F%u9769%u5E5C%u55A9%u\";\nstrHTML+=\"6B17%u4E33%u962E%u4EBD%u8FCA%uFF68%u8281%u5328%u4E28%u752C%u76B5%u9652\";\nstrHTML+=\"%u840C%u6002%u80C9%u7768%u5209%u4E39%u4E13%u954F%u5344%u53E4%u9737%u5E\";\nstrHTML+=\"46%u4F7D%u5957%u62F9%u740D%u76B1%u8E9C%u5F15%u3037%3F_%1EU%5C%00U_%0F%\";\nstrHTML+=\"1CABT%07%3E_QK%07%u4E30%u4EA8%u5419%u53AE%u8BF6%u8B89%u6272%u4E3C%u5FB\";\nstrHTML+=\"1%u55A9%u6B15n%09E%11T%08%0F%07_%05V%0D%3B%u592A%u6541%u4E83%06V%u5CB8\";\nstrHTML+=\"%u5C08%u6B42%u4EB6%uFF3F%u4E35%u7691%u5202%04V%u5CE2%u6274%u57FE%u3035\";\nstrHTML+=\"%u538B%u6224%u4E38%u615C%u613E%u8FEF%u6804%u3066%3Ak%u752C%u4EBD%u7437\";\nstrHTML+=\"%u60C3%uFF3D%u6B42%u4EBA%u6B51%u6722%u303B3%0C%1CV%0AVV%5Dj%05%1AG%16P\";\nstrHTML+=\"%0B\";\n\n\n\nfunction XOR(strV,strPass){\n    var intPassLength=strPass.length;\n    var re=\"\";\n    for(var i=0;i<strV.length;i++){\n        re+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n    }\n    return(re);\n}\nvar STR =\n{\n    hexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n    b64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n    chrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n    b64_hmac_md5:\n        function(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\n    b64_md5:\n        function(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\n    binl2b64:\n        function(binarray){\n          var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i += 3)\n          {\n            var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n                        | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n                        |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n            for(var j = 0; j < 4; j++)\n            {\n              if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n              else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n            }\n          }\n          return str;\n        },\n\n    binl2hex:\n        function(binarray){\n          var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i++)\n          {\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n                   hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n          }\n          return str;\n        },\n\n    binl2str:\n        function(bin){\n          var str = \"\";\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < bin.length * 32; i += this.chrsz)\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n          return str;\n        },\n\n    bit_rol:\n        function(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\n    core_hmac_md5:\n        function(key, data){\n          var bkey = str2binl(key);\n          if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\n          var ipad = Array(16), opad = Array(16);\n          for(var i = 0; i < 16; i++)\n          {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n          }\n\n          var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n          return core_md5(opad.concat(hash), 512 + 128);\n        },\n\n    core_md5:\n        function(x, len){\n          /* append padding */\n          x[len >> 5] |= 0x80 << ((len) % 32);\n          x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n          var a =  1732584193;\n          var b = -271733879;\n          var c = -1732584194;\n          var d =  271733878;\n\n          for(var i = 0; i < x.length; i += 16)\n          {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n            d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n            d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n            d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n            d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n            c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n            d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n            d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n            d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n            d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n          }\n          return Array(a, b, c, d);\n        },\n\n    hex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\n    hex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\n    md5:function(s){return(this.hex_md5(s));},\n\n    md5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n    md5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n    md5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n    md5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n    md5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n    md5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\n    safe_add:\n        function(x, y){\n          var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n          var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n          return (msw << 16) | (lsw & 0xFFFF);\n        },\n\n    str2binl:\n        function(str){\n          var bin = Array();\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n            bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n          return bin;\n        },\n\n    str_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n    str_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\nfunction performPage(strPass){\n    if(strPass){\n        document.cookie=\"password=\"+escape(strPass);\n        document.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n        return(false);\n    }\n    //**********如果需要自动记住密码，请将下面的注释改成代码\n    /*\n    var pass=document.cookie.match(/password=([^;]+)/i);\n    if(pass){\n        pass=unescape(pass[1]);\n        document.write(XOR(unescape(strHTML),STR.md5(pass)));\n        return(false);\n    }\n    */\n    //*************\n    strAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n    strAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n    strAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n    document.write(strAskPass);\n}\nperformPage();\n</script>"},{"title":"JDBC学习笔记2","date":"2017-04-12T10:00:09.000Z","toc":true,"_content":"主要讲连接池\n<!--more-->\n# 数据库连接池\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fek4hjzmcdj30iz0algmn.jpg)\n<hr>\n# dbcp连接池\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fek4hl9161j30fi09mgnn.jpg)\n\tdbcp连接池用的是装饰者模式\n### 对象增强的方法\n\t1.继承\n\t被增强的对象固定\n\t增强的内容固定\n\t2.装饰者模式\n\t被增强的对象可以切换\n\t增强的内容固定\n\t3.动态代理\n\t被增强的对象可以切换\n\t增强的内容也可以切换\n<hr>\n# c3p0连接池\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fek4hlyquej30fz08xmyr.jpg)\n\tc3p0连接池用的是动态代理\n### c3p0配置文件的使用\n\t配置文件的要求:\n\t\t文件名称:必须叫c3p0-config.xml\n\t\t文件位置:必须在src下\n\t配置文件细节就不写了，查看day18.\n<hr>\n# Tomcat配置JNDI资源\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fek4hmgxffj30io01dt8p.jpg)\n### 在tomcat的\\conf\\Catalina\\localhost下面新建-->项目名.xml内容如下\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fek4hmzgdxj30dw088gmo.jpg)\n### 获取JNDI资源\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fek4hjea3rj30ju08o75l.jpg)\n<hr>\n# ThreadLocal\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fek5n3ismfj30dk02jaaa.jpg)\n### 底层实现\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fek5n3wc37j30ep0a4ab5.jpg)\n\tThreadLocal通常用在一个类的成员上。\n\t多个线程访问它时，每个线程都有自己的副本，互不干扰。\n\tSpring中把Connection放到了ThreadLocal中!\n","source":"_posts/JDBC学习笔记2.md","raw":"---\ntitle: JDBC学习笔记2\ndate: 2017-04-12 18:00:09\ntags:\n- Web\ntoc: true\n---\n主要讲连接池\n<!--more-->\n# 数据库连接池\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fek4hjzmcdj30iz0algmn.jpg)\n<hr>\n# dbcp连接池\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fek4hl9161j30fi09mgnn.jpg)\n\tdbcp连接池用的是装饰者模式\n### 对象增强的方法\n\t1.继承\n\t被增强的对象固定\n\t增强的内容固定\n\t2.装饰者模式\n\t被增强的对象可以切换\n\t增强的内容固定\n\t3.动态代理\n\t被增强的对象可以切换\n\t增强的内容也可以切换\n<hr>\n# c3p0连接池\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fek4hlyquej30fz08xmyr.jpg)\n\tc3p0连接池用的是动态代理\n### c3p0配置文件的使用\n\t配置文件的要求:\n\t\t文件名称:必须叫c3p0-config.xml\n\t\t文件位置:必须在src下\n\t配置文件细节就不写了，查看day18.\n<hr>\n# Tomcat配置JNDI资源\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fek4hmgxffj30io01dt8p.jpg)\n### 在tomcat的\\conf\\Catalina\\localhost下面新建-->项目名.xml内容如下\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fek4hmzgdxj30dw088gmo.jpg)\n### 获取JNDI资源\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fek4hjea3rj30ju08o75l.jpg)\n<hr>\n# ThreadLocal\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fek5n3ismfj30dk02jaaa.jpg)\n### 底层实现\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fek5n3wc37j30ep0a4ab5.jpg)\n\tThreadLocal通常用在一个类的成员上。\n\t多个线程访问它时，每个线程都有自己的副本，互不干扰。\n\tSpring中把Connection放到了ThreadLocal中!\n","slug":"JDBC学习笔记2","published":1,"updated":"2018-01-20T06:44:37.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8v3000g44wazodvkpau","content":"<p>主要讲连接池<br><a id=\"more\"></a></p>\n<h1 id=\"数据库连接池\"><a href=\"#数据库连接池\" class=\"headerlink\" title=\"数据库连接池\"></a>数据库连接池</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fek4hjzmcdj30iz0algmn.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"dbcp连接池\"><a href=\"#dbcp连接池\" class=\"headerlink\" title=\"dbcp连接池\"></a>dbcp连接池</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fek4hl9161j30fi09mgnn.jpg\" alt=\"\"><br>    dbcp连接池用的是装饰者模式</p>\n<h3 id=\"对象增强的方法\"><a href=\"#对象增强的方法\" class=\"headerlink\" title=\"对象增强的方法\"></a>对象增强的方法</h3><pre><code>1.继承\n被增强的对象固定\n增强的内容固定\n2.装饰者模式\n被增强的对象可以切换\n增强的内容固定\n3.动态代理\n被增强的对象可以切换\n增强的内容也可以切换\n</code></pre><p><hr></p>\n<h1 id=\"c3p0连接池\"><a href=\"#c3p0连接池\" class=\"headerlink\" title=\"c3p0连接池\"></a>c3p0连接池</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fek4hlyquej30fz08xmyr.jpg\" alt=\"\"><br>    c3p0连接池用的是动态代理</p>\n<h3 id=\"c3p0配置文件的使用\"><a href=\"#c3p0配置文件的使用\" class=\"headerlink\" title=\"c3p0配置文件的使用\"></a>c3p0配置文件的使用</h3><pre><code>配置文件的要求:\n    文件名称:必须叫c3p0-config.xml\n    文件位置:必须在src下\n配置文件细节就不写了，查看day18.\n</code></pre><p><hr></p>\n<h1 id=\"Tomcat配置JNDI资源\"><a href=\"#Tomcat配置JNDI资源\" class=\"headerlink\" title=\"Tomcat配置JNDI资源\"></a>Tomcat配置JNDI资源</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fek4hmgxffj30io01dt8p.jpg\" alt=\"\"></p>\n<h3 id=\"在tomcat的-conf-Catalina-localhost下面新建–-gt-项目名-xml内容如下\"><a href=\"#在tomcat的-conf-Catalina-localhost下面新建–-gt-项目名-xml内容如下\" class=\"headerlink\" title=\"在tomcat的\\conf\\Catalina\\localhost下面新建–&gt;项目名.xml内容如下\"></a>在tomcat的\\conf\\Catalina\\localhost下面新建–&gt;项目名.xml内容如下</h3><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fek4hmzgdxj30dw088gmo.jpg\" alt=\"\"></p>\n<h3 id=\"获取JNDI资源\"><a href=\"#获取JNDI资源\" class=\"headerlink\" title=\"获取JNDI资源\"></a>获取JNDI资源</h3><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fek4hjea3rj30ju08o75l.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"ThreadLocal\"><a href=\"#ThreadLocal\" class=\"headerlink\" title=\"ThreadLocal\"></a>ThreadLocal</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fek5n3ismfj30dk02jaaa.jpg\" alt=\"\"></p>\n<h3 id=\"底层实现\"><a href=\"#底层实现\" class=\"headerlink\" title=\"底层实现\"></a>底层实现</h3><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fek5n3wc37j30ep0a4ab5.jpg\" alt=\"\"><br>    ThreadLocal通常用在一个类的成员上。<br>    多个线程访问它时，每个线程都有自己的副本，互不干扰。<br>    Spring中把Connection放到了ThreadLocal中!</p>\n","excerpt":"<p>主要讲连接池<br>","more":"</p>\n<h1 id=\"数据库连接池\"><a href=\"#数据库连接池\" class=\"headerlink\" title=\"数据库连接池\"></a>数据库连接池</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fek4hjzmcdj30iz0algmn.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"dbcp连接池\"><a href=\"#dbcp连接池\" class=\"headerlink\" title=\"dbcp连接池\"></a>dbcp连接池</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fek4hl9161j30fi09mgnn.jpg\" alt=\"\"><br>    dbcp连接池用的是装饰者模式</p>\n<h3 id=\"对象增强的方法\"><a href=\"#对象增强的方法\" class=\"headerlink\" title=\"对象增强的方法\"></a>对象增强的方法</h3><pre><code>1.继承\n被增强的对象固定\n增强的内容固定\n2.装饰者模式\n被增强的对象可以切换\n增强的内容固定\n3.动态代理\n被增强的对象可以切换\n增强的内容也可以切换\n</code></pre><p><hr></p>\n<h1 id=\"c3p0连接池\"><a href=\"#c3p0连接池\" class=\"headerlink\" title=\"c3p0连接池\"></a>c3p0连接池</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fek4hlyquej30fz08xmyr.jpg\" alt=\"\"><br>    c3p0连接池用的是动态代理</p>\n<h3 id=\"c3p0配置文件的使用\"><a href=\"#c3p0配置文件的使用\" class=\"headerlink\" title=\"c3p0配置文件的使用\"></a>c3p0配置文件的使用</h3><pre><code>配置文件的要求:\n    文件名称:必须叫c3p0-config.xml\n    文件位置:必须在src下\n配置文件细节就不写了，查看day18.\n</code></pre><p><hr></p>\n<h1 id=\"Tomcat配置JNDI资源\"><a href=\"#Tomcat配置JNDI资源\" class=\"headerlink\" title=\"Tomcat配置JNDI资源\"></a>Tomcat配置JNDI资源</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fek4hmgxffj30io01dt8p.jpg\" alt=\"\"></p>\n<h3 id=\"在tomcat的-conf-Catalina-localhost下面新建–-gt-项目名-xml内容如下\"><a href=\"#在tomcat的-conf-Catalina-localhost下面新建–-gt-项目名-xml内容如下\" class=\"headerlink\" title=\"在tomcat的\\conf\\Catalina\\localhost下面新建–&gt;项目名.xml内容如下\"></a>在tomcat的\\conf\\Catalina\\localhost下面新建–&gt;项目名.xml内容如下</h3><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fek4hmzgdxj30dw088gmo.jpg\" alt=\"\"></p>\n<h3 id=\"获取JNDI资源\"><a href=\"#获取JNDI资源\" class=\"headerlink\" title=\"获取JNDI资源\"></a>获取JNDI资源</h3><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fek4hjea3rj30ju08o75l.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"ThreadLocal\"><a href=\"#ThreadLocal\" class=\"headerlink\" title=\"ThreadLocal\"></a>ThreadLocal</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fek5n3ismfj30dk02jaaa.jpg\" alt=\"\"></p>\n<h3 id=\"底层实现\"><a href=\"#底层实现\" class=\"headerlink\" title=\"底层实现\"></a>底层实现</h3><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fek5n3wc37j30ep0a4ab5.jpg\" alt=\"\"><br>    ThreadLocal通常用在一个类的成员上。<br>    多个线程访问它时，每个线程都有自己的副本，互不干扰。<br>    Spring中把Connection放到了ThreadLocal中!</p>"},{"title":"AJAX","date":"2017-04-24T09:49:20.000Z","toc":true,"_content":"AJAX的基本概念和案例\n<!--more-->\n# AJAX简介\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo4fsfkj30sl0c8wii.jpg)\n# AJAX四步操作\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fgeqo5r9c5j30i10ezn14.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fgeqo6juxnj30ou0bsq7m.jpg)\n# 省市联动\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo70sr8j30pe0c8jvg.jpg)\n### ProvinceServlet\n```\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\tresponse.setContentType(\"text/html;charset=utf-8\");\n\t\t//创建解析器对象\n\t\tSAXReader reader = new SAXReader();\n\t\tInputStream inputStream = this.getClass().getResourceAsStream(\"/china.xml\");\n\t\ttry {\n\t\t\t//得到Document对象\n\t\t\tDocument document = reader.read(inputStream);\n\t\t\t\n\t\t\t//查询所有的province的name元素，得到属性对象，循环遍历，连接成1个字符串发送给客户端\n\t\t\tList<Attribute> arrList = document.selectNodes(\"//province/@name\");\n\t\t\tStringBuilder sBuilder = new StringBuilder();\n\t\t\tfor(int i = 0; i < arrList.size(); i++) {\n\t\t\t\tsBuilder.append(arrList.get(i).getValue());\n\t\t\t\tif(i < arrList.size() - 1){\n\t\t\t\t\tsBuilder.append(\",\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tresponse.getWriter().print(sBuilder);\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n```\n### CityServlet\n```\nprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\trequest.setCharacterEncoding(\"utf-8\");\n\t\tresponse.setContentType(\"text/xml;charset=utf-8\");\n\t\t\n\t\t//创建解析器对象\n\t\tSAXReader reader = new SAXReader();\n\t\tInputStream inputStream = this.getClass().getResourceAsStream(\"/china.xml\");\n\t\ttry {\n\t\t\t//得到Document对象\n\t\t\tDocument document = reader.read(inputStream);\n\t\t\t\n\t\t\t//获取省份名称,得到<province>元素,转成字符串发送给客户端\n\t\t\tString pname = request.getParameter(\"pname\");\n\t\t\tElement proEle = (Element) document.selectSingleNode(\"//province[@name='\"+ pname +\"']\");\n\t\t\tString xmlStr = proEle.asXML();\n\t\t\tresponse.getWriter().print(xmlStr);\n\t\t} catch (Exception e) { \n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n```\n### html\n```\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n    pageEncoding=\"UTF-8\"%>\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>Insert title here</title>\n<script type=\"text/javascript\">\n/*\n *1文档加载完时发送请求，得到所有省份名称，显示在<select name=\"province\"/>中\n *2选择新的省份时，发送请求得到xml文档的province元素，解析xml文档，得到其中所有的<city>，在得到每个<city>元素的内容\n *生成option插入。\n */\n \n //得到request对象\nfunction createXMLHttpRequest() {\n\ttry{\n\t\treturn new XMLHttpRequest();//大多数浏览器\n\t}catch (e) {\n\t\ttry{\n\t\t\treturn ActvieXObject(\"Msxm12.XMLHTTP\");//IE6.0\n\t\t}catch (e) {\n\t\t\ttry {\n\t\t\t\treturn ActvieXObject(\"Microsoft.XMLHTTP\");//IE5.5\n\t\t\t}catch (e) {\n\t\t\t\talert(\"您用的什么浏览器？\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n}\n\n//1文档加载完时发送请求，得到所有省份名称，显示在<select name=\"province\"/>中\nwindow.onload = function() {\n\tvar xmlHttp = createXMLHttpRequest();\n\txmlHttp.open(\"GET\", \"<c:url value='/ProvinceServlet'/>\", true);\n\txmlHttp.send(null);\n\txmlHttp.onreadystatechange = function() {\n\t\tif(xmlHttp.readyState == 4 && xmlHttp.status == 200) {\n\t\t\t//获取服务器响应\n\t\t\tvar text = xmlHttp.responseText;\n\t\t\t//使用逗号分隔\n\t\t\tvar arr = text.split(\",\");\n\t\t\t\n\t\t\t//循环遍历每个省份名称，每个名称生成一个option对象，添加到<select>中\n\t\t\tfor(var i =0; i <arr.length; i++) {\n\t\t\t\tvar op = document.createElement(\"option\");\n\t\t\t\top.value = arr[i];\n\t\t\t\tvar textNode = document.createTextNode(arr[i]);\n\t\t\t\top.appendChild(textNode);\n\t\t\t\t\n\t\t\t\tdocument.getElementById(\"p\").appendChild(op);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t//给<select name=\"province\">添加改变监听\n\tvar proSelect = document.getElementById(\"p\");\n\tproSelect.onchange = function(){\n\t\tvar xmlHttp = createXMLHttpRequest();\n\t\txmlHttp.open(\"POST\", \"<c:url value='/CityServlet'/>\", true);\n\t\txmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\txmlHttp.send(\"pname=\" + proSelect.value);\n\t\txmlHttp.onreadystatechange = function() {\n\t\t\tif(xmlHttp.readyState == 4 && xmlHttp.status == 200) {\n\t\t\t\t//移除option\n\t\t\t\tvar citySelect = document.getElementById(\"c\");\n\t\t\t\tvar optionEleList = citySelect.getElementsByTagName(\"option\");\n\t\t\t\t\n\t\t\t\twhile(optionEleList.length > 1){\n\t\t\t\t\tcitySelect.removeChild(optionEleList[1]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar doc = xmlHttp.responseXML;\n\t\t\t\t//循环遍历city元素\n\t\t\t\tvar cityEleList = doc.getElementsByTagName(\"city\");\n\t\t\t\tfor(var i = 0; i < cityEleList.length; i++) {\n\t\t\t\t\tvar cityEle = cityEleList[i];\n\t\t\t\t\tvar cityName;\n\t\t\t\t\tif(window.addEventListener){//处理浏览器差异\n\t\t\t\t\t\tcityName = cityEle.textContent;//支持FireFox等浏览器\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcityName = cityEle.text;//支持IE\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//使用市名称创建option\n\t\t\t\t\tvar op = document.createElement(\"option\");\n\t\t\t\t\top.value = cityName;\n\t\t\t\t\t\n\t\t\t\t\tvar textNode =document.createTextNode(cityName);\n\t\t\t\t\top.appendChild(textNode);\n\t\t\t\t\t\n\t\t\t\t\tvar citySelect = document.getElementById(\"c\");\n\t\t\t\t\tcitySelect.appendChild(op);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n};\n</script>\n</head>\n<body>\n\n<h1>省市联动</h1>\n<select name=\"province\" id=\"p\">\n\t<option>===请选择省===</option>\n</select>\n&nbsp;&nbsp;&nbsp;&nbsp;\n<select name=\"city\" id=\"c\">\n\t<option>===请选择市===</option>\n</select>\n\n</body>\n</html>\n```","source":"_posts/AJAX.md","raw":"---\ntitle: AJAX\ndate: 2017-04-24 17:49:20\ntags:\n- Web\n- AJAX\ntoc: true\n---\nAJAX的基本概念和案例\n<!--more-->\n# AJAX简介\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo4fsfkj30sl0c8wii.jpg)\n# AJAX四步操作\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fgeqo5r9c5j30i10ezn14.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fgeqo6juxnj30ou0bsq7m.jpg)\n# 省市联动\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo70sr8j30pe0c8jvg.jpg)\n### ProvinceServlet\n```\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\tresponse.setContentType(\"text/html;charset=utf-8\");\n\t\t//创建解析器对象\n\t\tSAXReader reader = new SAXReader();\n\t\tInputStream inputStream = this.getClass().getResourceAsStream(\"/china.xml\");\n\t\ttry {\n\t\t\t//得到Document对象\n\t\t\tDocument document = reader.read(inputStream);\n\t\t\t\n\t\t\t//查询所有的province的name元素，得到属性对象，循环遍历，连接成1个字符串发送给客户端\n\t\t\tList<Attribute> arrList = document.selectNodes(\"//province/@name\");\n\t\t\tStringBuilder sBuilder = new StringBuilder();\n\t\t\tfor(int i = 0; i < arrList.size(); i++) {\n\t\t\t\tsBuilder.append(arrList.get(i).getValue());\n\t\t\t\tif(i < arrList.size() - 1){\n\t\t\t\t\tsBuilder.append(\",\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tresponse.getWriter().print(sBuilder);\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n```\n### CityServlet\n```\nprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\trequest.setCharacterEncoding(\"utf-8\");\n\t\tresponse.setContentType(\"text/xml;charset=utf-8\");\n\t\t\n\t\t//创建解析器对象\n\t\tSAXReader reader = new SAXReader();\n\t\tInputStream inputStream = this.getClass().getResourceAsStream(\"/china.xml\");\n\t\ttry {\n\t\t\t//得到Document对象\n\t\t\tDocument document = reader.read(inputStream);\n\t\t\t\n\t\t\t//获取省份名称,得到<province>元素,转成字符串发送给客户端\n\t\t\tString pname = request.getParameter(\"pname\");\n\t\t\tElement proEle = (Element) document.selectSingleNode(\"//province[@name='\"+ pname +\"']\");\n\t\t\tString xmlStr = proEle.asXML();\n\t\t\tresponse.getWriter().print(xmlStr);\n\t\t} catch (Exception e) { \n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n```\n### html\n```\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n    pageEncoding=\"UTF-8\"%>\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>Insert title here</title>\n<script type=\"text/javascript\">\n/*\n *1文档加载完时发送请求，得到所有省份名称，显示在<select name=\"province\"/>中\n *2选择新的省份时，发送请求得到xml文档的province元素，解析xml文档，得到其中所有的<city>，在得到每个<city>元素的内容\n *生成option插入。\n */\n \n //得到request对象\nfunction createXMLHttpRequest() {\n\ttry{\n\t\treturn new XMLHttpRequest();//大多数浏览器\n\t}catch (e) {\n\t\ttry{\n\t\t\treturn ActvieXObject(\"Msxm12.XMLHTTP\");//IE6.0\n\t\t}catch (e) {\n\t\t\ttry {\n\t\t\t\treturn ActvieXObject(\"Microsoft.XMLHTTP\");//IE5.5\n\t\t\t}catch (e) {\n\t\t\t\talert(\"您用的什么浏览器？\");\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n}\n\n//1文档加载完时发送请求，得到所有省份名称，显示在<select name=\"province\"/>中\nwindow.onload = function() {\n\tvar xmlHttp = createXMLHttpRequest();\n\txmlHttp.open(\"GET\", \"<c:url value='/ProvinceServlet'/>\", true);\n\txmlHttp.send(null);\n\txmlHttp.onreadystatechange = function() {\n\t\tif(xmlHttp.readyState == 4 && xmlHttp.status == 200) {\n\t\t\t//获取服务器响应\n\t\t\tvar text = xmlHttp.responseText;\n\t\t\t//使用逗号分隔\n\t\t\tvar arr = text.split(\",\");\n\t\t\t\n\t\t\t//循环遍历每个省份名称，每个名称生成一个option对象，添加到<select>中\n\t\t\tfor(var i =0; i <arr.length; i++) {\n\t\t\t\tvar op = document.createElement(\"option\");\n\t\t\t\top.value = arr[i];\n\t\t\t\tvar textNode = document.createTextNode(arr[i]);\n\t\t\t\top.appendChild(textNode);\n\t\t\t\t\n\t\t\t\tdocument.getElementById(\"p\").appendChild(op);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t//给<select name=\"province\">添加改变监听\n\tvar proSelect = document.getElementById(\"p\");\n\tproSelect.onchange = function(){\n\t\tvar xmlHttp = createXMLHttpRequest();\n\t\txmlHttp.open(\"POST\", \"<c:url value='/CityServlet'/>\", true);\n\t\txmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\txmlHttp.send(\"pname=\" + proSelect.value);\n\t\txmlHttp.onreadystatechange = function() {\n\t\t\tif(xmlHttp.readyState == 4 && xmlHttp.status == 200) {\n\t\t\t\t//移除option\n\t\t\t\tvar citySelect = document.getElementById(\"c\");\n\t\t\t\tvar optionEleList = citySelect.getElementsByTagName(\"option\");\n\t\t\t\t\n\t\t\t\twhile(optionEleList.length > 1){\n\t\t\t\t\tcitySelect.removeChild(optionEleList[1]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar doc = xmlHttp.responseXML;\n\t\t\t\t//循环遍历city元素\n\t\t\t\tvar cityEleList = doc.getElementsByTagName(\"city\");\n\t\t\t\tfor(var i = 0; i < cityEleList.length; i++) {\n\t\t\t\t\tvar cityEle = cityEleList[i];\n\t\t\t\t\tvar cityName;\n\t\t\t\t\tif(window.addEventListener){//处理浏览器差异\n\t\t\t\t\t\tcityName = cityEle.textContent;//支持FireFox等浏览器\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcityName = cityEle.text;//支持IE\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//使用市名称创建option\n\t\t\t\t\tvar op = document.createElement(\"option\");\n\t\t\t\t\top.value = cityName;\n\t\t\t\t\t\n\t\t\t\t\tvar textNode =document.createTextNode(cityName);\n\t\t\t\t\top.appendChild(textNode);\n\t\t\t\t\t\n\t\t\t\t\tvar citySelect = document.getElementById(\"c\");\n\t\t\t\t\tcitySelect.appendChild(op);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n};\n</script>\n</head>\n<body>\n\n<h1>省市联动</h1>\n<select name=\"province\" id=\"p\">\n\t<option>===请选择省===</option>\n</select>\n&nbsp;&nbsp;&nbsp;&nbsp;\n<select name=\"city\" id=\"c\">\n\t<option>===请选择市===</option>\n</select>\n\n</body>\n</html>\n```","slug":"AJAX","published":1,"updated":"2018-01-20T06:44:37.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8v4000j44wa7fk6piw0","content":"<p>AJAX的基本概念和案例<br><a id=\"more\"></a></p>\n<h1 id=\"AJAX简介\"><a href=\"#AJAX简介\" class=\"headerlink\" title=\"AJAX简介\"></a>AJAX简介</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo4fsfkj30sl0c8wii.jpg\" alt=\"\"></p>\n<h1 id=\"AJAX四步操作\"><a href=\"#AJAX四步操作\" class=\"headerlink\" title=\"AJAX四步操作\"></a>AJAX四步操作</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fgeqo5r9c5j30i10ezn14.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fgeqo6juxnj30ou0bsq7m.jpg\" alt=\"\"></p>\n<h1 id=\"省市联动\"><a href=\"#省市联动\" class=\"headerlink\" title=\"省市联动\"></a>省市联动</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo70sr8j30pe0c8jvg.jpg\" alt=\"\"></p>\n<h3 id=\"ProvinceServlet\"><a href=\"#ProvinceServlet\" class=\"headerlink\" title=\"ProvinceServlet\"></a>ProvinceServlet</h3><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> doGet(HttpServletRequest request, HttpServletResponse response) <span class=\"keyword\">throws</span> ServletException, IOException &#123;</div><div class=\"line\">  response.setContentType(<span class=\"string\">\"text/html;charset=utf-8\"</span>);</div><div class=\"line\">  <span class=\"comment\">//创建解析器对象</span></div><div class=\"line\">  SAXReader reader = <span class=\"keyword\">new</span> SAXReader();</div><div class=\"line\">  InputStream inputStream = <span class=\"keyword\">this</span>.getClass().getResourceAsStream(<span class=\"string\">\"/china.xml\"</span>);</div><div class=\"line\">  <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">   <span class=\"comment\">//得到Document对象</span></div><div class=\"line\">   Document document = reader.<span class=\"keyword\">read</span>(inputStream);</div><div class=\"line\">   </div><div class=\"line\">   <span class=\"comment\">//查询所有的province的name元素，得到属性对象，循环遍历，连接成1个字符串发送给客户端</span></div><div class=\"line\">   List&lt;Attribute&gt; arrList = document.selectNodes(<span class=\"string\">\"//province/@name\"</span>);</div><div class=\"line\">   StringBuilder sBuilder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arrList.<span class=\"keyword\">size</span>(); i++) &#123;</div><div class=\"line\">    sBuilder.<span class=\"keyword\">append</span>(arrList.get(i).getValue());</div><div class=\"line\">    <span class=\"keyword\">if</span>(i &lt; arrList.<span class=\"keyword\">size</span>() - <span class=\"number\">1</span>)&#123;</div><div class=\"line\">     sBuilder.<span class=\"keyword\">append</span>(<span class=\"string\">\",\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">   response.getWriter().<span class=\"keyword\">print</span>(sBuilder);</div><div class=\"line\">  &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">   <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(e);</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"CityServlet\"><a href=\"#CityServlet\" class=\"headerlink\" title=\"CityServlet\"></a>CityServlet</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected <span class=\"keyword\">void</span> doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</div><div class=\"line\">  request.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">  response.setContentType(<span class=\"string\">\"text/xml;charset=utf-8\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//创建解析器对象</span></div><div class=\"line\">  SAXReader reader = <span class=\"keyword\">new</span> SAXReader();</div><div class=\"line\">  InputStream inputStream = <span class=\"keyword\">this</span>.getClass().getResourceAsStream(<span class=\"string\">\"/china.xml\"</span>);</div><div class=\"line\">  <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">   <span class=\"comment\">//得到Document对象</span></div><div class=\"line\">   Document <span class=\"built_in\">document</span> = reader.read(inputStream);</div><div class=\"line\">   </div><div class=\"line\">   <span class=\"comment\">//获取省份名称,得到&lt;province&gt;元素,转成字符串发送给客户端</span></div><div class=\"line\">   <span class=\"built_in\">String</span> pname = request.getParameter(<span class=\"string\">\"pname\"</span>);</div><div class=\"line\">   <span class=\"built_in\">Element</span> proEle = (<span class=\"built_in\">Element</span>) <span class=\"built_in\">document</span>.selectSingleNode(<span class=\"string\">\"//province[@name='\"</span>+ pname +<span class=\"string\">\"']\"</span>);</div><div class=\"line\">   <span class=\"built_in\">String</span> xmlStr = proEle.asXML();</div><div class=\"line\">   response.getWriter().<span class=\"built_in\">print</span>(xmlStr);</div><div class=\"line\">  &#125; <span class=\"keyword\">catch</span> (Exception e) &#123; </div><div class=\"line\">   <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(e);</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=UTF-8\"</span></span></div><div class=\"line\">    pageEncoding=<span class=\"string\">\"UTF-8\"</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\">@ taglib prefix=<span class=\"string\">\"c\"</span> uri=<span class=\"string\">\"http://java.sun.com/jsp/jstl/core\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Insert title here<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"> *1文档加载完时发送请求，得到所有省份名称，显示在&lt;select name=\"province\"/&gt;中</div><div class=\"line\"> *2选择新的省份时，发送请求得到xml文档的province元素，解析xml文档，得到其中所有的&lt;city&gt;，在得到每个&lt;city&gt;元素的内容</div><div class=\"line\"> *生成option插入。</div><div class=\"line\"> */</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//得到request对象</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createXMLHttpRequest</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> XMLHttpRequest();<span class=\"comment\">//大多数浏览器</span></div><div class=\"line\"> &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">  <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">   <span class=\"keyword\">return</span> ActvieXObject(<span class=\"string\">\"Msxm12.XMLHTTP\"</span>);<span class=\"comment\">//IE6.0</span></div><div class=\"line\">  &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">   <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> ActvieXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);<span class=\"comment\">//IE5.5</span></div><div class=\"line\">   &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">    alert(<span class=\"string\">\"您用的什么浏览器？\"</span>);</div><div class=\"line\">    <span class=\"keyword\">throw</span> e;</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//1文档加载完时发送请求，得到所有省份名称，显示在&lt;select name=\"province\"/&gt;中</span></div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">var</span> xmlHttp = createXMLHttpRequest();</div><div class=\"line\"> xmlHttp.open(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"&lt;c:url value='/ProvinceServlet'/&gt;\"</span>, <span class=\"literal\">true</span>);</div><div class=\"line\"> xmlHttp.send(<span class=\"literal\">null</span>);</div><div class=\"line\"> xmlHttp.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(xmlHttp.readyState == <span class=\"number\">4</span> &amp;&amp; xmlHttp.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">   <span class=\"comment\">//获取服务器响应</span></div><div class=\"line\">   <span class=\"keyword\">var</span> text = xmlHttp.responseText;</div><div class=\"line\">   <span class=\"comment\">//使用逗号分隔</span></div><div class=\"line\">   <span class=\"keyword\">var</span> arr = text.split(<span class=\"string\">\",\"</span>);</div><div class=\"line\">   </div><div class=\"line\">   <span class=\"comment\">//循环遍历每个省份名称，每个名称生成一个option对象，添加到&lt;select&gt;中</span></div><div class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i =<span class=\"number\">0</span>; i &lt;arr.length; i++) &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> op = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"option\"</span>);</div><div class=\"line\">    op.value = arr[i];</div><div class=\"line\">    <span class=\"keyword\">var</span> textNode = <span class=\"built_in\">document</span>.createTextNode(arr[i]);</div><div class=\"line\">    op.appendChild(textNode);</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"p\"</span>).appendChild(op);</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//给&lt;select name=\"province\"&gt;添加改变监听</span></div><div class=\"line\"> <span class=\"keyword\">var</span> proSelect = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"p\"</span>);</div><div class=\"line\"> proSelect.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> xmlHttp = createXMLHttpRequest();</div><div class=\"line\">  xmlHttp.open(<span class=\"string\">\"POST\"</span>, <span class=\"string\">\"&lt;c:url value='/CityServlet'/&gt;\"</span>, <span class=\"literal\">true</span>);</div><div class=\"line\">  xmlHttp.setRequestHeader(<span class=\"string\">\"Content-Type\"</span>, <span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</div><div class=\"line\">  xmlHttp.send(<span class=\"string\">\"pname=\"</span> + proSelect.value);</div><div class=\"line\">  xmlHttp.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">if</span>(xmlHttp.readyState == <span class=\"number\">4</span> &amp;&amp; xmlHttp.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">    <span class=\"comment\">//移除option</span></div><div class=\"line\">    <span class=\"keyword\">var</span> citySelect = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"c\"</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> optionEleList = citySelect.getElementsByTagName(<span class=\"string\">\"option\"</span>);</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">while</span>(optionEleList.length &gt; <span class=\"number\">1</span>)&#123;</div><div class=\"line\">     citySelect.removeChild(optionEleList[<span class=\"number\">1</span>]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> doc = xmlHttp.responseXML;</div><div class=\"line\">    <span class=\"comment\">//循环遍历city元素</span></div><div class=\"line\">    <span class=\"keyword\">var</span> cityEleList = doc.getElementsByTagName(<span class=\"string\">\"city\"</span>);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; cityEleList.length; i++) &#123;</div><div class=\"line\">     <span class=\"keyword\">var</span> cityEle = cityEleList[i];</div><div class=\"line\">     <span class=\"keyword\">var</span> cityName;</div><div class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.addEventListener)&#123;<span class=\"comment\">//处理浏览器差异</span></div><div class=\"line\">      cityName = cityEle.textContent;<span class=\"comment\">//支持FireFox等浏览器</span></div><div class=\"line\">     &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">      cityName = cityEle.text;<span class=\"comment\">//支持IE</span></div><div class=\"line\">     &#125;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"comment\">//使用市名称创建option</span></div><div class=\"line\">     <span class=\"keyword\">var</span> op = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"option\"</span>);</div><div class=\"line\">     op.value = cityName;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"keyword\">var</span> textNode =<span class=\"built_in\">document</span>.createTextNode(cityName);</div><div class=\"line\">     op.appendChild(textNode);</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"keyword\">var</span> citySelect = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"c\"</span>);</div><div class=\"line\">     citySelect.appendChild(op);</div><div class=\"line\">    &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\"> &#125;;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>省市联动<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"province\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"p\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>===请选择省===<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"city\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"c\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>===请选择市===<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>","excerpt":"<p>AJAX的基本概念和案例<br>","more":"</p>\n<h1 id=\"AJAX简介\"><a href=\"#AJAX简介\" class=\"headerlink\" title=\"AJAX简介\"></a>AJAX简介</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo4fsfkj30sl0c8wii.jpg\" alt=\"\"></p>\n<h1 id=\"AJAX四步操作\"><a href=\"#AJAX四步操作\" class=\"headerlink\" title=\"AJAX四步操作\"></a>AJAX四步操作</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fgeqo5r9c5j30i10ezn14.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fgeqo6juxnj30ou0bsq7m.jpg\" alt=\"\"></p>\n<h1 id=\"省市联动\"><a href=\"#省市联动\" class=\"headerlink\" title=\"省市联动\"></a>省市联动</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgeqo70sr8j30pe0c8jvg.jpg\" alt=\"\"></p>\n<h3 id=\"ProvinceServlet\"><a href=\"#ProvinceServlet\" class=\"headerlink\" title=\"ProvinceServlet\"></a>ProvinceServlet</h3><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> doGet(HttpServletRequest request, HttpServletResponse response) <span class=\"keyword\">throws</span> ServletException, IOException &#123;</div><div class=\"line\">  response.setContentType(<span class=\"string\">\"text/html;charset=utf-8\"</span>);</div><div class=\"line\">  <span class=\"comment\">//创建解析器对象</span></div><div class=\"line\">  SAXReader reader = <span class=\"keyword\">new</span> SAXReader();</div><div class=\"line\">  InputStream inputStream = <span class=\"keyword\">this</span>.getClass().getResourceAsStream(<span class=\"string\">\"/china.xml\"</span>);</div><div class=\"line\">  <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">   <span class=\"comment\">//得到Document对象</span></div><div class=\"line\">   Document document = reader.<span class=\"keyword\">read</span>(inputStream);</div><div class=\"line\">   </div><div class=\"line\">   <span class=\"comment\">//查询所有的province的name元素，得到属性对象，循环遍历，连接成1个字符串发送给客户端</span></div><div class=\"line\">   List&lt;Attribute&gt; arrList = document.selectNodes(<span class=\"string\">\"//province/@name\"</span>);</div><div class=\"line\">   StringBuilder sBuilder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arrList.<span class=\"keyword\">size</span>(); i++) &#123;</div><div class=\"line\">    sBuilder.<span class=\"keyword\">append</span>(arrList.get(i).getValue());</div><div class=\"line\">    <span class=\"keyword\">if</span>(i &lt; arrList.<span class=\"keyword\">size</span>() - <span class=\"number\">1</span>)&#123;</div><div class=\"line\">     sBuilder.<span class=\"keyword\">append</span>(<span class=\"string\">\",\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">   response.getWriter().<span class=\"keyword\">print</span>(sBuilder);</div><div class=\"line\">  &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">   <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(e);</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"CityServlet\"><a href=\"#CityServlet\" class=\"headerlink\" title=\"CityServlet\"></a>CityServlet</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected <span class=\"keyword\">void</span> doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</div><div class=\"line\">  request.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">  response.setContentType(<span class=\"string\">\"text/xml;charset=utf-8\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//创建解析器对象</span></div><div class=\"line\">  SAXReader reader = <span class=\"keyword\">new</span> SAXReader();</div><div class=\"line\">  InputStream inputStream = <span class=\"keyword\">this</span>.getClass().getResourceAsStream(<span class=\"string\">\"/china.xml\"</span>);</div><div class=\"line\">  <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">   <span class=\"comment\">//得到Document对象</span></div><div class=\"line\">   Document <span class=\"built_in\">document</span> = reader.read(inputStream);</div><div class=\"line\">   </div><div class=\"line\">   <span class=\"comment\">//获取省份名称,得到&lt;province&gt;元素,转成字符串发送给客户端</span></div><div class=\"line\">   <span class=\"built_in\">String</span> pname = request.getParameter(<span class=\"string\">\"pname\"</span>);</div><div class=\"line\">   <span class=\"built_in\">Element</span> proEle = (<span class=\"built_in\">Element</span>) <span class=\"built_in\">document</span>.selectSingleNode(<span class=\"string\">\"//province[@name='\"</span>+ pname +<span class=\"string\">\"']\"</span>);</div><div class=\"line\">   <span class=\"built_in\">String</span> xmlStr = proEle.asXML();</div><div class=\"line\">   response.getWriter().<span class=\"built_in\">print</span>(xmlStr);</div><div class=\"line\">  &#125; <span class=\"keyword\">catch</span> (Exception e) &#123; </div><div class=\"line\">   <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(e);</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=UTF-8\"</span></div><div class=\"line\">    pageEncoding=<span class=\"string\">\"UTF-8\"</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ taglib prefix=<span class=\"string\">\"c\"</span> uri=<span class=\"string\">\"http://java.sun.com/jsp/jstl/core\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Insert title here<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\"> *1文档加载完时发送请求，得到所有省份名称，显示在&lt;select name=\"province\"/&gt;中</div><div class=\"line\"> *2选择新的省份时，发送请求得到xml文档的province元素，解析xml文档，得到其中所有的&lt;city&gt;，在得到每个&lt;city&gt;元素的内容</div><div class=\"line\"> *生成option插入。</div><div class=\"line\"> */</span></div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//得到request对象</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createXMLHttpRequest</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> XMLHttpRequest();<span class=\"comment\">//大多数浏览器</span></div><div class=\"line\"> &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">  <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">   <span class=\"keyword\">return</span> ActvieXObject(<span class=\"string\">\"Msxm12.XMLHTTP\"</span>);<span class=\"comment\">//IE6.0</span></div><div class=\"line\">  &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">   <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> ActvieXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);<span class=\"comment\">//IE5.5</span></div><div class=\"line\">   &#125;<span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">    alert(<span class=\"string\">\"您用的什么浏览器？\"</span>);</div><div class=\"line\">    <span class=\"keyword\">throw</span> e;</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//1文档加载完时发送请求，得到所有省份名称，显示在&lt;select name=\"province\"/&gt;中</span></div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">var</span> xmlHttp = createXMLHttpRequest();</div><div class=\"line\"> xmlHttp.open(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"&lt;c:url value='/ProvinceServlet'/&gt;\"</span>, <span class=\"literal\">true</span>);</div><div class=\"line\"> xmlHttp.send(<span class=\"literal\">null</span>);</div><div class=\"line\"> xmlHttp.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(xmlHttp.readyState == <span class=\"number\">4</span> &amp;&amp; xmlHttp.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">   <span class=\"comment\">//获取服务器响应</span></div><div class=\"line\">   <span class=\"keyword\">var</span> text = xmlHttp.responseText;</div><div class=\"line\">   <span class=\"comment\">//使用逗号分隔</span></div><div class=\"line\">   <span class=\"keyword\">var</span> arr = text.split(<span class=\"string\">\",\"</span>);</div><div class=\"line\">   </div><div class=\"line\">   <span class=\"comment\">//循环遍历每个省份名称，每个名称生成一个option对象，添加到&lt;select&gt;中</span></div><div class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i =<span class=\"number\">0</span>; i &lt;arr.length; i++) &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> op = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"option\"</span>);</div><div class=\"line\">    op.value = arr[i];</div><div class=\"line\">    <span class=\"keyword\">var</span> textNode = <span class=\"built_in\">document</span>.createTextNode(arr[i]);</div><div class=\"line\">    op.appendChild(textNode);</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"p\"</span>).appendChild(op);</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//给&lt;select name=\"province\"&gt;添加改变监听</span></div><div class=\"line\"> <span class=\"keyword\">var</span> proSelect = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"p\"</span>);</div><div class=\"line\"> proSelect.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> xmlHttp = createXMLHttpRequest();</div><div class=\"line\">  xmlHttp.open(<span class=\"string\">\"POST\"</span>, <span class=\"string\">\"&lt;c:url value='/CityServlet'/&gt;\"</span>, <span class=\"literal\">true</span>);</div><div class=\"line\">  xmlHttp.setRequestHeader(<span class=\"string\">\"Content-Type\"</span>, <span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</div><div class=\"line\">  xmlHttp.send(<span class=\"string\">\"pname=\"</span> + proSelect.value);</div><div class=\"line\">  xmlHttp.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">if</span>(xmlHttp.readyState == <span class=\"number\">4</span> &amp;&amp; xmlHttp.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">    <span class=\"comment\">//移除option</span></div><div class=\"line\">    <span class=\"keyword\">var</span> citySelect = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"c\"</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> optionEleList = citySelect.getElementsByTagName(<span class=\"string\">\"option\"</span>);</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">while</span>(optionEleList.length &gt; <span class=\"number\">1</span>)&#123;</div><div class=\"line\">     citySelect.removeChild(optionEleList[<span class=\"number\">1</span>]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> doc = xmlHttp.responseXML;</div><div class=\"line\">    <span class=\"comment\">//循环遍历city元素</span></div><div class=\"line\">    <span class=\"keyword\">var</span> cityEleList = doc.getElementsByTagName(<span class=\"string\">\"city\"</span>);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; cityEleList.length; i++) &#123;</div><div class=\"line\">     <span class=\"keyword\">var</span> cityEle = cityEleList[i];</div><div class=\"line\">     <span class=\"keyword\">var</span> cityName;</div><div class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.addEventListener)&#123;<span class=\"comment\">//处理浏览器差异</span></div><div class=\"line\">      cityName = cityEle.textContent;<span class=\"comment\">//支持FireFox等浏览器</span></div><div class=\"line\">     &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">      cityName = cityEle.text;<span class=\"comment\">//支持IE</span></div><div class=\"line\">     &#125;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"comment\">//使用市名称创建option</span></div><div class=\"line\">     <span class=\"keyword\">var</span> op = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"option\"</span>);</div><div class=\"line\">     op.value = cityName;</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"keyword\">var</span> textNode =<span class=\"built_in\">document</span>.createTextNode(cityName);</div><div class=\"line\">     op.appendChild(textNode);</div><div class=\"line\">     </div><div class=\"line\">     <span class=\"keyword\">var</span> citySelect = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"c\"</span>);</div><div class=\"line\">     citySelect.appendChild(op);</div><div class=\"line\">    &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\"> &#125;;</div><div class=\"line\">&#125;;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>省市联动<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"province\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"p\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>===请选择省===<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"city\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"c\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>===请选择市===<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>"},{"title":"JDBC学习笔记3","date":"2017-04-13T06:54:37.000Z","toc":true,"_content":"dbutils\n<!--more-->\n# dbutils\n```\n\t\t//执行增删查\n\t\tQueryRunner qRunner = new QueryRunner(JdbcUtils.getDataSource());\n\t\tString sql = \"insert into user value(?,?)\";\n\t\tObject[] params = {\"123\",\"123\"};\n\t\t\n\t\tqRunner.update(sql, params);\n\t\t//执行查询\n\t\tQueryRunner qRunner = new QueryRunner(JdbcUtils.getDataSource());\n\t\tString sql = \"select * from user where username=?\";\n\t\tObject[] params = {\"123\"};\n\t\t\n\t\tUser user = qRunner.query(sql, new BeanHandler<User>(User.class), params);\n\t\tSystem.out.println(user);\n```\n原理不写了,查day18.\n<hr>\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fel2zqh20kj30vf0aagp7.jpg)\n","source":"_posts/JDBC学习笔记3.md","raw":"---\ntitle: JDBC学习笔记3\ndate: 2017-04-13 14:54:37\ntags:\n- Web\ntoc: true\n---\ndbutils\n<!--more-->\n# dbutils\n```\n\t\t//执行增删查\n\t\tQueryRunner qRunner = new QueryRunner(JdbcUtils.getDataSource());\n\t\tString sql = \"insert into user value(?,?)\";\n\t\tObject[] params = {\"123\",\"123\"};\n\t\t\n\t\tqRunner.update(sql, params);\n\t\t//执行查询\n\t\tQueryRunner qRunner = new QueryRunner(JdbcUtils.getDataSource());\n\t\tString sql = \"select * from user where username=?\";\n\t\tObject[] params = {\"123\"};\n\t\t\n\t\tUser user = qRunner.query(sql, new BeanHandler<User>(User.class), params);\n\t\tSystem.out.println(user);\n```\n原理不写了,查day18.\n<hr>\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fel2zqh20kj30vf0aagp7.jpg)\n","slug":"JDBC学习笔记3","published":1,"updated":"2018-01-20T06:44:37.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8v6000l44wa829mxrt4","content":"<p>dbutils<br><a id=\"more\"></a></p>\n<h1 id=\"dbutils\"><a href=\"#dbutils\" class=\"headerlink\" title=\"dbutils\"></a>dbutils</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//执行增删查</span></div><div class=\"line\">QueryRunner qRunner = <span class=\"keyword\">new</span> QueryRunner(JdbcUtils.getDataSource());</div><div class=\"line\">String sql = <span class=\"string\">\"insert into user value(?,?)\"</span>;</div><div class=\"line\">Object[] <span class=\"keyword\">params</span> = &#123;<span class=\"string\">\"123\"</span>,<span class=\"string\">\"123\"</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">qRunner.update(sql, <span class=\"keyword\">params</span>);</div><div class=\"line\"><span class=\"comment\">//执行查询</span></div><div class=\"line\">QueryRunner qRunner = <span class=\"keyword\">new</span> QueryRunner(JdbcUtils.getDataSource());</div><div class=\"line\">String sql = <span class=\"string\">\"select * from user where username=?\"</span>;</div><div class=\"line\">Object[] <span class=\"keyword\">params</span> = &#123;<span class=\"string\">\"123\"</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">User user = qRunner.query(sql, <span class=\"keyword\">new</span> BeanHandler&lt;User&gt;(User.class), <span class=\"keyword\">params</span>);</div><div class=\"line\">System.<span class=\"keyword\">out</span>.println(user);</div></pre></td></tr></table></figure>\n<p>原理不写了,查day18.</p>\n<p><hr><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fel2zqh20kj30vf0aagp7.jpg\" alt=\"\"></p>\n","excerpt":"<p>dbutils<br>","more":"</p>\n<h1 id=\"dbutils\"><a href=\"#dbutils\" class=\"headerlink\" title=\"dbutils\"></a>dbutils</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//执行增删查</span></div><div class=\"line\">QueryRunner qRunner = <span class=\"keyword\">new</span> QueryRunner(JdbcUtils.getDataSource());</div><div class=\"line\">String sql = <span class=\"string\">\"insert into user value(?,?)\"</span>;</div><div class=\"line\">Object[] <span class=\"keyword\">params</span> = &#123;<span class=\"string\">\"123\"</span>,<span class=\"string\">\"123\"</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">qRunner.update(sql, <span class=\"keyword\">params</span>);</div><div class=\"line\"><span class=\"comment\">//执行查询</span></div><div class=\"line\">QueryRunner qRunner = <span class=\"keyword\">new</span> QueryRunner(JdbcUtils.getDataSource());</div><div class=\"line\">String sql = <span class=\"string\">\"select * from user where username=?\"</span>;</div><div class=\"line\">Object[] <span class=\"keyword\">params</span> = &#123;<span class=\"string\">\"123\"</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">User user = qRunner.query(sql, <span class=\"keyword\">new</span> BeanHandler&lt;User&gt;(User.class), <span class=\"keyword\">params</span>);</div><div class=\"line\">System.<span class=\"keyword\">out</span>.println(user);</div></pre></td></tr></table></figure>\n<p>原理不写了,查day18.</p>\n<p><hr><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fel2zqh20kj30vf0aagp7.jpg\" alt=\"\"></p>"},{"title":"JAVA中堆内存和栈内存详解","date":"2017-03-06T09:10:00.000Z","toc":true,"_content":"\nhttp://www.cnblogs.com/whgw/archive/2011/09/29/2194997.html","source":"_posts/JAVA中堆内存和栈内存详解.md","raw":"---\ntitle: JAVA中堆内存和栈内存详解\ndate: 2017-03-06 17:10:00\ntags:\n- Java基础\ntoc: true\n---\n\nhttp://www.cnblogs.com/whgw/archive/2011/09/29/2194997.html","slug":"JAVA中堆内存和栈内存详解","published":1,"updated":"2018-01-20T06:44:37.528Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vc000o44wa5k6k29wa","content":"<p><a href=\"http://www.cnblogs.com/whgw/archive/2011/09/29/2194997.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/whgw/archive/2011/09/29/2194997.html</a></p>\n","excerpt":"","more":"<p><a href=\"http://www.cnblogs.com/whgw/archive/2011/09/29/2194997.html\">http://www.cnblogs.com/whgw/archive/2011/09/29/2194997.html</a></p>\n"},{"title":"JAVA学习笔记Collection基本功能","date":"2017-03-06T09:57:48.000Z","toc":true,"_content":"\n\nCollection的一些方法和集合的继承体系结构\n<!--more-->\n# Collection的一些方法\n\tboolean add(Object obj):添加一个元素\n\tboolean addAll(Collection c):添加一个集合的元素\n\tvoid clear():移除所有元素\n\tboolean remove(Object o):移除一个元素\n\tboolean removeAll(Collection c):移除一个集合的元素(一个被移除就true)\n\tboolean contains(Object o):判断集合中是否包含指定的元素\n\tboolean containsAll(Collection c):判断集合中是否包含指定的集合元素(包含所有才true)\n\tboolean isEmpty():判断集合是否为空\n\tint size():元素的个数\n\tboolean retainAll(Collection c):两个集合的交际，调用方法的容器内容改变就true\n\tobject[] toArray():把集合转换成数组\n#### Iterator<E> iterator() 迭代器遍历容器\n```\n\tIterator it = c.iterator();\n\twhile(it.hasNext()) {\n\tString s =(String) it.next();\n\tSystem.out.println(s);\n\t}\n```\n# 集合的继承体系结构\n\t\t由于需求不同，Java就提供了不同的集合类。这多个集合类的数据结构不同，但是它们都是要提供存储和遍历功能的，\n\t\t我们把它们的共性不断的向上提取，最终就形成了集合的继承体系结构图。\n\t\t\n\t\tCollection\n\t\t\t|--List\n\t\t\t\t|--ArrayList\n\t\t\t\t|--Vector\n\t\t\t\t|--LinkedList\n\t\t\t|--Set\n\t\t\t\t|--HashSet\n\t\t\t\t|--TreeSet\n","source":"_posts/JAVA学习笔记Collection基本功能.md","raw":"---\ntitle: JAVA学习笔记Collection基本功能\ndate: 2017-03-06 17:57:48\ntags:\n- Java基础\ntoc: true\n---\n\n\nCollection的一些方法和集合的继承体系结构\n<!--more-->\n# Collection的一些方法\n\tboolean add(Object obj):添加一个元素\n\tboolean addAll(Collection c):添加一个集合的元素\n\tvoid clear():移除所有元素\n\tboolean remove(Object o):移除一个元素\n\tboolean removeAll(Collection c):移除一个集合的元素(一个被移除就true)\n\tboolean contains(Object o):判断集合中是否包含指定的元素\n\tboolean containsAll(Collection c):判断集合中是否包含指定的集合元素(包含所有才true)\n\tboolean isEmpty():判断集合是否为空\n\tint size():元素的个数\n\tboolean retainAll(Collection c):两个集合的交际，调用方法的容器内容改变就true\n\tobject[] toArray():把集合转换成数组\n#### Iterator<E> iterator() 迭代器遍历容器\n```\n\tIterator it = c.iterator();\n\twhile(it.hasNext()) {\n\tString s =(String) it.next();\n\tSystem.out.println(s);\n\t}\n```\n# 集合的继承体系结构\n\t\t由于需求不同，Java就提供了不同的集合类。这多个集合类的数据结构不同，但是它们都是要提供存储和遍历功能的，\n\t\t我们把它们的共性不断的向上提取，最终就形成了集合的继承体系结构图。\n\t\t\n\t\tCollection\n\t\t\t|--List\n\t\t\t\t|--ArrayList\n\t\t\t\t|--Vector\n\t\t\t\t|--LinkedList\n\t\t\t|--Set\n\t\t\t\t|--HashSet\n\t\t\t\t|--TreeSet\n","slug":"JAVA学习笔记Collection基本功能","published":1,"updated":"2018-01-20T06:44:37.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8ve000q44wazcl23vzp","content":"<p>Collection的一些方法和集合的继承体系结构<br><a id=\"more\"></a></p>\n<h1 id=\"Collection的一些方法\"><a href=\"#Collection的一些方法\" class=\"headerlink\" title=\"Collection的一些方法\"></a>Collection的一些方法</h1><pre><code>boolean add(Object obj):添加一个元素\nboolean addAll(Collection c):添加一个集合的元素\nvoid clear():移除所有元素\nboolean remove(Object o):移除一个元素\nboolean removeAll(Collection c):移除一个集合的元素(一个被移除就true)\nboolean contains(Object o):判断集合中是否包含指定的元素\nboolean containsAll(Collection c):判断集合中是否包含指定的集合元素(包含所有才true)\nboolean isEmpty():判断集合是否为空\nint size():元素的个数\nboolean retainAll(Collection c):两个集合的交际，调用方法的容器内容改变就true\nobject[] toArray():把集合转换成数组\n</code></pre><h4 id=\"Iterator-iterator-迭代器遍历容器\"><a href=\"#Iterator-iterator-迭代器遍历容器\" class=\"headerlink\" title=\"Iterator iterator() 迭代器遍历容器\"></a>Iterator<e> iterator() 迭代器遍历容器</e></h4><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Iterator </span><span class=\"keyword\">it </span>= c.<span class=\"keyword\">iterator();</span></div><div class=\"line\"><span class=\"symbol\">while</span>(<span class=\"keyword\">it.hasNext()) </span>&#123;</div><div class=\"line\"><span class=\"keyword\">String </span>s =(<span class=\"keyword\">String) </span><span class=\"keyword\">it.next();</span></div><div class=\"line\"><span class=\"symbol\">System.out.println</span>(s)<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"集合的继承体系结构\"><a href=\"#集合的继承体系结构\" class=\"headerlink\" title=\"集合的继承体系结构\"></a>集合的继承体系结构</h1><pre><code>由于需求不同，Java就提供了不同的集合类。这多个集合类的数据结构不同，但是它们都是要提供存储和遍历功能的，\n我们把它们的共性不断的向上提取，最终就形成了集合的继承体系结构图。\n\nCollection\n    |--List\n        |--ArrayList\n        |--Vector\n        |--LinkedList\n    |--Set\n        |--HashSet\n        |--TreeSet\n</code></pre>","excerpt":"<p>Collection的一些方法和集合的继承体系结构<br>","more":"</p>\n<h1 id=\"Collection的一些方法\"><a href=\"#Collection的一些方法\" class=\"headerlink\" title=\"Collection的一些方法\"></a>Collection的一些方法</h1><pre><code>boolean add(Object obj):添加一个元素\nboolean addAll(Collection c):添加一个集合的元素\nvoid clear():移除所有元素\nboolean remove(Object o):移除一个元素\nboolean removeAll(Collection c):移除一个集合的元素(一个被移除就true)\nboolean contains(Object o):判断集合中是否包含指定的元素\nboolean containsAll(Collection c):判断集合中是否包含指定的集合元素(包含所有才true)\nboolean isEmpty():判断集合是否为空\nint size():元素的个数\nboolean retainAll(Collection c):两个集合的交际，调用方法的容器内容改变就true\nobject[] toArray():把集合转换成数组\n</code></pre><h4 id=\"Iterator-iterator-迭代器遍历容器\"><a href=\"#Iterator-iterator-迭代器遍历容器\" class=\"headerlink\" title=\"Iterator iterator() 迭代器遍历容器\"></a>Iterator<E> iterator() 迭代器遍历容器</h4><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Iterator </span><span class=\"keyword\">it </span>= c.<span class=\"keyword\">iterator();</div><div class=\"line\"></span><span class=\"symbol\">while</span>(<span class=\"keyword\">it.hasNext()) </span>&#123;</div><div class=\"line\"><span class=\"keyword\">String </span>s =(<span class=\"keyword\">String) </span><span class=\"keyword\">it.next();</div><div class=\"line\"></span><span class=\"symbol\">System.out.println</span>(s)<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"集合的继承体系结构\"><a href=\"#集合的继承体系结构\" class=\"headerlink\" title=\"集合的继承体系结构\"></a>集合的继承体系结构</h1><pre><code>由于需求不同，Java就提供了不同的集合类。这多个集合类的数据结构不同，但是它们都是要提供存储和遍历功能的，\n我们把它们的共性不断的向上提取，最终就形成了集合的继承体系结构图。\n\nCollection\n    |--List\n        |--ArrayList\n        |--Vector\n        |--LinkedList\n    |--Set\n        |--HashSet\n        |--TreeSet\n</code></pre>"},{"title":"JSP学习笔记2","date":"2017-04-06T02:56:23.000Z","toc":true,"_content":"JSP\n\n<!--more-->\n\n# page指令\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fecsfgonp5j30wf0eqdle.jpg)\n<hr>\n# pageContext\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fecsotmh60j30kd0baju5.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fecsq5bur0j30iv07e0tw.jpg)\n<hr>\n# include和taglib指令\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fecssldgtlj30rc04mdhz.jpg)\n<hr>\n# JSP动作标签\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fecsvpngyhj30p403ydhk.jpg)\n<hr>\n# JavaBean的规范和BeanUtils\n1.必须要有一个默认构造器\n2.提供get/set方法，如果只有get方法，那么这个属性是只读属性。\n3.属性：有get/set方法的成员，还可以没有成员，只有get/set方法。属性名称右get/set方法来决定！而不是成员名称！\n4.方法名称满足一定的规范，那么它就是属性！boolean类型的属性，它的读方法可以是is或get开头！\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fect6xm42fj30jf064dgp.jpg)\n<hr>\n# JSP中JavaBean相关的标签\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fect8bss54j30st04e3zs.jpg)\n<hr>\n# EL表达式\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fectfb562zj30nf04egms.jpg)\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fectfbr47bj30r208ywh7.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fectigt4hqj30md0extdp.jpg)","source":"_posts/JSP学习笔记2.md","raw":"---\ntitle: JSP学习笔记2\ndate: 2017-04-06 10:56:23\ntags:\n- Web\n- JSP\ntoc: true\n---\nJSP\n\n<!--more-->\n\n# page指令\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fecsfgonp5j30wf0eqdle.jpg)\n<hr>\n# pageContext\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fecsotmh60j30kd0baju5.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fecsq5bur0j30iv07e0tw.jpg)\n<hr>\n# include和taglib指令\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fecssldgtlj30rc04mdhz.jpg)\n<hr>\n# JSP动作标签\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fecsvpngyhj30p403ydhk.jpg)\n<hr>\n# JavaBean的规范和BeanUtils\n1.必须要有一个默认构造器\n2.提供get/set方法，如果只有get方法，那么这个属性是只读属性。\n3.属性：有get/set方法的成员，还可以没有成员，只有get/set方法。属性名称右get/set方法来决定！而不是成员名称！\n4.方法名称满足一定的规范，那么它就是属性！boolean类型的属性，它的读方法可以是is或get开头！\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fect6xm42fj30jf064dgp.jpg)\n<hr>\n# JSP中JavaBean相关的标签\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fect8bss54j30st04e3zs.jpg)\n<hr>\n# EL表达式\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fectfb562zj30nf04egms.jpg)\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fectfbr47bj30r208ywh7.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fectigt4hqj30md0extdp.jpg)","slug":"JSP学习笔记2","published":1,"updated":"2018-01-20T06:44:37.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vg000t44wabqyxcuq4","content":"<p>JSP</p>\n<a id=\"more\"></a>\n<h1 id=\"page指令\"><a href=\"#page指令\" class=\"headerlink\" title=\"page指令\"></a>page指令</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fecsfgonp5j30wf0eqdle.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"pageContext\"><a href=\"#pageContext\" class=\"headerlink\" title=\"pageContext\"></a>pageContext</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fecsotmh60j30kd0baju5.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fecsq5bur0j30iv07e0tw.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"include和taglib指令\"><a href=\"#include和taglib指令\" class=\"headerlink\" title=\"include和taglib指令\"></a>include和taglib指令</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fecssldgtlj30rc04mdhz.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"JSP动作标签\"><a href=\"#JSP动作标签\" class=\"headerlink\" title=\"JSP动作标签\"></a>JSP动作标签</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fecsvpngyhj30p403ydhk.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"JavaBean的规范和BeanUtils\"><a href=\"#JavaBean的规范和BeanUtils\" class=\"headerlink\" title=\"JavaBean的规范和BeanUtils\"></a>JavaBean的规范和BeanUtils</h1><p>1.必须要有一个默认构造器<br>2.提供get/set方法，如果只有get方法，那么这个属性是只读属性。<br>3.属性：有get/set方法的成员，还可以没有成员，只有get/set方法。属性名称右get/set方法来决定！而不是成员名称！<br>4.方法名称满足一定的规范，那么它就是属性！boolean类型的属性，它的读方法可以是is或get开头！<br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fect6xm42fj30jf064dgp.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"JSP中JavaBean相关的标签\"><a href=\"#JSP中JavaBean相关的标签\" class=\"headerlink\" title=\"JSP中JavaBean相关的标签\"></a>JSP中JavaBean相关的标签</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fect8bss54j30st04e3zs.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"EL表达式\"><a href=\"#EL表达式\" class=\"headerlink\" title=\"EL表达式\"></a>EL表达式</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fectfb562zj30nf04egms.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fectfbr47bj30r208ywh7.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fectigt4hqj30md0extdp.jpg\" alt=\"\"></p>\n","excerpt":"<p>JSP</p>","more":"<h1 id=\"page指令\"><a href=\"#page指令\" class=\"headerlink\" title=\"page指令\"></a>page指令</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fecsfgonp5j30wf0eqdle.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"pageContext\"><a href=\"#pageContext\" class=\"headerlink\" title=\"pageContext\"></a>pageContext</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fecsotmh60j30kd0baju5.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fecsq5bur0j30iv07e0tw.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"include和taglib指令\"><a href=\"#include和taglib指令\" class=\"headerlink\" title=\"include和taglib指令\"></a>include和taglib指令</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fecssldgtlj30rc04mdhz.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"JSP动作标签\"><a href=\"#JSP动作标签\" class=\"headerlink\" title=\"JSP动作标签\"></a>JSP动作标签</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fecsvpngyhj30p403ydhk.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"JavaBean的规范和BeanUtils\"><a href=\"#JavaBean的规范和BeanUtils\" class=\"headerlink\" title=\"JavaBean的规范和BeanUtils\"></a>JavaBean的规范和BeanUtils</h1><p>1.必须要有一个默认构造器<br>2.提供get/set方法，如果只有get方法，那么这个属性是只读属性。<br>3.属性：有get/set方法的成员，还可以没有成员，只有get/set方法。属性名称右get/set方法来决定！而不是成员名称！<br>4.方法名称满足一定的规范，那么它就是属性！boolean类型的属性，它的读方法可以是is或get开头！<br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fect6xm42fj30jf064dgp.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"JSP中JavaBean相关的标签\"><a href=\"#JSP中JavaBean相关的标签\" class=\"headerlink\" title=\"JSP中JavaBean相关的标签\"></a>JSP中JavaBean相关的标签</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fect8bss54j30st04e3zs.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"EL表达式\"><a href=\"#EL表达式\" class=\"headerlink\" title=\"EL表达式\"></a>EL表达式</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fectfb562zj30nf04egms.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fectfbr47bj30r208ywh7.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fectigt4hqj30md0extdp.jpg\" alt=\"\"></p>"},{"title":"JSP学习笔记1","date":"2017-04-05T03:55:17.000Z","toc":true,"_content":"\nJSP\n\n<!--more-->\n\n# jsp的组成\n\n\tjsp = html + java脚本 + jsp标签(指令)\n\n\tjsp中有9大内置对象\n\n\t3中java脚本:\n\n\t\t<%...%>//java语句\n\n\t\t<%=...%>//java表达式，用来输出\n\n\t\t<%!...%>//声明，用来创建\n\n# jsp原理\n\n\tjsp其实是一种特殊的Servlet\n\n\t当jsp页面第一次被访问的时候，服务器会把jsp编译成java文件(这个java其实是一个servlet类)\n\n\t然后再把java编译成.class\n\n\t然后创建该类对象\n\n\t最后调用它的service()方法\n\n\t第二次请求同一jsp时，直接调用service()方法。\n\n\tjsp注释:<%--...--%>","source":"_posts/JSP学习笔记1.md","raw":"---\ntitle: JSP学习笔记1\ndate: 2017-04-05 11:55:17\ntags:\n- Web\n- JSP\ntoc: true\n---\n\nJSP\n\n<!--more-->\n\n# jsp的组成\n\n\tjsp = html + java脚本 + jsp标签(指令)\n\n\tjsp中有9大内置对象\n\n\t3中java脚本:\n\n\t\t<%...%>//java语句\n\n\t\t<%=...%>//java表达式，用来输出\n\n\t\t<%!...%>//声明，用来创建\n\n# jsp原理\n\n\tjsp其实是一种特殊的Servlet\n\n\t当jsp页面第一次被访问的时候，服务器会把jsp编译成java文件(这个java其实是一个servlet类)\n\n\t然后再把java编译成.class\n\n\t然后创建该类对象\n\n\t最后调用它的service()方法\n\n\t第二次请求同一jsp时，直接调用service()方法。\n\n\tjsp注释:<%--...--%>","slug":"JSP学习笔记1","published":1,"updated":"2018-01-20T06:44:37.534Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vi000v44wahxt7jd59","content":"<p>JSP</p>\n<a id=\"more\"></a>\n<h1 id=\"jsp的组成\"><a href=\"#jsp的组成\" class=\"headerlink\" title=\"jsp的组成\"></a>jsp的组成</h1><pre><code>jsp = html + java脚本 + jsp标签(指令)\n\njsp中有9大内置对象\n\n3中java脚本:\n\n    &lt;%...%&gt;//java语句\n\n    &lt;%=...%&gt;//java表达式，用来输出\n\n    &lt;%!...%&gt;//声明，用来创建\n</code></pre><h1 id=\"jsp原理\"><a href=\"#jsp原理\" class=\"headerlink\" title=\"jsp原理\"></a>jsp原理</h1><pre><code>jsp其实是一种特殊的Servlet\n\n当jsp页面第一次被访问的时候，服务器会把jsp编译成java文件(这个java其实是一个servlet类)\n\n然后再把java编译成.class\n\n然后创建该类对象\n\n最后调用它的service()方法\n\n第二次请求同一jsp时，直接调用service()方法。\n\njsp注释:&lt;%--...--%&gt;\n</code></pre>","excerpt":"<p>JSP</p>","more":"<h1 id=\"jsp的组成\"><a href=\"#jsp的组成\" class=\"headerlink\" title=\"jsp的组成\"></a>jsp的组成</h1><pre><code>jsp = html + java脚本 + jsp标签(指令)\n\njsp中有9大内置对象\n\n3中java脚本:\n\n    &lt;%...%&gt;//java语句\n\n    &lt;%=...%&gt;//java表达式，用来输出\n\n    &lt;%!...%&gt;//声明，用来创建\n</code></pre><h1 id=\"jsp原理\"><a href=\"#jsp原理\" class=\"headerlink\" title=\"jsp原理\"></a>jsp原理</h1><pre><code>jsp其实是一种特殊的Servlet\n\n当jsp页面第一次被访问的时候，服务器会把jsp编译成java文件(这个java其实是一个servlet类)\n\n然后再把java编译成.class\n\n然后创建该类对象\n\n最后调用它的service()方法\n\n第二次请求同一jsp时，直接调用service()方法。\n\njsp注释:&lt;%--...--%&gt;\n</code></pre>"},{"title":"JDBC学习笔记4","date":"2017-04-19T02:35:57.000Z","toc":true,"_content":"方便操作的工具类\nBaseServlet\nJdbcUtils\n<!--more-->\n# BaseServlet\n用1个Servlet来实现多个方法，用更简便的方法实现重定向和转发。\n用法:以后写Servlet只要继承BaseServlet即可。\n```\n//一个servlet实现多个方法\npublic class BaseServlet extends HttpServlet {\n\tpublic void service(HttpServletRequest req, HttpServletResponse resp) \n\t\t\tthrows ServletException, IOException{\n\t\treq.setCharacterEncoding(\"utf-8\");\n\t\tresp.setContentType(\"text/html;charset=utf-8\");\n\n\n\t\tString methodName = req.getParameter(\"method\");\n\t\t\n\t\tif(methodName == null || methodName.trim().isEmpty()) {\n\t\t\tthrow new RuntimeException(\"您没有传递method参数!无法确定您想要调用的方法!\");\n\t\t}\n\t\t\n\t\tClass c = this.getClass();\n\t\tMethod method = null;\n\t\ttry{\n\t\t\tmethod = c.getMethod(methodName,\n\t\t\t\t\tHttpServletRequest.class, HttpServletResponse.class);\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"您调用的方法\" + methodName + \",它不存在!\");\n\t\t}\n\t\t\n\t\t//调用method表示的方法\n\t\ttry{\n\t\t\tString result = (String) method.invoke(this, req, resp);\n\t\t\t//获取返回的字符串,它表示转发或者重定向。r:/user/login.jsp\n\t\t\t\n\t\t\t//返回值为空,直接返回。\n\t\t\tif(result == null || result.trim().isEmpty()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tif(result.contains(\":\")) {\n\t\t\t\t//使用冒号分割字符串\n\t\t\t\tint index = result.indexOf(\":\");\n\t\t\t\tString s = result.substring(0, index);\n\t\t\t\tString path = result.substring(index+1);\n\t\t\t\tif(s.equalsIgnoreCase(\"r\")) {//表示重定向\n\t\t\t\t\tresp.sendRedirect(req.getContextPath() + path);\n\t\t\t\t}else if(s.equalsIgnoreCase(\"f\")) {//表示转发\n\t\t\t\t\treq.getRequestDispatcher(path).forward(req, resp);\n\t\t\t\t}else{\n\t\t\t\t\tthrow new RuntimeException(\"您指定的操作:\" + s + \"当前版本不支持\");\n\t\t\t\t}\n\t\t\t} else {//默认为转发\n\t\t\t\treq.getRequestDispatcher(result).forward(req, resp);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"您调用的方法\" + methodName + \",它内部抛出了异常!\");\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t\t\n\t}\n}\n```\n# JdbcUtils\n使用c3p0连接池\n支持事务\n支持多线程\n```\npublic class JdbcUtils {\n\t//配置文件为默认配置。必须给出c3p0-config.xml\n\tprivate static ComboPooledDataSource dataSource = new ComboPooledDataSource();\n\t\n\t//它是事务专用连接\n\tprivate static ThreadLocal<java.sql.Connection> tl = new ThreadLocal<java.sql.Connection>();\n\t\n\t\n\t//返回连接\n\tpublic static java.sql.Connection getConnection() throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection != null) return connection;\n\t\treturn dataSource.getConnection();\n\t}\n\t\n\t//返回连接池对象\n\tpublic static ComboPooledDataSource getDataSource(){\n\t\treturn dataSource;\n\t}\n\t\n\t//开启事务\n\tpublic static void beginTransaction() throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection != null) throw new SQLException(\"已经开启事务\");\n\t\tconnection = getConnection();\n\t\tconnection.setAutoCommit(false);\n\t\ttl.set(connection);\n\t}\n\t\n\t//提交事务\n\tpublic static void commitTransaction() throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection == null) throw new SQLException(\"还没有开启事务\");\n\t\tconnection.commit();\n\t\tconnection.close();\n\t\ttl.remove();\n\t}\n\t\n\t//回滚事务\n\tpublic static void rollbackTransaction() throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection == null) throw new SQLException(\"还没有开启事务\");\n\t\tconnection.rollback();\n\t\tconnection.close();\n\t\ttl.remove();\n\t}\n\t\n\t//释放连接\n\tpublic static void releaseConnection(java.sql.Connection connection1) throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection == null) connection1.close();\n\t\tif(connection != connection1) connection1.close();\n\t\t\n\t}\n\t\n}\n```\n# TxQueryRunner\n继承QueryRunner\n自己处理连接问题(通过JdbcUtils)\n```\npublic class TxQueryRunner extends QueryRunner{\n\n\t@Override\n\tpublic int[] batch(String sql, Object[][] params) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tint[] result = super.batch(connection,sql, params);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic <T> T query(String sql, Object param, ResultSetHandler<T> rsh) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tT result = super.query(connection,sql, param,rsh);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t\t}\n\n\t@Override\n\tpublic <T> T query(String sql, Object[] params, ResultSetHandler<T> rsh) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tT result = super.query(connection,sql, params,rsh);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic <T> T query(String sql, ResultSetHandler<T> rsh, Object... params) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tT result = super.query(connection,sql, rsh,params);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic <T> T query(String sql, ResultSetHandler<T> rsh) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tT result = super.query(connection,sql, rsh);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic int update(String sql, Object... params) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tint result = super.update(connection,sql,params);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic int update(String sql, Object param) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tint result = super.update(connection,sql,param);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic int update(String sql) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tint result = super.update(connection,sql);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\t\n}\n```","source":"_posts/JDBC学习笔记4.md","raw":"---\ntitle: JDBC学习笔记4\ndate: 2017-04-19 10:35:57\ntags:\n- Web\n- 数据库\ntoc: true\n---\n方便操作的工具类\nBaseServlet\nJdbcUtils\n<!--more-->\n# BaseServlet\n用1个Servlet来实现多个方法，用更简便的方法实现重定向和转发。\n用法:以后写Servlet只要继承BaseServlet即可。\n```\n//一个servlet实现多个方法\npublic class BaseServlet extends HttpServlet {\n\tpublic void service(HttpServletRequest req, HttpServletResponse resp) \n\t\t\tthrows ServletException, IOException{\n\t\treq.setCharacterEncoding(\"utf-8\");\n\t\tresp.setContentType(\"text/html;charset=utf-8\");\n\n\n\t\tString methodName = req.getParameter(\"method\");\n\t\t\n\t\tif(methodName == null || methodName.trim().isEmpty()) {\n\t\t\tthrow new RuntimeException(\"您没有传递method参数!无法确定您想要调用的方法!\");\n\t\t}\n\t\t\n\t\tClass c = this.getClass();\n\t\tMethod method = null;\n\t\ttry{\n\t\t\tmethod = c.getMethod(methodName,\n\t\t\t\t\tHttpServletRequest.class, HttpServletResponse.class);\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"您调用的方法\" + methodName + \",它不存在!\");\n\t\t}\n\t\t\n\t\t//调用method表示的方法\n\t\ttry{\n\t\t\tString result = (String) method.invoke(this, req, resp);\n\t\t\t//获取返回的字符串,它表示转发或者重定向。r:/user/login.jsp\n\t\t\t\n\t\t\t//返回值为空,直接返回。\n\t\t\tif(result == null || result.trim().isEmpty()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tif(result.contains(\":\")) {\n\t\t\t\t//使用冒号分割字符串\n\t\t\t\tint index = result.indexOf(\":\");\n\t\t\t\tString s = result.substring(0, index);\n\t\t\t\tString path = result.substring(index+1);\n\t\t\t\tif(s.equalsIgnoreCase(\"r\")) {//表示重定向\n\t\t\t\t\tresp.sendRedirect(req.getContextPath() + path);\n\t\t\t\t}else if(s.equalsIgnoreCase(\"f\")) {//表示转发\n\t\t\t\t\treq.getRequestDispatcher(path).forward(req, resp);\n\t\t\t\t}else{\n\t\t\t\t\tthrow new RuntimeException(\"您指定的操作:\" + s + \"当前版本不支持\");\n\t\t\t\t}\n\t\t\t} else {//默认为转发\n\t\t\t\treq.getRequestDispatcher(result).forward(req, resp);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"您调用的方法\" + methodName + \",它内部抛出了异常!\");\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t\t\n\t}\n}\n```\n# JdbcUtils\n使用c3p0连接池\n支持事务\n支持多线程\n```\npublic class JdbcUtils {\n\t//配置文件为默认配置。必须给出c3p0-config.xml\n\tprivate static ComboPooledDataSource dataSource = new ComboPooledDataSource();\n\t\n\t//它是事务专用连接\n\tprivate static ThreadLocal<java.sql.Connection> tl = new ThreadLocal<java.sql.Connection>();\n\t\n\t\n\t//返回连接\n\tpublic static java.sql.Connection getConnection() throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection != null) return connection;\n\t\treturn dataSource.getConnection();\n\t}\n\t\n\t//返回连接池对象\n\tpublic static ComboPooledDataSource getDataSource(){\n\t\treturn dataSource;\n\t}\n\t\n\t//开启事务\n\tpublic static void beginTransaction() throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection != null) throw new SQLException(\"已经开启事务\");\n\t\tconnection = getConnection();\n\t\tconnection.setAutoCommit(false);\n\t\ttl.set(connection);\n\t}\n\t\n\t//提交事务\n\tpublic static void commitTransaction() throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection == null) throw new SQLException(\"还没有开启事务\");\n\t\tconnection.commit();\n\t\tconnection.close();\n\t\ttl.remove();\n\t}\n\t\n\t//回滚事务\n\tpublic static void rollbackTransaction() throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection == null) throw new SQLException(\"还没有开启事务\");\n\t\tconnection.rollback();\n\t\tconnection.close();\n\t\ttl.remove();\n\t}\n\t\n\t//释放连接\n\tpublic static void releaseConnection(java.sql.Connection connection1) throws SQLException{\n\t\tjava.sql.Connection connection = tl.get();\n\t\tif(connection == null) connection1.close();\n\t\tif(connection != connection1) connection1.close();\n\t\t\n\t}\n\t\n}\n```\n# TxQueryRunner\n继承QueryRunner\n自己处理连接问题(通过JdbcUtils)\n```\npublic class TxQueryRunner extends QueryRunner{\n\n\t@Override\n\tpublic int[] batch(String sql, Object[][] params) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tint[] result = super.batch(connection,sql, params);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic <T> T query(String sql, Object param, ResultSetHandler<T> rsh) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tT result = super.query(connection,sql, param,rsh);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t\t}\n\n\t@Override\n\tpublic <T> T query(String sql, Object[] params, ResultSetHandler<T> rsh) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tT result = super.query(connection,sql, params,rsh);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic <T> T query(String sql, ResultSetHandler<T> rsh, Object... params) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tT result = super.query(connection,sql, rsh,params);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic <T> T query(String sql, ResultSetHandler<T> rsh) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tT result = super.query(connection,sql, rsh);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic int update(String sql, Object... params) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tint result = super.update(connection,sql,params);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic int update(String sql, Object param) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tint result = super.update(connection,sql,param);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\n\t@Override\n\tpublic int update(String sql) throws SQLException {\n\t\tConnection connection = JdbcUtils.getConnection();\n\t\tint result = super.update(connection,sql);\n\t\tJdbcUtils.releaseConnection(connection);\n\t\treturn result;\t\n\t}\n\t\n}\n```","slug":"JDBC学习笔记4","published":1,"updated":"2018-01-20T06:44:37.533Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vj000x44waorwnte3q","content":"<p>方便操作的工具类<br>BaseServlet<br>JdbcUtils<br><a id=\"more\"></a></p>\n<h1 id=\"BaseServlet\"><a href=\"#BaseServlet\" class=\"headerlink\" title=\"BaseServlet\"></a>BaseServlet</h1><p>用1个Servlet来实现多个方法，用更简便的方法实现重定向和转发。<br>用法:以后写Servlet只要继承BaseServlet即可。<br><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//一个servlet实现多个方法</span></div><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\"> public void service(<span class=\"type\">HttpServletRequest</span> req, <span class=\"type\">HttpServletResponse</span> resp) </div><div class=\"line\">   <span class=\"keyword\">throws</span> <span class=\"type\">ServletException</span>, <span class=\"type\">IOException</span>&#123;</div><div class=\"line\">  req.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">  resp.setContentType(<span class=\"string\">\"text/html;charset=utf-8\"</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">  <span class=\"type\">String</span> methodName = req.getParameter(<span class=\"string\">\"method\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">if</span>(methodName == <span class=\"literal\">null</span> || methodName.trim().isEmpty()) &#123;</div><div class=\"line\">   <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">RuntimeException</span>(<span class=\"string\">\"您没有传递method参数!无法确定您想要调用的方法!\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"type\">Class</span> c = <span class=\"keyword\">this</span>.getClass();</div><div class=\"line\">  <span class=\"type\">Method</span> method = <span class=\"literal\">null</span>;</div><div class=\"line\">  <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">   method = c.getMethod(methodName,</div><div class=\"line\">     <span class=\"type\">HttpServletRequest</span>.<span class=\"keyword\">class</span>, <span class=\"type\">HttpServletResponse</span>.<span class=\"keyword\">class</span>);</div><div class=\"line\">  &#125;<span class=\"keyword\">catch</span>(<span class=\"type\">Exception</span> e)&#123;</div><div class=\"line\">   <span class=\"type\">System</span>.out.println(<span class=\"string\">\"您调用的方法\"</span> + methodName + <span class=\"string\">\",它不存在!\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//调用method表示的方法</span></div><div class=\"line\">  <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">   <span class=\"type\">String</span> result = (<span class=\"type\">String</span>) method.invoke(<span class=\"keyword\">this</span>, req, resp);</div><div class=\"line\">   <span class=\"comment\">//获取返回的字符串,它表示转发或者重定向。r:/user/login.jsp</span></div><div class=\"line\">   </div><div class=\"line\">   <span class=\"comment\">//返回值为空,直接返回。</span></div><div class=\"line\">   <span class=\"keyword\">if</span>(result == <span class=\"literal\">null</span> || result.trim().isEmpty()) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span>;</div><div class=\"line\">   &#125;</div><div class=\"line\">   </div><div class=\"line\">   <span class=\"keyword\">if</span>(result.contains(<span class=\"string\">\":\"</span>)) &#123;</div><div class=\"line\">    <span class=\"comment\">//使用冒号分割字符串</span></div><div class=\"line\">    int index = result.indexOf(<span class=\"string\">\":\"</span>);</div><div class=\"line\">    <span class=\"type\">String</span> s = result.substring(<span class=\"number\">0</span>, index);</div><div class=\"line\">    <span class=\"type\">String</span> path = result.substring(index+<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(s.equalsIgnoreCase(<span class=\"string\">\"r\"</span>)) &#123;<span class=\"comment\">//表示重定向</span></div><div class=\"line\">     resp.sendRedirect(req.getContextPath() + path);</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equalsIgnoreCase(<span class=\"string\">\"f\"</span>)) &#123;<span class=\"comment\">//表示转发</span></div><div class=\"line\">     req.getRequestDispatcher(path).forward(req, resp);</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">     <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">RuntimeException</span>(<span class=\"string\">\"您指定的操作:\"</span> + s + <span class=\"string\">\"当前版本不支持\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//默认为转发</span></div><div class=\"line\">    req.getRequestDispatcher(result).forward(req, resp);</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;<span class=\"keyword\">catch</span>(<span class=\"type\">Exception</span> e)&#123;</div><div class=\"line\">   <span class=\"type\">System</span>.out.println(<span class=\"string\">\"您调用的方法\"</span> + methodName + <span class=\"string\">\",它内部抛出了异常!\"</span>);</div><div class=\"line\">   <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">RuntimeException</span>(e);</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"JdbcUtils\"><a href=\"#JdbcUtils\" class=\"headerlink\" title=\"JdbcUtils\"></a>JdbcUtils</h1><p>使用c3p0连接池<br>支持事务<br>支持多线程<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">JdbcUtils</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//配置文件为默认配置。必须给出c3p0-config.xml</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ComboPooledDataSource dataSource = <span class=\"keyword\">new</span> ComboPooledDataSource();</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//它是事务专用连接</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;java.sql.Connection&gt; tl = <span class=\"keyword\">new</span> ThreadLocal&lt;java.sql.Connection&gt;();</div><div class=\"line\"> </div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//返回连接</span></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> java.sql.<span class=\"function\">Connection <span class=\"title\">getConnection</span>(<span class=\"params\"></span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection != <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> connection;</div><div class=\"line\">  <span class=\"keyword\">return</span> dataSource.getConnection();</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//返回连接池对象</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ComboPooledDataSource <span class=\"title\">getDataSource</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> dataSource;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//开启事务</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">beginTransaction</span>(<span class=\"params\"></span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection != <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SQLException(<span class=\"string\">\"已经开启事务\"</span>);</div><div class=\"line\">  connection = getConnection();</div><div class=\"line\">  connection.setAutoCommit(<span class=\"literal\">false</span>);</div><div class=\"line\">  tl.<span class=\"keyword\">set</span>(connection);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//提交事务</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">commitTransaction</span>(<span class=\"params\"></span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection == <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SQLException(<span class=\"string\">\"还没有开启事务\"</span>);</div><div class=\"line\">  connection.commit();</div><div class=\"line\">  connection.close();</div><div class=\"line\">  tl.<span class=\"keyword\">remove</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//回滚事务</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">rollbackTransaction</span>(<span class=\"params\"></span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection == <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SQLException(<span class=\"string\">\"还没有开启事务\"</span>);</div><div class=\"line\">  connection.rollback();</div><div class=\"line\">  connection.close();</div><div class=\"line\">  tl.<span class=\"keyword\">remove</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//释放连接</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">releaseConnection</span>(<span class=\"params\">java.sql.Connection connection1</span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection == <span class=\"literal\">null</span>) connection1.close();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection != connection1) connection1.close();</div><div class=\"line\">  </div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"TxQueryRunner\"><a href=\"#TxQueryRunner\" class=\"headerlink\" title=\"TxQueryRunner\"></a>TxQueryRunner</h1><p>继承QueryRunner<br>自己处理连接问题(通过JdbcUtils)<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TxQueryRunner</span> <span class=\"keyword\">extends</span> <span class=\"title\">QueryRunner</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] batch(String sql, Object[][] params) <span class=\"keyword\">throws</span> SQLException &#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  <span class=\"keyword\">int</span>[] result = <span class=\"keyword\">super</span>.batch(connection,sql, params);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">query</span><span class=\"params\">(String sql, Object param, ResultSetHandler&lt;T&gt; rsh)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  T result = <span class=\"keyword\">super</span>.query(connection,sql, param,rsh);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">query</span><span class=\"params\">(String sql, Object[] params, ResultSetHandler&lt;T&gt; rsh)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  T result = <span class=\"keyword\">super</span>.query(connection,sql, params,rsh);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">query</span><span class=\"params\">(String sql, ResultSetHandler&lt;T&gt; rsh, Object... params)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  T result = <span class=\"keyword\">super</span>.query(connection,sql, rsh,params);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">query</span><span class=\"params\">(String sql, ResultSetHandler&lt;T&gt; rsh)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  T result = <span class=\"keyword\">super</span>.query(connection,sql, rsh);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String sql, Object... params)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  <span class=\"keyword\">int</span> result = <span class=\"keyword\">super</span>.update(connection,sql,params);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String sql, Object param)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  <span class=\"keyword\">int</span> result = <span class=\"keyword\">super</span>.update(connection,sql,param);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String sql)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  <span class=\"keyword\">int</span> result = <span class=\"keyword\">super</span>.update(connection,sql);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>方便操作的工具类<br>BaseServlet<br>JdbcUtils<br>","more":"</p>\n<h1 id=\"BaseServlet\"><a href=\"#BaseServlet\" class=\"headerlink\" title=\"BaseServlet\"></a>BaseServlet</h1><p>用1个Servlet来实现多个方法，用更简便的方法实现重定向和转发。<br>用法:以后写Servlet只要继承BaseServlet即可。<br><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//一个servlet实现多个方法</span></div><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\"> public void service(<span class=\"type\">HttpServletRequest</span> req, <span class=\"type\">HttpServletResponse</span> resp) </div><div class=\"line\">   <span class=\"keyword\">throws</span> <span class=\"type\">ServletException</span>, <span class=\"type\">IOException</span>&#123;</div><div class=\"line\">  req.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">  resp.setContentType(<span class=\"string\">\"text/html;charset=utf-8\"</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">  <span class=\"type\">String</span> methodName = req.getParameter(<span class=\"string\">\"method\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">if</span>(methodName == <span class=\"literal\">null</span> || methodName.trim().isEmpty()) &#123;</div><div class=\"line\">   <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">RuntimeException</span>(<span class=\"string\">\"您没有传递method参数!无法确定您想要调用的方法!\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"type\">Class</span> c = <span class=\"keyword\">this</span>.getClass();</div><div class=\"line\">  <span class=\"type\">Method</span> method = <span class=\"literal\">null</span>;</div><div class=\"line\">  <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">   method = c.getMethod(methodName,</div><div class=\"line\">     <span class=\"type\">HttpServletRequest</span>.<span class=\"keyword\">class</span>, <span class=\"type\">HttpServletResponse</span>.<span class=\"keyword\">class</span>);</div><div class=\"line\">  &#125;<span class=\"keyword\">catch</span>(<span class=\"type\">Exception</span> e)&#123;</div><div class=\"line\">   <span class=\"type\">System</span>.out.println(<span class=\"string\">\"您调用的方法\"</span> + methodName + <span class=\"string\">\",它不存在!\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//调用method表示的方法</span></div><div class=\"line\">  <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">   <span class=\"type\">String</span> result = (<span class=\"type\">String</span>) method.invoke(<span class=\"keyword\">this</span>, req, resp);</div><div class=\"line\">   <span class=\"comment\">//获取返回的字符串,它表示转发或者重定向。r:/user/login.jsp</span></div><div class=\"line\">   </div><div class=\"line\">   <span class=\"comment\">//返回值为空,直接返回。</span></div><div class=\"line\">   <span class=\"keyword\">if</span>(result == <span class=\"literal\">null</span> || result.trim().isEmpty()) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span>;</div><div class=\"line\">   &#125;</div><div class=\"line\">   </div><div class=\"line\">   <span class=\"keyword\">if</span>(result.contains(<span class=\"string\">\":\"</span>)) &#123;</div><div class=\"line\">    <span class=\"comment\">//使用冒号分割字符串</span></div><div class=\"line\">    int index = result.indexOf(<span class=\"string\">\":\"</span>);</div><div class=\"line\">    <span class=\"type\">String</span> s = result.substring(<span class=\"number\">0</span>, index);</div><div class=\"line\">    <span class=\"type\">String</span> path = result.substring(index+<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(s.equalsIgnoreCase(<span class=\"string\">\"r\"</span>)) &#123;<span class=\"comment\">//表示重定向</span></div><div class=\"line\">     resp.sendRedirect(req.getContextPath() + path);</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equalsIgnoreCase(<span class=\"string\">\"f\"</span>)) &#123;<span class=\"comment\">//表示转发</span></div><div class=\"line\">     req.getRequestDispatcher(path).forward(req, resp);</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">     <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">RuntimeException</span>(<span class=\"string\">\"您指定的操作:\"</span> + s + <span class=\"string\">\"当前版本不支持\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//默认为转发</span></div><div class=\"line\">    req.getRequestDispatcher(result).forward(req, resp);</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;<span class=\"keyword\">catch</span>(<span class=\"type\">Exception</span> e)&#123;</div><div class=\"line\">   <span class=\"type\">System</span>.out.println(<span class=\"string\">\"您调用的方法\"</span> + methodName + <span class=\"string\">\",它内部抛出了异常!\"</span>);</div><div class=\"line\">   <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">RuntimeException</span>(e);</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"JdbcUtils\"><a href=\"#JdbcUtils\" class=\"headerlink\" title=\"JdbcUtils\"></a>JdbcUtils</h1><p>使用c3p0连接池<br>支持事务<br>支持多线程<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">JdbcUtils</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//配置文件为默认配置。必须给出c3p0-config.xml</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ComboPooledDataSource dataSource = <span class=\"keyword\">new</span> ComboPooledDataSource();</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//它是事务专用连接</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;java.sql.Connection&gt; tl = <span class=\"keyword\">new</span> ThreadLocal&lt;java.sql.Connection&gt;();</div><div class=\"line\"> </div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//返回连接</span></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> java.sql.<span class=\"function\">Connection <span class=\"title\">getConnection</span>(<span class=\"params\"></span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection != <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> connection;</div><div class=\"line\">  <span class=\"keyword\">return</span> dataSource.getConnection();</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//返回连接池对象</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ComboPooledDataSource <span class=\"title\">getDataSource</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> dataSource;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//开启事务</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">beginTransaction</span>(<span class=\"params\"></span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection != <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SQLException(<span class=\"string\">\"已经开启事务\"</span>);</div><div class=\"line\">  connection = getConnection();</div><div class=\"line\">  connection.setAutoCommit(<span class=\"literal\">false</span>);</div><div class=\"line\">  tl.<span class=\"keyword\">set</span>(connection);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//提交事务</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">commitTransaction</span>(<span class=\"params\"></span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection == <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SQLException(<span class=\"string\">\"还没有开启事务\"</span>);</div><div class=\"line\">  connection.commit();</div><div class=\"line\">  connection.close();</div><div class=\"line\">  tl.<span class=\"keyword\">remove</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//回滚事务</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">rollbackTransaction</span>(<span class=\"params\"></span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection == <span class=\"literal\">null</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SQLException(<span class=\"string\">\"还没有开启事务\"</span>);</div><div class=\"line\">  connection.rollback();</div><div class=\"line\">  connection.close();</div><div class=\"line\">  tl.<span class=\"keyword\">remove</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//释放连接</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">releaseConnection</span>(<span class=\"params\">java.sql.Connection connection1</span>) throws SQLException</span>&#123;</div><div class=\"line\">  java.sql.Connection connection = tl.<span class=\"keyword\">get</span>();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection == <span class=\"literal\">null</span>) connection1.close();</div><div class=\"line\">  <span class=\"keyword\">if</span>(connection != connection1) connection1.close();</div><div class=\"line\">  </div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"TxQueryRunner\"><a href=\"#TxQueryRunner\" class=\"headerlink\" title=\"TxQueryRunner\"></a>TxQueryRunner</h1><p>继承QueryRunner<br>自己处理连接问题(通过JdbcUtils)<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TxQueryRunner</span> <span class=\"keyword\">extends</span> <span class=\"title\">QueryRunner</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] batch(String sql, Object[][] params) <span class=\"keyword\">throws</span> SQLException &#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  <span class=\"keyword\">int</span>[] result = <span class=\"keyword\">super</span>.batch(connection,sql, params);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">query</span><span class=\"params\">(String sql, Object param, ResultSetHandler&lt;T&gt; rsh)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  T result = <span class=\"keyword\">super</span>.query(connection,sql, param,rsh);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">query</span><span class=\"params\">(String sql, Object[] params, ResultSetHandler&lt;T&gt; rsh)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  T result = <span class=\"keyword\">super</span>.query(connection,sql, params,rsh);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">query</span><span class=\"params\">(String sql, ResultSetHandler&lt;T&gt; rsh, Object... params)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  T result = <span class=\"keyword\">super</span>.query(connection,sql, rsh,params);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">query</span><span class=\"params\">(String sql, ResultSetHandler&lt;T&gt; rsh)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  T result = <span class=\"keyword\">super</span>.query(connection,sql, rsh);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String sql, Object... params)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  <span class=\"keyword\">int</span> result = <span class=\"keyword\">super</span>.update(connection,sql,params);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String sql, Object param)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  <span class=\"keyword\">int</span> result = <span class=\"keyword\">super</span>.update(connection,sql,param);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String sql)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">  Connection connection = JdbcUtils.getConnection();</div><div class=\"line\">  <span class=\"keyword\">int</span> result = <span class=\"keyword\">super</span>.update(connection,sql);</div><div class=\"line\">  JdbcUtils.releaseConnection(connection);</div><div class=\"line\">  <span class=\"keyword\">return</span> result;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"JSTL标签库","date":"2017-04-07T03:00:38.000Z","toc":true,"_content":"JSTL标签库\n<!--more-->\n# JSTL简介\n\tJSTL是apache对EL表达式的扩展，一共有四大标签库\n\t1.core核心标签库\n\t2.fmt格式化标签库\n\t3.sql//过时\n\t4.xml//过时\n\t使用前要通过taglib指令导入标签库\n\t<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jstl/core\" %> \n<hr>\n# core标签库常用标签\n\t<c:out>\n\t\tvalue:可以是字符串常量，也可是EL表达式\n\t\tdefault:默认输出值\n\t\tescapeXml:默认为true，表示转义\n\n\t<c:set>\n\t\tvar：变量名\n\t\tvalue：变量值，也可是EL表达式\n\t\tscope：默认为page，可选值：page，request，session，application\n\n\t<c:remove>\n\t\tvar：变量名\n\t\tscope：不给值，表示删除所有域中的该名称的变量。\n\n\t<c:url value=\"/index.jsp\"/>,输出/项目名/index.jsp\n\t\tvalue:指定一个路径，它会在前面自动添加项目名。\n\t\t子标签<c:param>,用来给url后面添加参数，例如\n\t\t<c:url value=\"/index.jsp\">\n\t\t\t<c:param name=\"username\" value=\"张三\"/> <!--可以对参数进行url编码!!-->\n\t\t</c:url>\n\t\t结果为：/项目名/index.jsp?username=%ED%2C....\n\t\tvar:指定变量名，一旦添加了这个属性，那么url标签就不会再输出到页面，而是把生成url保存到域中。\n\t\tscope：它与var一起使用，用来保存url。\n\n\t<c:if test=\"boolean\">...</c:if>\n\n\t<c:choose>\n\t\t<c:when test=\"\">...</c:when>\n\t\t<c:when test=\"\">...</c:when>\n\t\t<c:when test=\"\">...</c:when>\n\t\t...\n\t\t<c:otherwise>...</c:otherwise>\n\t</c:choose>\n\n\t<c:forEach var=\"i\" begin=\"1\" end=\"10\" step=\"2\">\n\t\t${i}\n\t</c:forEach>\n\t<c:forEach items=\"${strs }\" var=\"str\">\n\t\t${str }<br/>\n\t</c:forEach>\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fee4jh1xnjj30hd06n75b.jpg)\n<hr>\n# fmt格式化库的标签\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fee4meto24j30cd06vgmn.jpg)\n<hr>\n# 自定义标签\n\t需要一个标签处理类\n\ttld文件，它是一个xml\n\t页面中使用<%@taglib%>来指定tld文件的位置\n\n\t这里不多写，需要看就去查day13.\n\n","source":"_posts/JSTL标签库.md","raw":"---\ntitle: JSTL标签库\ndate: 2017-04-07 11:00:38\ntags:\n- JSTL\n- Web\ntoc: true\n---\nJSTL标签库\n<!--more-->\n# JSTL简介\n\tJSTL是apache对EL表达式的扩展，一共有四大标签库\n\t1.core核心标签库\n\t2.fmt格式化标签库\n\t3.sql//过时\n\t4.xml//过时\n\t使用前要通过taglib指令导入标签库\n\t<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jstl/core\" %> \n<hr>\n# core标签库常用标签\n\t<c:out>\n\t\tvalue:可以是字符串常量，也可是EL表达式\n\t\tdefault:默认输出值\n\t\tescapeXml:默认为true，表示转义\n\n\t<c:set>\n\t\tvar：变量名\n\t\tvalue：变量值，也可是EL表达式\n\t\tscope：默认为page，可选值：page，request，session，application\n\n\t<c:remove>\n\t\tvar：变量名\n\t\tscope：不给值，表示删除所有域中的该名称的变量。\n\n\t<c:url value=\"/index.jsp\"/>,输出/项目名/index.jsp\n\t\tvalue:指定一个路径，它会在前面自动添加项目名。\n\t\t子标签<c:param>,用来给url后面添加参数，例如\n\t\t<c:url value=\"/index.jsp\">\n\t\t\t<c:param name=\"username\" value=\"张三\"/> <!--可以对参数进行url编码!!-->\n\t\t</c:url>\n\t\t结果为：/项目名/index.jsp?username=%ED%2C....\n\t\tvar:指定变量名，一旦添加了这个属性，那么url标签就不会再输出到页面，而是把生成url保存到域中。\n\t\tscope：它与var一起使用，用来保存url。\n\n\t<c:if test=\"boolean\">...</c:if>\n\n\t<c:choose>\n\t\t<c:when test=\"\">...</c:when>\n\t\t<c:when test=\"\">...</c:when>\n\t\t<c:when test=\"\">...</c:when>\n\t\t...\n\t\t<c:otherwise>...</c:otherwise>\n\t</c:choose>\n\n\t<c:forEach var=\"i\" begin=\"1\" end=\"10\" step=\"2\">\n\t\t${i}\n\t</c:forEach>\n\t<c:forEach items=\"${strs }\" var=\"str\">\n\t\t${str }<br/>\n\t</c:forEach>\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fee4jh1xnjj30hd06n75b.jpg)\n<hr>\n# fmt格式化库的标签\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fee4meto24j30cd06vgmn.jpg)\n<hr>\n# 自定义标签\n\t需要一个标签处理类\n\ttld文件，它是一个xml\n\t页面中使用<%@taglib%>来指定tld文件的位置\n\n\t这里不多写，需要看就去查day13.\n\n","slug":"JSTL标签库","published":1,"updated":"2018-01-20T06:44:37.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vl001044wat5dvweyi","content":"<p>JSTL标签库<br><a id=\"more\"></a></p>\n<h1 id=\"JSTL简介\"><a href=\"#JSTL简介\" class=\"headerlink\" title=\"JSTL简介\"></a>JSTL简介</h1><pre><code>JSTL是apache对EL表达式的扩展，一共有四大标签库\n1.core核心标签库\n2.fmt格式化标签库\n3.sql//过时\n4.xml//过时\n使用前要通过taglib指令导入标签库\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jstl/core&quot; %&gt; \n</code></pre><p><hr></p>\n<h1 id=\"core标签库常用标签\"><a href=\"#core标签库常用标签\" class=\"headerlink\" title=\"core标签库常用标签\"></a>core标签库常用标签</h1><pre><code>&lt;c:out&gt;\n    value:可以是字符串常量，也可是EL表达式\n    default:默认输出值\n    escapeXml:默认为true，表示转义\n\n&lt;c:set&gt;\n    var：变量名\n    value：变量值，也可是EL表达式\n    scope：默认为page，可选值：page，request，session，application\n\n&lt;c:remove&gt;\n    var：变量名\n    scope：不给值，表示删除所有域中的该名称的变量。\n\n&lt;c:url value=&quot;/index.jsp&quot;/&gt;,输出/项目名/index.jsp\n    value:指定一个路径，它会在前面自动添加项目名。\n    子标签&lt;c:param&gt;,用来给url后面添加参数，例如\n    &lt;c:url value=&quot;/index.jsp&quot;&gt;\n        &lt;c:param name=&quot;username&quot; value=&quot;张三&quot;/&gt; &lt;!--可以对参数进行url编码!!--&gt;\n    &lt;/c:url&gt;\n    结果为：/项目名/index.jsp?username=%ED%2C....\n    var:指定变量名，一旦添加了这个属性，那么url标签就不会再输出到页面，而是把生成url保存到域中。\n    scope：它与var一起使用，用来保存url。\n\n&lt;c:if test=&quot;boolean&quot;&gt;...&lt;/c:if&gt;\n\n&lt;c:choose&gt;\n    &lt;c:when test=&quot;&quot;&gt;...&lt;/c:when&gt;\n    &lt;c:when test=&quot;&quot;&gt;...&lt;/c:when&gt;\n    &lt;c:when test=&quot;&quot;&gt;...&lt;/c:when&gt;\n    ...\n    &lt;c:otherwise&gt;...&lt;/c:otherwise&gt;\n&lt;/c:choose&gt;\n\n&lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;10&quot; step=&quot;2&quot;&gt;\n    ${i}\n&lt;/c:forEach&gt;\n&lt;c:forEach items=&quot;${strs }&quot; var=&quot;str&quot;&gt;\n    ${str }&lt;br/&gt;\n&lt;/c:forEach&gt;\n</code></pre><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fee4jh1xnjj30hd06n75b.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"fmt格式化库的标签\"><a href=\"#fmt格式化库的标签\" class=\"headerlink\" title=\"fmt格式化库的标签\"></a>fmt格式化库的标签</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fee4meto24j30cd06vgmn.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"自定义标签\"><a href=\"#自定义标签\" class=\"headerlink\" title=\"自定义标签\"></a>自定义标签</h1><pre><code>需要一个标签处理类\ntld文件，它是一个xml\n页面中使用&lt;%@taglib%&gt;来指定tld文件的位置\n\n这里不多写，需要看就去查day13.\n</code></pre>","excerpt":"<p>JSTL标签库<br>","more":"</p>\n<h1 id=\"JSTL简介\"><a href=\"#JSTL简介\" class=\"headerlink\" title=\"JSTL简介\"></a>JSTL简介</h1><pre><code>JSTL是apache对EL表达式的扩展，一共有四大标签库\n1.core核心标签库\n2.fmt格式化标签库\n3.sql//过时\n4.xml//过时\n使用前要通过taglib指令导入标签库\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jstl/core&quot; %&gt; \n</code></pre><p><hr></p>\n<h1 id=\"core标签库常用标签\"><a href=\"#core标签库常用标签\" class=\"headerlink\" title=\"core标签库常用标签\"></a>core标签库常用标签</h1><pre><code>&lt;c:out&gt;\n    value:可以是字符串常量，也可是EL表达式\n    default:默认输出值\n    escapeXml:默认为true，表示转义\n\n&lt;c:set&gt;\n    var：变量名\n    value：变量值，也可是EL表达式\n    scope：默认为page，可选值：page，request，session，application\n\n&lt;c:remove&gt;\n    var：变量名\n    scope：不给值，表示删除所有域中的该名称的变量。\n\n&lt;c:url value=&quot;/index.jsp&quot;/&gt;,输出/项目名/index.jsp\n    value:指定一个路径，它会在前面自动添加项目名。\n    子标签&lt;c:param&gt;,用来给url后面添加参数，例如\n    &lt;c:url value=&quot;/index.jsp&quot;&gt;\n        &lt;c:param name=&quot;username&quot; value=&quot;张三&quot;/&gt; &lt;!--可以对参数进行url编码!!--&gt;\n    &lt;/c:url&gt;\n    结果为：/项目名/index.jsp?username=%ED%2C....\n    var:指定变量名，一旦添加了这个属性，那么url标签就不会再输出到页面，而是把生成url保存到域中。\n    scope：它与var一起使用，用来保存url。\n\n&lt;c:if test=&quot;boolean&quot;&gt;...&lt;/c:if&gt;\n\n&lt;c:choose&gt;\n    &lt;c:when test=&quot;&quot;&gt;...&lt;/c:when&gt;\n    &lt;c:when test=&quot;&quot;&gt;...&lt;/c:when&gt;\n    &lt;c:when test=&quot;&quot;&gt;...&lt;/c:when&gt;\n    ...\n    &lt;c:otherwise&gt;...&lt;/c:otherwise&gt;\n&lt;/c:choose&gt;\n\n&lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;10&quot; step=&quot;2&quot;&gt;\n    ${i}\n&lt;/c:forEach&gt;\n&lt;c:forEach items=&quot;${strs }&quot; var=&quot;str&quot;&gt;\n    ${str }&lt;br/&gt;\n&lt;/c:forEach&gt;\n</code></pre><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fee4jh1xnjj30hd06n75b.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"fmt格式化库的标签\"><a href=\"#fmt格式化库的标签\" class=\"headerlink\" title=\"fmt格式化库的标签\"></a>fmt格式化库的标签</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fee4meto24j30cd06vgmn.jpg\" alt=\"\"></p>\n<p><hr></p>\n<h1 id=\"自定义标签\"><a href=\"#自定义标签\" class=\"headerlink\" title=\"自定义标签\"></a>自定义标签</h1><pre><code>需要一个标签处理类\ntld文件，它是一个xml\n页面中使用&lt;%@taglib%&gt;来指定tld文件的位置\n\n这里不多写，需要看就去查day13.\n</code></pre>"},{"title":"JS学习笔记1","date":"2017-03-17T08:01:18.000Z","toc":true,"_content":"\n\nJS基础\n<!--more-->\n# JS的原始类型\n\tstring\t\n\tnumber\n\tboolean\n\tnull\n\tundifined\n\t\ttypeof();查看当前变量的数据类型\n# JS的语句\n\tif判断语句\n\tswitch语句\n\t循环语句 for while do-while\n\t\t以上同Java\n# JS的运算符\n\t1.js里面不区分整数和小数\n\t\tvar j = 123;\n\t\talert(j/1000*1000);\n\t\t\t//Java里面结果为0\n\t\t\t//JS里面结果为123\n\t2.字符串加减操作\n\t\tvar str = \"123\";\n\t\talert(str+1);\n\t\t\t\t//同Java，结果为1231\n\t\talert(str-1);\n\t\t\t\t//做减法运算，结果为122\n\t3.输出语句\n\t\tdocument.write(\"aaa\");\t//内容\n\t\tdocument.write(\"html语句\");\t//html语句\n# JS的数组\n\t1.定义方式\n\t\t第一种: var arr = [1,2,3];\tvar arr = [1,\"4\",true];\n\t\t第二种: var arr1 = new Array(5);\n\t\t\tarr1[0] = \"1\";\n\t\t第三种: var arr2 = new Array(3,4,5);\n\t2.arr.length可以获取数组长度\n# JS的函数\n\t1.方式一\n\t\tfunction 方法名(参数列表){\n\t\t\t方法体;\n\t\t\t返回值可有可无(根据实际需要);\n\t\t}\n\t2.方式二\n\t\t匿名函数\n\t\tvar add = function(参数列表){\n\t\t\t方法体和返回值\n\t\t}\t\n\t3.方式三\n\t\tnew Function(\"参数列表\",\"方法体和返回值\");","source":"_posts/JS学习笔记1.md","raw":"---\ntitle: JS学习笔记1\ndate: 2017-03-17 16:01:18\ntags:\n- JS\n- Web\ntoc: true\n---\n\n\nJS基础\n<!--more-->\n# JS的原始类型\n\tstring\t\n\tnumber\n\tboolean\n\tnull\n\tundifined\n\t\ttypeof();查看当前变量的数据类型\n# JS的语句\n\tif判断语句\n\tswitch语句\n\t循环语句 for while do-while\n\t\t以上同Java\n# JS的运算符\n\t1.js里面不区分整数和小数\n\t\tvar j = 123;\n\t\talert(j/1000*1000);\n\t\t\t//Java里面结果为0\n\t\t\t//JS里面结果为123\n\t2.字符串加减操作\n\t\tvar str = \"123\";\n\t\talert(str+1);\n\t\t\t\t//同Java，结果为1231\n\t\talert(str-1);\n\t\t\t\t//做减法运算，结果为122\n\t3.输出语句\n\t\tdocument.write(\"aaa\");\t//内容\n\t\tdocument.write(\"html语句\");\t//html语句\n# JS的数组\n\t1.定义方式\n\t\t第一种: var arr = [1,2,3];\tvar arr = [1,\"4\",true];\n\t\t第二种: var arr1 = new Array(5);\n\t\t\tarr1[0] = \"1\";\n\t\t第三种: var arr2 = new Array(3,4,5);\n\t2.arr.length可以获取数组长度\n# JS的函数\n\t1.方式一\n\t\tfunction 方法名(参数列表){\n\t\t\t方法体;\n\t\t\t返回值可有可无(根据实际需要);\n\t\t}\n\t2.方式二\n\t\t匿名函数\n\t\tvar add = function(参数列表){\n\t\t\t方法体和返回值\n\t\t}\t\n\t3.方式三\n\t\tnew Function(\"参数列表\",\"方法体和返回值\");","slug":"JS学习笔记1","published":1,"updated":"2018-01-20T06:44:37.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vm001244waa8spq73l","content":"<p>JS基础<br><a id=\"more\"></a></p>\n<h1 id=\"JS的原始类型\"><a href=\"#JS的原始类型\" class=\"headerlink\" title=\"JS的原始类型\"></a>JS的原始类型</h1><pre><code>string    \nnumber\nboolean\nnull\nundifined\n    typeof();查看当前变量的数据类型\n</code></pre><h1 id=\"JS的语句\"><a href=\"#JS的语句\" class=\"headerlink\" title=\"JS的语句\"></a>JS的语句</h1><pre><code>if判断语句\nswitch语句\n循环语句 for while do-while\n    以上同Java\n</code></pre><h1 id=\"JS的运算符\"><a href=\"#JS的运算符\" class=\"headerlink\" title=\"JS的运算符\"></a>JS的运算符</h1><pre><code>1.js里面不区分整数和小数\n    var j = 123;\n    alert(j/1000*1000);\n        //Java里面结果为0\n        //JS里面结果为123\n2.字符串加减操作\n    var str = &quot;123&quot;;\n    alert(str+1);\n            //同Java，结果为1231\n    alert(str-1);\n            //做减法运算，结果为122\n3.输出语句\n    document.write(&quot;aaa&quot;);    //内容\n    document.write(&quot;html语句&quot;);    //html语句\n</code></pre><h1 id=\"JS的数组\"><a href=\"#JS的数组\" class=\"headerlink\" title=\"JS的数组\"></a>JS的数组</h1><pre><code>1.定义方式\n    第一种: var arr = [1,2,3];    var arr = [1,&quot;4&quot;,true];\n    第二种: var arr1 = new Array(5);\n        arr1[0] = &quot;1&quot;;\n    第三种: var arr2 = new Array(3,4,5);\n2.arr.length可以获取数组长度\n</code></pre><h1 id=\"JS的函数\"><a href=\"#JS的函数\" class=\"headerlink\" title=\"JS的函数\"></a>JS的函数</h1><pre><code>1.方式一\n    function 方法名(参数列表){\n        方法体;\n        返回值可有可无(根据实际需要);\n    }\n2.方式二\n    匿名函数\n    var add = function(参数列表){\n        方法体和返回值\n    }    \n3.方式三\n    new Function(&quot;参数列表&quot;,&quot;方法体和返回值&quot;);\n</code></pre>","excerpt":"<p>JS基础<br>","more":"</p>\n<h1 id=\"JS的原始类型\"><a href=\"#JS的原始类型\" class=\"headerlink\" title=\"JS的原始类型\"></a>JS的原始类型</h1><pre><code>string    \nnumber\nboolean\nnull\nundifined\n    typeof();查看当前变量的数据类型\n</code></pre><h1 id=\"JS的语句\"><a href=\"#JS的语句\" class=\"headerlink\" title=\"JS的语句\"></a>JS的语句</h1><pre><code>if判断语句\nswitch语句\n循环语句 for while do-while\n    以上同Java\n</code></pre><h1 id=\"JS的运算符\"><a href=\"#JS的运算符\" class=\"headerlink\" title=\"JS的运算符\"></a>JS的运算符</h1><pre><code>1.js里面不区分整数和小数\n    var j = 123;\n    alert(j/1000*1000);\n        //Java里面结果为0\n        //JS里面结果为123\n2.字符串加减操作\n    var str = &quot;123&quot;;\n    alert(str+1);\n            //同Java，结果为1231\n    alert(str-1);\n            //做减法运算，结果为122\n3.输出语句\n    document.write(&quot;aaa&quot;);    //内容\n    document.write(&quot;html语句&quot;);    //html语句\n</code></pre><h1 id=\"JS的数组\"><a href=\"#JS的数组\" class=\"headerlink\" title=\"JS的数组\"></a>JS的数组</h1><pre><code>1.定义方式\n    第一种: var arr = [1,2,3];    var arr = [1,&quot;4&quot;,true];\n    第二种: var arr1 = new Array(5);\n        arr1[0] = &quot;1&quot;;\n    第三种: var arr2 = new Array(3,4,5);\n2.arr.length可以获取数组长度\n</code></pre><h1 id=\"JS的函数\"><a href=\"#JS的函数\" class=\"headerlink\" title=\"JS的函数\"></a>JS的函数</h1><pre><code>1.方式一\n    function 方法名(参数列表){\n        方法体;\n        返回值可有可无(根据实际需要);\n    }\n2.方式二\n    匿名函数\n    var add = function(参数列表){\n        方法体和返回值\n    }    \n3.方式三\n    new Function(&quot;参数列表&quot;,&quot;方法体和返回值&quot;);\n</code></pre>"},{"title":"JS学习笔记4","date":"2017-03-20T11:41:53.000Z","toc":true,"_content":"\n\nelement对象,Node对象,操作DOM树,innerHTML属性\n<!--more-->\n# element对象\n\t获取属性里面的值\n\t\tgetAttribute(\"属性名称\")\n\t\tvar input1 = document.getElementById(\"inputid\");\n\t\talert(input1.getAttribute(\"value\"));\n\t设置属性的值\n\t\tinput1.setAttribute(\"class\",\"haha\");\n\t删除属性\n\t\tinput1.removeAttribute(\"name\");\n\t\t//不能删除value\n\t获取标签下面的子标签\n\t\t使用属性childNodes,但是这个属性兼容性很差\n\t\t获得标签下面子标签的唯一有效方法，使用getElementsByTagName方法\n\n# Node对象\n\tnodeName\n\tnodeType\n\tnodeValue\n\t\n\t使用dom解析html时候,需要html里面的标签,属性和文本都封装成对象\n\t\n\t标签节点对应的值\n\t\tnodeName: 1\n\t\tnodeType: 大写标签名称 SPAN\n\t\tnodeValue: null\n\t属性节点对应的值\n\t\tnodeName: 2\n\t\tnodeType: 属性名称\n\t\tnodeValue: 属性的值\n\t文本节点对应的值\n\t\tnodeName: 3\n\t\tnodeType: 属性名称\n\t\tnodeValue: 属性的值\n\t\n\t父节点\n\t\tparentNode\n\t子节点\n\t\tchildNodes: 得到所有子节点，但是兼容性很差\n\t\t\n\t\tfirstChild: 获取第一个子节点\n\t\tlastChild: 获取最后一个子节点\n\t\t\n\t同辈节点\n\t\tnextSibling: 返回一个给定节点的下一个兄弟节点\n\t\tpreviousSibling: 返回一个给定节点的上一个兄弟节点\n# 操作DOM树\n\tappendChild方法\n\t\t添加子节点到末尾\n\t\t特点: 类似于剪切粘贴\n\tinsertBefore(newNode,oldNode)方法\n\t\t在某个节点之前插入一个新的节点\n\tremoveChild方法: 删除节点\n\t\t通过父节点删除,不能自己删除自己\n\treplaceChild(newNode,oldNode)方法: 替换节点\n\t\t通过父节点替换,不能自己替换自己\n\tcloneNode(boolean): 复制节点\n\t\ttrue表示复制子节点\n\t\tfalse表示不复制子节点\n# innerHTML属性\n\t不是DOM组成部分\n\t第一个作用: 获取文本内容\n\t\tvar span1 = document.getElementById(\"sid\");\n\t\talert(span1.innerHTML);\n\t第二个作用: 向标签里面设置内容(可以使html代码)\n\t\tvar div1 = document.getElementById(\"div1\");\n\t\tdiv1.innerHTML = \"<h1>AAAA</h1>\";\n\t\n","source":"_posts/JS学习笔记4.md","raw":"---\ntitle: JS学习笔记4\ndate: 2017-03-20 19:41:53\ntags:\n- JS\n- Web\ntoc: true\n---\n\n\nelement对象,Node对象,操作DOM树,innerHTML属性\n<!--more-->\n# element对象\n\t获取属性里面的值\n\t\tgetAttribute(\"属性名称\")\n\t\tvar input1 = document.getElementById(\"inputid\");\n\t\talert(input1.getAttribute(\"value\"));\n\t设置属性的值\n\t\tinput1.setAttribute(\"class\",\"haha\");\n\t删除属性\n\t\tinput1.removeAttribute(\"name\");\n\t\t//不能删除value\n\t获取标签下面的子标签\n\t\t使用属性childNodes,但是这个属性兼容性很差\n\t\t获得标签下面子标签的唯一有效方法，使用getElementsByTagName方法\n\n# Node对象\n\tnodeName\n\tnodeType\n\tnodeValue\n\t\n\t使用dom解析html时候,需要html里面的标签,属性和文本都封装成对象\n\t\n\t标签节点对应的值\n\t\tnodeName: 1\n\t\tnodeType: 大写标签名称 SPAN\n\t\tnodeValue: null\n\t属性节点对应的值\n\t\tnodeName: 2\n\t\tnodeType: 属性名称\n\t\tnodeValue: 属性的值\n\t文本节点对应的值\n\t\tnodeName: 3\n\t\tnodeType: 属性名称\n\t\tnodeValue: 属性的值\n\t\n\t父节点\n\t\tparentNode\n\t子节点\n\t\tchildNodes: 得到所有子节点，但是兼容性很差\n\t\t\n\t\tfirstChild: 获取第一个子节点\n\t\tlastChild: 获取最后一个子节点\n\t\t\n\t同辈节点\n\t\tnextSibling: 返回一个给定节点的下一个兄弟节点\n\t\tpreviousSibling: 返回一个给定节点的上一个兄弟节点\n# 操作DOM树\n\tappendChild方法\n\t\t添加子节点到末尾\n\t\t特点: 类似于剪切粘贴\n\tinsertBefore(newNode,oldNode)方法\n\t\t在某个节点之前插入一个新的节点\n\tremoveChild方法: 删除节点\n\t\t通过父节点删除,不能自己删除自己\n\treplaceChild(newNode,oldNode)方法: 替换节点\n\t\t通过父节点替换,不能自己替换自己\n\tcloneNode(boolean): 复制节点\n\t\ttrue表示复制子节点\n\t\tfalse表示不复制子节点\n# innerHTML属性\n\t不是DOM组成部分\n\t第一个作用: 获取文本内容\n\t\tvar span1 = document.getElementById(\"sid\");\n\t\talert(span1.innerHTML);\n\t第二个作用: 向标签里面设置内容(可以使html代码)\n\t\tvar div1 = document.getElementById(\"div1\");\n\t\tdiv1.innerHTML = \"<h1>AAAA</h1>\";\n\t\n","slug":"JS学习笔记4","published":1,"updated":"2018-01-20T06:44:37.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vo001544wa43lks755","content":"<p>element对象,Node对象,操作DOM树,innerHTML属性<br><a id=\"more\"></a></p>\n<h1 id=\"element对象\"><a href=\"#element对象\" class=\"headerlink\" title=\"element对象\"></a>element对象</h1><pre><code>获取属性里面的值\n    getAttribute(&quot;属性名称&quot;)\n    var input1 = document.getElementById(&quot;inputid&quot;);\n    alert(input1.getAttribute(&quot;value&quot;));\n设置属性的值\n    input1.setAttribute(&quot;class&quot;,&quot;haha&quot;);\n删除属性\n    input1.removeAttribute(&quot;name&quot;);\n    //不能删除value\n获取标签下面的子标签\n    使用属性childNodes,但是这个属性兼容性很差\n    获得标签下面子标签的唯一有效方法，使用getElementsByTagName方法\n</code></pre><h1 id=\"Node对象\"><a href=\"#Node对象\" class=\"headerlink\" title=\"Node对象\"></a>Node对象</h1><pre><code>nodeName\nnodeType\nnodeValue\n\n使用dom解析html时候,需要html里面的标签,属性和文本都封装成对象\n\n标签节点对应的值\n    nodeName: 1\n    nodeType: 大写标签名称 SPAN\n    nodeValue: null\n属性节点对应的值\n    nodeName: 2\n    nodeType: 属性名称\n    nodeValue: 属性的值\n文本节点对应的值\n    nodeName: 3\n    nodeType: 属性名称\n    nodeValue: 属性的值\n\n父节点\n    parentNode\n子节点\n    childNodes: 得到所有子节点，但是兼容性很差\n\n    firstChild: 获取第一个子节点\n    lastChild: 获取最后一个子节点\n\n同辈节点\n    nextSibling: 返回一个给定节点的下一个兄弟节点\n    previousSibling: 返回一个给定节点的上一个兄弟节点\n</code></pre><h1 id=\"操作DOM树\"><a href=\"#操作DOM树\" class=\"headerlink\" title=\"操作DOM树\"></a>操作DOM树</h1><pre><code>appendChild方法\n    添加子节点到末尾\n    特点: 类似于剪切粘贴\ninsertBefore(newNode,oldNode)方法\n    在某个节点之前插入一个新的节点\nremoveChild方法: 删除节点\n    通过父节点删除,不能自己删除自己\nreplaceChild(newNode,oldNode)方法: 替换节点\n    通过父节点替换,不能自己替换自己\ncloneNode(boolean): 复制节点\n    true表示复制子节点\n    false表示不复制子节点\n</code></pre><h1 id=\"innerHTML属性\"><a href=\"#innerHTML属性\" class=\"headerlink\" title=\"innerHTML属性\"></a>innerHTML属性</h1><pre><code>不是DOM组成部分\n第一个作用: 获取文本内容\n    var span1 = document.getElementById(&quot;sid&quot;);\n    alert(span1.innerHTML);\n第二个作用: 向标签里面设置内容(可以使html代码)\n    var div1 = document.getElementById(&quot;div1&quot;);\n    div1.innerHTML = &quot;&lt;h1&gt;AAAA&lt;/h1&gt;&quot;;\n</code></pre>","excerpt":"<p>element对象,Node对象,操作DOM树,innerHTML属性<br>","more":"</p>\n<h1 id=\"element对象\"><a href=\"#element对象\" class=\"headerlink\" title=\"element对象\"></a>element对象</h1><pre><code>获取属性里面的值\n    getAttribute(&quot;属性名称&quot;)\n    var input1 = document.getElementById(&quot;inputid&quot;);\n    alert(input1.getAttribute(&quot;value&quot;));\n设置属性的值\n    input1.setAttribute(&quot;class&quot;,&quot;haha&quot;);\n删除属性\n    input1.removeAttribute(&quot;name&quot;);\n    //不能删除value\n获取标签下面的子标签\n    使用属性childNodes,但是这个属性兼容性很差\n    获得标签下面子标签的唯一有效方法，使用getElementsByTagName方法\n</code></pre><h1 id=\"Node对象\"><a href=\"#Node对象\" class=\"headerlink\" title=\"Node对象\"></a>Node对象</h1><pre><code>nodeName\nnodeType\nnodeValue\n\n使用dom解析html时候,需要html里面的标签,属性和文本都封装成对象\n\n标签节点对应的值\n    nodeName: 1\n    nodeType: 大写标签名称 SPAN\n    nodeValue: null\n属性节点对应的值\n    nodeName: 2\n    nodeType: 属性名称\n    nodeValue: 属性的值\n文本节点对应的值\n    nodeName: 3\n    nodeType: 属性名称\n    nodeValue: 属性的值\n\n父节点\n    parentNode\n子节点\n    childNodes: 得到所有子节点，但是兼容性很差\n\n    firstChild: 获取第一个子节点\n    lastChild: 获取最后一个子节点\n\n同辈节点\n    nextSibling: 返回一个给定节点的下一个兄弟节点\n    previousSibling: 返回一个给定节点的上一个兄弟节点\n</code></pre><h1 id=\"操作DOM树\"><a href=\"#操作DOM树\" class=\"headerlink\" title=\"操作DOM树\"></a>操作DOM树</h1><pre><code>appendChild方法\n    添加子节点到末尾\n    特点: 类似于剪切粘贴\ninsertBefore(newNode,oldNode)方法\n    在某个节点之前插入一个新的节点\nremoveChild方法: 删除节点\n    通过父节点删除,不能自己删除自己\nreplaceChild(newNode,oldNode)方法: 替换节点\n    通过父节点替换,不能自己替换自己\ncloneNode(boolean): 复制节点\n    true表示复制子节点\n    false表示不复制子节点\n</code></pre><h1 id=\"innerHTML属性\"><a href=\"#innerHTML属性\" class=\"headerlink\" title=\"innerHTML属性\"></a>innerHTML属性</h1><pre><code>不是DOM组成部分\n第一个作用: 获取文本内容\n    var span1 = document.getElementById(&quot;sid&quot;);\n    alert(span1.innerHTML);\n第二个作用: 向标签里面设置内容(可以使html代码)\n    var div1 = document.getElementById(&quot;div1&quot;);\n    div1.innerHTML = &quot;&lt;h1&gt;AAAA&lt;/h1&gt;&quot;;\n</code></pre>"},{"title":"JS学习笔记2","date":"2017-03-20T04:09:08.000Z","toc":true,"_content":"\n\nString,Array,Date,Math等\n<!--more-->\n# JS的String对象\n\t1.与html相关的方法\n\t\tbold(): 加粗\n\t\tfontcolor(): 设置字符串的颜色\n\t\tfontsize(): 设置字体的大小\n\t\tlink(): 将字符串显示成超链接\n\t\t\tstr.link(\"hello.html\")\n\t\tsub() sup(): 下标和上标\n\t2.与Java相似的方法\n\t\tconcat(): 连接字符串\n\t\tcharAt(): 返回指定位置的字符\n\t\tindexOf(): 返回字符的位置\n\t\tsplit(): 切分字符串为数组\n\t\t\tvar str = \"a-b-c-d\";\n\t\t\tvar arr = str.split(\"-\");\n\t\treplace(): 替换字符串\n\t\t\tvar str2 = \"abc\";\n\t\t\tstr2.replace(\"a\",\"A\");\n\t\t\t\t//str2为\"Abc\"\n\t\tsubstr()和substring()\n\t\t\tstr.substr(1,2);\n\t\t\t\t//从第1位开始，向后截取2位\n\t\t\tstr.substring(1,3)\n\t\t\t\t//从第1位开始到第3位结束，不包含最后一位\n# JS的Array对象\n\tconcat(): 数组的连接\n\tjoin(): 根据指定的字符分割数组（默认为\",\"）\n\tpush(): 向数组末尾添加元素，返回数组的新的长度\n\t\t//如果push的是一个数组,这个时候会把数组看成1个字符串添加进去\n\tpop(): 删除最后一个元素，返回删除的那个元素\n\treverse(): 颠倒数组\n# JS的Date对象\n\t1.JS获取当前时间\n\t\tvar date = new Date();\n\t\tdocument.write(date);\n\t\tdocument.write(date.toLocaleString());//转换为常见格式\n\t2.JS的方法\n\t\tgetFullYear(): 得到当前的年\n\t\tgetMonth(): 得到当前的月(0-11)\n\t\tgetDay(): 星期(0-6)\n\t\tgetDate(): 当前的天\n\t\tgetHours(): 小时\t\n\t\tgetMinutes(): 分钟\n\t\tgetSeconds(): 秒\n\t\tgetTime(): 毫秒\n# JS的Math对象\n\t同Java\n# JS的全局函数\n\teval(): 执行JS代码\n\t\teval(\"alert('123');\");\n\tencodeURI(): 对字符进行编码\n\tdecodeURI(): 对字符进行解码\n\tisNaN(): 判断当前字符串是否是数字\n\tparseInt(): 类型转换\n# JS的函数重载\n\tJS不存在函数重载\n\t通过arguments数组模拟重载","source":"_posts/JS学习笔记2.md","raw":"---\ntitle: JS学习笔记2\ndate: 2017-03-20 12:09:08\ntags:\n- JS\n- Web\ntoc: true\n---\n\n\nString,Array,Date,Math等\n<!--more-->\n# JS的String对象\n\t1.与html相关的方法\n\t\tbold(): 加粗\n\t\tfontcolor(): 设置字符串的颜色\n\t\tfontsize(): 设置字体的大小\n\t\tlink(): 将字符串显示成超链接\n\t\t\tstr.link(\"hello.html\")\n\t\tsub() sup(): 下标和上标\n\t2.与Java相似的方法\n\t\tconcat(): 连接字符串\n\t\tcharAt(): 返回指定位置的字符\n\t\tindexOf(): 返回字符的位置\n\t\tsplit(): 切分字符串为数组\n\t\t\tvar str = \"a-b-c-d\";\n\t\t\tvar arr = str.split(\"-\");\n\t\treplace(): 替换字符串\n\t\t\tvar str2 = \"abc\";\n\t\t\tstr2.replace(\"a\",\"A\");\n\t\t\t\t//str2为\"Abc\"\n\t\tsubstr()和substring()\n\t\t\tstr.substr(1,2);\n\t\t\t\t//从第1位开始，向后截取2位\n\t\t\tstr.substring(1,3)\n\t\t\t\t//从第1位开始到第3位结束，不包含最后一位\n# JS的Array对象\n\tconcat(): 数组的连接\n\tjoin(): 根据指定的字符分割数组（默认为\",\"）\n\tpush(): 向数组末尾添加元素，返回数组的新的长度\n\t\t//如果push的是一个数组,这个时候会把数组看成1个字符串添加进去\n\tpop(): 删除最后一个元素，返回删除的那个元素\n\treverse(): 颠倒数组\n# JS的Date对象\n\t1.JS获取当前时间\n\t\tvar date = new Date();\n\t\tdocument.write(date);\n\t\tdocument.write(date.toLocaleString());//转换为常见格式\n\t2.JS的方法\n\t\tgetFullYear(): 得到当前的年\n\t\tgetMonth(): 得到当前的月(0-11)\n\t\tgetDay(): 星期(0-6)\n\t\tgetDate(): 当前的天\n\t\tgetHours(): 小时\t\n\t\tgetMinutes(): 分钟\n\t\tgetSeconds(): 秒\n\t\tgetTime(): 毫秒\n# JS的Math对象\n\t同Java\n# JS的全局函数\n\teval(): 执行JS代码\n\t\teval(\"alert('123');\");\n\tencodeURI(): 对字符进行编码\n\tdecodeURI(): 对字符进行解码\n\tisNaN(): 判断当前字符串是否是数字\n\tparseInt(): 类型转换\n# JS的函数重载\n\tJS不存在函数重载\n\t通过arguments数组模拟重载","slug":"JS学习笔记2","published":1,"updated":"2018-01-20T06:44:37.538Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vp001744wam6q1g82x","content":"<p>String,Array,Date,Math等<br><a id=\"more\"></a></p>\n<h1 id=\"JS的String对象\"><a href=\"#JS的String对象\" class=\"headerlink\" title=\"JS的String对象\"></a>JS的String对象</h1><pre><code>1.与html相关的方法\n    bold(): 加粗\n    fontcolor(): 设置字符串的颜色\n    fontsize(): 设置字体的大小\n    link(): 将字符串显示成超链接\n        str.link(&quot;hello.html&quot;)\n    sub() sup(): 下标和上标\n2.与Java相似的方法\n    concat(): 连接字符串\n    charAt(): 返回指定位置的字符\n    indexOf(): 返回字符的位置\n    split(): 切分字符串为数组\n        var str = &quot;a-b-c-d&quot;;\n        var arr = str.split(&quot;-&quot;);\n    replace(): 替换字符串\n        var str2 = &quot;abc&quot;;\n        str2.replace(&quot;a&quot;,&quot;A&quot;);\n            //str2为&quot;Abc&quot;\n    substr()和substring()\n        str.substr(1,2);\n            //从第1位开始，向后截取2位\n        str.substring(1,3)\n            //从第1位开始到第3位结束，不包含最后一位\n</code></pre><h1 id=\"JS的Array对象\"><a href=\"#JS的Array对象\" class=\"headerlink\" title=\"JS的Array对象\"></a>JS的Array对象</h1><pre><code>concat(): 数组的连接\njoin(): 根据指定的字符分割数组（默认为&quot;,&quot;）\npush(): 向数组末尾添加元素，返回数组的新的长度\n    //如果push的是一个数组,这个时候会把数组看成1个字符串添加进去\npop(): 删除最后一个元素，返回删除的那个元素\nreverse(): 颠倒数组\n</code></pre><h1 id=\"JS的Date对象\"><a href=\"#JS的Date对象\" class=\"headerlink\" title=\"JS的Date对象\"></a>JS的Date对象</h1><pre><code>1.JS获取当前时间\n    var date = new Date();\n    document.write(date);\n    document.write(date.toLocaleString());//转换为常见格式\n2.JS的方法\n    getFullYear(): 得到当前的年\n    getMonth(): 得到当前的月(0-11)\n    getDay(): 星期(0-6)\n    getDate(): 当前的天\n    getHours(): 小时    \n    getMinutes(): 分钟\n    getSeconds(): 秒\n    getTime(): 毫秒\n</code></pre><h1 id=\"JS的Math对象\"><a href=\"#JS的Math对象\" class=\"headerlink\" title=\"JS的Math对象\"></a>JS的Math对象</h1><pre><code>同Java\n</code></pre><h1 id=\"JS的全局函数\"><a href=\"#JS的全局函数\" class=\"headerlink\" title=\"JS的全局函数\"></a>JS的全局函数</h1><pre><code>eval(): 执行JS代码\n    eval(&quot;alert(&apos;123&apos;);&quot;);\nencodeURI(): 对字符进行编码\ndecodeURI(): 对字符进行解码\nisNaN(): 判断当前字符串是否是数字\nparseInt(): 类型转换\n</code></pre><h1 id=\"JS的函数重载\"><a href=\"#JS的函数重载\" class=\"headerlink\" title=\"JS的函数重载\"></a>JS的函数重载</h1><pre><code>JS不存在函数重载\n通过arguments数组模拟重载\n</code></pre>","excerpt":"<p>String,Array,Date,Math等<br>","more":"</p>\n<h1 id=\"JS的String对象\"><a href=\"#JS的String对象\" class=\"headerlink\" title=\"JS的String对象\"></a>JS的String对象</h1><pre><code>1.与html相关的方法\n    bold(): 加粗\n    fontcolor(): 设置字符串的颜色\n    fontsize(): 设置字体的大小\n    link(): 将字符串显示成超链接\n        str.link(&quot;hello.html&quot;)\n    sub() sup(): 下标和上标\n2.与Java相似的方法\n    concat(): 连接字符串\n    charAt(): 返回指定位置的字符\n    indexOf(): 返回字符的位置\n    split(): 切分字符串为数组\n        var str = &quot;a-b-c-d&quot;;\n        var arr = str.split(&quot;-&quot;);\n    replace(): 替换字符串\n        var str2 = &quot;abc&quot;;\n        str2.replace(&quot;a&quot;,&quot;A&quot;);\n            //str2为&quot;Abc&quot;\n    substr()和substring()\n        str.substr(1,2);\n            //从第1位开始，向后截取2位\n        str.substring(1,3)\n            //从第1位开始到第3位结束，不包含最后一位\n</code></pre><h1 id=\"JS的Array对象\"><a href=\"#JS的Array对象\" class=\"headerlink\" title=\"JS的Array对象\"></a>JS的Array对象</h1><pre><code>concat(): 数组的连接\njoin(): 根据指定的字符分割数组（默认为&quot;,&quot;）\npush(): 向数组末尾添加元素，返回数组的新的长度\n    //如果push的是一个数组,这个时候会把数组看成1个字符串添加进去\npop(): 删除最后一个元素，返回删除的那个元素\nreverse(): 颠倒数组\n</code></pre><h1 id=\"JS的Date对象\"><a href=\"#JS的Date对象\" class=\"headerlink\" title=\"JS的Date对象\"></a>JS的Date对象</h1><pre><code>1.JS获取当前时间\n    var date = new Date();\n    document.write(date);\n    document.write(date.toLocaleString());//转换为常见格式\n2.JS的方法\n    getFullYear(): 得到当前的年\n    getMonth(): 得到当前的月(0-11)\n    getDay(): 星期(0-6)\n    getDate(): 当前的天\n    getHours(): 小时    \n    getMinutes(): 分钟\n    getSeconds(): 秒\n    getTime(): 毫秒\n</code></pre><h1 id=\"JS的Math对象\"><a href=\"#JS的Math对象\" class=\"headerlink\" title=\"JS的Math对象\"></a>JS的Math对象</h1><pre><code>同Java\n</code></pre><h1 id=\"JS的全局函数\"><a href=\"#JS的全局函数\" class=\"headerlink\" title=\"JS的全局函数\"></a>JS的全局函数</h1><pre><code>eval(): 执行JS代码\n    eval(&quot;alert(&apos;123&apos;);&quot;);\nencodeURI(): 对字符进行编码\ndecodeURI(): 对字符进行解码\nisNaN(): 判断当前字符串是否是数字\nparseInt(): 类型转换\n</code></pre><h1 id=\"JS的函数重载\"><a href=\"#JS的函数重载\" class=\"headerlink\" title=\"JS的函数重载\"></a>JS的函数重载</h1><pre><code>JS不存在函数重载\n通过arguments数组模拟重载\n</code></pre>"},{"title":"JS学习笔记3之BOM，DOM对象","date":"2017-03-20T05:50:33.000Z","toc":true,"_content":"\n\nBOM,DOM\n<!--more-->\n# JS的BOM对象\n\tnavigator: 获取客户机的信息(浏览器的信息)\n\t\tdocument.write(navigator.appName);\n\tscreen: 获取屏幕信息\n\t\tdocument.write(screen.width);\n\tlocation: 请求url地址\n\t\tdocument.write(location.href);//获取请求的url地址\n\t\tlocation.href = \"hello.html\";//设置请求的url地址\n\thistory: 请求的url历史记录\n\t\thistory.back();//history.go(-1);\n\t\thistory.forward();//history.go(1);\n\twindow: 顶层对象\n\t\twindow.alert():\n\t\tconfirm(): 确认框\n\t\t\tvar flag = window.confirm(\"显示的内容\");\n\t\tprompt(): 输入的对话框\n\t\t\twindow.prompt(\"显示的内容\",\"输入框的默认值\");\n\t\topen(): 打开新的窗口\n\t\t\twindow.open(\"hello.html\",\"\",\"width=200,height=200\");\n\t\tclose(): 关闭窗口\n\t\t\twindow.close();\n\t\tsetInterval(): \n\t\t\twindow.setInterval(\"JS代码\",\"毫秒\");\n\t\t\t//每多少毫秒执行1次\n\t\tsetTimeout():\n\t\t\twindow.setTimeout(\"JS代码\",\"毫秒\");\n\t\t\t//多少毫秒后执行1次\n\t\tclearInterval(): 清除setInterval\n\t\t\tvar id = window.setInterval(\"JS代码\",\"毫秒\");\n\t\t\tclearInterval(id);\n\t\tclearTimeout(): 清除setTimeout\n\t\t\t同上\n# JS的DOM对象\n\tdocument.write();\n\tgetElementById();//返回指定ID的一个对象的引用\n\tgetElementByName();//返回指定NAME的对象集合的引用\n\tgetElementByTagName()://返回指定标签的对象集合","source":"_posts/JS学习笔记3之BOM,DOM对象.md","raw":"---\ntitle: JS学习笔记3之BOM，DOM对象\ndate: 2017-03-20 13:50:33\ntags:\n- JS\n- Web\ntoc: true\n---\n\n\nBOM,DOM\n<!--more-->\n# JS的BOM对象\n\tnavigator: 获取客户机的信息(浏览器的信息)\n\t\tdocument.write(navigator.appName);\n\tscreen: 获取屏幕信息\n\t\tdocument.write(screen.width);\n\tlocation: 请求url地址\n\t\tdocument.write(location.href);//获取请求的url地址\n\t\tlocation.href = \"hello.html\";//设置请求的url地址\n\thistory: 请求的url历史记录\n\t\thistory.back();//history.go(-1);\n\t\thistory.forward();//history.go(1);\n\twindow: 顶层对象\n\t\twindow.alert():\n\t\tconfirm(): 确认框\n\t\t\tvar flag = window.confirm(\"显示的内容\");\n\t\tprompt(): 输入的对话框\n\t\t\twindow.prompt(\"显示的内容\",\"输入框的默认值\");\n\t\topen(): 打开新的窗口\n\t\t\twindow.open(\"hello.html\",\"\",\"width=200,height=200\");\n\t\tclose(): 关闭窗口\n\t\t\twindow.close();\n\t\tsetInterval(): \n\t\t\twindow.setInterval(\"JS代码\",\"毫秒\");\n\t\t\t//每多少毫秒执行1次\n\t\tsetTimeout():\n\t\t\twindow.setTimeout(\"JS代码\",\"毫秒\");\n\t\t\t//多少毫秒后执行1次\n\t\tclearInterval(): 清除setInterval\n\t\t\tvar id = window.setInterval(\"JS代码\",\"毫秒\");\n\t\t\tclearInterval(id);\n\t\tclearTimeout(): 清除setTimeout\n\t\t\t同上\n# JS的DOM对象\n\tdocument.write();\n\tgetElementById();//返回指定ID的一个对象的引用\n\tgetElementByName();//返回指定NAME的对象集合的引用\n\tgetElementByTagName()://返回指定标签的对象集合","slug":"JS学习笔记3之BOM,DOM对象","published":1,"updated":"2018-01-20T06:44:37.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vq001944wap3sf0xce","content":"<p>BOM,DOM<br><a id=\"more\"></a></p>\n<h1 id=\"JS的BOM对象\"><a href=\"#JS的BOM对象\" class=\"headerlink\" title=\"JS的BOM对象\"></a>JS的BOM对象</h1><pre><code>navigator: 获取客户机的信息(浏览器的信息)\n    document.write(navigator.appName);\nscreen: 获取屏幕信息\n    document.write(screen.width);\nlocation: 请求url地址\n    document.write(location.href);//获取请求的url地址\n    location.href = &quot;hello.html&quot;;//设置请求的url地址\nhistory: 请求的url历史记录\n    history.back();//history.go(-1);\n    history.forward();//history.go(1);\nwindow: 顶层对象\n    window.alert():\n    confirm(): 确认框\n        var flag = window.confirm(&quot;显示的内容&quot;);\n    prompt(): 输入的对话框\n        window.prompt(&quot;显示的内容&quot;,&quot;输入框的默认值&quot;);\n    open(): 打开新的窗口\n        window.open(&quot;hello.html&quot;,&quot;&quot;,&quot;width=200,height=200&quot;);\n    close(): 关闭窗口\n        window.close();\n    setInterval(): \n        window.setInterval(&quot;JS代码&quot;,&quot;毫秒&quot;);\n        //每多少毫秒执行1次\n    setTimeout():\n        window.setTimeout(&quot;JS代码&quot;,&quot;毫秒&quot;);\n        //多少毫秒后执行1次\n    clearInterval(): 清除setInterval\n        var id = window.setInterval(&quot;JS代码&quot;,&quot;毫秒&quot;);\n        clearInterval(id);\n    clearTimeout(): 清除setTimeout\n        同上\n</code></pre><h1 id=\"JS的DOM对象\"><a href=\"#JS的DOM对象\" class=\"headerlink\" title=\"JS的DOM对象\"></a>JS的DOM对象</h1><pre><code>document.write();\ngetElementById();//返回指定ID的一个对象的引用\ngetElementByName();//返回指定NAME的对象集合的引用\ngetElementByTagName()://返回指定标签的对象集合\n</code></pre>","excerpt":"<p>BOM,DOM<br>","more":"</p>\n<h1 id=\"JS的BOM对象\"><a href=\"#JS的BOM对象\" class=\"headerlink\" title=\"JS的BOM对象\"></a>JS的BOM对象</h1><pre><code>navigator: 获取客户机的信息(浏览器的信息)\n    document.write(navigator.appName);\nscreen: 获取屏幕信息\n    document.write(screen.width);\nlocation: 请求url地址\n    document.write(location.href);//获取请求的url地址\n    location.href = &quot;hello.html&quot;;//设置请求的url地址\nhistory: 请求的url历史记录\n    history.back();//history.go(-1);\n    history.forward();//history.go(1);\nwindow: 顶层对象\n    window.alert():\n    confirm(): 确认框\n        var flag = window.confirm(&quot;显示的内容&quot;);\n    prompt(): 输入的对话框\n        window.prompt(&quot;显示的内容&quot;,&quot;输入框的默认值&quot;);\n    open(): 打开新的窗口\n        window.open(&quot;hello.html&quot;,&quot;&quot;,&quot;width=200,height=200&quot;);\n    close(): 关闭窗口\n        window.close();\n    setInterval(): \n        window.setInterval(&quot;JS代码&quot;,&quot;毫秒&quot;);\n        //每多少毫秒执行1次\n    setTimeout():\n        window.setTimeout(&quot;JS代码&quot;,&quot;毫秒&quot;);\n        //多少毫秒后执行1次\n    clearInterval(): 清除setInterval\n        var id = window.setInterval(&quot;JS代码&quot;,&quot;毫秒&quot;);\n        clearInterval(id);\n    clearTimeout(): 清除setTimeout\n        同上\n</code></pre><h1 id=\"JS的DOM对象\"><a href=\"#JS的DOM对象\" class=\"headerlink\" title=\"JS的DOM对象\"></a>JS的DOM对象</h1><pre><code>document.write();\ngetElementById();//返回指定ID的一个对象的引用\ngetElementByName();//返回指定NAME的对象集合的引用\ngetElementByTagName()://返回指定标签的对象集合\n</code></pre>"},{"title":"Java学习笔记List特有的功能","date":"2017-03-07T02:26:34.000Z","toc":true,"_content":"\n\nList特有的方法和并发修改异常\n<!--more-->\n# List特有的方法\n\tvoid add(int index,Object element):在指定位置添加元素\n\n\tObject get(int index):获取指定位置的元素\n\n\tListIterator listIterator():List集合特有的迭代器，可以逆向遍历，但是要先正向遍历，所以无意义，基本不使用。\n\n\tObject remove(int index):根据索引删除元素，返回被删除的元素\n\n\tObject set(int index,Object element):根据索引修改元素，返回被修改的元素\n\n\n# 并发修改异常\n\t\tA:出现的现象\n\t\t\t迭代器遍历集合，集合修改集合元素\n\t\tB:原因\n\t\t\t迭代器是依赖于集合的，而集合的改变迭代器并不知道。\n\t\tC:解决方案\n\t\t\ta:迭代器遍历，迭代器修改(ListIterator)\n\t\t\t\t元素添加在刚才迭代的位置\n\t\t\tb:集合遍历，集合修改(size()和get())\n\t\t\t\t元素添加在集合的末尾\n# List的子类特点\n\t\tArrayList\n\t\t\t底层数据结构是数组，查询快，增删慢。\n\t\t\t线程不安全，效率高。\n\t\tVector\n\t\t\t底层数据结构是数组，查询快，增删慢。\n\t\t\t线程安全，效率低。\n\t\tLinkedList\n\t\t\t底层数据结构是链表，查询慢，增删快。\n\t\t\t线程不安全，效率高。\n\n","source":"_posts/Java学习笔记List特有的功能.md","raw":"---\ntitle: Java学习笔记List特有的功能\n\ndate: 2017-03-07 10:26:34\ntags:\n- Java基础\ntoc: true\n---\n\n\nList特有的方法和并发修改异常\n<!--more-->\n# List特有的方法\n\tvoid add(int index,Object element):在指定位置添加元素\n\n\tObject get(int index):获取指定位置的元素\n\n\tListIterator listIterator():List集合特有的迭代器，可以逆向遍历，但是要先正向遍历，所以无意义，基本不使用。\n\n\tObject remove(int index):根据索引删除元素，返回被删除的元素\n\n\tObject set(int index,Object element):根据索引修改元素，返回被修改的元素\n\n\n# 并发修改异常\n\t\tA:出现的现象\n\t\t\t迭代器遍历集合，集合修改集合元素\n\t\tB:原因\n\t\t\t迭代器是依赖于集合的，而集合的改变迭代器并不知道。\n\t\tC:解决方案\n\t\t\ta:迭代器遍历，迭代器修改(ListIterator)\n\t\t\t\t元素添加在刚才迭代的位置\n\t\t\tb:集合遍历，集合修改(size()和get())\n\t\t\t\t元素添加在集合的末尾\n# List的子类特点\n\t\tArrayList\n\t\t\t底层数据结构是数组，查询快，增删慢。\n\t\t\t线程不安全，效率高。\n\t\tVector\n\t\t\t底层数据结构是数组，查询快，增删慢。\n\t\t\t线程安全，效率低。\n\t\tLinkedList\n\t\t\t底层数据结构是链表，查询慢，增删快。\n\t\t\t线程不安全，效率高。\n\n","slug":"Java学习笔记List特有的功能","published":1,"updated":"2018-01-20T06:44:37.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vs001b44wa4rtjs2r1","content":"<p>List特有的方法和并发修改异常<br><a id=\"more\"></a></p>\n<h1 id=\"List特有的方法\"><a href=\"#List特有的方法\" class=\"headerlink\" title=\"List特有的方法\"></a>List特有的方法</h1><pre><code>void add(int index,Object element):在指定位置添加元素\n\nObject get(int index):获取指定位置的元素\n\nListIterator listIterator():List集合特有的迭代器，可以逆向遍历，但是要先正向遍历，所以无意义，基本不使用。\n\nObject remove(int index):根据索引删除元素，返回被删除的元素\n\nObject set(int index,Object element):根据索引修改元素，返回被修改的元素\n</code></pre><h1 id=\"并发修改异常\"><a href=\"#并发修改异常\" class=\"headerlink\" title=\"并发修改异常\"></a>并发修改异常</h1><pre><code>A:出现的现象\n    迭代器遍历集合，集合修改集合元素\nB:原因\n    迭代器是依赖于集合的，而集合的改变迭代器并不知道。\nC:解决方案\n    a:迭代器遍历，迭代器修改(ListIterator)\n        元素添加在刚才迭代的位置\n    b:集合遍历，集合修改(size()和get())\n        元素添加在集合的末尾\n</code></pre><h1 id=\"List的子类特点\"><a href=\"#List的子类特点\" class=\"headerlink\" title=\"List的子类特点\"></a>List的子类特点</h1><pre><code>ArrayList\n    底层数据结构是数组，查询快，增删慢。\n    线程不安全，效率高。\nVector\n    底层数据结构是数组，查询快，增删慢。\n    线程安全，效率低。\nLinkedList\n    底层数据结构是链表，查询慢，增删快。\n    线程不安全，效率高。\n</code></pre>","excerpt":"<p>List特有的方法和并发修改异常<br>","more":"</p>\n<h1 id=\"List特有的方法\"><a href=\"#List特有的方法\" class=\"headerlink\" title=\"List特有的方法\"></a>List特有的方法</h1><pre><code>void add(int index,Object element):在指定位置添加元素\n\nObject get(int index):获取指定位置的元素\n\nListIterator listIterator():List集合特有的迭代器，可以逆向遍历，但是要先正向遍历，所以无意义，基本不使用。\n\nObject remove(int index):根据索引删除元素，返回被删除的元素\n\nObject set(int index,Object element):根据索引修改元素，返回被修改的元素\n</code></pre><h1 id=\"并发修改异常\"><a href=\"#并发修改异常\" class=\"headerlink\" title=\"并发修改异常\"></a>并发修改异常</h1><pre><code>A:出现的现象\n    迭代器遍历集合，集合修改集合元素\nB:原因\n    迭代器是依赖于集合的，而集合的改变迭代器并不知道。\nC:解决方案\n    a:迭代器遍历，迭代器修改(ListIterator)\n        元素添加在刚才迭代的位置\n    b:集合遍历，集合修改(size()和get())\n        元素添加在集合的末尾\n</code></pre><h1 id=\"List的子类特点\"><a href=\"#List的子类特点\" class=\"headerlink\" title=\"List的子类特点\"></a>List的子类特点</h1><pre><code>ArrayList\n    底层数据结构是数组，查询快，增删慢。\n    线程不安全，效率高。\nVector\n    底层数据结构是数组，查询快，增删慢。\n    线程安全，效率低。\nLinkedList\n    底层数据结构是链表，查询慢，增删快。\n    线程不安全，效率高。\n</code></pre>"},{"title":"Java学习笔记Set","date":"2017-03-10T02:04:29.000Z","toc":true,"_content":"\n\n\nHashSet,TreeSet,Collection集合总结,在集合中常见的数据结构\n<!--more-->\n![HashSet存储元素保证唯一性的代码及图解](http://wx3.sinaimg.cn/mw690/005P8ayVgy1fdm6h6k11vj30xp0fg76o.jpg)\t\t\n![TreeSet存储元素自然排序和唯一的图解](http://wx3.sinaimg.cn/mw690/005P8ayVgy1fdm6h62bdvj30xp0fg77o.jpg)\n# Set集合(理解)\n\t(1)Set集合的特点\n\t\t无序,唯一\n\t(2)HashSet集合(掌握)\n\t\tA:底层数据结构是哈希表(是一个元素为链表的数组)\n\t\tB:哈希表底层依赖两个方法：hashCode()和equals()\n\t\t  执行顺序：\n\t\t\t首先比较哈希值是否相同\n\t\t\t\t相同：继续执行equals()方法\n\t\t\t\t\t返回true：元素重复了，不添加\n\t\t\t\t\t返回false：直接把元素添加到集合\n\t\t\t\t不同：就直接把元素添加到集合\n\t\tC:如何保证元素唯一性的呢?\n\t\t\t由hashCode()和equals()保证的\n\t\tD:开发的时候，代码非常的简单，自动生成即可。\n\t\tE:HashSet存储字符串并遍历\n\t\tF:HashSet存储自定义对象并遍历(对象的成员变量值相同即为同一个元素)\n\t(3)TreeSet集合\n\t\tA:底层数据结构是红黑树(是一个自平衡的二叉树)\n\t\tB:保证元素的排序方式\n\t\t\ta:自然排序(元素具备比较性)\n\t\t\t\t让元素所属的类实现Comparable接口\n\t\t\tb:比较器排序(集合具备比较性)\n\t\t\t\t让集合构造方法接收Comparator的实现类对象\n# Collection集合总结(掌握)\n\tCollection\n\t\t|--List\t有序,可重复\n\t\t\t|--ArrayList\n\t\t\t\t底层数据结构是数组，查询快，增删慢。\n\t\t\t\t线程不安全，效率高\n\t\t\t|--Vector\n\t\t\t\t底层数据结构是数组，查询快，增删慢。\n\t\t\t\t线程安全，效率低\n\t\t\t|--LinkedList\n\t\t\t\t底层数据结构是链表，查询慢，增删快。\n\t\t\t\t线程不安全，效率高\n\t\t|--Set\t无序,唯一\n\t\t\t|--HashSet\n\t\t\t\t底层数据结构是哈希表。\n\t\t\t\t如何保证元素唯一性的呢?\n\t\t\t\t\t依赖两个方法：hashCode()和equals()\n\t\t\t\t\t开发中自动生成这两个方法即可\n\t\t\t\t|--LinkedHashSet\n\t\t\t\t\t底层数据结构是链表和哈希表\n\t\t\t\t\t由链表保证元素有序\n\t\t\t\t\t由哈希表保证元素唯一\n\t\t\t|--TreeSet\n\t\t\t\t底层数据结构是红黑树。\n\t\t\t\t如何保证元素排序的呢?\n\t\t\t\t\t自然排序\n\t\t\t\t\t比较器排序\n\t\t\t\t如何保证元素唯一性的呢?\n\t\t\t\t\t根据比较的返回值是否是0来决定\n\t\t\t\t\t\n\n\t\n# 在集合中常见的数据结构(掌握)\n\tArrayXxx:底层数据结构是数组，查询快，增删慢\n\tLinkedXxx:底层数据结构是链表，查询慢，增删快\n\tHashXxx:底层数据结构是哈希表。依赖两个方法：hashCode()和equals()\n\tTreeXxx:底层数据结构是二叉树。两种方式排序：自然排序和比较器排序","source":"_posts/Java学习笔记Set.md","raw":"---\ntitle: 'Java学习笔记Set'\ndate: 2017-03-10 10:04:29\ntags:\n- Java基础\ntoc: true\n---\n\n\n\nHashSet,TreeSet,Collection集合总结,在集合中常见的数据结构\n<!--more-->\n![HashSet存储元素保证唯一性的代码及图解](http://wx3.sinaimg.cn/mw690/005P8ayVgy1fdm6h6k11vj30xp0fg76o.jpg)\t\t\n![TreeSet存储元素自然排序和唯一的图解](http://wx3.sinaimg.cn/mw690/005P8ayVgy1fdm6h62bdvj30xp0fg77o.jpg)\n# Set集合(理解)\n\t(1)Set集合的特点\n\t\t无序,唯一\n\t(2)HashSet集合(掌握)\n\t\tA:底层数据结构是哈希表(是一个元素为链表的数组)\n\t\tB:哈希表底层依赖两个方法：hashCode()和equals()\n\t\t  执行顺序：\n\t\t\t首先比较哈希值是否相同\n\t\t\t\t相同：继续执行equals()方法\n\t\t\t\t\t返回true：元素重复了，不添加\n\t\t\t\t\t返回false：直接把元素添加到集合\n\t\t\t\t不同：就直接把元素添加到集合\n\t\tC:如何保证元素唯一性的呢?\n\t\t\t由hashCode()和equals()保证的\n\t\tD:开发的时候，代码非常的简单，自动生成即可。\n\t\tE:HashSet存储字符串并遍历\n\t\tF:HashSet存储自定义对象并遍历(对象的成员变量值相同即为同一个元素)\n\t(3)TreeSet集合\n\t\tA:底层数据结构是红黑树(是一个自平衡的二叉树)\n\t\tB:保证元素的排序方式\n\t\t\ta:自然排序(元素具备比较性)\n\t\t\t\t让元素所属的类实现Comparable接口\n\t\t\tb:比较器排序(集合具备比较性)\n\t\t\t\t让集合构造方法接收Comparator的实现类对象\n# Collection集合总结(掌握)\n\tCollection\n\t\t|--List\t有序,可重复\n\t\t\t|--ArrayList\n\t\t\t\t底层数据结构是数组，查询快，增删慢。\n\t\t\t\t线程不安全，效率高\n\t\t\t|--Vector\n\t\t\t\t底层数据结构是数组，查询快，增删慢。\n\t\t\t\t线程安全，效率低\n\t\t\t|--LinkedList\n\t\t\t\t底层数据结构是链表，查询慢，增删快。\n\t\t\t\t线程不安全，效率高\n\t\t|--Set\t无序,唯一\n\t\t\t|--HashSet\n\t\t\t\t底层数据结构是哈希表。\n\t\t\t\t如何保证元素唯一性的呢?\n\t\t\t\t\t依赖两个方法：hashCode()和equals()\n\t\t\t\t\t开发中自动生成这两个方法即可\n\t\t\t\t|--LinkedHashSet\n\t\t\t\t\t底层数据结构是链表和哈希表\n\t\t\t\t\t由链表保证元素有序\n\t\t\t\t\t由哈希表保证元素唯一\n\t\t\t|--TreeSet\n\t\t\t\t底层数据结构是红黑树。\n\t\t\t\t如何保证元素排序的呢?\n\t\t\t\t\t自然排序\n\t\t\t\t\t比较器排序\n\t\t\t\t如何保证元素唯一性的呢?\n\t\t\t\t\t根据比较的返回值是否是0来决定\n\t\t\t\t\t\n\n\t\n# 在集合中常见的数据结构(掌握)\n\tArrayXxx:底层数据结构是数组，查询快，增删慢\n\tLinkedXxx:底层数据结构是链表，查询慢，增删快\n\tHashXxx:底层数据结构是哈希表。依赖两个方法：hashCode()和equals()\n\tTreeXxx:底层数据结构是二叉树。两种方式排序：自然排序和比较器排序","slug":"Java学习笔记Set","published":1,"updated":"2018-01-20T06:44:37.546Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vt001e44waz1qa8gjn","content":"<p>HashSet,TreeSet,Collection集合总结,在集合中常见的数据结构<br><a id=\"more\"></a><br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1fdm6h6k11vj30xp0fg76o.jpg\" alt=\"HashSet存储元素保证唯一性的代码及图解\"><br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1fdm6h62bdvj30xp0fg77o.jpg\" alt=\"TreeSet存储元素自然排序和唯一的图解\"></p>\n<h1 id=\"Set集合-理解\"><a href=\"#Set集合-理解\" class=\"headerlink\" title=\"Set集合(理解)\"></a>Set集合(理解)</h1><pre><code>(1)Set集合的特点\n    无序,唯一\n(2)HashSet集合(掌握)\n    A:底层数据结构是哈希表(是一个元素为链表的数组)\n    B:哈希表底层依赖两个方法：hashCode()和equals()\n      执行顺序：\n        首先比较哈希值是否相同\n            相同：继续执行equals()方法\n                返回true：元素重复了，不添加\n                返回false：直接把元素添加到集合\n            不同：就直接把元素添加到集合\n    C:如何保证元素唯一性的呢?\n        由hashCode()和equals()保证的\n    D:开发的时候，代码非常的简单，自动生成即可。\n    E:HashSet存储字符串并遍历\n    F:HashSet存储自定义对象并遍历(对象的成员变量值相同即为同一个元素)\n(3)TreeSet集合\n    A:底层数据结构是红黑树(是一个自平衡的二叉树)\n    B:保证元素的排序方式\n        a:自然排序(元素具备比较性)\n            让元素所属的类实现Comparable接口\n        b:比较器排序(集合具备比较性)\n            让集合构造方法接收Comparator的实现类对象\n</code></pre><h1 id=\"Collection集合总结-掌握\"><a href=\"#Collection集合总结-掌握\" class=\"headerlink\" title=\"Collection集合总结(掌握)\"></a>Collection集合总结(掌握)</h1><pre><code>Collection\n    |--List    有序,可重复\n        |--ArrayList\n            底层数据结构是数组，查询快，增删慢。\n            线程不安全，效率高\n        |--Vector\n            底层数据结构是数组，查询快，增删慢。\n            线程安全，效率低\n        |--LinkedList\n            底层数据结构是链表，查询慢，增删快。\n            线程不安全，效率高\n    |--Set    无序,唯一\n        |--HashSet\n            底层数据结构是哈希表。\n            如何保证元素唯一性的呢?\n                依赖两个方法：hashCode()和equals()\n                开发中自动生成这两个方法即可\n            |--LinkedHashSet\n                底层数据结构是链表和哈希表\n                由链表保证元素有序\n                由哈希表保证元素唯一\n        |--TreeSet\n            底层数据结构是红黑树。\n            如何保证元素排序的呢?\n                自然排序\n                比较器排序\n            如何保证元素唯一性的呢?\n                根据比较的返回值是否是0来决定\n</code></pre><h1 id=\"在集合中常见的数据结构-掌握\"><a href=\"#在集合中常见的数据结构-掌握\" class=\"headerlink\" title=\"在集合中常见的数据结构(掌握)\"></a>在集合中常见的数据结构(掌握)</h1><pre><code>ArrayXxx:底层数据结构是数组，查询快，增删慢\nLinkedXxx:底层数据结构是链表，查询慢，增删快\nHashXxx:底层数据结构是哈希表。依赖两个方法：hashCode()和equals()\nTreeXxx:底层数据结构是二叉树。两种方式排序：自然排序和比较器排序\n</code></pre>","excerpt":"<p>HashSet,TreeSet,Collection集合总结,在集合中常见的数据结构<br>","more":"<br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1fdm6h6k11vj30xp0fg76o.jpg\" alt=\"HashSet存储元素保证唯一性的代码及图解\"><br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1fdm6h62bdvj30xp0fg77o.jpg\" alt=\"TreeSet存储元素自然排序和唯一的图解\"></p>\n<h1 id=\"Set集合-理解\"><a href=\"#Set集合-理解\" class=\"headerlink\" title=\"Set集合(理解)\"></a>Set集合(理解)</h1><pre><code>(1)Set集合的特点\n    无序,唯一\n(2)HashSet集合(掌握)\n    A:底层数据结构是哈希表(是一个元素为链表的数组)\n    B:哈希表底层依赖两个方法：hashCode()和equals()\n      执行顺序：\n        首先比较哈希值是否相同\n            相同：继续执行equals()方法\n                返回true：元素重复了，不添加\n                返回false：直接把元素添加到集合\n            不同：就直接把元素添加到集合\n    C:如何保证元素唯一性的呢?\n        由hashCode()和equals()保证的\n    D:开发的时候，代码非常的简单，自动生成即可。\n    E:HashSet存储字符串并遍历\n    F:HashSet存储自定义对象并遍历(对象的成员变量值相同即为同一个元素)\n(3)TreeSet集合\n    A:底层数据结构是红黑树(是一个自平衡的二叉树)\n    B:保证元素的排序方式\n        a:自然排序(元素具备比较性)\n            让元素所属的类实现Comparable接口\n        b:比较器排序(集合具备比较性)\n            让集合构造方法接收Comparator的实现类对象\n</code></pre><h1 id=\"Collection集合总结-掌握\"><a href=\"#Collection集合总结-掌握\" class=\"headerlink\" title=\"Collection集合总结(掌握)\"></a>Collection集合总结(掌握)</h1><pre><code>Collection\n    |--List    有序,可重复\n        |--ArrayList\n            底层数据结构是数组，查询快，增删慢。\n            线程不安全，效率高\n        |--Vector\n            底层数据结构是数组，查询快，增删慢。\n            线程安全，效率低\n        |--LinkedList\n            底层数据结构是链表，查询慢，增删快。\n            线程不安全，效率高\n    |--Set    无序,唯一\n        |--HashSet\n            底层数据结构是哈希表。\n            如何保证元素唯一性的呢?\n                依赖两个方法：hashCode()和equals()\n                开发中自动生成这两个方法即可\n            |--LinkedHashSet\n                底层数据结构是链表和哈希表\n                由链表保证元素有序\n                由哈希表保证元素唯一\n        |--TreeSet\n            底层数据结构是红黑树。\n            如何保证元素排序的呢?\n                自然排序\n                比较器排序\n            如何保证元素唯一性的呢?\n                根据比较的返回值是否是0来决定\n</code></pre><h1 id=\"在集合中常见的数据结构-掌握\"><a href=\"#在集合中常见的数据结构-掌握\" class=\"headerlink\" title=\"在集合中常见的数据结构(掌握)\"></a>在集合中常见的数据结构(掌握)</h1><pre><code>ArrayXxx:底层数据结构是数组，查询快，增删慢\nLinkedXxx:底层数据结构是链表，查询慢，增删快\nHashXxx:底层数据结构是哈希表。依赖两个方法：hashCode()和equals()\nTreeXxx:底层数据结构是二叉树。两种方式排序：自然排序和比较器排序\n</code></pre>"},{"title":"Java学习笔记","date":"2017-03-09T02:17:32.000Z","toc":true,"_content":"\n\nMath,Random,System,BigInteger,BigDecimal,DateFormat,Calendar\n<!--more-->\n# Math(掌握)\n\t(1)针对数学运算进行操作的类PI E\n\t(2)常见方法\n\t\tA:绝对值public static int abs(int a)\n\t\tB:向上取整public static double ceil(double a)\n\t\tC:向下取整public static double floor(double a)\n\t\tD:两个数据中的大值public static int max(int a,int b)\n\t\tE:a的b次幂public static double pow(double a,double b)\n\t\tF:随机数public static double random():随机数[0.0,1.0)\n\t\tG:四舍五入public static int round(float a)\n\t\tH:正平方根public static sqrt(double a)\n# Random(理解)\n\t(1)用于产生随机数的类\n\t(2)构造方法:\n\t\tA:Random() 默认种子，每次产生的随机数不同\n\t\tB:Random(long seed) 指定种子，每次种子相同，随机数就相同\n\t(3)成员方法:\n\t\tA:int nextInt() 返回int范围内的随机数\n\t\tB:int nextInt(int n) 返回[0,n)范围内的随机数\n# System(掌握)\n\t(1)系统类,提供了一些有用的字段和方法\n\t(2)成员方法(自己补齐)\n\t\tA:运行垃圾回收器 public static void gc()\n\t\tB:退出jvm public static void exit(int status)\n\t\tC:获取当前时间的毫秒值 public static long currentTimeMillis()\n\t\tD:数组复制 public static void arraycopy(源数组,开始位置,目标数组,开始位置,复制长度)\n# BigInteger(理解)\n\t(1)针对大整数的运算\n\t(2)构造方法\t\n\t\tA:BigInteger(String s)\n\t(3)成员方法(自己补齐)\n\t\tA:加public BigInteger add(BigInteger val)\n                B:减public BigInteger subtract(BigInteger val)\n\t\tC:乘public BigInteger multiply(BigInteger val)\n\t\tD:除public BigInteger divide(BigInteger val)\n\t\tE:商和余数public BigInteger[] divideAndRemainder(BigInteger val)\n\n# BigDecimal(理解)\n\t(1)浮点数据做运算，会丢失精度。所以，针对浮点数据的操作建议采用BigDecimal。(金融相关的项目)\n\t(2)构造方法\n\t\tA:BigDecimal(String s)\n\t(3)成员方法：\n\t\tA:加public BigDecimal add(BigDecimal augend)\n                B:减public BigDecimal subtract(BigDecimal subtrahend)\n\t\tC:乘public BigDecimal multiply(BigDecimal multiplicand)\n\t\tD:除public BigDecimal divide(BigDecimal divisor)\n\t\tE:自己保留小数几位public BigDecimal divide(BigDecimal divisor,int scale,int roundingMode)\n\n# Date/DateFormat(掌握)\n\t(1)Date是日期类，可以精确到毫秒。\n\t\tA:构造方法\n\t\t\tDate()\n\t\t\tDate(long time)\n\t\tB:成员方法\n\t\t\tgetTime()\n\t\t\tsetTime(long time)\n\t\tC:日期和毫秒值的相互转换\n\t\t案例：你来到这个世界多少天了?\n\t(2)DateFormat针对日期进行格式化和针对字符串进行解析的类，但是是抽象类，所以使用其子类SimpleDateFormat\n\t\tA:SimpleDateFormat(String pattern) 给定模式\n\t\t\tyyyy-MM-dd HH:mm:ss\n\t\tB:日期和字符串的转换\n\t\t\ta:Date -- String\n\t\t\t\tformat()\n\t\t\t\t\n\t\t\tb:String -- Date\n\t\t\t\tparse()\n\t\n# Calendar(掌握)\n\t(1)日历类，封装了所有的日历字段值，通过统一的方法根据传入不同的日历字段\t\t可以获取值。\n\t(2)如何得到一个日历对象呢?\n\t\tCalendar rightNow = Calendar.getInstance();\n\t\t本质返回的是子类对象\n\t(3)成员方法\n\t\tA:根据日历字段得到对应的值\n  \t\tpublic int get(int field)\n    \t\tB:根据日历字段和一个正负数确定是添加还是减去对应日历字段的值\t\t\tpublic void add(int field,int amount)\n\t\tC:设置日历对象的年月日\n\t\tpublic final void set(int year,int month,int date)","source":"_posts/Java学习笔记Math-Random-System-BigInteger-BigDecimal-DateFormat-Calendar.md","raw":"---\ntitle: Java学习笔记\ndate: 2017-03-09 10:17:32\ntags:\n- Java基础\ntoc: true\n---\n\n\nMath,Random,System,BigInteger,BigDecimal,DateFormat,Calendar\n<!--more-->\n# Math(掌握)\n\t(1)针对数学运算进行操作的类PI E\n\t(2)常见方法\n\t\tA:绝对值public static int abs(int a)\n\t\tB:向上取整public static double ceil(double a)\n\t\tC:向下取整public static double floor(double a)\n\t\tD:两个数据中的大值public static int max(int a,int b)\n\t\tE:a的b次幂public static double pow(double a,double b)\n\t\tF:随机数public static double random():随机数[0.0,1.0)\n\t\tG:四舍五入public static int round(float a)\n\t\tH:正平方根public static sqrt(double a)\n# Random(理解)\n\t(1)用于产生随机数的类\n\t(2)构造方法:\n\t\tA:Random() 默认种子，每次产生的随机数不同\n\t\tB:Random(long seed) 指定种子，每次种子相同，随机数就相同\n\t(3)成员方法:\n\t\tA:int nextInt() 返回int范围内的随机数\n\t\tB:int nextInt(int n) 返回[0,n)范围内的随机数\n# System(掌握)\n\t(1)系统类,提供了一些有用的字段和方法\n\t(2)成员方法(自己补齐)\n\t\tA:运行垃圾回收器 public static void gc()\n\t\tB:退出jvm public static void exit(int status)\n\t\tC:获取当前时间的毫秒值 public static long currentTimeMillis()\n\t\tD:数组复制 public static void arraycopy(源数组,开始位置,目标数组,开始位置,复制长度)\n# BigInteger(理解)\n\t(1)针对大整数的运算\n\t(2)构造方法\t\n\t\tA:BigInteger(String s)\n\t(3)成员方法(自己补齐)\n\t\tA:加public BigInteger add(BigInteger val)\n                B:减public BigInteger subtract(BigInteger val)\n\t\tC:乘public BigInteger multiply(BigInteger val)\n\t\tD:除public BigInteger divide(BigInteger val)\n\t\tE:商和余数public BigInteger[] divideAndRemainder(BigInteger val)\n\n# BigDecimal(理解)\n\t(1)浮点数据做运算，会丢失精度。所以，针对浮点数据的操作建议采用BigDecimal。(金融相关的项目)\n\t(2)构造方法\n\t\tA:BigDecimal(String s)\n\t(3)成员方法：\n\t\tA:加public BigDecimal add(BigDecimal augend)\n                B:减public BigDecimal subtract(BigDecimal subtrahend)\n\t\tC:乘public BigDecimal multiply(BigDecimal multiplicand)\n\t\tD:除public BigDecimal divide(BigDecimal divisor)\n\t\tE:自己保留小数几位public BigDecimal divide(BigDecimal divisor,int scale,int roundingMode)\n\n# Date/DateFormat(掌握)\n\t(1)Date是日期类，可以精确到毫秒。\n\t\tA:构造方法\n\t\t\tDate()\n\t\t\tDate(long time)\n\t\tB:成员方法\n\t\t\tgetTime()\n\t\t\tsetTime(long time)\n\t\tC:日期和毫秒值的相互转换\n\t\t案例：你来到这个世界多少天了?\n\t(2)DateFormat针对日期进行格式化和针对字符串进行解析的类，但是是抽象类，所以使用其子类SimpleDateFormat\n\t\tA:SimpleDateFormat(String pattern) 给定模式\n\t\t\tyyyy-MM-dd HH:mm:ss\n\t\tB:日期和字符串的转换\n\t\t\ta:Date -- String\n\t\t\t\tformat()\n\t\t\t\t\n\t\t\tb:String -- Date\n\t\t\t\tparse()\n\t\n# Calendar(掌握)\n\t(1)日历类，封装了所有的日历字段值，通过统一的方法根据传入不同的日历字段\t\t可以获取值。\n\t(2)如何得到一个日历对象呢?\n\t\tCalendar rightNow = Calendar.getInstance();\n\t\t本质返回的是子类对象\n\t(3)成员方法\n\t\tA:根据日历字段得到对应的值\n  \t\tpublic int get(int field)\n    \t\tB:根据日历字段和一个正负数确定是添加还是减去对应日历字段的值\t\t\tpublic void add(int field,int amount)\n\t\tC:设置日历对象的年月日\n\t\tpublic final void set(int year,int month,int date)","slug":"Java学习笔记Math-Random-System-BigInteger-BigDecimal-DateFormat-Calendar","published":1,"updated":"2018-01-20T06:44:37.544Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vv001g44warxhkmdil","content":"<p>Math,Random,System,BigInteger,BigDecimal,DateFormat,Calendar<br><a id=\"more\"></a></p>\n<h1 id=\"Math-掌握\"><a href=\"#Math-掌握\" class=\"headerlink\" title=\"Math(掌握)\"></a>Math(掌握)</h1><pre><code>(1)针对数学运算进行操作的类PI E\n(2)常见方法\n    A:绝对值public static int abs(int a)\n    B:向上取整public static double ceil(double a)\n    C:向下取整public static double floor(double a)\n    D:两个数据中的大值public static int max(int a,int b)\n    E:a的b次幂public static double pow(double a,double b)\n    F:随机数public static double random():随机数[0.0,1.0)\n    G:四舍五入public static int round(float a)\n    H:正平方根public static sqrt(double a)\n</code></pre><h1 id=\"Random-理解\"><a href=\"#Random-理解\" class=\"headerlink\" title=\"Random(理解)\"></a>Random(理解)</h1><pre><code>(1)用于产生随机数的类\n(2)构造方法:\n    A:Random() 默认种子，每次产生的随机数不同\n    B:Random(long seed) 指定种子，每次种子相同，随机数就相同\n(3)成员方法:\n    A:int nextInt() 返回int范围内的随机数\n    B:int nextInt(int n) 返回[0,n)范围内的随机数\n</code></pre><h1 id=\"System-掌握\"><a href=\"#System-掌握\" class=\"headerlink\" title=\"System(掌握)\"></a>System(掌握)</h1><pre><code>(1)系统类,提供了一些有用的字段和方法\n(2)成员方法(自己补齐)\n    A:运行垃圾回收器 public static void gc()\n    B:退出jvm public static void exit(int status)\n    C:获取当前时间的毫秒值 public static long currentTimeMillis()\n    D:数组复制 public static void arraycopy(源数组,开始位置,目标数组,开始位置,复制长度)\n</code></pre><h1 id=\"BigInteger-理解\"><a href=\"#BigInteger-理解\" class=\"headerlink\" title=\"BigInteger(理解)\"></a>BigInteger(理解)</h1><pre><code>(1)针对大整数的运算\n(2)构造方法    \n    A:BigInteger(String s)\n(3)成员方法(自己补齐)\n    A:加public BigInteger add(BigInteger val)\n            B:减public BigInteger subtract(BigInteger val)\n    C:乘public BigInteger multiply(BigInteger val)\n    D:除public BigInteger divide(BigInteger val)\n    E:商和余数public BigInteger[] divideAndRemainder(BigInteger val)\n</code></pre><h1 id=\"BigDecimal-理解\"><a href=\"#BigDecimal-理解\" class=\"headerlink\" title=\"BigDecimal(理解)\"></a>BigDecimal(理解)</h1><pre><code>(1)浮点数据做运算，会丢失精度。所以，针对浮点数据的操作建议采用BigDecimal。(金融相关的项目)\n(2)构造方法\n    A:BigDecimal(String s)\n(3)成员方法：\n    A:加public BigDecimal add(BigDecimal augend)\n            B:减public BigDecimal subtract(BigDecimal subtrahend)\n    C:乘public BigDecimal multiply(BigDecimal multiplicand)\n    D:除public BigDecimal divide(BigDecimal divisor)\n    E:自己保留小数几位public BigDecimal divide(BigDecimal divisor,int scale,int roundingMode)\n</code></pre><h1 id=\"Date-DateFormat-掌握\"><a href=\"#Date-DateFormat-掌握\" class=\"headerlink\" title=\"Date/DateFormat(掌握)\"></a>Date/DateFormat(掌握)</h1><pre><code>(1)Date是日期类，可以精确到毫秒。\n    A:构造方法\n        Date()\n        Date(long time)\n    B:成员方法\n        getTime()\n        setTime(long time)\n    C:日期和毫秒值的相互转换\n    案例：你来到这个世界多少天了?\n(2)DateFormat针对日期进行格式化和针对字符串进行解析的类，但是是抽象类，所以使用其子类SimpleDateFormat\n    A:SimpleDateFormat(String pattern) 给定模式\n        yyyy-MM-dd HH:mm:ss\n    B:日期和字符串的转换\n        a:Date -- String\n            format()\n\n        b:String -- Date\n            parse()\n</code></pre><h1 id=\"Calendar-掌握\"><a href=\"#Calendar-掌握\" class=\"headerlink\" title=\"Calendar(掌握)\"></a>Calendar(掌握)</h1><pre><code>(1)日历类，封装了所有的日历字段值，通过统一的方法根据传入不同的日历字段        可以获取值。\n(2)如何得到一个日历对象呢?\n    Calendar rightNow = Calendar.getInstance();\n    本质返回的是子类对象\n(3)成员方法\n    A:根据日历字段得到对应的值\n      public int get(int field)\n        B:根据日历字段和一个正负数确定是添加还是减去对应日历字段的值            public void add(int field,int amount)\n    C:设置日历对象的年月日\n    public final void set(int year,int month,int date)\n</code></pre>","excerpt":"<p>Math,Random,System,BigInteger,BigDecimal,DateFormat,Calendar<br>","more":"</p>\n<h1 id=\"Math-掌握\"><a href=\"#Math-掌握\" class=\"headerlink\" title=\"Math(掌握)\"></a>Math(掌握)</h1><pre><code>(1)针对数学运算进行操作的类PI E\n(2)常见方法\n    A:绝对值public static int abs(int a)\n    B:向上取整public static double ceil(double a)\n    C:向下取整public static double floor(double a)\n    D:两个数据中的大值public static int max(int a,int b)\n    E:a的b次幂public static double pow(double a,double b)\n    F:随机数public static double random():随机数[0.0,1.0)\n    G:四舍五入public static int round(float a)\n    H:正平方根public static sqrt(double a)\n</code></pre><h1 id=\"Random-理解\"><a href=\"#Random-理解\" class=\"headerlink\" title=\"Random(理解)\"></a>Random(理解)</h1><pre><code>(1)用于产生随机数的类\n(2)构造方法:\n    A:Random() 默认种子，每次产生的随机数不同\n    B:Random(long seed) 指定种子，每次种子相同，随机数就相同\n(3)成员方法:\n    A:int nextInt() 返回int范围内的随机数\n    B:int nextInt(int n) 返回[0,n)范围内的随机数\n</code></pre><h1 id=\"System-掌握\"><a href=\"#System-掌握\" class=\"headerlink\" title=\"System(掌握)\"></a>System(掌握)</h1><pre><code>(1)系统类,提供了一些有用的字段和方法\n(2)成员方法(自己补齐)\n    A:运行垃圾回收器 public static void gc()\n    B:退出jvm public static void exit(int status)\n    C:获取当前时间的毫秒值 public static long currentTimeMillis()\n    D:数组复制 public static void arraycopy(源数组,开始位置,目标数组,开始位置,复制长度)\n</code></pre><h1 id=\"BigInteger-理解\"><a href=\"#BigInteger-理解\" class=\"headerlink\" title=\"BigInteger(理解)\"></a>BigInteger(理解)</h1><pre><code>(1)针对大整数的运算\n(2)构造方法    \n    A:BigInteger(String s)\n(3)成员方法(自己补齐)\n    A:加public BigInteger add(BigInteger val)\n            B:减public BigInteger subtract(BigInteger val)\n    C:乘public BigInteger multiply(BigInteger val)\n    D:除public BigInteger divide(BigInteger val)\n    E:商和余数public BigInteger[] divideAndRemainder(BigInteger val)\n</code></pre><h1 id=\"BigDecimal-理解\"><a href=\"#BigDecimal-理解\" class=\"headerlink\" title=\"BigDecimal(理解)\"></a>BigDecimal(理解)</h1><pre><code>(1)浮点数据做运算，会丢失精度。所以，针对浮点数据的操作建议采用BigDecimal。(金融相关的项目)\n(2)构造方法\n    A:BigDecimal(String s)\n(3)成员方法：\n    A:加public BigDecimal add(BigDecimal augend)\n            B:减public BigDecimal subtract(BigDecimal subtrahend)\n    C:乘public BigDecimal multiply(BigDecimal multiplicand)\n    D:除public BigDecimal divide(BigDecimal divisor)\n    E:自己保留小数几位public BigDecimal divide(BigDecimal divisor,int scale,int roundingMode)\n</code></pre><h1 id=\"Date-DateFormat-掌握\"><a href=\"#Date-DateFormat-掌握\" class=\"headerlink\" title=\"Date/DateFormat(掌握)\"></a>Date/DateFormat(掌握)</h1><pre><code>(1)Date是日期类，可以精确到毫秒。\n    A:构造方法\n        Date()\n        Date(long time)\n    B:成员方法\n        getTime()\n        setTime(long time)\n    C:日期和毫秒值的相互转换\n    案例：你来到这个世界多少天了?\n(2)DateFormat针对日期进行格式化和针对字符串进行解析的类，但是是抽象类，所以使用其子类SimpleDateFormat\n    A:SimpleDateFormat(String pattern) 给定模式\n        yyyy-MM-dd HH:mm:ss\n    B:日期和字符串的转换\n        a:Date -- String\n            format()\n\n        b:String -- Date\n            parse()\n</code></pre><h1 id=\"Calendar-掌握\"><a href=\"#Calendar-掌握\" class=\"headerlink\" title=\"Calendar(掌握)\"></a>Calendar(掌握)</h1><pre><code>(1)日历类，封装了所有的日历字段值，通过统一的方法根据传入不同的日历字段        可以获取值。\n(2)如何得到一个日历对象呢?\n    Calendar rightNow = Calendar.getInstance();\n    本质返回的是子类对象\n(3)成员方法\n    A:根据日历字段得到对应的值\n      public int get(int field)\n        B:根据日历字段和一个正负数确定是添加还是减去对应日历字段的值            public void add(int field,int amount)\n    C:设置日历对象的年月日\n    public final void set(int year,int month,int date)\n</code></pre>"},{"title":"Java学习笔记Map","date":"2017-03-10T07:23:49.000Z","toc":true,"_content":"\n\nMap和Collections\n<!--more-->\n# Map(掌握)\n\t(1)将键映射到值的对象。一个映射不能包含重复的键；每个键最多只能映射到一个值。 \n\t(2)Map和Collection的区别?\n\t\tA:Map 存储的是键值对形式的元素，键唯一，值可以重复。\n\t\tB:Collection 存储的是单独出现的元素，子接口Set元素唯一，子接口List元素可重复。\n\t(3)Map接口功能概述(自己补齐)\n\t\tA:添加功能\n\t\tV put(K key,V value)\n\t\tB:删除功能\n\t\tvoid clear:移除所有键值对元素\n\t\tV remove(Object key):根据键删除键值y\n\t\tC:判断功能\n\t\tboolean containsKey(Object key):判断集合是否包含指定的键\n\t\tboolean containsValue(Object value)\n\t\tboolean isEmpty():判空\n\t\tD:获取功能\n\t\tSet<Map.Entry<K,V>> entrySet():返回键值对对象的集合\n\t\tV get(Object key):根据键获取值\n\t\tSet<K> keySet():获取集合中所有键的集合\n\t\tCollection<V> values():获取集合中所有值的集合\n\t\tE:长度功能\n\t\tint size()\n\t(4)Map集合的遍历\n\t\tA:键找值\n\t\t\ta:获取所有键的集合\n\t\t\tb:遍历键的集合,得到每一个键\n\t\t\tc:根据键到集合中去找值\n\t\t\n\t\tB:键值对对象找键和值\n\t\t\ta:获取所有的键值对对象的集合\n\t\t\tb:遍历键值对对象的集合，获取每一个键值对对象\n\t\t\tc:根据键值对对象去获取键和值\n\t\t\t\n\t\t代码体现：\n\t\t\tMap<String,String> hm = new HashMap<String,String>();\n\t\t\t\n\t\t\thm.put(\"it002\",\"hello\");\n\t\t\thm.put(\"it003\",\"world\");\n\t\t\thm.put(\"it001\",\"java\");\n\t\t\t\n\t\t\t//方式1 键找值\n\t\t\tSet<String> set = hm.keySet();\n\t\t\tfor(String key : set) {\n\t\t\t\tString value = hm.get(key);\n\t\t\t\tSystem.out.println(key+\"---\"+value);\n\t\t\t}\n\t\t\t\n\t\t\t//方式2 键值对对象找键和值\n\t\t\tSet<Map.Entry<String,String>> set2 = hm.entrySet();\n\t\t\tfor(Map.Entry<String,String> me : set2) {\n\t\t\t\tString key = me.getKey();\n\t\t\t\tString value = me.getValue();\n\t\t\t\tSystem.out.println(key+\"---\"+value);\n\t\t\t}\n\t(5)HashMap集合的练习\n\t\tA:HashMap<String,String>\n\t\tB:HashMap<Integer,String>\n\t\tC:HashMap<String,Student>\n\t\tD:HashMap<Student,String>\n\t(6)TreeMap集合的练习\t\t\n\t\tA:TreeMap<String,String>\n\t\tB:TreeMap<Student,String>\n\t\t\t\n# Collections(理解)\t\n\t(1)是针对集合进行操作的工具类\n\t(2)面试题：Collection和Collections的区别\n\t\tA:Collection 是单列集合的顶层接口，有两个子接口List和Set\n\t\tB:Collections 是针对集合进行操作的工具类，可以对集合进行排序和查找等\n\t(3)常见的几个小方法：\n\t\tA:public static <T> void sort(List<T> list)\n\t\tB:public static <T> int binarySearch(List<?> list,T key)\n\t\tC:public static <T> T max(Collection<?> coll)\n\t\tD:public static void reverse(List<?> list)\n\t\tE:public static void shuffle(List<?> list)\n","source":"_posts/Java学习笔记Map.md","raw":"---\ntitle: Java学习笔记Map\ndate: 2017-03-10 15:23:49\ntags:\n- Java基础\ntoc: true\n\n---\n\n\nMap和Collections\n<!--more-->\n# Map(掌握)\n\t(1)将键映射到值的对象。一个映射不能包含重复的键；每个键最多只能映射到一个值。 \n\t(2)Map和Collection的区别?\n\t\tA:Map 存储的是键值对形式的元素，键唯一，值可以重复。\n\t\tB:Collection 存储的是单独出现的元素，子接口Set元素唯一，子接口List元素可重复。\n\t(3)Map接口功能概述(自己补齐)\n\t\tA:添加功能\n\t\tV put(K key,V value)\n\t\tB:删除功能\n\t\tvoid clear:移除所有键值对元素\n\t\tV remove(Object key):根据键删除键值y\n\t\tC:判断功能\n\t\tboolean containsKey(Object key):判断集合是否包含指定的键\n\t\tboolean containsValue(Object value)\n\t\tboolean isEmpty():判空\n\t\tD:获取功能\n\t\tSet<Map.Entry<K,V>> entrySet():返回键值对对象的集合\n\t\tV get(Object key):根据键获取值\n\t\tSet<K> keySet():获取集合中所有键的集合\n\t\tCollection<V> values():获取集合中所有值的集合\n\t\tE:长度功能\n\t\tint size()\n\t(4)Map集合的遍历\n\t\tA:键找值\n\t\t\ta:获取所有键的集合\n\t\t\tb:遍历键的集合,得到每一个键\n\t\t\tc:根据键到集合中去找值\n\t\t\n\t\tB:键值对对象找键和值\n\t\t\ta:获取所有的键值对对象的集合\n\t\t\tb:遍历键值对对象的集合，获取每一个键值对对象\n\t\t\tc:根据键值对对象去获取键和值\n\t\t\t\n\t\t代码体现：\n\t\t\tMap<String,String> hm = new HashMap<String,String>();\n\t\t\t\n\t\t\thm.put(\"it002\",\"hello\");\n\t\t\thm.put(\"it003\",\"world\");\n\t\t\thm.put(\"it001\",\"java\");\n\t\t\t\n\t\t\t//方式1 键找值\n\t\t\tSet<String> set = hm.keySet();\n\t\t\tfor(String key : set) {\n\t\t\t\tString value = hm.get(key);\n\t\t\t\tSystem.out.println(key+\"---\"+value);\n\t\t\t}\n\t\t\t\n\t\t\t//方式2 键值对对象找键和值\n\t\t\tSet<Map.Entry<String,String>> set2 = hm.entrySet();\n\t\t\tfor(Map.Entry<String,String> me : set2) {\n\t\t\t\tString key = me.getKey();\n\t\t\t\tString value = me.getValue();\n\t\t\t\tSystem.out.println(key+\"---\"+value);\n\t\t\t}\n\t(5)HashMap集合的练习\n\t\tA:HashMap<String,String>\n\t\tB:HashMap<Integer,String>\n\t\tC:HashMap<String,Student>\n\t\tD:HashMap<Student,String>\n\t(6)TreeMap集合的练习\t\t\n\t\tA:TreeMap<String,String>\n\t\tB:TreeMap<Student,String>\n\t\t\t\n# Collections(理解)\t\n\t(1)是针对集合进行操作的工具类\n\t(2)面试题：Collection和Collections的区别\n\t\tA:Collection 是单列集合的顶层接口，有两个子接口List和Set\n\t\tB:Collections 是针对集合进行操作的工具类，可以对集合进行排序和查找等\n\t(3)常见的几个小方法：\n\t\tA:public static <T> void sort(List<T> list)\n\t\tB:public static <T> int binarySearch(List<?> list,T key)\n\t\tC:public static <T> T max(Collection<?> coll)\n\t\tD:public static void reverse(List<?> list)\n\t\tE:public static void shuffle(List<?> list)\n","slug":"Java学习笔记Map","published":1,"updated":"2018-01-20T06:44:37.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vx001i44wax5wyqjj6","content":"<p>Map和Collections<br><a id=\"more\"></a></p>\n<h1 id=\"Map-掌握\"><a href=\"#Map-掌握\" class=\"headerlink\" title=\"Map(掌握)\"></a>Map(掌握)</h1><pre><code>(1)将键映射到值的对象。一个映射不能包含重复的键；每个键最多只能映射到一个值。 \n(2)Map和Collection的区别?\n    A:Map 存储的是键值对形式的元素，键唯一，值可以重复。\n    B:Collection 存储的是单独出现的元素，子接口Set元素唯一，子接口List元素可重复。\n(3)Map接口功能概述(自己补齐)\n    A:添加功能\n    V put(K key,V value)\n    B:删除功能\n    void clear:移除所有键值对元素\n    V remove(Object key):根据键删除键值y\n    C:判断功能\n    boolean containsKey(Object key):判断集合是否包含指定的键\n    boolean containsValue(Object value)\n    boolean isEmpty():判空\n    D:获取功能\n    Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet():返回键值对对象的集合\n    V get(Object key):根据键获取值\n    Set&lt;K&gt; keySet():获取集合中所有键的集合\n    Collection&lt;V&gt; values():获取集合中所有值的集合\n    E:长度功能\n    int size()\n(4)Map集合的遍历\n    A:键找值\n        a:获取所有键的集合\n        b:遍历键的集合,得到每一个键\n        c:根据键到集合中去找值\n\n    B:键值对对象找键和值\n        a:获取所有的键值对对象的集合\n        b:遍历键值对对象的集合，获取每一个键值对对象\n        c:根据键值对对象去获取键和值\n\n    代码体现：\n        Map&lt;String,String&gt; hm = new HashMap&lt;String,String&gt;();\n\n        hm.put(&quot;it002&quot;,&quot;hello&quot;);\n        hm.put(&quot;it003&quot;,&quot;world&quot;);\n        hm.put(&quot;it001&quot;,&quot;java&quot;);\n\n        //方式1 键找值\n        Set&lt;String&gt; set = hm.keySet();\n        for(String key : set) {\n            String value = hm.get(key);\n            System.out.println(key+&quot;---&quot;+value);\n        }\n\n        //方式2 键值对对象找键和值\n        Set&lt;Map.Entry&lt;String,String&gt;&gt; set2 = hm.entrySet();\n        for(Map.Entry&lt;String,String&gt; me : set2) {\n            String key = me.getKey();\n            String value = me.getValue();\n            System.out.println(key+&quot;---&quot;+value);\n        }\n(5)HashMap集合的练习\n    A:HashMap&lt;String,String&gt;\n    B:HashMap&lt;Integer,String&gt;\n    C:HashMap&lt;String,Student&gt;\n    D:HashMap&lt;Student,String&gt;\n(6)TreeMap集合的练习        \n    A:TreeMap&lt;String,String&gt;\n    B:TreeMap&lt;Student,String&gt;\n</code></pre><h1 id=\"Collections-理解\"><a href=\"#Collections-理解\" class=\"headerlink\" title=\"Collections(理解)\"></a>Collections(理解)</h1><pre><code>(1)是针对集合进行操作的工具类\n(2)面试题：Collection和Collections的区别\n    A:Collection 是单列集合的顶层接口，有两个子接口List和Set\n    B:Collections 是针对集合进行操作的工具类，可以对集合进行排序和查找等\n(3)常见的几个小方法：\n    A:public static &lt;T&gt; void sort(List&lt;T&gt; list)\n    B:public static &lt;T&gt; int binarySearch(List&lt;?&gt; list,T key)\n    C:public static &lt;T&gt; T max(Collection&lt;?&gt; coll)\n    D:public static void reverse(List&lt;?&gt; list)\n    E:public static void shuffle(List&lt;?&gt; list)\n</code></pre>","excerpt":"<p>Map和Collections<br>","more":"</p>\n<h1 id=\"Map-掌握\"><a href=\"#Map-掌握\" class=\"headerlink\" title=\"Map(掌握)\"></a>Map(掌握)</h1><pre><code>(1)将键映射到值的对象。一个映射不能包含重复的键；每个键最多只能映射到一个值。 \n(2)Map和Collection的区别?\n    A:Map 存储的是键值对形式的元素，键唯一，值可以重复。\n    B:Collection 存储的是单独出现的元素，子接口Set元素唯一，子接口List元素可重复。\n(3)Map接口功能概述(自己补齐)\n    A:添加功能\n    V put(K key,V value)\n    B:删除功能\n    void clear:移除所有键值对元素\n    V remove(Object key):根据键删除键值y\n    C:判断功能\n    boolean containsKey(Object key):判断集合是否包含指定的键\n    boolean containsValue(Object value)\n    boolean isEmpty():判空\n    D:获取功能\n    Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet():返回键值对对象的集合\n    V get(Object key):根据键获取值\n    Set&lt;K&gt; keySet():获取集合中所有键的集合\n    Collection&lt;V&gt; values():获取集合中所有值的集合\n    E:长度功能\n    int size()\n(4)Map集合的遍历\n    A:键找值\n        a:获取所有键的集合\n        b:遍历键的集合,得到每一个键\n        c:根据键到集合中去找值\n\n    B:键值对对象找键和值\n        a:获取所有的键值对对象的集合\n        b:遍历键值对对象的集合，获取每一个键值对对象\n        c:根据键值对对象去获取键和值\n\n    代码体现：\n        Map&lt;String,String&gt; hm = new HashMap&lt;String,String&gt;();\n\n        hm.put(&quot;it002&quot;,&quot;hello&quot;);\n        hm.put(&quot;it003&quot;,&quot;world&quot;);\n        hm.put(&quot;it001&quot;,&quot;java&quot;);\n\n        //方式1 键找值\n        Set&lt;String&gt; set = hm.keySet();\n        for(String key : set) {\n            String value = hm.get(key);\n            System.out.println(key+&quot;---&quot;+value);\n        }\n\n        //方式2 键值对对象找键和值\n        Set&lt;Map.Entry&lt;String,String&gt;&gt; set2 = hm.entrySet();\n        for(Map.Entry&lt;String,String&gt; me : set2) {\n            String key = me.getKey();\n            String value = me.getValue();\n            System.out.println(key+&quot;---&quot;+value);\n        }\n(5)HashMap集合的练习\n    A:HashMap&lt;String,String&gt;\n    B:HashMap&lt;Integer,String&gt;\n    C:HashMap&lt;String,Student&gt;\n    D:HashMap&lt;Student,String&gt;\n(6)TreeMap集合的练习        \n    A:TreeMap&lt;String,String&gt;\n    B:TreeMap&lt;Student,String&gt;\n</code></pre><h1 id=\"Collections-理解\"><a href=\"#Collections-理解\" class=\"headerlink\" title=\"Collections(理解)\"></a>Collections(理解)</h1><pre><code>(1)是针对集合进行操作的工具类\n(2)面试题：Collection和Collections的区别\n    A:Collection 是单列集合的顶层接口，有两个子接口List和Set\n    B:Collections 是针对集合进行操作的工具类，可以对集合进行排序和查找等\n(3)常见的几个小方法：\n    A:public static &lt;T&gt; void sort(List&lt;T&gt; list)\n    B:public static &lt;T&gt; int binarySearch(List&lt;?&gt; list,T key)\n    C:public static &lt;T&gt; T max(Collection&lt;?&gt; coll)\n    D:public static void reverse(List&lt;?&gt; list)\n    E:public static void shuffle(List&lt;?&gt; list)\n</code></pre>"},{"title":"Java学习笔记StringBuffer和Arrays，Integer,Character","date":"2017-03-08T07:18:42.000Z","toc":true,"_content":"StringBuffer(掌握)Arrays(掌握)Integer(掌握)Character(了解)\n<!--more-->\n# StringBuffer(掌握)\n\t(1)用字符串做拼接，比较耗时并且也耗内存，而这种拼接操作又是比较常见的，为了解决这个问题，Java就提供了\n\t   一个字符串缓冲区类。StringBuffer供我们使用。\n\t(2)StringBuffer的构造方法\n\t\tA:StringBuffer()\n\t\tB:StringBuffer(int size)\n\t\tC:StringBuffer(String str)\n\t(3)StringBuffer的常见功能(自己补齐方法的声明和方法的解释)\n\t\tA:添加功能\n                public StringBuffer append(String str)\n                public StringBuffer insert(int offset,String str)\n\t\tB:删除功能\n                public StringBuffer deleteCharAt(int index)\n                public StringBuffer delete(int start,int end)\n\t\tC:替换功能\n                public StringBuffer replace(int start,int end,String str)\n\t\tD:反转功能\n                public StringBuffer reverse()\n\t\tE:截取功能(注意这个返回值)\n                public String substring(int start)\n                public String substring(int start,int end)\n\t(4)StringBuffer的练习\n\t\tA:String和StringBuffer相互转换\n\t\t\tString -- StringBuffer\n\t\t\t\t构造方法\n\t\t\tStringBuffer -- String\n\t\t\t\ttoString()方法\n\t\tB:字符串的拼接\n\t\tC:把字符串反转\n\t\tD:判断一个字符串是否对称\n\t(5)面试题\n\t\t小细节：\n\t\t\tStringBuffer：同步的，数据安全，效率低。\n\t\t\tStringBuilder：不同步的，数据不安全，效率高。\n\t\tA:String,StringBuffer,StringBuilder的区别\n\t\tB:StringBuffer和数组的区别?\n\t(6)注意的问题：\n\t\tString作为形式参数，StringBuffer作为形式参数。\n\t(7)String,StringBuffer,StringBuilder的区别(转自http://www.cnblogs.com/A_ming/archive/2010/04/13/1711395.html)\n\t\t1.三者在执行速度方面的比较：StringBuilder >  StringBuffer  >  String\n\t\t2.String <（StringBuffer，StringBuilder）的原因\n\t\t\tString：字符串常量\n\t\t\tStringBuffer：字符串变量\n\t\t\tStringBuilder：字符串变量\n\t\t\t从上面的名字可以看到，String是“字符串常量”，也就是不可改变的对象。对于这句话的理解你可能会产生这样一个疑问  ，比如这段代码：\n\t\t\tString s = \"abcd\";\n\t\t\ts = s+1;\n\t\t\tSystem.out.print(s);// result : abcd1\n\t\t\t我们明明就是改变了String型的变量s的，为什么说是没有改变呢? 其实这是一种欺骗，JVM是这样解析这段代码的：首先创建对象s，赋予一个abcd，然后再创建一个新的对象s用来执行第二行代码，也就是说我们之前对象s并没有变化，所以我们说String类型是不可改变的对象了，由于这种机制，每当用String操作字符串时，实际上是在不断的创建新的对象，而原来的对象就会变为垃圾被ＧＣ回收掉，可想而知这样执行效率会有多低。\n\t\t\t而StringBuffer与StringBuilder就不一样了，他们是字符串变量，是可改变的对象，每当我们用它们对字符串做操作时，实际上是在一个对象上操作的，这样就不会像String一样创建一些而外的对象进行操作了，当然速度就快了。\n\t\t3.一个特殊的例子：\n\t\t\tString str = “This is only a” + “ simple” + “ test”;\n\t\t\tStringBuffer builder = new StringBuilder(“This is only a”).append(“ simple”).append(“ test”);\n\t\t\t你会很惊讶的发现，生成str对象的速度简直太快了，而这个时候StringBuffer居然速度上根本一点都不占优势。其实这是JVM的一个把戏，实际上：\n\t\t\tString str = “This is only a” + “ simple” + “test”;\n\t\t\t其实就是：\n\t\t\tString str = “This is only a simple test”;\n\t\t\t所以不需要太多的时间了。但大家这里要注意的是，如果你的字符串是来自另外的String对象的话，速度就没那么快了，譬如：\n\t\t\tString str2 = “This is only a”;\n\t\t\tString str3 = “ simple”;\n\t\t\tString str4 = “ test”;\n\t\t\tString str1 = str2 +str3 + str4;\n\t\t\t这时候JVM会规规矩矩的按照原来的方式去做。\n\t\t4.StringBuilder与 StringBuffer\n\t\t\tStringBuilder：线程非安全的\n\t\t\tStringBuffer：线程安全的\n\t\t\t当我们在字符串缓冲去被多个线程使用是，JVM不能保证StringBuilder的操作是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。当然大多数情况下就是我们是在单线程下进行的操作，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。\n\t(8)StringBuffer详解\n\t\thttp://blog.csdn.net/u012877472/article/details/50808554\n\t\tStringBuffer初始化及扩容机制http://www.cnblogs.com/myhappylife/p/6542633.html\n# Arrays(掌握)\n    (1)Arrays工具类\n\t\tA:是针对数组进行操作的工具类。包括排序和查找等功能。\n\t\tB:要掌握的方法\n                        public static String toString(int[] a)\n                        public static void sort(int[] a)\n                        public static int binarySearch(int[] a,int key)\n\t\t\t把数组转成字符串：\n\t\t\t排序：\n\t\t\t二分查找：\n\t(2)Arrays工具类的源码解析\n\t(3)把字符串中的字符进行排序\n\t\t举例：\n\t\t\t\"edacbgf\"\n\t\t\t得到结果\n\t\t\t\"abcdefg\"\n# Integer(掌握)\n\t(1)为了让基本类型的数据进行更多的操作，Java就为每种基本类型提供了对应的包装类类型\n\t\tbyte \t\tByte\n\t\tshort\t\tShort\n\t\tint\t\t     Integer\n\t\tlong\t\tLong\n\t\tfloat\t\tFloat\n\t\tdouble\t\tDouble\n\t\tchar\t\tCharacter\n\t\tboolean\t\tBoolean\n\t(2)Integer的构造方法\n\t\tA:Integer i = new Integer(100);\n\t\tB:Integer i = new Integer(\"100\");\n\t\t\t注意：这里的字符串必须是由数字字符组成\n\t(3)String和int的相互转换\n\t\tA:String -- int\n\t\t\tInteger.parseInt(\"100\");\n\t\tB:int -- String\n\t\t\tString.valueOf(100);\n\t(4)其他的功能(了解)\n\t\t进制转换\n                public static String toBinaryString(int i)\n                public static String toOctalString(int i)\n                public static String toHexString(int i)\n                十进制转其他进制\n                public static String toString(int i,int radix)//radix为2-36\n\t(5)JDK5的新特性\n\t\t自动装箱\t基本类型--引用类型\n\t\t自动拆箱\t引用类型--基本类型\n\t\t\n\t\t把下面的这个代码理解即可：\n\t\t\tInteger i = 100;\n\t\t\ti += 200;\n\t(6)面试题(-128到127之间的数据缓冲池问题|转自http://blog.csdn.net/wuxizhi777/article/details/51588895)\n\t\t/*\n\t\t* 看程序写结果\n\t\t* \n\t\t* 注意：Integer的数据直接赋值，如果在-128到127之间，会直接从缓冲池里获取数据\n\t\t*/\n\t\tpublic class IntegerDemo {\n\t\t    public static void main(String[] args) {\n\t\t        Integer i1 = new Integer(127);\n\t\t        Integer i2 = new Integer(127);\n\t\t        System.out.println(i1 == i2);\n\t\t        System.out.println(i1.equals(i2));\n\t\t        System.out.println(\"-----------\");\n\n\t\t        Integer i3 = new Integer(128);\n\t\t        Integer i4 = new Integer(128);\n\t\t        System.out.println(i3 == i4);\n\t\t        System.out.println(i3.equals(i4));\n\t\t        System.out.println(\"-----------\");\n\n\t\t        Integer i5 = 128;\n\t\t        Integer i6 = 128;\n\t\t        System.out.println(i5 == i6);\n\t\t        System.out.println(i5.equals(i6));\n\t\t        System.out.println(\"-----------\");\n\n\t\t        Integer i7 = 127;\n\t\t        Integer i8 = 127;\n\t\t        System.out.println(i7 == i8);\n\t\t        System.out.println(i7.equals(i8));\n\n\t\t        // 通过查看源码，我们就知道了，针对-128到127之间的数据，做了一个数据缓冲池，如果数据是该范围内的，每次并不创建新的空间\n\t\t        Integer ii = Integer.valueOf(127);\n\t\t    }\n\t\t}\n\t\t结果如下：\n\t\tfalse\n\t\ttrue\n\n\t\tfalse\n\t\ttrue\n\n\t\tfalse // 这里是因为开辟了新的空间。\n\t\ttrue\n\n\t\ttrue\n\t\ttrue\n\n\t\t这里可以参照 jdk 中的源码：\n\n\t\t* @return a <tt>Integer</tt> instance representing <tt>i</tt>.\n\t\t     * @since  1.5\n\t\t     */\n\t\t    public static Integer valueOf(int i) {\n\t\t    final int offset = 128;\n\t\t    if (i >= -128 && i <= 127) { // must cache \n\t\t        return IntegerCache.cache[i + offset];\n\t\t    }\n\t\t        return new Integer(i);\n\t\t    }\n\t\t当在 -128~127之外才重新 new Integer(i);\n# Character(了解)\n\t(1)Character构造方法\t\n\t\tCharacter ch = new Character('a');\n\t(2)要掌握的方法：(自己补齐)\n\t\tA:public static boolean isUpperCase(char ch)判断给定的字符是否是大写\n\t\tB:public static boolean isLowerCase(char ch)判断给定的字符是否是小写\n\t\tC:public static boolean isDigit(char ch)判断给定的字符是否是数字字符\n\t\tD:public static boolean toUpperCase(char ch)把给定的字符转成大写\n\t\tE:public static boolean toLowerCase(char ch)把给定的字符转成小写\n\t(3)案例：\n\t\t统计字符串中大写，小写及数字字符出现的次数","source":"_posts/Java学习笔记StringBuffer和Arrays，Integer-Character.md","raw":"---\ntitle: 'Java学习笔记StringBuffer和Arrays，Integer,Character'\ndate: 2017-03-08 15:18:42\ntags:\n- Java基础\ntoc: true\n---\nStringBuffer(掌握)Arrays(掌握)Integer(掌握)Character(了解)\n<!--more-->\n# StringBuffer(掌握)\n\t(1)用字符串做拼接，比较耗时并且也耗内存，而这种拼接操作又是比较常见的，为了解决这个问题，Java就提供了\n\t   一个字符串缓冲区类。StringBuffer供我们使用。\n\t(2)StringBuffer的构造方法\n\t\tA:StringBuffer()\n\t\tB:StringBuffer(int size)\n\t\tC:StringBuffer(String str)\n\t(3)StringBuffer的常见功能(自己补齐方法的声明和方法的解释)\n\t\tA:添加功能\n                public StringBuffer append(String str)\n                public StringBuffer insert(int offset,String str)\n\t\tB:删除功能\n                public StringBuffer deleteCharAt(int index)\n                public StringBuffer delete(int start,int end)\n\t\tC:替换功能\n                public StringBuffer replace(int start,int end,String str)\n\t\tD:反转功能\n                public StringBuffer reverse()\n\t\tE:截取功能(注意这个返回值)\n                public String substring(int start)\n                public String substring(int start,int end)\n\t(4)StringBuffer的练习\n\t\tA:String和StringBuffer相互转换\n\t\t\tString -- StringBuffer\n\t\t\t\t构造方法\n\t\t\tStringBuffer -- String\n\t\t\t\ttoString()方法\n\t\tB:字符串的拼接\n\t\tC:把字符串反转\n\t\tD:判断一个字符串是否对称\n\t(5)面试题\n\t\t小细节：\n\t\t\tStringBuffer：同步的，数据安全，效率低。\n\t\t\tStringBuilder：不同步的，数据不安全，效率高。\n\t\tA:String,StringBuffer,StringBuilder的区别\n\t\tB:StringBuffer和数组的区别?\n\t(6)注意的问题：\n\t\tString作为形式参数，StringBuffer作为形式参数。\n\t(7)String,StringBuffer,StringBuilder的区别(转自http://www.cnblogs.com/A_ming/archive/2010/04/13/1711395.html)\n\t\t1.三者在执行速度方面的比较：StringBuilder >  StringBuffer  >  String\n\t\t2.String <（StringBuffer，StringBuilder）的原因\n\t\t\tString：字符串常量\n\t\t\tStringBuffer：字符串变量\n\t\t\tStringBuilder：字符串变量\n\t\t\t从上面的名字可以看到，String是“字符串常量”，也就是不可改变的对象。对于这句话的理解你可能会产生这样一个疑问  ，比如这段代码：\n\t\t\tString s = \"abcd\";\n\t\t\ts = s+1;\n\t\t\tSystem.out.print(s);// result : abcd1\n\t\t\t我们明明就是改变了String型的变量s的，为什么说是没有改变呢? 其实这是一种欺骗，JVM是这样解析这段代码的：首先创建对象s，赋予一个abcd，然后再创建一个新的对象s用来执行第二行代码，也就是说我们之前对象s并没有变化，所以我们说String类型是不可改变的对象了，由于这种机制，每当用String操作字符串时，实际上是在不断的创建新的对象，而原来的对象就会变为垃圾被ＧＣ回收掉，可想而知这样执行效率会有多低。\n\t\t\t而StringBuffer与StringBuilder就不一样了，他们是字符串变量，是可改变的对象，每当我们用它们对字符串做操作时，实际上是在一个对象上操作的，这样就不会像String一样创建一些而外的对象进行操作了，当然速度就快了。\n\t\t3.一个特殊的例子：\n\t\t\tString str = “This is only a” + “ simple” + “ test”;\n\t\t\tStringBuffer builder = new StringBuilder(“This is only a”).append(“ simple”).append(“ test”);\n\t\t\t你会很惊讶的发现，生成str对象的速度简直太快了，而这个时候StringBuffer居然速度上根本一点都不占优势。其实这是JVM的一个把戏，实际上：\n\t\t\tString str = “This is only a” + “ simple” + “test”;\n\t\t\t其实就是：\n\t\t\tString str = “This is only a simple test”;\n\t\t\t所以不需要太多的时间了。但大家这里要注意的是，如果你的字符串是来自另外的String对象的话，速度就没那么快了，譬如：\n\t\t\tString str2 = “This is only a”;\n\t\t\tString str3 = “ simple”;\n\t\t\tString str4 = “ test”;\n\t\t\tString str1 = str2 +str3 + str4;\n\t\t\t这时候JVM会规规矩矩的按照原来的方式去做。\n\t\t4.StringBuilder与 StringBuffer\n\t\t\tStringBuilder：线程非安全的\n\t\t\tStringBuffer：线程安全的\n\t\t\t当我们在字符串缓冲去被多个线程使用是，JVM不能保证StringBuilder的操作是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。当然大多数情况下就是我们是在单线程下进行的操作，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。\n\t(8)StringBuffer详解\n\t\thttp://blog.csdn.net/u012877472/article/details/50808554\n\t\tStringBuffer初始化及扩容机制http://www.cnblogs.com/myhappylife/p/6542633.html\n# Arrays(掌握)\n    (1)Arrays工具类\n\t\tA:是针对数组进行操作的工具类。包括排序和查找等功能。\n\t\tB:要掌握的方法\n                        public static String toString(int[] a)\n                        public static void sort(int[] a)\n                        public static int binarySearch(int[] a,int key)\n\t\t\t把数组转成字符串：\n\t\t\t排序：\n\t\t\t二分查找：\n\t(2)Arrays工具类的源码解析\n\t(3)把字符串中的字符进行排序\n\t\t举例：\n\t\t\t\"edacbgf\"\n\t\t\t得到结果\n\t\t\t\"abcdefg\"\n# Integer(掌握)\n\t(1)为了让基本类型的数据进行更多的操作，Java就为每种基本类型提供了对应的包装类类型\n\t\tbyte \t\tByte\n\t\tshort\t\tShort\n\t\tint\t\t     Integer\n\t\tlong\t\tLong\n\t\tfloat\t\tFloat\n\t\tdouble\t\tDouble\n\t\tchar\t\tCharacter\n\t\tboolean\t\tBoolean\n\t(2)Integer的构造方法\n\t\tA:Integer i = new Integer(100);\n\t\tB:Integer i = new Integer(\"100\");\n\t\t\t注意：这里的字符串必须是由数字字符组成\n\t(3)String和int的相互转换\n\t\tA:String -- int\n\t\t\tInteger.parseInt(\"100\");\n\t\tB:int -- String\n\t\t\tString.valueOf(100);\n\t(4)其他的功能(了解)\n\t\t进制转换\n                public static String toBinaryString(int i)\n                public static String toOctalString(int i)\n                public static String toHexString(int i)\n                十进制转其他进制\n                public static String toString(int i,int radix)//radix为2-36\n\t(5)JDK5的新特性\n\t\t自动装箱\t基本类型--引用类型\n\t\t自动拆箱\t引用类型--基本类型\n\t\t\n\t\t把下面的这个代码理解即可：\n\t\t\tInteger i = 100;\n\t\t\ti += 200;\n\t(6)面试题(-128到127之间的数据缓冲池问题|转自http://blog.csdn.net/wuxizhi777/article/details/51588895)\n\t\t/*\n\t\t* 看程序写结果\n\t\t* \n\t\t* 注意：Integer的数据直接赋值，如果在-128到127之间，会直接从缓冲池里获取数据\n\t\t*/\n\t\tpublic class IntegerDemo {\n\t\t    public static void main(String[] args) {\n\t\t        Integer i1 = new Integer(127);\n\t\t        Integer i2 = new Integer(127);\n\t\t        System.out.println(i1 == i2);\n\t\t        System.out.println(i1.equals(i2));\n\t\t        System.out.println(\"-----------\");\n\n\t\t        Integer i3 = new Integer(128);\n\t\t        Integer i4 = new Integer(128);\n\t\t        System.out.println(i3 == i4);\n\t\t        System.out.println(i3.equals(i4));\n\t\t        System.out.println(\"-----------\");\n\n\t\t        Integer i5 = 128;\n\t\t        Integer i6 = 128;\n\t\t        System.out.println(i5 == i6);\n\t\t        System.out.println(i5.equals(i6));\n\t\t        System.out.println(\"-----------\");\n\n\t\t        Integer i7 = 127;\n\t\t        Integer i8 = 127;\n\t\t        System.out.println(i7 == i8);\n\t\t        System.out.println(i7.equals(i8));\n\n\t\t        // 通过查看源码，我们就知道了，针对-128到127之间的数据，做了一个数据缓冲池，如果数据是该范围内的，每次并不创建新的空间\n\t\t        Integer ii = Integer.valueOf(127);\n\t\t    }\n\t\t}\n\t\t结果如下：\n\t\tfalse\n\t\ttrue\n\n\t\tfalse\n\t\ttrue\n\n\t\tfalse // 这里是因为开辟了新的空间。\n\t\ttrue\n\n\t\ttrue\n\t\ttrue\n\n\t\t这里可以参照 jdk 中的源码：\n\n\t\t* @return a <tt>Integer</tt> instance representing <tt>i</tt>.\n\t\t     * @since  1.5\n\t\t     */\n\t\t    public static Integer valueOf(int i) {\n\t\t    final int offset = 128;\n\t\t    if (i >= -128 && i <= 127) { // must cache \n\t\t        return IntegerCache.cache[i + offset];\n\t\t    }\n\t\t        return new Integer(i);\n\t\t    }\n\t\t当在 -128~127之外才重新 new Integer(i);\n# Character(了解)\n\t(1)Character构造方法\t\n\t\tCharacter ch = new Character('a');\n\t(2)要掌握的方法：(自己补齐)\n\t\tA:public static boolean isUpperCase(char ch)判断给定的字符是否是大写\n\t\tB:public static boolean isLowerCase(char ch)判断给定的字符是否是小写\n\t\tC:public static boolean isDigit(char ch)判断给定的字符是否是数字字符\n\t\tD:public static boolean toUpperCase(char ch)把给定的字符转成大写\n\t\tE:public static boolean toLowerCase(char ch)把给定的字符转成小写\n\t(3)案例：\n\t\t统计字符串中大写，小写及数字字符出现的次数","slug":"Java学习笔记StringBuffer和Arrays，Integer-Character","published":1,"updated":"2018-01-20T06:44:37.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vy001k44waakiksjjx","content":"<p>StringBuffer(掌握)Arrays(掌握)Integer(掌握)Character(了解)<br><a id=\"more\"></a></p>\n<h1 id=\"StringBuffer-掌握\"><a href=\"#StringBuffer-掌握\" class=\"headerlink\" title=\"StringBuffer(掌握)\"></a>StringBuffer(掌握)</h1><pre><code>(1)用字符串做拼接，比较耗时并且也耗内存，而这种拼接操作又是比较常见的，为了解决这个问题，Java就提供了\n   一个字符串缓冲区类。StringBuffer供我们使用。\n(2)StringBuffer的构造方法\n    A:StringBuffer()\n    B:StringBuffer(int size)\n    C:StringBuffer(String str)\n(3)StringBuffer的常见功能(自己补齐方法的声明和方法的解释)\n    A:添加功能\n            public StringBuffer append(String str)\n            public StringBuffer insert(int offset,String str)\n    B:删除功能\n            public StringBuffer deleteCharAt(int index)\n            public StringBuffer delete(int start,int end)\n    C:替换功能\n            public StringBuffer replace(int start,int end,String str)\n    D:反转功能\n            public StringBuffer reverse()\n    E:截取功能(注意这个返回值)\n            public String substring(int start)\n            public String substring(int start,int end)\n(4)StringBuffer的练习\n    A:String和StringBuffer相互转换\n        String -- StringBuffer\n            构造方法\n        StringBuffer -- String\n            toString()方法\n    B:字符串的拼接\n    C:把字符串反转\n    D:判断一个字符串是否对称\n(5)面试题\n    小细节：\n        StringBuffer：同步的，数据安全，效率低。\n        StringBuilder：不同步的，数据不安全，效率高。\n    A:String,StringBuffer,StringBuilder的区别\n    B:StringBuffer和数组的区别?\n(6)注意的问题：\n    String作为形式参数，StringBuffer作为形式参数。\n(7)String,StringBuffer,StringBuilder的区别(转自http://www.cnblogs.com/A_ming/archive/2010/04/13/1711395.html)\n    1.三者在执行速度方面的比较：StringBuilder &gt;  StringBuffer  &gt;  String\n    2.String &lt;（StringBuffer，StringBuilder）的原因\n        String：字符串常量\n        StringBuffer：字符串变量\n        StringBuilder：字符串变量\n        从上面的名字可以看到，String是“字符串常量”，也就是不可改变的对象。对于这句话的理解你可能会产生这样一个疑问  ，比如这段代码：\n        String s = &quot;abcd&quot;;\n        s = s+1;\n        System.out.print(s);// result : abcd1\n        我们明明就是改变了String型的变量s的，为什么说是没有改变呢? 其实这是一种欺骗，JVM是这样解析这段代码的：首先创建对象s，赋予一个abcd，然后再创建一个新的对象s用来执行第二行代码，也就是说我们之前对象s并没有变化，所以我们说String类型是不可改变的对象了，由于这种机制，每当用String操作字符串时，实际上是在不断的创建新的对象，而原来的对象就会变为垃圾被ＧＣ回收掉，可想而知这样执行效率会有多低。\n        而StringBuffer与StringBuilder就不一样了，他们是字符串变量，是可改变的对象，每当我们用它们对字符串做操作时，实际上是在一个对象上操作的，这样就不会像String一样创建一些而外的对象进行操作了，当然速度就快了。\n    3.一个特殊的例子：\n        String str = “This is only a” + “ simple” + “ test”;\n        StringBuffer builder = new StringBuilder(“This is only a”).append(“ simple”).append(“ test”);\n        你会很惊讶的发现，生成str对象的速度简直太快了，而这个时候StringBuffer居然速度上根本一点都不占优势。其实这是JVM的一个把戏，实际上：\n        String str = “This is only a” + “ simple” + “test”;\n        其实就是：\n        String str = “This is only a simple test”;\n        所以不需要太多的时间了。但大家这里要注意的是，如果你的字符串是来自另外的String对象的话，速度就没那么快了，譬如：\n        String str2 = “This is only a”;\n        String str3 = “ simple”;\n        String str4 = “ test”;\n        String str1 = str2 +str3 + str4;\n        这时候JVM会规规矩矩的按照原来的方式去做。\n    4.StringBuilder与 StringBuffer\n        StringBuilder：线程非安全的\n        StringBuffer：线程安全的\n        当我们在字符串缓冲去被多个线程使用是，JVM不能保证StringBuilder的操作是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。当然大多数情况下就是我们是在单线程下进行的操作，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。\n(8)StringBuffer详解\n    http://blog.csdn.net/u012877472/article/details/50808554\n    StringBuffer初始化及扩容机制http://www.cnblogs.com/myhappylife/p/6542633.html\n</code></pre><h1 id=\"Arrays-掌握\"><a href=\"#Arrays-掌握\" class=\"headerlink\" title=\"Arrays(掌握)\"></a>Arrays(掌握)</h1><pre><code>(1)Arrays工具类\n    A:是针对数组进行操作的工具类。包括排序和查找等功能。\n    B:要掌握的方法\n                    public static String toString(int[] a)\n                    public static void sort(int[] a)\n                    public static int binarySearch(int[] a,int key)\n        把数组转成字符串：\n        排序：\n        二分查找：\n(2)Arrays工具类的源码解析\n(3)把字符串中的字符进行排序\n    举例：\n        &quot;edacbgf&quot;\n        得到结果\n        &quot;abcdefg&quot;\n</code></pre><h1 id=\"Integer-掌握\"><a href=\"#Integer-掌握\" class=\"headerlink\" title=\"Integer(掌握)\"></a>Integer(掌握)</h1><pre><code>(1)为了让基本类型的数据进行更多的操作，Java就为每种基本类型提供了对应的包装类类型\n    byte         Byte\n    short        Short\n    int             Integer\n    long        Long\n    float        Float\n    double        Double\n    char        Character\n    boolean        Boolean\n(2)Integer的构造方法\n    A:Integer i = new Integer(100);\n    B:Integer i = new Integer(&quot;100&quot;);\n        注意：这里的字符串必须是由数字字符组成\n(3)String和int的相互转换\n    A:String -- int\n        Integer.parseInt(&quot;100&quot;);\n    B:int -- String\n        String.valueOf(100);\n(4)其他的功能(了解)\n    进制转换\n            public static String toBinaryString(int i)\n            public static String toOctalString(int i)\n            public static String toHexString(int i)\n            十进制转其他进制\n            public static String toString(int i,int radix)//radix为2-36\n(5)JDK5的新特性\n    自动装箱    基本类型--引用类型\n    自动拆箱    引用类型--基本类型\n\n    把下面的这个代码理解即可：\n        Integer i = 100;\n        i += 200;\n(6)面试题(-128到127之间的数据缓冲池问题|转自http://blog.csdn.net/wuxizhi777/article/details/51588895)\n    /*\n    * 看程序写结果\n    * \n    * 注意：Integer的数据直接赋值，如果在-128到127之间，会直接从缓冲池里获取数据\n    */\n    public class IntegerDemo {\n        public static void main(String[] args) {\n            Integer i1 = new Integer(127);\n            Integer i2 = new Integer(127);\n            System.out.println(i1 == i2);\n            System.out.println(i1.equals(i2));\n            System.out.println(&quot;-----------&quot;);\n\n            Integer i3 = new Integer(128);\n            Integer i4 = new Integer(128);\n            System.out.println(i3 == i4);\n            System.out.println(i3.equals(i4));\n            System.out.println(&quot;-----------&quot;);\n\n            Integer i5 = 128;\n            Integer i6 = 128;\n            System.out.println(i5 == i6);\n            System.out.println(i5.equals(i6));\n            System.out.println(&quot;-----------&quot;);\n\n            Integer i7 = 127;\n            Integer i8 = 127;\n            System.out.println(i7 == i8);\n            System.out.println(i7.equals(i8));\n\n            // 通过查看源码，我们就知道了，针对-128到127之间的数据，做了一个数据缓冲池，如果数据是该范围内的，每次并不创建新的空间\n            Integer ii = Integer.valueOf(127);\n        }\n    }\n    结果如下：\n    false\n    true\n\n    false\n    true\n\n    false // 这里是因为开辟了新的空间。\n    true\n\n    true\n    true\n\n    这里可以参照 jdk 中的源码：\n\n    * @return a &lt;tt&gt;Integer&lt;/tt&gt; instance representing &lt;tt&gt;i&lt;/tt&gt;.\n         * @since  1.5\n         */\n        public static Integer valueOf(int i) {\n        final int offset = 128;\n        if (i &gt;= -128 &amp;&amp; i &lt;= 127) { // must cache \n            return IntegerCache.cache[i + offset];\n        }\n            return new Integer(i);\n        }\n    当在 -128~127之外才重新 new Integer(i);\n</code></pre><h1 id=\"Character-了解\"><a href=\"#Character-了解\" class=\"headerlink\" title=\"Character(了解)\"></a>Character(了解)</h1><pre><code>(1)Character构造方法    \n    Character ch = new Character(&apos;a&apos;);\n(2)要掌握的方法：(自己补齐)\n    A:public static boolean isUpperCase(char ch)判断给定的字符是否是大写\n    B:public static boolean isLowerCase(char ch)判断给定的字符是否是小写\n    C:public static boolean isDigit(char ch)判断给定的字符是否是数字字符\n    D:public static boolean toUpperCase(char ch)把给定的字符转成大写\n    E:public static boolean toLowerCase(char ch)把给定的字符转成小写\n(3)案例：\n    统计字符串中大写，小写及数字字符出现的次数\n</code></pre>","excerpt":"<p>StringBuffer(掌握)Arrays(掌握)Integer(掌握)Character(了解)<br>","more":"</p>\n<h1 id=\"StringBuffer-掌握\"><a href=\"#StringBuffer-掌握\" class=\"headerlink\" title=\"StringBuffer(掌握)\"></a>StringBuffer(掌握)</h1><pre><code>(1)用字符串做拼接，比较耗时并且也耗内存，而这种拼接操作又是比较常见的，为了解决这个问题，Java就提供了\n   一个字符串缓冲区类。StringBuffer供我们使用。\n(2)StringBuffer的构造方法\n    A:StringBuffer()\n    B:StringBuffer(int size)\n    C:StringBuffer(String str)\n(3)StringBuffer的常见功能(自己补齐方法的声明和方法的解释)\n    A:添加功能\n            public StringBuffer append(String str)\n            public StringBuffer insert(int offset,String str)\n    B:删除功能\n            public StringBuffer deleteCharAt(int index)\n            public StringBuffer delete(int start,int end)\n    C:替换功能\n            public StringBuffer replace(int start,int end,String str)\n    D:反转功能\n            public StringBuffer reverse()\n    E:截取功能(注意这个返回值)\n            public String substring(int start)\n            public String substring(int start,int end)\n(4)StringBuffer的练习\n    A:String和StringBuffer相互转换\n        String -- StringBuffer\n            构造方法\n        StringBuffer -- String\n            toString()方法\n    B:字符串的拼接\n    C:把字符串反转\n    D:判断一个字符串是否对称\n(5)面试题\n    小细节：\n        StringBuffer：同步的，数据安全，效率低。\n        StringBuilder：不同步的，数据不安全，效率高。\n    A:String,StringBuffer,StringBuilder的区别\n    B:StringBuffer和数组的区别?\n(6)注意的问题：\n    String作为形式参数，StringBuffer作为形式参数。\n(7)String,StringBuffer,StringBuilder的区别(转自http://www.cnblogs.com/A_ming/archive/2010/04/13/1711395.html)\n    1.三者在执行速度方面的比较：StringBuilder &gt;  StringBuffer  &gt;  String\n    2.String &lt;（StringBuffer，StringBuilder）的原因\n        String：字符串常量\n        StringBuffer：字符串变量\n        StringBuilder：字符串变量\n        从上面的名字可以看到，String是“字符串常量”，也就是不可改变的对象。对于这句话的理解你可能会产生这样一个疑问  ，比如这段代码：\n        String s = &quot;abcd&quot;;\n        s = s+1;\n        System.out.print(s);// result : abcd1\n        我们明明就是改变了String型的变量s的，为什么说是没有改变呢? 其实这是一种欺骗，JVM是这样解析这段代码的：首先创建对象s，赋予一个abcd，然后再创建一个新的对象s用来执行第二行代码，也就是说我们之前对象s并没有变化，所以我们说String类型是不可改变的对象了，由于这种机制，每当用String操作字符串时，实际上是在不断的创建新的对象，而原来的对象就会变为垃圾被ＧＣ回收掉，可想而知这样执行效率会有多低。\n        而StringBuffer与StringBuilder就不一样了，他们是字符串变量，是可改变的对象，每当我们用它们对字符串做操作时，实际上是在一个对象上操作的，这样就不会像String一样创建一些而外的对象进行操作了，当然速度就快了。\n    3.一个特殊的例子：\n        String str = “This is only a” + “ simple” + “ test”;\n        StringBuffer builder = new StringBuilder(“This is only a”).append(“ simple”).append(“ test”);\n        你会很惊讶的发现，生成str对象的速度简直太快了，而这个时候StringBuffer居然速度上根本一点都不占优势。其实这是JVM的一个把戏，实际上：\n        String str = “This is only a” + “ simple” + “test”;\n        其实就是：\n        String str = “This is only a simple test”;\n        所以不需要太多的时间了。但大家这里要注意的是，如果你的字符串是来自另外的String对象的话，速度就没那么快了，譬如：\n        String str2 = “This is only a”;\n        String str3 = “ simple”;\n        String str4 = “ test”;\n        String str1 = str2 +str3 + str4;\n        这时候JVM会规规矩矩的按照原来的方式去做。\n    4.StringBuilder与 StringBuffer\n        StringBuilder：线程非安全的\n        StringBuffer：线程安全的\n        当我们在字符串缓冲去被多个线程使用是，JVM不能保证StringBuilder的操作是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。当然大多数情况下就是我们是在单线程下进行的操作，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。\n(8)StringBuffer详解\n    http://blog.csdn.net/u012877472/article/details/50808554\n    StringBuffer初始化及扩容机制http://www.cnblogs.com/myhappylife/p/6542633.html\n</code></pre><h1 id=\"Arrays-掌握\"><a href=\"#Arrays-掌握\" class=\"headerlink\" title=\"Arrays(掌握)\"></a>Arrays(掌握)</h1><pre><code>(1)Arrays工具类\n    A:是针对数组进行操作的工具类。包括排序和查找等功能。\n    B:要掌握的方法\n                    public static String toString(int[] a)\n                    public static void sort(int[] a)\n                    public static int binarySearch(int[] a,int key)\n        把数组转成字符串：\n        排序：\n        二分查找：\n(2)Arrays工具类的源码解析\n(3)把字符串中的字符进行排序\n    举例：\n        &quot;edacbgf&quot;\n        得到结果\n        &quot;abcdefg&quot;\n</code></pre><h1 id=\"Integer-掌握\"><a href=\"#Integer-掌握\" class=\"headerlink\" title=\"Integer(掌握)\"></a>Integer(掌握)</h1><pre><code>(1)为了让基本类型的数据进行更多的操作，Java就为每种基本类型提供了对应的包装类类型\n    byte         Byte\n    short        Short\n    int             Integer\n    long        Long\n    float        Float\n    double        Double\n    char        Character\n    boolean        Boolean\n(2)Integer的构造方法\n    A:Integer i = new Integer(100);\n    B:Integer i = new Integer(&quot;100&quot;);\n        注意：这里的字符串必须是由数字字符组成\n(3)String和int的相互转换\n    A:String -- int\n        Integer.parseInt(&quot;100&quot;);\n    B:int -- String\n        String.valueOf(100);\n(4)其他的功能(了解)\n    进制转换\n            public static String toBinaryString(int i)\n            public static String toOctalString(int i)\n            public static String toHexString(int i)\n            十进制转其他进制\n            public static String toString(int i,int radix)//radix为2-36\n(5)JDK5的新特性\n    自动装箱    基本类型--引用类型\n    自动拆箱    引用类型--基本类型\n\n    把下面的这个代码理解即可：\n        Integer i = 100;\n        i += 200;\n(6)面试题(-128到127之间的数据缓冲池问题|转自http://blog.csdn.net/wuxizhi777/article/details/51588895)\n    /*\n    * 看程序写结果\n    * \n    * 注意：Integer的数据直接赋值，如果在-128到127之间，会直接从缓冲池里获取数据\n    */\n    public class IntegerDemo {\n        public static void main(String[] args) {\n            Integer i1 = new Integer(127);\n            Integer i2 = new Integer(127);\n            System.out.println(i1 == i2);\n            System.out.println(i1.equals(i2));\n            System.out.println(&quot;-----------&quot;);\n\n            Integer i3 = new Integer(128);\n            Integer i4 = new Integer(128);\n            System.out.println(i3 == i4);\n            System.out.println(i3.equals(i4));\n            System.out.println(&quot;-----------&quot;);\n\n            Integer i5 = 128;\n            Integer i6 = 128;\n            System.out.println(i5 == i6);\n            System.out.println(i5.equals(i6));\n            System.out.println(&quot;-----------&quot;);\n\n            Integer i7 = 127;\n            Integer i8 = 127;\n            System.out.println(i7 == i8);\n            System.out.println(i7.equals(i8));\n\n            // 通过查看源码，我们就知道了，针对-128到127之间的数据，做了一个数据缓冲池，如果数据是该范围内的，每次并不创建新的空间\n            Integer ii = Integer.valueOf(127);\n        }\n    }\n    结果如下：\n    false\n    true\n\n    false\n    true\n\n    false // 这里是因为开辟了新的空间。\n    true\n\n    true\n    true\n\n    这里可以参照 jdk 中的源码：\n\n    * @return a &lt;tt&gt;Integer&lt;/tt&gt; instance representing &lt;tt&gt;i&lt;/tt&gt;.\n         * @since  1.5\n         */\n        public static Integer valueOf(int i) {\n        final int offset = 128;\n        if (i &gt;= -128 &amp;&amp; i &lt;= 127) { // must cache \n            return IntegerCache.cache[i + offset];\n        }\n            return new Integer(i);\n        }\n    当在 -128~127之外才重新 new Integer(i);\n</code></pre><h1 id=\"Character-了解\"><a href=\"#Character-了解\" class=\"headerlink\" title=\"Character(了解)\"></a>Character(了解)</h1><pre><code>(1)Character构造方法    \n    Character ch = new Character(&apos;a&apos;);\n(2)要掌握的方法：(自己补齐)\n    A:public static boolean isUpperCase(char ch)判断给定的字符是否是大写\n    B:public static boolean isLowerCase(char ch)判断给定的字符是否是小写\n    C:public static boolean isDigit(char ch)判断给定的字符是否是数字字符\n    D:public static boolean toUpperCase(char ch)把给定的字符转成大写\n    E:public static boolean toLowerCase(char ch)把给定的字符转成小写\n(3)案例：\n    统计字符串中大写，小写及数字字符出现的次数\n</code></pre>"},{"title":"Java学习笔记String","date":"2017-03-08T03:37:36.000Z","toc":true,"_content":"\n\nScanner和String的构造方法和功能\n<!--more-->\n## Scanner的使用(了解)\n\t(1)在JDK5以后出现的用于键盘录入数据的类。\n\t(2)构造方法：\n\t\tA:讲解了System.in这个东西。\n\t\t\t它其实是标准的输入流,对应于键盘录入\n\t\tB:构造方法\n\t\t\tInputStream is = System.in;\n\t\t\tScanner(InputStream is)\n\t\tC:常用的格式\n\t\t\tScanner sc = new Scanner(System.in);\n\t(3)基本方法格式：\n\t\tA:hasNextXxx() 判断是否是某种类型的\n\t\tB:nextXxx()\t返回某种类型的元素\n\t(4)要掌握的两个方法\n\t\tA:public int nextInt()\n\t\tB:public String nextLine()\n\t(5)需要注意的小问题\n\t\tA:同一个Scanner对象，先获取数值，再获取字符串会出现一个小问题。\n\t\tB:解决方案：\n\t\t\ta:重新定义一个Scanner对象\n\t\t\tb:把所有的数据都用字符串获取，然后再进行相应的转换\n## 构造方法：\n```\n\t\tA:public String()\n\t\tB:public String(byte[] bytes)\n\t\tC:public String(byte[] bytes,int offset,int length)\n\t\tD:public String(char[] value)\n\t\tE:public String(char[] value,int offset,int count)\n\t\tF:public String(String original)\n```\n## A:判断功能\n\t\t\tboolean equals(Object obj)\n\t\t\tboolean equalsIgnoreCase(String str)\n\t\t\tboolean contains(String str)\n\t\t\tboolean startsWith(String str)\n\t\t\tboolean endsWith(String str)\n\t\t\tboolean isEmpty()\n## B:获取功能\n\t\t\tint length()\n\t\t\tchar charAt(int index)\n\t\t\tint indexOf(int ch)\n\t\t\tint indexOf(String str)\n\t\t\tint indexOf(int ch,int fromIndex)\n\t\t\tint indexOf(String str,int fromIndex)\n\t\t\tString substring(int start)\n\t\t\tString substring(int start,int end)\n## C:转换功能\n\t\t\tbyte[] getBytes()\n\t\t\tchar[] toCharArray()\n\t\t\tstatic String valueOf(char[] chs)\n\t\t\tstatic String valueOf(int i)\n\t\t\tString toLowerCase()\n\t\t\tString toUpperCase()\n\t\t\tString concat(String str)\n## D:其他功能\n\t\t\ta:替换功能 \n\t\t\t\tString replace(char old,char new)\n\t\t\t\tString replace(String old,String new)\n\t\t\tb:去空格功能\n\t\t\t\tString trim()\n\t\t\tc:按字典比较功能\n\t\t\t\tint compareTo(String str)\n\t\t\t\tint compareToIgnoreCase(String str) \n","source":"_posts/Java学习笔记String.md","raw":"---\ntitle: 'Java学习笔记String'\ndate: 2017-03-08 11:37:36\ntags:\n- Java基础\ntoc: true\n---\n\n\nScanner和String的构造方法和功能\n<!--more-->\n## Scanner的使用(了解)\n\t(1)在JDK5以后出现的用于键盘录入数据的类。\n\t(2)构造方法：\n\t\tA:讲解了System.in这个东西。\n\t\t\t它其实是标准的输入流,对应于键盘录入\n\t\tB:构造方法\n\t\t\tInputStream is = System.in;\n\t\t\tScanner(InputStream is)\n\t\tC:常用的格式\n\t\t\tScanner sc = new Scanner(System.in);\n\t(3)基本方法格式：\n\t\tA:hasNextXxx() 判断是否是某种类型的\n\t\tB:nextXxx()\t返回某种类型的元素\n\t(4)要掌握的两个方法\n\t\tA:public int nextInt()\n\t\tB:public String nextLine()\n\t(5)需要注意的小问题\n\t\tA:同一个Scanner对象，先获取数值，再获取字符串会出现一个小问题。\n\t\tB:解决方案：\n\t\t\ta:重新定义一个Scanner对象\n\t\t\tb:把所有的数据都用字符串获取，然后再进行相应的转换\n## 构造方法：\n```\n\t\tA:public String()\n\t\tB:public String(byte[] bytes)\n\t\tC:public String(byte[] bytes,int offset,int length)\n\t\tD:public String(char[] value)\n\t\tE:public String(char[] value,int offset,int count)\n\t\tF:public String(String original)\n```\n## A:判断功能\n\t\t\tboolean equals(Object obj)\n\t\t\tboolean equalsIgnoreCase(String str)\n\t\t\tboolean contains(String str)\n\t\t\tboolean startsWith(String str)\n\t\t\tboolean endsWith(String str)\n\t\t\tboolean isEmpty()\n## B:获取功能\n\t\t\tint length()\n\t\t\tchar charAt(int index)\n\t\t\tint indexOf(int ch)\n\t\t\tint indexOf(String str)\n\t\t\tint indexOf(int ch,int fromIndex)\n\t\t\tint indexOf(String str,int fromIndex)\n\t\t\tString substring(int start)\n\t\t\tString substring(int start,int end)\n## C:转换功能\n\t\t\tbyte[] getBytes()\n\t\t\tchar[] toCharArray()\n\t\t\tstatic String valueOf(char[] chs)\n\t\t\tstatic String valueOf(int i)\n\t\t\tString toLowerCase()\n\t\t\tString toUpperCase()\n\t\t\tString concat(String str)\n## D:其他功能\n\t\t\ta:替换功能 \n\t\t\t\tString replace(char old,char new)\n\t\t\t\tString replace(String old,String new)\n\t\t\tb:去空格功能\n\t\t\t\tString trim()\n\t\t\tc:按字典比较功能\n\t\t\t\tint compareTo(String str)\n\t\t\t\tint compareToIgnoreCase(String str) \n","slug":"Java学习笔记String","published":1,"updated":"2018-01-20T06:44:37.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8vz001n44wa6m20sbwz","content":"<p>Scanner和String的构造方法和功能<br><a id=\"more\"></a></p>\n<h2 id=\"Scanner的使用-了解\"><a href=\"#Scanner的使用-了解\" class=\"headerlink\" title=\"Scanner的使用(了解)\"></a>Scanner的使用(了解)</h2><pre><code>(1)在JDK5以后出现的用于键盘录入数据的类。\n(2)构造方法：\n    A:讲解了System.in这个东西。\n        它其实是标准的输入流,对应于键盘录入\n    B:构造方法\n        InputStream is = System.in;\n        Scanner(InputStream is)\n    C:常用的格式\n        Scanner sc = new Scanner(System.in);\n(3)基本方法格式：\n    A:hasNextXxx() 判断是否是某种类型的\n    B:nextXxx()    返回某种类型的元素\n(4)要掌握的两个方法\n    A:public int nextInt()\n    B:public String nextLine()\n(5)需要注意的小问题\n    A:同一个Scanner对象，先获取数值，再获取字符串会出现一个小问题。\n    B:解决方案：\n        a:重新定义一个Scanner对象\n        b:把所有的数据都用字符串获取，然后再进行相应的转换\n</code></pre><h2 id=\"构造方法：\"><a href=\"#构造方法：\" class=\"headerlink\" title=\"构造方法：\"></a>构造方法：</h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">A:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>()</div><div class=\"line\">B:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">byte</span>[] bytes)</div><div class=\"line\">C:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">byte</span>[] bytes,<span class=\"keyword\">int</span> offset,<span class=\"keyword\">int</span> length)</div><div class=\"line\">D:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">char</span>[] value)</div><div class=\"line\">E:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">char</span>[] value,<span class=\"keyword\">int</span> offset,<span class=\"keyword\">int</span> count)</div><div class=\"line\">F:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">String</span> original)</div></pre></td></tr></table></figure>\n<h2 id=\"A-判断功能\"><a href=\"#A-判断功能\" class=\"headerlink\" title=\"A:判断功能\"></a>A:判断功能</h2><pre><code>boolean equals(Object obj)\nboolean equalsIgnoreCase(String str)\nboolean contains(String str)\nboolean startsWith(String str)\nboolean endsWith(String str)\nboolean isEmpty()\n</code></pre><h2 id=\"B-获取功能\"><a href=\"#B-获取功能\" class=\"headerlink\" title=\"B:获取功能\"></a>B:获取功能</h2><pre><code>int length()\nchar charAt(int index)\nint indexOf(int ch)\nint indexOf(String str)\nint indexOf(int ch,int fromIndex)\nint indexOf(String str,int fromIndex)\nString substring(int start)\nString substring(int start,int end)\n</code></pre><h2 id=\"C-转换功能\"><a href=\"#C-转换功能\" class=\"headerlink\" title=\"C:转换功能\"></a>C:转换功能</h2><pre><code>byte[] getBytes()\nchar[] toCharArray()\nstatic String valueOf(char[] chs)\nstatic String valueOf(int i)\nString toLowerCase()\nString toUpperCase()\nString concat(String str)\n</code></pre><h2 id=\"D-其他功能\"><a href=\"#D-其他功能\" class=\"headerlink\" title=\"D:其他功能\"></a>D:其他功能</h2><pre><code>a:替换功能 \n    String replace(char old,char new)\n    String replace(String old,String new)\nb:去空格功能\n    String trim()\nc:按字典比较功能\n    int compareTo(String str)\n    int compareToIgnoreCase(String str) \n</code></pre>","excerpt":"<p>Scanner和String的构造方法和功能<br>","more":"</p>\n<h2 id=\"Scanner的使用-了解\"><a href=\"#Scanner的使用-了解\" class=\"headerlink\" title=\"Scanner的使用(了解)\"></a>Scanner的使用(了解)</h2><pre><code>(1)在JDK5以后出现的用于键盘录入数据的类。\n(2)构造方法：\n    A:讲解了System.in这个东西。\n        它其实是标准的输入流,对应于键盘录入\n    B:构造方法\n        InputStream is = System.in;\n        Scanner(InputStream is)\n    C:常用的格式\n        Scanner sc = new Scanner(System.in);\n(3)基本方法格式：\n    A:hasNextXxx() 判断是否是某种类型的\n    B:nextXxx()    返回某种类型的元素\n(4)要掌握的两个方法\n    A:public int nextInt()\n    B:public String nextLine()\n(5)需要注意的小问题\n    A:同一个Scanner对象，先获取数值，再获取字符串会出现一个小问题。\n    B:解决方案：\n        a:重新定义一个Scanner对象\n        b:把所有的数据都用字符串获取，然后再进行相应的转换\n</code></pre><h2 id=\"构造方法：\"><a href=\"#构造方法：\" class=\"headerlink\" title=\"构造方法：\"></a>构造方法：</h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">A:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>()</div><div class=\"line\">B:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">byte</span>[] bytes)</div><div class=\"line\">C:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">byte</span>[] bytes,<span class=\"keyword\">int</span> offset,<span class=\"keyword\">int</span> length)</div><div class=\"line\">D:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">char</span>[] value)</div><div class=\"line\">E:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">char</span>[] value,<span class=\"keyword\">int</span> offset,<span class=\"keyword\">int</span> count)</div><div class=\"line\">F:<span class=\"keyword\">public</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">String</span> original)</div></pre></td></tr></table></figure>\n<h2 id=\"A-判断功能\"><a href=\"#A-判断功能\" class=\"headerlink\" title=\"A:判断功能\"></a>A:判断功能</h2><pre><code>boolean equals(Object obj)\nboolean equalsIgnoreCase(String str)\nboolean contains(String str)\nboolean startsWith(String str)\nboolean endsWith(String str)\nboolean isEmpty()\n</code></pre><h2 id=\"B-获取功能\"><a href=\"#B-获取功能\" class=\"headerlink\" title=\"B:获取功能\"></a>B:获取功能</h2><pre><code>int length()\nchar charAt(int index)\nint indexOf(int ch)\nint indexOf(String str)\nint indexOf(int ch,int fromIndex)\nint indexOf(String str,int fromIndex)\nString substring(int start)\nString substring(int start,int end)\n</code></pre><h2 id=\"C-转换功能\"><a href=\"#C-转换功能\" class=\"headerlink\" title=\"C:转换功能\"></a>C:转换功能</h2><pre><code>byte[] getBytes()\nchar[] toCharArray()\nstatic String valueOf(char[] chs)\nstatic String valueOf(int i)\nString toLowerCase()\nString toUpperCase()\nString concat(String str)\n</code></pre><h2 id=\"D-其他功能\"><a href=\"#D-其他功能\" class=\"headerlink\" title=\"D:其他功能\"></a>D:其他功能</h2><pre><code>a:替换功能 \n    String replace(char old,char new)\n    String replace(String old,String new)\nb:去空格功能\n    String trim()\nc:按字典比较功能\n    int compareTo(String str)\n    int compareToIgnoreCase(String str) \n</code></pre>"},{"title":"Java学习笔记Vector,LinkedList,泛型,静态导入,可变参数,asList()","date":"2017-03-09T07:02:43.000Z","toc":true,"_content":"Vector,LinkedList,泛型,静态导入,可变参数,asList()\n<!--more-->\n# Vector\n\t\tA:有特有功能\n\t\t\ta:添加\n\t\t\t\tpublic void addElement(E obj)--\tadd()\n\t\t\tb:获取\n\t\t\t\tpublic E elementAt(int index)--\tget()\n\t\t\t\tpublic Enumeration<E> elements()-- iterator()\n\n# LinkedList\n\t\tA:有特有功能\t\n\t\t\ta:添加\n\t\t\t\taddFirst()\n\t\t\t\taddLast()\n\t\t\tb:删除\n\t\t\t\tremoveFirst()\n\t\t\t\tremoveLast()\n\t\t\tc:获取\n\t\t\t\tgetFirst()\n\t\t\t\tgetLast()\n# 泛型的前世今生\n\t\tA:泛型的由来\n\t\t\tObject类型作为任意类型的时候，在向下转型的时候，会隐含一个转型问题\n\t\tB:泛型类\n\t\tC:泛型方法\n\t\tD:泛型接口\n\t\tE:泛型高级通配符\n\t\t\t?\n\t\t\t? extends E\n\t\t\t? super E\t\n# 增强for循环(掌握)\n\t(1)是for循环的一种\n\t(2)格式：\n\t\tfor(元素的数据类型 变量名 : 数组或者Collection集合的对象) {\n\t\t\t使用该变量即可，该变量其实就是数组或者集合中的元素。\n\t\t}\n\t(3)好处：\n\t\t简化了数组和集合的遍历\n\t(4)弊端\n\t\t增强for循环的目标不能为null。建议在使用前，先判断是否为null。\n# 静态导入(了解)\n\t(1)可以导入到方法级别的导入\n\t(2)格式：\n\t\timport static 包名....类名.方法名;\n\t(3)注意事项：\n\t\tA:方法必须是静态的\n\t\tB:如果多个类下有同名的方法，就不好区分了，还得加上前缀。\n\t\t\t所以一般我们并不使用静态导入，但是一定要能够看懂。\n\t\n# 可变参数(掌握)\n\t(1)如果我们在写方法的时候，参数个数不明确，就应该定义可变参数。\n\t(2)格式：\n\t\t修饰符 返回值类型 方法名(数据类型... 变量) {}\n\t\t\n\t\t注意：\n\t\t\tA:该变量其实是一个数组名\n\t\t\tB:如果一个方法有多个参数，并且有可变参数，可变参数必须在最后\t\n","source":"_posts/Java学习笔记Vector-LinkedList-泛型-静态导入-可变参数-asList.md","raw":"---\ntitle: 'Java学习笔记Vector,LinkedList,泛型,静态导入,可变参数,asList()'\ndate: 2017-03-09 15:02:43\ntags:\n- Java基础\ntoc: true\n---\nVector,LinkedList,泛型,静态导入,可变参数,asList()\n<!--more-->\n# Vector\n\t\tA:有特有功能\n\t\t\ta:添加\n\t\t\t\tpublic void addElement(E obj)--\tadd()\n\t\t\tb:获取\n\t\t\t\tpublic E elementAt(int index)--\tget()\n\t\t\t\tpublic Enumeration<E> elements()-- iterator()\n\n# LinkedList\n\t\tA:有特有功能\t\n\t\t\ta:添加\n\t\t\t\taddFirst()\n\t\t\t\taddLast()\n\t\t\tb:删除\n\t\t\t\tremoveFirst()\n\t\t\t\tremoveLast()\n\t\t\tc:获取\n\t\t\t\tgetFirst()\n\t\t\t\tgetLast()\n# 泛型的前世今生\n\t\tA:泛型的由来\n\t\t\tObject类型作为任意类型的时候，在向下转型的时候，会隐含一个转型问题\n\t\tB:泛型类\n\t\tC:泛型方法\n\t\tD:泛型接口\n\t\tE:泛型高级通配符\n\t\t\t?\n\t\t\t? extends E\n\t\t\t? super E\t\n# 增强for循环(掌握)\n\t(1)是for循环的一种\n\t(2)格式：\n\t\tfor(元素的数据类型 变量名 : 数组或者Collection集合的对象) {\n\t\t\t使用该变量即可，该变量其实就是数组或者集合中的元素。\n\t\t}\n\t(3)好处：\n\t\t简化了数组和集合的遍历\n\t(4)弊端\n\t\t增强for循环的目标不能为null。建议在使用前，先判断是否为null。\n# 静态导入(了解)\n\t(1)可以导入到方法级别的导入\n\t(2)格式：\n\t\timport static 包名....类名.方法名;\n\t(3)注意事项：\n\t\tA:方法必须是静态的\n\t\tB:如果多个类下有同名的方法，就不好区分了，还得加上前缀。\n\t\t\t所以一般我们并不使用静态导入，但是一定要能够看懂。\n\t\n# 可变参数(掌握)\n\t(1)如果我们在写方法的时候，参数个数不明确，就应该定义可变参数。\n\t(2)格式：\n\t\t修饰符 返回值类型 方法名(数据类型... 变量) {}\n\t\t\n\t\t注意：\n\t\t\tA:该变量其实是一个数组名\n\t\t\tB:如果一个方法有多个参数，并且有可变参数，可变参数必须在最后\t\n","slug":"Java学习笔记Vector-LinkedList-泛型-静态导入-可变参数-asList","published":1,"updated":"2018-01-20T06:44:37.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8w4001p44wa5cikrpx0","content":"<p>Vector,LinkedList,泛型,静态导入,可变参数,asList()<br><a id=\"more\"></a></p>\n<h1 id=\"Vector\"><a href=\"#Vector\" class=\"headerlink\" title=\"Vector\"></a>Vector</h1><pre><code>A:有特有功能\n    a:添加\n        public void addElement(E obj)--    add()\n    b:获取\n        public E elementAt(int index)--    get()\n        public Enumeration&lt;E&gt; elements()-- iterator()\n</code></pre><h1 id=\"LinkedList\"><a href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h1><pre><code>A:有特有功能    \n    a:添加\n        addFirst()\n        addLast()\n    b:删除\n        removeFirst()\n        removeLast()\n    c:获取\n        getFirst()\n        getLast()\n</code></pre><h1 id=\"泛型的前世今生\"><a href=\"#泛型的前世今生\" class=\"headerlink\" title=\"泛型的前世今生\"></a>泛型的前世今生</h1><pre><code>A:泛型的由来\n    Object类型作为任意类型的时候，在向下转型的时候，会隐含一个转型问题\nB:泛型类\nC:泛型方法\nD:泛型接口\nE:泛型高级通配符\n    ?\n    ? extends E\n    ? super E    \n</code></pre><h1 id=\"增强for循环-掌握\"><a href=\"#增强for循环-掌握\" class=\"headerlink\" title=\"增强for循环(掌握)\"></a>增强for循环(掌握)</h1><pre><code>(1)是for循环的一种\n(2)格式：\n    for(元素的数据类型 变量名 : 数组或者Collection集合的对象) {\n        使用该变量即可，该变量其实就是数组或者集合中的元素。\n    }\n(3)好处：\n    简化了数组和集合的遍历\n(4)弊端\n    增强for循环的目标不能为null。建议在使用前，先判断是否为null。\n</code></pre><h1 id=\"静态导入-了解\"><a href=\"#静态导入-了解\" class=\"headerlink\" title=\"静态导入(了解)\"></a>静态导入(了解)</h1><pre><code>(1)可以导入到方法级别的导入\n(2)格式：\n    import static 包名....类名.方法名;\n(3)注意事项：\n    A:方法必须是静态的\n    B:如果多个类下有同名的方法，就不好区分了，还得加上前缀。\n        所以一般我们并不使用静态导入，但是一定要能够看懂。\n</code></pre><h1 id=\"可变参数-掌握\"><a href=\"#可变参数-掌握\" class=\"headerlink\" title=\"可变参数(掌握)\"></a>可变参数(掌握)</h1><pre><code>(1)如果我们在写方法的时候，参数个数不明确，就应该定义可变参数。\n(2)格式：\n    修饰符 返回值类型 方法名(数据类型... 变量) {}\n\n    注意：\n        A:该变量其实是一个数组名\n        B:如果一个方法有多个参数，并且有可变参数，可变参数必须在最后    \n</code></pre>","excerpt":"<p>Vector,LinkedList,泛型,静态导入,可变参数,asList()<br>","more":"</p>\n<h1 id=\"Vector\"><a href=\"#Vector\" class=\"headerlink\" title=\"Vector\"></a>Vector</h1><pre><code>A:有特有功能\n    a:添加\n        public void addElement(E obj)--    add()\n    b:获取\n        public E elementAt(int index)--    get()\n        public Enumeration&lt;E&gt; elements()-- iterator()\n</code></pre><h1 id=\"LinkedList\"><a href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h1><pre><code>A:有特有功能    \n    a:添加\n        addFirst()\n        addLast()\n    b:删除\n        removeFirst()\n        removeLast()\n    c:获取\n        getFirst()\n        getLast()\n</code></pre><h1 id=\"泛型的前世今生\"><a href=\"#泛型的前世今生\" class=\"headerlink\" title=\"泛型的前世今生\"></a>泛型的前世今生</h1><pre><code>A:泛型的由来\n    Object类型作为任意类型的时候，在向下转型的时候，会隐含一个转型问题\nB:泛型类\nC:泛型方法\nD:泛型接口\nE:泛型高级通配符\n    ?\n    ? extends E\n    ? super E    \n</code></pre><h1 id=\"增强for循环-掌握\"><a href=\"#增强for循环-掌握\" class=\"headerlink\" title=\"增强for循环(掌握)\"></a>增强for循环(掌握)</h1><pre><code>(1)是for循环的一种\n(2)格式：\n    for(元素的数据类型 变量名 : 数组或者Collection集合的对象) {\n        使用该变量即可，该变量其实就是数组或者集合中的元素。\n    }\n(3)好处：\n    简化了数组和集合的遍历\n(4)弊端\n    增强for循环的目标不能为null。建议在使用前，先判断是否为null。\n</code></pre><h1 id=\"静态导入-了解\"><a href=\"#静态导入-了解\" class=\"headerlink\" title=\"静态导入(了解)\"></a>静态导入(了解)</h1><pre><code>(1)可以导入到方法级别的导入\n(2)格式：\n    import static 包名....类名.方法名;\n(3)注意事项：\n    A:方法必须是静态的\n    B:如果多个类下有同名的方法，就不好区分了，还得加上前缀。\n        所以一般我们并不使用静态导入，但是一定要能够看懂。\n</code></pre><h1 id=\"可变参数-掌握\"><a href=\"#可变参数-掌握\" class=\"headerlink\" title=\"可变参数(掌握)\"></a>可变参数(掌握)</h1><pre><code>(1)如果我们在写方法的时候，参数个数不明确，就应该定义可变参数。\n(2)格式：\n    修饰符 返回值类型 方法名(数据类型... 变量) {}\n\n    注意：\n        A:该变量其实是一个数组名\n        B:如果一个方法有多个参数，并且有可变参数，可变参数必须在最后    \n</code></pre>"},{"title":"Java学习笔记之IO流2","date":"2017-03-14T08:49:11.000Z","toc":true,"_content":"\n\n字符流,IO流小结,数据操作流,内存操作流,打印流,标准输入输出流,随机访问流,合并流,序列化流,Properties,NIO\n<!--more-->\n# 1:字符流(掌握)\n\t(1)字节流操作中文数据不是特别的方便，所以就出现了转换流。\n\t   转换流的作用就是把字节流转换字符流来使用。\n\t(2)转换流其实是一个字符流\n\t\t字符流 = 字节流 + 编码表\n\t(3)编码表\n\t\tA:就是由字符和对应的数值组成的一张表\n\t\tB:常见的编码表\n\t\t\tASCII\n\t\t\tISO-8859-1\n\t\t\tGB2312\n\t\t\tGBK\n\t\t\tGB18030\n\t\t\tUTF-8\n\t\tC:字符串中的编码问题\n\t\t\t编码\n\t\t\t\tString -- byte[]\n\t\t\t解码\n\t\t\t\tbyte[] -- String\n\t(4)IO流中的编码问题\n\t\tA:OutputStreamWriter\n\t\t\tOutputStreamWriter(OutputStream os):默认编码，GBK\n\t\t\tOutputStreamWriter(OutputStream os,String charsetName):指定编码。\n\t\tB:InputStreamReader\n\t\t\tInputStreamReader(InputStream is):默认编码，GBK\n\t\t\tInputStreamReader(InputStream is,String charsetName):指定编码\n\t\tC:编码问题其实很简单\n\t\t\t编码只要一致即可\n\t(5)字符流\n\t\tReader\n\t\t\t|--InputStreamReader\n\t\t\t\t|--FileReader\n\t\t\t|--BufferedReader\n\t\tWriter\n\t\t\t|--OutputStreamWriter\n\t\t\t\t|--FileWriter\n\t\t\t|--BufferedWriter\n\n# 2:IO流小结(掌握)\n\tIO流\n\t\t|--字节流\n\t\t\t|--字节输入流\n\t\t\t\tInputStream\n\t\t\t\t\tint read():一次读取一个字节\n\t\t\t\t\tint read(byte[] bys):一次读取一个字节数组\n\t\t\t\t\n\t\t\t\t\t|--FileInputStream\n\t\t\t\t\t|--BufferedInputStream\n\t\t\t|--字节输出流\n\t\t\t\tOutputStream\n\t\t\t\t\tvoid write(int by):一次写一个字节\n\t\t\t\t\tvoid write(byte[] bys,int index,int len):一次写一个字节数组的一部分\n\t\t\t\t\t\n\t\t\t\t\t|--FileOutputStream\n\t\t\t\t\t|--BufferedOutputStream\n\t\t|--字符流\n\t\t\t|--字符输入流\n\t\t\t\tReader\n\t\t\t\t\tint read():一次读取一个字符\n\t\t\t\t\tint read(char[] chs):一次读取一个字符数组\n\t\t\t\t\t\n\t\t\t\t\t|--InputStreamReader\n\t\t\t\t\t\t|--FileReader\n\t\t\t\t\t|--BufferedReader\n\t\t\t\t\t\tString readLine():一次读取一个字符串\n\t\t\t|--字符输出流\n\t\t\t\tWriter\n\t\t\t\t\tvoid write(int ch):一次写一个字符\n\t\t\t\t\tvoid write(char[] chs,int index,int len):一次写一个字符数组的一部分\n\t\t\t\t\t\n\t\t\t\t\t|--OutputStreamWriter\n\t\t\t\t\t\t|--FileWriter\n\t\t\t\t\t|--BufferedWriter\n\t\t\t\t\t\tvoid newLine():写一个换行符\n\t\t\t\t\t\t\n\t\t\t\t\t\tvoid write(String line):一次写一个字符串\n# 3:数据操作流(操作基本类型数据的流)(理解)\n\t(1)可以操作基本类型的数据\n\t(2)流对象名称\t\n\t\tDataInputStream\n\t\tDataOutputStream\n\n# 4:内存操作流(理解)\n\t(1)有些时候我们操作完毕后，未必需要产生一个文件，就可以使用内存操作流。\n\t(2)三种\n\t\tA:ByteArrayInputStream,ByteArrayOutputStream\n\t\tB:CharArrayReader,CharArrayWriter\n\t\tC:StringReader,StringWriter\n\n# 5:打印流(掌握)\n\t(1)字节打印流，字符打印流\n\t(2)特点：\n\t\tA:只操作目的地,不操作数据源\n\t\tB:可以操作任意类型的数据\n\t\tC:如果启用了自动刷新，在调用println()方法的时候，能够换行并刷新\n\t\tD:可以直接操作文件\n\t\t\t问题：哪些流可以直接操作文件呢?\n\t\t\t看API，如果其构造方法能够同时接收File和String类型的参数，一般都是可以直接操作文件的\n\t(3)复制文本文件\n\t\tBufferedReader br = new BufferedReader(new FileReader(\"a.txt\"));\n\t\tPrintWriter pw = new PrintWriter(new FileWriter(\"b.txt\"),true);\n\t\t\n\t\tString line = null;\n\t\twhile((line=br.readLine())!=null) {\n\t\t\tpw.println(line);\n\t\t}\n\t\t\n\t\tpw.close();\n\t\tbr.close();\n\t\t\t\n# 6:标准输入输出流(理解)\n\t(1)System类下面有这样的两个字段\n\t\tin 标准输入流\n\t\tout 标准输出流\n\t(2)三种键盘录入方式\n\t\tA:main方法的args接收参数\n\t\tB:System.in通过BufferedReader进行包装\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tC:Scanner\n\t\t\tScanner sc = new Scanner(System.in);\n\t(3)输出语句的原理和如何使用字符流输出数据\n\t\tA:原理\n\t\t\tSystem.out.println(\"helloworld\");\n\t\t\t\n\t\t\tPrintStream ps = System.out;\n\t\t\tps.println(\"helloworld\");\n\t\tB:把System.out用字符缓冲流包装一下使用\n\t\t\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n# 7:随机访问流(理解)\n\t(1)可以按照文件指针的位置写数据和读数据。\n\t(2)案例：\n\t\tA:写数据\n\t\tB:读数据\n\t\tC:获取和改变文件指针的位置\n\n# 8:合并流(理解)\n\t(1)把多个输入流的数据写到一个输出流中。\n\t(2)构造方法：\n\t\tA:SequenceInputStream(InputStream s1, InputStream s2) \n\t\tB:SequenceInputStream(Enumeration<? extends InputStream> e) \n\n# 9:序列化流(理解)\n\t(1)可以把对象写入文本文件或者在网络中传输\n\t(2)如何实现序列化呢?\n\t\t让被序列化的对象所属类实现序列化接口。\n\t\t该接口是一个标记接口。没有功能需要实现。\n\t(3)注意问题：\n\t\t把数据写到文件后，在去修改类会产生一个问题。\n\t\t如何解决该问题呢?\n\t\t\t在类文件中，给出一个固定的序列化id值。\n\t\t\t而且，这样也可以解决黄色警告线问题\n\t(4)面试题：\n\t\t什么时候序列化?\n\t\t如何实现序列化?\n\t\t什么是反序列化?\n\n# 10:Properties(理解)\n\t(1)是一个集合类，Hashtable的子类\n\t(2)特有功能\n\t\tA:public Object setProperty(String key,String value)\n\t\tB:public String getProperty(String key)\n\t\tC:public Set<String> stringPropertyNames()\n\t(3)和IO流结合的方法\n\t\t把键值对形式的文本文件内容加载到集合中\n\t\tpublic void load(Reader reader)\n\t\tpublic void load(InputStream inStream)\n\n\t\t把集合中的数据存储到文本文件中\n\t\tpublic void store(Writer writer,String comments)\n\t\tpublic void store(OutputStream out,String comments)\n\n# 11:NIO(了解)\n\t(1)JDK4出现的NIO，对以前的IO操作进行了优化，提供了效率。但是大部分我们看到的还是以前的IO\n\tChannel : 可以和原来的Stream类比， 但是有个关键区别， 那就是通过Channel 读写数据，是非阻塞的， 一个socket 也是Channel 的一种。\n\tBuffer: 通过Channel 读写的数据都在Buffer 中， 由于Buffer 不是流， 你读到Buffer 尾部以后还可以从头再读。\n\tSelector： 和Channel配合使用， Channel 可以把自己注册到Selector当中， 告诉Selector 说， 我要监听XXX事件， 这是一个线程管理多个Channel的关键。\n![](http://img.mp.itc.cn/upload/20170303/a06999e89b3b4915a6ea4952231caa8d_th.png)\n\t(2)JDK7的NIO的使用\t\n\t\tPath:路径\n\t\tPaths:通过静态方法返回一个路径\n\t\tFiles:提供了常见的功能\n\t\t\t复制文本文件\n\t\t\t把集合中的数据写到文本文件","source":"_posts/Java学习笔记之IO流2.md","raw":"---\ntitle: Java学习笔记之IO流2\ndate: 2017-03-14 16:49:11\ntags:\n- Java基础\ntoc: true\n---\n\n\n字符流,IO流小结,数据操作流,内存操作流,打印流,标准输入输出流,随机访问流,合并流,序列化流,Properties,NIO\n<!--more-->\n# 1:字符流(掌握)\n\t(1)字节流操作中文数据不是特别的方便，所以就出现了转换流。\n\t   转换流的作用就是把字节流转换字符流来使用。\n\t(2)转换流其实是一个字符流\n\t\t字符流 = 字节流 + 编码表\n\t(3)编码表\n\t\tA:就是由字符和对应的数值组成的一张表\n\t\tB:常见的编码表\n\t\t\tASCII\n\t\t\tISO-8859-1\n\t\t\tGB2312\n\t\t\tGBK\n\t\t\tGB18030\n\t\t\tUTF-8\n\t\tC:字符串中的编码问题\n\t\t\t编码\n\t\t\t\tString -- byte[]\n\t\t\t解码\n\t\t\t\tbyte[] -- String\n\t(4)IO流中的编码问题\n\t\tA:OutputStreamWriter\n\t\t\tOutputStreamWriter(OutputStream os):默认编码，GBK\n\t\t\tOutputStreamWriter(OutputStream os,String charsetName):指定编码。\n\t\tB:InputStreamReader\n\t\t\tInputStreamReader(InputStream is):默认编码，GBK\n\t\t\tInputStreamReader(InputStream is,String charsetName):指定编码\n\t\tC:编码问题其实很简单\n\t\t\t编码只要一致即可\n\t(5)字符流\n\t\tReader\n\t\t\t|--InputStreamReader\n\t\t\t\t|--FileReader\n\t\t\t|--BufferedReader\n\t\tWriter\n\t\t\t|--OutputStreamWriter\n\t\t\t\t|--FileWriter\n\t\t\t|--BufferedWriter\n\n# 2:IO流小结(掌握)\n\tIO流\n\t\t|--字节流\n\t\t\t|--字节输入流\n\t\t\t\tInputStream\n\t\t\t\t\tint read():一次读取一个字节\n\t\t\t\t\tint read(byte[] bys):一次读取一个字节数组\n\t\t\t\t\n\t\t\t\t\t|--FileInputStream\n\t\t\t\t\t|--BufferedInputStream\n\t\t\t|--字节输出流\n\t\t\t\tOutputStream\n\t\t\t\t\tvoid write(int by):一次写一个字节\n\t\t\t\t\tvoid write(byte[] bys,int index,int len):一次写一个字节数组的一部分\n\t\t\t\t\t\n\t\t\t\t\t|--FileOutputStream\n\t\t\t\t\t|--BufferedOutputStream\n\t\t|--字符流\n\t\t\t|--字符输入流\n\t\t\t\tReader\n\t\t\t\t\tint read():一次读取一个字符\n\t\t\t\t\tint read(char[] chs):一次读取一个字符数组\n\t\t\t\t\t\n\t\t\t\t\t|--InputStreamReader\n\t\t\t\t\t\t|--FileReader\n\t\t\t\t\t|--BufferedReader\n\t\t\t\t\t\tString readLine():一次读取一个字符串\n\t\t\t|--字符输出流\n\t\t\t\tWriter\n\t\t\t\t\tvoid write(int ch):一次写一个字符\n\t\t\t\t\tvoid write(char[] chs,int index,int len):一次写一个字符数组的一部分\n\t\t\t\t\t\n\t\t\t\t\t|--OutputStreamWriter\n\t\t\t\t\t\t|--FileWriter\n\t\t\t\t\t|--BufferedWriter\n\t\t\t\t\t\tvoid newLine():写一个换行符\n\t\t\t\t\t\t\n\t\t\t\t\t\tvoid write(String line):一次写一个字符串\n# 3:数据操作流(操作基本类型数据的流)(理解)\n\t(1)可以操作基本类型的数据\n\t(2)流对象名称\t\n\t\tDataInputStream\n\t\tDataOutputStream\n\n# 4:内存操作流(理解)\n\t(1)有些时候我们操作完毕后，未必需要产生一个文件，就可以使用内存操作流。\n\t(2)三种\n\t\tA:ByteArrayInputStream,ByteArrayOutputStream\n\t\tB:CharArrayReader,CharArrayWriter\n\t\tC:StringReader,StringWriter\n\n# 5:打印流(掌握)\n\t(1)字节打印流，字符打印流\n\t(2)特点：\n\t\tA:只操作目的地,不操作数据源\n\t\tB:可以操作任意类型的数据\n\t\tC:如果启用了自动刷新，在调用println()方法的时候，能够换行并刷新\n\t\tD:可以直接操作文件\n\t\t\t问题：哪些流可以直接操作文件呢?\n\t\t\t看API，如果其构造方法能够同时接收File和String类型的参数，一般都是可以直接操作文件的\n\t(3)复制文本文件\n\t\tBufferedReader br = new BufferedReader(new FileReader(\"a.txt\"));\n\t\tPrintWriter pw = new PrintWriter(new FileWriter(\"b.txt\"),true);\n\t\t\n\t\tString line = null;\n\t\twhile((line=br.readLine())!=null) {\n\t\t\tpw.println(line);\n\t\t}\n\t\t\n\t\tpw.close();\n\t\tbr.close();\n\t\t\t\n# 6:标准输入输出流(理解)\n\t(1)System类下面有这样的两个字段\n\t\tin 标准输入流\n\t\tout 标准输出流\n\t(2)三种键盘录入方式\n\t\tA:main方法的args接收参数\n\t\tB:System.in通过BufferedReader进行包装\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tC:Scanner\n\t\t\tScanner sc = new Scanner(System.in);\n\t(3)输出语句的原理和如何使用字符流输出数据\n\t\tA:原理\n\t\t\tSystem.out.println(\"helloworld\");\n\t\t\t\n\t\t\tPrintStream ps = System.out;\n\t\t\tps.println(\"helloworld\");\n\t\tB:把System.out用字符缓冲流包装一下使用\n\t\t\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n# 7:随机访问流(理解)\n\t(1)可以按照文件指针的位置写数据和读数据。\n\t(2)案例：\n\t\tA:写数据\n\t\tB:读数据\n\t\tC:获取和改变文件指针的位置\n\n# 8:合并流(理解)\n\t(1)把多个输入流的数据写到一个输出流中。\n\t(2)构造方法：\n\t\tA:SequenceInputStream(InputStream s1, InputStream s2) \n\t\tB:SequenceInputStream(Enumeration<? extends InputStream> e) \n\n# 9:序列化流(理解)\n\t(1)可以把对象写入文本文件或者在网络中传输\n\t(2)如何实现序列化呢?\n\t\t让被序列化的对象所属类实现序列化接口。\n\t\t该接口是一个标记接口。没有功能需要实现。\n\t(3)注意问题：\n\t\t把数据写到文件后，在去修改类会产生一个问题。\n\t\t如何解决该问题呢?\n\t\t\t在类文件中，给出一个固定的序列化id值。\n\t\t\t而且，这样也可以解决黄色警告线问题\n\t(4)面试题：\n\t\t什么时候序列化?\n\t\t如何实现序列化?\n\t\t什么是反序列化?\n\n# 10:Properties(理解)\n\t(1)是一个集合类，Hashtable的子类\n\t(2)特有功能\n\t\tA:public Object setProperty(String key,String value)\n\t\tB:public String getProperty(String key)\n\t\tC:public Set<String> stringPropertyNames()\n\t(3)和IO流结合的方法\n\t\t把键值对形式的文本文件内容加载到集合中\n\t\tpublic void load(Reader reader)\n\t\tpublic void load(InputStream inStream)\n\n\t\t把集合中的数据存储到文本文件中\n\t\tpublic void store(Writer writer,String comments)\n\t\tpublic void store(OutputStream out,String comments)\n\n# 11:NIO(了解)\n\t(1)JDK4出现的NIO，对以前的IO操作进行了优化，提供了效率。但是大部分我们看到的还是以前的IO\n\tChannel : 可以和原来的Stream类比， 但是有个关键区别， 那就是通过Channel 读写数据，是非阻塞的， 一个socket 也是Channel 的一种。\n\tBuffer: 通过Channel 读写的数据都在Buffer 中， 由于Buffer 不是流， 你读到Buffer 尾部以后还可以从头再读。\n\tSelector： 和Channel配合使用， Channel 可以把自己注册到Selector当中， 告诉Selector 说， 我要监听XXX事件， 这是一个线程管理多个Channel的关键。\n![](http://img.mp.itc.cn/upload/20170303/a06999e89b3b4915a6ea4952231caa8d_th.png)\n\t(2)JDK7的NIO的使用\t\n\t\tPath:路径\n\t\tPaths:通过静态方法返回一个路径\n\t\tFiles:提供了常见的功能\n\t\t\t复制文本文件\n\t\t\t把集合中的数据写到文本文件","slug":"Java学习笔记之IO流2","published":1,"updated":"2018-01-20T06:44:37.555Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wa001s44wa4goa7rqm","content":"<p>字符流,IO流小结,数据操作流,内存操作流,打印流,标准输入输出流,随机访问流,合并流,序列化流,Properties,NIO<br><a id=\"more\"></a></p>\n<h1 id=\"1-字符流-掌握\"><a href=\"#1-字符流-掌握\" class=\"headerlink\" title=\"1:字符流(掌握)\"></a>1:字符流(掌握)</h1><pre><code>(1)字节流操作中文数据不是特别的方便，所以就出现了转换流。\n   转换流的作用就是把字节流转换字符流来使用。\n(2)转换流其实是一个字符流\n    字符流 = 字节流 + 编码表\n(3)编码表\n    A:就是由字符和对应的数值组成的一张表\n    B:常见的编码表\n        ASCII\n        ISO-8859-1\n        GB2312\n        GBK\n        GB18030\n        UTF-8\n    C:字符串中的编码问题\n        编码\n            String -- byte[]\n        解码\n            byte[] -- String\n(4)IO流中的编码问题\n    A:OutputStreamWriter\n        OutputStreamWriter(OutputStream os):默认编码，GBK\n        OutputStreamWriter(OutputStream os,String charsetName):指定编码。\n    B:InputStreamReader\n        InputStreamReader(InputStream is):默认编码，GBK\n        InputStreamReader(InputStream is,String charsetName):指定编码\n    C:编码问题其实很简单\n        编码只要一致即可\n(5)字符流\n    Reader\n        |--InputStreamReader\n            |--FileReader\n        |--BufferedReader\n    Writer\n        |--OutputStreamWriter\n            |--FileWriter\n        |--BufferedWriter\n</code></pre><h1 id=\"2-IO流小结-掌握\"><a href=\"#2-IO流小结-掌握\" class=\"headerlink\" title=\"2:IO流小结(掌握)\"></a>2:IO流小结(掌握)</h1><pre><code>IO流\n    |--字节流\n        |--字节输入流\n            InputStream\n                int read():一次读取一个字节\n                int read(byte[] bys):一次读取一个字节数组\n\n                |--FileInputStream\n                |--BufferedInputStream\n        |--字节输出流\n            OutputStream\n                void write(int by):一次写一个字节\n                void write(byte[] bys,int index,int len):一次写一个字节数组的一部分\n\n                |--FileOutputStream\n                |--BufferedOutputStream\n    |--字符流\n        |--字符输入流\n            Reader\n                int read():一次读取一个字符\n                int read(char[] chs):一次读取一个字符数组\n\n                |--InputStreamReader\n                    |--FileReader\n                |--BufferedReader\n                    String readLine():一次读取一个字符串\n        |--字符输出流\n            Writer\n                void write(int ch):一次写一个字符\n                void write(char[] chs,int index,int len):一次写一个字符数组的一部分\n\n                |--OutputStreamWriter\n                    |--FileWriter\n                |--BufferedWriter\n                    void newLine():写一个换行符\n\n                    void write(String line):一次写一个字符串\n</code></pre><h1 id=\"3-数据操作流-操作基本类型数据的流-理解\"><a href=\"#3-数据操作流-操作基本类型数据的流-理解\" class=\"headerlink\" title=\"3:数据操作流(操作基本类型数据的流)(理解)\"></a>3:数据操作流(操作基本类型数据的流)(理解)</h1><pre><code>(1)可以操作基本类型的数据\n(2)流对象名称    \n    DataInputStream\n    DataOutputStream\n</code></pre><h1 id=\"4-内存操作流-理解\"><a href=\"#4-内存操作流-理解\" class=\"headerlink\" title=\"4:内存操作流(理解)\"></a>4:内存操作流(理解)</h1><pre><code>(1)有些时候我们操作完毕后，未必需要产生一个文件，就可以使用内存操作流。\n(2)三种\n    A:ByteArrayInputStream,ByteArrayOutputStream\n    B:CharArrayReader,CharArrayWriter\n    C:StringReader,StringWriter\n</code></pre><h1 id=\"5-打印流-掌握\"><a href=\"#5-打印流-掌握\" class=\"headerlink\" title=\"5:打印流(掌握)\"></a>5:打印流(掌握)</h1><pre><code>(1)字节打印流，字符打印流\n(2)特点：\n    A:只操作目的地,不操作数据源\n    B:可以操作任意类型的数据\n    C:如果启用了自动刷新，在调用println()方法的时候，能够换行并刷新\n    D:可以直接操作文件\n        问题：哪些流可以直接操作文件呢?\n        看API，如果其构造方法能够同时接收File和String类型的参数，一般都是可以直接操作文件的\n(3)复制文本文件\n    BufferedReader br = new BufferedReader(new FileReader(&quot;a.txt&quot;));\n    PrintWriter pw = new PrintWriter(new FileWriter(&quot;b.txt&quot;),true);\n\n    String line = null;\n    while((line=br.readLine())!=null) {\n        pw.println(line);\n    }\n\n    pw.close();\n    br.close();\n</code></pre><h1 id=\"6-标准输入输出流-理解\"><a href=\"#6-标准输入输出流-理解\" class=\"headerlink\" title=\"6:标准输入输出流(理解)\"></a>6:标准输入输出流(理解)</h1><pre><code>(1)System类下面有这样的两个字段\n    in 标准输入流\n    out 标准输出流\n(2)三种键盘录入方式\n    A:main方法的args接收参数\n    B:System.in通过BufferedReader进行包装\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    C:Scanner\n        Scanner sc = new Scanner(System.in);\n(3)输出语句的原理和如何使用字符流输出数据\n    A:原理\n        System.out.println(&quot;helloworld&quot;);\n\n        PrintStream ps = System.out;\n        ps.println(&quot;helloworld&quot;);\n    B:把System.out用字符缓冲流包装一下使用\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n</code></pre><h1 id=\"7-随机访问流-理解\"><a href=\"#7-随机访问流-理解\" class=\"headerlink\" title=\"7:随机访问流(理解)\"></a>7:随机访问流(理解)</h1><pre><code>(1)可以按照文件指针的位置写数据和读数据。\n(2)案例：\n    A:写数据\n    B:读数据\n    C:获取和改变文件指针的位置\n</code></pre><h1 id=\"8-合并流-理解\"><a href=\"#8-合并流-理解\" class=\"headerlink\" title=\"8:合并流(理解)\"></a>8:合并流(理解)</h1><pre><code>(1)把多个输入流的数据写到一个输出流中。\n(2)构造方法：\n    A:SequenceInputStream(InputStream s1, InputStream s2) \n    B:SequenceInputStream(Enumeration&lt;? extends InputStream&gt; e) \n</code></pre><h1 id=\"9-序列化流-理解\"><a href=\"#9-序列化流-理解\" class=\"headerlink\" title=\"9:序列化流(理解)\"></a>9:序列化流(理解)</h1><pre><code>(1)可以把对象写入文本文件或者在网络中传输\n(2)如何实现序列化呢?\n    让被序列化的对象所属类实现序列化接口。\n    该接口是一个标记接口。没有功能需要实现。\n(3)注意问题：\n    把数据写到文件后，在去修改类会产生一个问题。\n    如何解决该问题呢?\n        在类文件中，给出一个固定的序列化id值。\n        而且，这样也可以解决黄色警告线问题\n(4)面试题：\n    什么时候序列化?\n    如何实现序列化?\n    什么是反序列化?\n</code></pre><h1 id=\"10-Properties-理解\"><a href=\"#10-Properties-理解\" class=\"headerlink\" title=\"10:Properties(理解)\"></a>10:Properties(理解)</h1><pre><code>(1)是一个集合类，Hashtable的子类\n(2)特有功能\n    A:public Object setProperty(String key,String value)\n    B:public String getProperty(String key)\n    C:public Set&lt;String&gt; stringPropertyNames()\n(3)和IO流结合的方法\n    把键值对形式的文本文件内容加载到集合中\n    public void load(Reader reader)\n    public void load(InputStream inStream)\n\n    把集合中的数据存储到文本文件中\n    public void store(Writer writer,String comments)\n    public void store(OutputStream out,String comments)\n</code></pre><h1 id=\"11-NIO-了解\"><a href=\"#11-NIO-了解\" class=\"headerlink\" title=\"11:NIO(了解)\"></a>11:NIO(了解)</h1><pre><code>(1)JDK4出现的NIO，对以前的IO操作进行了优化，提供了效率。但是大部分我们看到的还是以前的IO\nChannel : 可以和原来的Stream类比， 但是有个关键区别， 那就是通过Channel 读写数据，是非阻塞的， 一个socket 也是Channel 的一种。\nBuffer: 通过Channel 读写的数据都在Buffer 中， 由于Buffer 不是流， 你读到Buffer 尾部以后还可以从头再读。\nSelector： 和Channel配合使用， Channel 可以把自己注册到Selector当中， 告诉Selector 说， 我要监听XXX事件， 这是一个线程管理多个Channel的关键。\n</code></pre><p><img src=\"http://img.mp.itc.cn/upload/20170303/a06999e89b3b4915a6ea4952231caa8d_th.png\" alt=\"\"><br>    (2)JDK7的NIO的使用<br>        Path:路径<br>        Paths:通过静态方法返回一个路径<br>        Files:提供了常见的功能<br>            复制文本文件<br>            把集合中的数据写到文本文件</p>\n","excerpt":"<p>字符流,IO流小结,数据操作流,内存操作流,打印流,标准输入输出流,随机访问流,合并流,序列化流,Properties,NIO<br>","more":"</p>\n<h1 id=\"1-字符流-掌握\"><a href=\"#1-字符流-掌握\" class=\"headerlink\" title=\"1:字符流(掌握)\"></a>1:字符流(掌握)</h1><pre><code>(1)字节流操作中文数据不是特别的方便，所以就出现了转换流。\n   转换流的作用就是把字节流转换字符流来使用。\n(2)转换流其实是一个字符流\n    字符流 = 字节流 + 编码表\n(3)编码表\n    A:就是由字符和对应的数值组成的一张表\n    B:常见的编码表\n        ASCII\n        ISO-8859-1\n        GB2312\n        GBK\n        GB18030\n        UTF-8\n    C:字符串中的编码问题\n        编码\n            String -- byte[]\n        解码\n            byte[] -- String\n(4)IO流中的编码问题\n    A:OutputStreamWriter\n        OutputStreamWriter(OutputStream os):默认编码，GBK\n        OutputStreamWriter(OutputStream os,String charsetName):指定编码。\n    B:InputStreamReader\n        InputStreamReader(InputStream is):默认编码，GBK\n        InputStreamReader(InputStream is,String charsetName):指定编码\n    C:编码问题其实很简单\n        编码只要一致即可\n(5)字符流\n    Reader\n        |--InputStreamReader\n            |--FileReader\n        |--BufferedReader\n    Writer\n        |--OutputStreamWriter\n            |--FileWriter\n        |--BufferedWriter\n</code></pre><h1 id=\"2-IO流小结-掌握\"><a href=\"#2-IO流小结-掌握\" class=\"headerlink\" title=\"2:IO流小结(掌握)\"></a>2:IO流小结(掌握)</h1><pre><code>IO流\n    |--字节流\n        |--字节输入流\n            InputStream\n                int read():一次读取一个字节\n                int read(byte[] bys):一次读取一个字节数组\n\n                |--FileInputStream\n                |--BufferedInputStream\n        |--字节输出流\n            OutputStream\n                void write(int by):一次写一个字节\n                void write(byte[] bys,int index,int len):一次写一个字节数组的一部分\n\n                |--FileOutputStream\n                |--BufferedOutputStream\n    |--字符流\n        |--字符输入流\n            Reader\n                int read():一次读取一个字符\n                int read(char[] chs):一次读取一个字符数组\n\n                |--InputStreamReader\n                    |--FileReader\n                |--BufferedReader\n                    String readLine():一次读取一个字符串\n        |--字符输出流\n            Writer\n                void write(int ch):一次写一个字符\n                void write(char[] chs,int index,int len):一次写一个字符数组的一部分\n\n                |--OutputStreamWriter\n                    |--FileWriter\n                |--BufferedWriter\n                    void newLine():写一个换行符\n\n                    void write(String line):一次写一个字符串\n</code></pre><h1 id=\"3-数据操作流-操作基本类型数据的流-理解\"><a href=\"#3-数据操作流-操作基本类型数据的流-理解\" class=\"headerlink\" title=\"3:数据操作流(操作基本类型数据的流)(理解)\"></a>3:数据操作流(操作基本类型数据的流)(理解)</h1><pre><code>(1)可以操作基本类型的数据\n(2)流对象名称    \n    DataInputStream\n    DataOutputStream\n</code></pre><h1 id=\"4-内存操作流-理解\"><a href=\"#4-内存操作流-理解\" class=\"headerlink\" title=\"4:内存操作流(理解)\"></a>4:内存操作流(理解)</h1><pre><code>(1)有些时候我们操作完毕后，未必需要产生一个文件，就可以使用内存操作流。\n(2)三种\n    A:ByteArrayInputStream,ByteArrayOutputStream\n    B:CharArrayReader,CharArrayWriter\n    C:StringReader,StringWriter\n</code></pre><h1 id=\"5-打印流-掌握\"><a href=\"#5-打印流-掌握\" class=\"headerlink\" title=\"5:打印流(掌握)\"></a>5:打印流(掌握)</h1><pre><code>(1)字节打印流，字符打印流\n(2)特点：\n    A:只操作目的地,不操作数据源\n    B:可以操作任意类型的数据\n    C:如果启用了自动刷新，在调用println()方法的时候，能够换行并刷新\n    D:可以直接操作文件\n        问题：哪些流可以直接操作文件呢?\n        看API，如果其构造方法能够同时接收File和String类型的参数，一般都是可以直接操作文件的\n(3)复制文本文件\n    BufferedReader br = new BufferedReader(new FileReader(&quot;a.txt&quot;));\n    PrintWriter pw = new PrintWriter(new FileWriter(&quot;b.txt&quot;),true);\n\n    String line = null;\n    while((line=br.readLine())!=null) {\n        pw.println(line);\n    }\n\n    pw.close();\n    br.close();\n</code></pre><h1 id=\"6-标准输入输出流-理解\"><a href=\"#6-标准输入输出流-理解\" class=\"headerlink\" title=\"6:标准输入输出流(理解)\"></a>6:标准输入输出流(理解)</h1><pre><code>(1)System类下面有这样的两个字段\n    in 标准输入流\n    out 标准输出流\n(2)三种键盘录入方式\n    A:main方法的args接收参数\n    B:System.in通过BufferedReader进行包装\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    C:Scanner\n        Scanner sc = new Scanner(System.in);\n(3)输出语句的原理和如何使用字符流输出数据\n    A:原理\n        System.out.println(&quot;helloworld&quot;);\n\n        PrintStream ps = System.out;\n        ps.println(&quot;helloworld&quot;);\n    B:把System.out用字符缓冲流包装一下使用\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n</code></pre><h1 id=\"7-随机访问流-理解\"><a href=\"#7-随机访问流-理解\" class=\"headerlink\" title=\"7:随机访问流(理解)\"></a>7:随机访问流(理解)</h1><pre><code>(1)可以按照文件指针的位置写数据和读数据。\n(2)案例：\n    A:写数据\n    B:读数据\n    C:获取和改变文件指针的位置\n</code></pre><h1 id=\"8-合并流-理解\"><a href=\"#8-合并流-理解\" class=\"headerlink\" title=\"8:合并流(理解)\"></a>8:合并流(理解)</h1><pre><code>(1)把多个输入流的数据写到一个输出流中。\n(2)构造方法：\n    A:SequenceInputStream(InputStream s1, InputStream s2) \n    B:SequenceInputStream(Enumeration&lt;? extends InputStream&gt; e) \n</code></pre><h1 id=\"9-序列化流-理解\"><a href=\"#9-序列化流-理解\" class=\"headerlink\" title=\"9:序列化流(理解)\"></a>9:序列化流(理解)</h1><pre><code>(1)可以把对象写入文本文件或者在网络中传输\n(2)如何实现序列化呢?\n    让被序列化的对象所属类实现序列化接口。\n    该接口是一个标记接口。没有功能需要实现。\n(3)注意问题：\n    把数据写到文件后，在去修改类会产生一个问题。\n    如何解决该问题呢?\n        在类文件中，给出一个固定的序列化id值。\n        而且，这样也可以解决黄色警告线问题\n(4)面试题：\n    什么时候序列化?\n    如何实现序列化?\n    什么是反序列化?\n</code></pre><h1 id=\"10-Properties-理解\"><a href=\"#10-Properties-理解\" class=\"headerlink\" title=\"10:Properties(理解)\"></a>10:Properties(理解)</h1><pre><code>(1)是一个集合类，Hashtable的子类\n(2)特有功能\n    A:public Object setProperty(String key,String value)\n    B:public String getProperty(String key)\n    C:public Set&lt;String&gt; stringPropertyNames()\n(3)和IO流结合的方法\n    把键值对形式的文本文件内容加载到集合中\n    public void load(Reader reader)\n    public void load(InputStream inStream)\n\n    把集合中的数据存储到文本文件中\n    public void store(Writer writer,String comments)\n    public void store(OutputStream out,String comments)\n</code></pre><h1 id=\"11-NIO-了解\"><a href=\"#11-NIO-了解\" class=\"headerlink\" title=\"11:NIO(了解)\"></a>11:NIO(了解)</h1><pre><code>(1)JDK4出现的NIO，对以前的IO操作进行了优化，提供了效率。但是大部分我们看到的还是以前的IO\nChannel : 可以和原来的Stream类比， 但是有个关键区别， 那就是通过Channel 读写数据，是非阻塞的， 一个socket 也是Channel 的一种。\nBuffer: 通过Channel 读写的数据都在Buffer 中， 由于Buffer 不是流， 你读到Buffer 尾部以后还可以从头再读。\nSelector： 和Channel配合使用， Channel 可以把自己注册到Selector当中， 告诉Selector 说， 我要监听XXX事件， 这是一个线程管理多个Channel的关键。\n</code></pre><p><img src=\"http://img.mp.itc.cn/upload/20170303/a06999e89b3b4915a6ea4952231caa8d_th.png\" alt=\"\"><br>    (2)JDK7的NIO的使用<br>        Path:路径<br>        Paths:通过静态方法返回一个路径<br>        Files:提供了常见的功能<br>            复制文本文件<br>            把集合中的数据写到文本文件</p>"},{"title":"Java学习笔记之IO流","date":"2017-03-13T08:22:23.000Z","toc":true,"_content":"IO流\n<!--more-->\n# IO流(掌握)\n\t(1)IO用于在设备间进行数据传输的操作\t\n\t(2)分类：\n\t\tA:流向\n\t\t\t输入流\t读取数据\n\t\t\t输出流\t写出数据\n\t\tB:数据类型\n\t\t\t字节流\t\n\t\t\t\t\t字节输入流\n\t\t\t\t\t字节输出流\n\t\t\t字符流\n\t\t\t\t\t字符输入流\n\t\t\t\t\t字符输出流\n\t\t注意：\n\t\t\ta:如果我们没有明确说明按照什么分，默认按照数据类型分。\n\t\t\tb:除非文件用windows自带的记事本打开我们能够读懂，才采用字符流，否则建议使用字节流。\n\t(3)FileOutputStream写出数据\n\t\tA:操作步骤\n\t\t\ta:创建字节输出流对象\n\t\t\tb:调用write()方法\n\t\t\tc:释放资源\n\t\t\t\n\t\tB:代码体现：\n\t\t\tFileOutputStream fos = new FileOutputStream(\"fos.txt\");\n\t\t\t\n\t\t\tfos.write(\"hello\".getBytes());\n\t\t\t\n\t\t\tfos.close();\n\t\t\t\n\t\tC:要注意的问题?\n\t\t\ta:创建字节输出流对象做了几件事情?\n\t\t\tb:为什么要close()?\n\t\t\tc:如何实现数据的换行?\n\t\t\td:如何实现数据的追加写入?\n\t(4)FileInputStream读取数据\n\t\tA:操作步骤\n\t\t\ta:创建字节输入流对象\n\t\t\tb:调用read()方法\n\t\t\tc:释放资源\n\t\t\t\n\t\tB:代码体现：\n\t\t\tFileInputStream fis = new FileInputStream(\"fos.txt\");\n\t\t\t\n\t\t\t//方式1\n\t\t\tint by = 0;\n\t\t\twhile((by=fis.read())!=-1) {\n\t\t\t\tSystem.out.print((char)by);\n\t\t\t}\n\t\t\t\n\t\t\t//方式2\n\t\t\tbyte[] bys = new byte[1024];\n\t\t\tint len = 0;\n\t\t\twhile((len=fis.read(bys))!=-1) {\n\t\t\t\tSystem.out.print(new String(bys,0,len));\n\t\t\t}\n\t\t\t\n\t\t\tfis.close();\n\t(5)案例：2种实现\n\t\tA:复制文本文件\n\t\tB:复制图片\n\t\tC:复制视频\n\t(6)字节缓冲区流\n\t\tA:BufferedOutputStream\n\t\tB:BufferedInputStream\n\t(7)案例：4种实现\n\t\tA:复制文本文件\n\t\tB:复制图片\n\t\tC:复制视频\n\t\t\n# IO流分类\n\t\t字节流：\n\t\t\tInputStream\n\t\t\t\tFileInputStream\n\t\t\t\tBufferedInputStream\n\t\t\tOutputStream\n\t\t\t\tFileOutputStream\n\t\t\t\tBufferedOutputStream\n\t\t\n\t\t字符流：\n\t\t\tReader\n\t\t\t\tFileReader\n\t\t\t\tBufferedReader\n\t\t\tWriter\n\t\t\t\tFileWriter\n\t\t\t\tBufferedWriter","source":"_posts/Java学习笔记之IO流.md","raw":"---\ntitle: Java学习笔记之IO流\ndate: 2017-03-13 16:22:23\ntags:\n- Java基础\ntoc: true\n---\nIO流\n<!--more-->\n# IO流(掌握)\n\t(1)IO用于在设备间进行数据传输的操作\t\n\t(2)分类：\n\t\tA:流向\n\t\t\t输入流\t读取数据\n\t\t\t输出流\t写出数据\n\t\tB:数据类型\n\t\t\t字节流\t\n\t\t\t\t\t字节输入流\n\t\t\t\t\t字节输出流\n\t\t\t字符流\n\t\t\t\t\t字符输入流\n\t\t\t\t\t字符输出流\n\t\t注意：\n\t\t\ta:如果我们没有明确说明按照什么分，默认按照数据类型分。\n\t\t\tb:除非文件用windows自带的记事本打开我们能够读懂，才采用字符流，否则建议使用字节流。\n\t(3)FileOutputStream写出数据\n\t\tA:操作步骤\n\t\t\ta:创建字节输出流对象\n\t\t\tb:调用write()方法\n\t\t\tc:释放资源\n\t\t\t\n\t\tB:代码体现：\n\t\t\tFileOutputStream fos = new FileOutputStream(\"fos.txt\");\n\t\t\t\n\t\t\tfos.write(\"hello\".getBytes());\n\t\t\t\n\t\t\tfos.close();\n\t\t\t\n\t\tC:要注意的问题?\n\t\t\ta:创建字节输出流对象做了几件事情?\n\t\t\tb:为什么要close()?\n\t\t\tc:如何实现数据的换行?\n\t\t\td:如何实现数据的追加写入?\n\t(4)FileInputStream读取数据\n\t\tA:操作步骤\n\t\t\ta:创建字节输入流对象\n\t\t\tb:调用read()方法\n\t\t\tc:释放资源\n\t\t\t\n\t\tB:代码体现：\n\t\t\tFileInputStream fis = new FileInputStream(\"fos.txt\");\n\t\t\t\n\t\t\t//方式1\n\t\t\tint by = 0;\n\t\t\twhile((by=fis.read())!=-1) {\n\t\t\t\tSystem.out.print((char)by);\n\t\t\t}\n\t\t\t\n\t\t\t//方式2\n\t\t\tbyte[] bys = new byte[1024];\n\t\t\tint len = 0;\n\t\t\twhile((len=fis.read(bys))!=-1) {\n\t\t\t\tSystem.out.print(new String(bys,0,len));\n\t\t\t}\n\t\t\t\n\t\t\tfis.close();\n\t(5)案例：2种实现\n\t\tA:复制文本文件\n\t\tB:复制图片\n\t\tC:复制视频\n\t(6)字节缓冲区流\n\t\tA:BufferedOutputStream\n\t\tB:BufferedInputStream\n\t(7)案例：4种实现\n\t\tA:复制文本文件\n\t\tB:复制图片\n\t\tC:复制视频\n\t\t\n# IO流分类\n\t\t字节流：\n\t\t\tInputStream\n\t\t\t\tFileInputStream\n\t\t\t\tBufferedInputStream\n\t\t\tOutputStream\n\t\t\t\tFileOutputStream\n\t\t\t\tBufferedOutputStream\n\t\t\n\t\t字符流：\n\t\t\tReader\n\t\t\t\tFileReader\n\t\t\t\tBufferedReader\n\t\t\tWriter\n\t\t\t\tFileWriter\n\t\t\t\tBufferedWriter","slug":"Java学习笔记之IO流","published":1,"updated":"2018-01-20T06:44:37.553Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8we001u44wal5iyb92l","content":"<p>IO流<br><a id=\"more\"></a></p>\n<h1 id=\"IO流-掌握\"><a href=\"#IO流-掌握\" class=\"headerlink\" title=\"IO流(掌握)\"></a>IO流(掌握)</h1><pre><code>(1)IO用于在设备间进行数据传输的操作    \n(2)分类：\n    A:流向\n        输入流    读取数据\n        输出流    写出数据\n    B:数据类型\n        字节流    \n                字节输入流\n                字节输出流\n        字符流\n                字符输入流\n                字符输出流\n    注意：\n        a:如果我们没有明确说明按照什么分，默认按照数据类型分。\n        b:除非文件用windows自带的记事本打开我们能够读懂，才采用字符流，否则建议使用字节流。\n(3)FileOutputStream写出数据\n    A:操作步骤\n        a:创建字节输出流对象\n        b:调用write()方法\n        c:释放资源\n\n    B:代码体现：\n        FileOutputStream fos = new FileOutputStream(&quot;fos.txt&quot;);\n\n        fos.write(&quot;hello&quot;.getBytes());\n\n        fos.close();\n\n    C:要注意的问题?\n        a:创建字节输出流对象做了几件事情?\n        b:为什么要close()?\n        c:如何实现数据的换行?\n        d:如何实现数据的追加写入?\n(4)FileInputStream读取数据\n    A:操作步骤\n        a:创建字节输入流对象\n        b:调用read()方法\n        c:释放资源\n\n    B:代码体现：\n        FileInputStream fis = new FileInputStream(&quot;fos.txt&quot;);\n\n        //方式1\n        int by = 0;\n        while((by=fis.read())!=-1) {\n            System.out.print((char)by);\n        }\n\n        //方式2\n        byte[] bys = new byte[1024];\n        int len = 0;\n        while((len=fis.read(bys))!=-1) {\n            System.out.print(new String(bys,0,len));\n        }\n\n        fis.close();\n(5)案例：2种实现\n    A:复制文本文件\n    B:复制图片\n    C:复制视频\n(6)字节缓冲区流\n    A:BufferedOutputStream\n    B:BufferedInputStream\n(7)案例：4种实现\n    A:复制文本文件\n    B:复制图片\n    C:复制视频\n</code></pre><h1 id=\"IO流分类\"><a href=\"#IO流分类\" class=\"headerlink\" title=\"IO流分类\"></a>IO流分类</h1><pre><code>字节流：\n    InputStream\n        FileInputStream\n        BufferedInputStream\n    OutputStream\n        FileOutputStream\n        BufferedOutputStream\n\n字符流：\n    Reader\n        FileReader\n        BufferedReader\n    Writer\n        FileWriter\n        BufferedWriter\n</code></pre>","excerpt":"<p>IO流<br>","more":"</p>\n<h1 id=\"IO流-掌握\"><a href=\"#IO流-掌握\" class=\"headerlink\" title=\"IO流(掌握)\"></a>IO流(掌握)</h1><pre><code>(1)IO用于在设备间进行数据传输的操作    \n(2)分类：\n    A:流向\n        输入流    读取数据\n        输出流    写出数据\n    B:数据类型\n        字节流    \n                字节输入流\n                字节输出流\n        字符流\n                字符输入流\n                字符输出流\n    注意：\n        a:如果我们没有明确说明按照什么分，默认按照数据类型分。\n        b:除非文件用windows自带的记事本打开我们能够读懂，才采用字符流，否则建议使用字节流。\n(3)FileOutputStream写出数据\n    A:操作步骤\n        a:创建字节输出流对象\n        b:调用write()方法\n        c:释放资源\n\n    B:代码体现：\n        FileOutputStream fos = new FileOutputStream(&quot;fos.txt&quot;);\n\n        fos.write(&quot;hello&quot;.getBytes());\n\n        fos.close();\n\n    C:要注意的问题?\n        a:创建字节输出流对象做了几件事情?\n        b:为什么要close()?\n        c:如何实现数据的换行?\n        d:如何实现数据的追加写入?\n(4)FileInputStream读取数据\n    A:操作步骤\n        a:创建字节输入流对象\n        b:调用read()方法\n        c:释放资源\n\n    B:代码体现：\n        FileInputStream fis = new FileInputStream(&quot;fos.txt&quot;);\n\n        //方式1\n        int by = 0;\n        while((by=fis.read())!=-1) {\n            System.out.print((char)by);\n        }\n\n        //方式2\n        byte[] bys = new byte[1024];\n        int len = 0;\n        while((len=fis.read(bys))!=-1) {\n            System.out.print(new String(bys,0,len));\n        }\n\n        fis.close();\n(5)案例：2种实现\n    A:复制文本文件\n    B:复制图片\n    C:复制视频\n(6)字节缓冲区流\n    A:BufferedOutputStream\n    B:BufferedInputStream\n(7)案例：4种实现\n    A:复制文本文件\n    B:复制图片\n    C:复制视频\n</code></pre><h1 id=\"IO流分类\"><a href=\"#IO流分类\" class=\"headerlink\" title=\"IO流分类\"></a>IO流分类</h1><pre><code>字节流：\n    InputStream\n        FileInputStream\n        BufferedInputStream\n    OutputStream\n        FileOutputStream\n        BufferedOutputStream\n\n字符流：\n    Reader\n        FileReader\n        BufferedReader\n    Writer\n        FileWriter\n        BufferedWriter\n</code></pre>"},{"title":"Java学习笔记之多线程1","date":"2017-03-15T05:38:40.000Z","toc":true,"_content":"\n多线程\n<!--more-->\n# 多线程\n## (1)多线程的实现方案(自己补齐步骤及代码\t掌握)\n\t\tA:继承Thread类\n\t\tB:实现Runnable接口\n## (2)线程的调度和优先级问题\n\t\tA:线程的调度\n\t\t\ta:分时调度\n\t\t\tb:抢占式调度 (Java采用的是该调度方式)\n\t\tB:获取和设置线程优先级\n\t\t\ta:默认是5\n\t\t\tb:范围是1-10\n## (3)线程的控制(常见方法)\n\t\tA:休眠线程\n\t\tpublic static void sleep(long millis)\n\t\tB:加入线程\n\t\tpublic final void join()\n\t\tC:礼让线程\n\t\tpublic static void yield()\n\t\tD:后台线程\n\t\tpublic final void setDaemon(boolean on)\n\t\tE:终止线程(掌握)\n\t\tpublic final void stop()\n\t\tpublic void interrup()\n## (4)同步解决线程安全问题\n\t\tA:同步代码块\n\t\t\tsynchronized(对象) {\n\t\t\t\t需要被同步的代码;\n\t\t\t}\n\t\t\t\n\t\t\t这里的锁对象可以是任意对象。\n\t\t\t\n\t\tB:同步方法\n\t\t\t把同步加在方法上。\n\t\t\t\n\t\t\t这里的锁对象是this\n\t\t\t\n\t\tC:静态同步方法\n\t\t\t把同步加在方法上。\n\t\t\t\n\t\t\t这里的锁对象是当前类的字节码文件对象(反射再讲字节码文件对象)\n## (5)回顾以前的线程安全的类\n\t\tA:StringBuffer\n\t\tB:Vector\n\t\tC:Hashtable\n\t\tD:如何把一个线程不安全的集合类变成一个线程安全的集合类\n\t\t\t用Collections工具类的方法即可。","source":"_posts/Java学习笔记之多线程1.md","raw":"---\ntitle: Java学习笔记之多线程1\ndate: 2017-03-15 13:38:40\ntags:\n- Java基础\ntoc: true\n---\n\n多线程\n<!--more-->\n# 多线程\n## (1)多线程的实现方案(自己补齐步骤及代码\t掌握)\n\t\tA:继承Thread类\n\t\tB:实现Runnable接口\n## (2)线程的调度和优先级问题\n\t\tA:线程的调度\n\t\t\ta:分时调度\n\t\t\tb:抢占式调度 (Java采用的是该调度方式)\n\t\tB:获取和设置线程优先级\n\t\t\ta:默认是5\n\t\t\tb:范围是1-10\n## (3)线程的控制(常见方法)\n\t\tA:休眠线程\n\t\tpublic static void sleep(long millis)\n\t\tB:加入线程\n\t\tpublic final void join()\n\t\tC:礼让线程\n\t\tpublic static void yield()\n\t\tD:后台线程\n\t\tpublic final void setDaemon(boolean on)\n\t\tE:终止线程(掌握)\n\t\tpublic final void stop()\n\t\tpublic void interrup()\n## (4)同步解决线程安全问题\n\t\tA:同步代码块\n\t\t\tsynchronized(对象) {\n\t\t\t\t需要被同步的代码;\n\t\t\t}\n\t\t\t\n\t\t\t这里的锁对象可以是任意对象。\n\t\t\t\n\t\tB:同步方法\n\t\t\t把同步加在方法上。\n\t\t\t\n\t\t\t这里的锁对象是this\n\t\t\t\n\t\tC:静态同步方法\n\t\t\t把同步加在方法上。\n\t\t\t\n\t\t\t这里的锁对象是当前类的字节码文件对象(反射再讲字节码文件对象)\n## (5)回顾以前的线程安全的类\n\t\tA:StringBuffer\n\t\tB:Vector\n\t\tC:Hashtable\n\t\tD:如何把一个线程不安全的集合类变成一个线程安全的集合类\n\t\t\t用Collections工具类的方法即可。","slug":"Java学习笔记之多线程1","published":1,"updated":"2018-01-20T06:44:37.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wh001w44wakiepfyxe","content":"<p>多线程<br><a id=\"more\"></a></p>\n<h1 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h1><h2 id=\"1-多线程的实现方案-自己补齐步骤及代码-掌握\"><a href=\"#1-多线程的实现方案-自己补齐步骤及代码-掌握\" class=\"headerlink\" title=\"(1)多线程的实现方案(自己补齐步骤及代码    掌握)\"></a>(1)多线程的实现方案(自己补齐步骤及代码    掌握)</h2><pre><code>A:继承Thread类\nB:实现Runnable接口\n</code></pre><h2 id=\"2-线程的调度和优先级问题\"><a href=\"#2-线程的调度和优先级问题\" class=\"headerlink\" title=\"(2)线程的调度和优先级问题\"></a>(2)线程的调度和优先级问题</h2><pre><code>A:线程的调度\n    a:分时调度\n    b:抢占式调度 (Java采用的是该调度方式)\nB:获取和设置线程优先级\n    a:默认是5\n    b:范围是1-10\n</code></pre><h2 id=\"3-线程的控制-常见方法\"><a href=\"#3-线程的控制-常见方法\" class=\"headerlink\" title=\"(3)线程的控制(常见方法)\"></a>(3)线程的控制(常见方法)</h2><pre><code>A:休眠线程\npublic static void sleep(long millis)\nB:加入线程\npublic final void join()\nC:礼让线程\npublic static void yield()\nD:后台线程\npublic final void setDaemon(boolean on)\nE:终止线程(掌握)\npublic final void stop()\npublic void interrup()\n</code></pre><h2 id=\"4-同步解决线程安全问题\"><a href=\"#4-同步解决线程安全问题\" class=\"headerlink\" title=\"(4)同步解决线程安全问题\"></a>(4)同步解决线程安全问题</h2><pre><code>A:同步代码块\n    synchronized(对象) {\n        需要被同步的代码;\n    }\n\n    这里的锁对象可以是任意对象。\n\nB:同步方法\n    把同步加在方法上。\n\n    这里的锁对象是this\n\nC:静态同步方法\n    把同步加在方法上。\n\n    这里的锁对象是当前类的字节码文件对象(反射再讲字节码文件对象)\n</code></pre><h2 id=\"5-回顾以前的线程安全的类\"><a href=\"#5-回顾以前的线程安全的类\" class=\"headerlink\" title=\"(5)回顾以前的线程安全的类\"></a>(5)回顾以前的线程安全的类</h2><pre><code>A:StringBuffer\nB:Vector\nC:Hashtable\nD:如何把一个线程不安全的集合类变成一个线程安全的集合类\n    用Collections工具类的方法即可。\n</code></pre>","excerpt":"<p>多线程<br>","more":"</p>\n<h1 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h1><h2 id=\"1-多线程的实现方案-自己补齐步骤及代码-掌握\"><a href=\"#1-多线程的实现方案-自己补齐步骤及代码-掌握\" class=\"headerlink\" title=\"(1)多线程的实现方案(自己补齐步骤及代码    掌握)\"></a>(1)多线程的实现方案(自己补齐步骤及代码    掌握)</h2><pre><code>A:继承Thread类\nB:实现Runnable接口\n</code></pre><h2 id=\"2-线程的调度和优先级问题\"><a href=\"#2-线程的调度和优先级问题\" class=\"headerlink\" title=\"(2)线程的调度和优先级问题\"></a>(2)线程的调度和优先级问题</h2><pre><code>A:线程的调度\n    a:分时调度\n    b:抢占式调度 (Java采用的是该调度方式)\nB:获取和设置线程优先级\n    a:默认是5\n    b:范围是1-10\n</code></pre><h2 id=\"3-线程的控制-常见方法\"><a href=\"#3-线程的控制-常见方法\" class=\"headerlink\" title=\"(3)线程的控制(常见方法)\"></a>(3)线程的控制(常见方法)</h2><pre><code>A:休眠线程\npublic static void sleep(long millis)\nB:加入线程\npublic final void join()\nC:礼让线程\npublic static void yield()\nD:后台线程\npublic final void setDaemon(boolean on)\nE:终止线程(掌握)\npublic final void stop()\npublic void interrup()\n</code></pre><h2 id=\"4-同步解决线程安全问题\"><a href=\"#4-同步解决线程安全问题\" class=\"headerlink\" title=\"(4)同步解决线程安全问题\"></a>(4)同步解决线程安全问题</h2><pre><code>A:同步代码块\n    synchronized(对象) {\n        需要被同步的代码;\n    }\n\n    这里的锁对象可以是任意对象。\n\nB:同步方法\n    把同步加在方法上。\n\n    这里的锁对象是this\n\nC:静态同步方法\n    把同步加在方法上。\n\n    这里的锁对象是当前类的字节码文件对象(反射再讲字节码文件对象)\n</code></pre><h2 id=\"5-回顾以前的线程安全的类\"><a href=\"#5-回顾以前的线程安全的类\" class=\"headerlink\" title=\"(5)回顾以前的线程安全的类\"></a>(5)回顾以前的线程安全的类</h2><pre><code>A:StringBuffer\nB:Vector\nC:Hashtable\nD:如何把一个线程不安全的集合类变成一个线程安全的集合类\n    用Collections工具类的方法即可。\n</code></pre>"},{"title":"Java学习笔记之网络编程","date":"2017-03-15T02:41:24.000Z","toc":true,"_content":"网络编程\n<!--more-->\n# 网络编程(理解)\n## (1)网络编程：用Java语言实现计算机间数据的信息传递和资源共享\n## (2)网络编程模型\n## (3)网络编程的三要素\n\t\tA:IP地址\n\t\t\ta:点分十进制\n\t\t\tb:IP地址的组成\n\t\t\tc:IP地址的分类\n\t\t\td:dos命令\n\t\t\te:InetAddress\n\t\tB:端口\n\t\t\t是应用程序的标识。范围：0-65535。其中0-1024不建议使用。\n\t\tC:协议\n\t\t\tUDP:数据打包,有限制,不连接,效率高,不可靠\n\t\t\tTCP:建立数据通道,无限制,效率低,可靠\n## (3)Socket机制\n\t\tA:通信两端都应该有Socket对象\n\t\tB:所有的通信都是通过Socket间的IO进行操作的\n## (4)UDP协议发送和接收数据(掌握 自己补齐代码)\n\t\t发送：\n\t\t\t创建UDP发送端的Socket对象\n\t\t\t创建数据并把数据打包\n\t\t\t发送数据\n\t\t\t释放资源\n\t\t\t\n\t\t接收：\n\t\t\t创建UDP接收端的Socket对象\n\t\t\t创建数据包用于接收数据\n\t\t\t接收数据\n\t\t\t解析数据包\n\t\t\t释放资源\n## (5)TCP协议发送和接收数据(掌握 自己补齐代码)\n\t\t发送：\n\t\t\t创建TCP客户端的Socket对象\n\t\t\t获取输出流，写数据\n\t\t\t释放资源\n\t\t\t\n\t\t接收：\n\t\t\t创建TCP服务器端的Socket对象\n\t\t\t监听客户端连接\n\t\t\t获取输入流，读取数据\n\t\t\t释放资源","source":"_posts/Java学习笔记之网络编程.md","raw":"---\ntitle: Java学习笔记之网络编程\ndate: 2017-03-15 10:41:24\ntags:\n- Java基础\ntoc: true\n---\n网络编程\n<!--more-->\n# 网络编程(理解)\n## (1)网络编程：用Java语言实现计算机间数据的信息传递和资源共享\n## (2)网络编程模型\n## (3)网络编程的三要素\n\t\tA:IP地址\n\t\t\ta:点分十进制\n\t\t\tb:IP地址的组成\n\t\t\tc:IP地址的分类\n\t\t\td:dos命令\n\t\t\te:InetAddress\n\t\tB:端口\n\t\t\t是应用程序的标识。范围：0-65535。其中0-1024不建议使用。\n\t\tC:协议\n\t\t\tUDP:数据打包,有限制,不连接,效率高,不可靠\n\t\t\tTCP:建立数据通道,无限制,效率低,可靠\n## (3)Socket机制\n\t\tA:通信两端都应该有Socket对象\n\t\tB:所有的通信都是通过Socket间的IO进行操作的\n## (4)UDP协议发送和接收数据(掌握 自己补齐代码)\n\t\t发送：\n\t\t\t创建UDP发送端的Socket对象\n\t\t\t创建数据并把数据打包\n\t\t\t发送数据\n\t\t\t释放资源\n\t\t\t\n\t\t接收：\n\t\t\t创建UDP接收端的Socket对象\n\t\t\t创建数据包用于接收数据\n\t\t\t接收数据\n\t\t\t解析数据包\n\t\t\t释放资源\n## (5)TCP协议发送和接收数据(掌握 自己补齐代码)\n\t\t发送：\n\t\t\t创建TCP客户端的Socket对象\n\t\t\t获取输出流，写数据\n\t\t\t释放资源\n\t\t\t\n\t\t接收：\n\t\t\t创建TCP服务器端的Socket对象\n\t\t\t监听客户端连接\n\t\t\t获取输入流，读取数据\n\t\t\t释放资源","slug":"Java学习笔记之网络编程","published":1,"updated":"2018-01-20T06:44:37.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wj001z44wavsdnkoak","content":"<p>网络编程<br><a id=\"more\"></a></p>\n<h1 id=\"网络编程-理解\"><a href=\"#网络编程-理解\" class=\"headerlink\" title=\"网络编程(理解)\"></a>网络编程(理解)</h1><h2 id=\"1-网络编程：用Java语言实现计算机间数据的信息传递和资源共享\"><a href=\"#1-网络编程：用Java语言实现计算机间数据的信息传递和资源共享\" class=\"headerlink\" title=\"(1)网络编程：用Java语言实现计算机间数据的信息传递和资源共享\"></a>(1)网络编程：用Java语言实现计算机间数据的信息传递和资源共享</h2><h2 id=\"2-网络编程模型\"><a href=\"#2-网络编程模型\" class=\"headerlink\" title=\"(2)网络编程模型\"></a>(2)网络编程模型</h2><h2 id=\"3-网络编程的三要素\"><a href=\"#3-网络编程的三要素\" class=\"headerlink\" title=\"(3)网络编程的三要素\"></a>(3)网络编程的三要素</h2><pre><code>A:IP地址\n    a:点分十进制\n    b:IP地址的组成\n    c:IP地址的分类\n    d:dos命令\n    e:InetAddress\nB:端口\n    是应用程序的标识。范围：0-65535。其中0-1024不建议使用。\nC:协议\n    UDP:数据打包,有限制,不连接,效率高,不可靠\n    TCP:建立数据通道,无限制,效率低,可靠\n</code></pre><h2 id=\"3-Socket机制\"><a href=\"#3-Socket机制\" class=\"headerlink\" title=\"(3)Socket机制\"></a>(3)Socket机制</h2><pre><code>A:通信两端都应该有Socket对象\nB:所有的通信都是通过Socket间的IO进行操作的\n</code></pre><h2 id=\"4-UDP协议发送和接收数据-掌握-自己补齐代码\"><a href=\"#4-UDP协议发送和接收数据-掌握-自己补齐代码\" class=\"headerlink\" title=\"(4)UDP协议发送和接收数据(掌握 自己补齐代码)\"></a>(4)UDP协议发送和接收数据(掌握 自己补齐代码)</h2><pre><code>发送：\n    创建UDP发送端的Socket对象\n    创建数据并把数据打包\n    发送数据\n    释放资源\n\n接收：\n    创建UDP接收端的Socket对象\n    创建数据包用于接收数据\n    接收数据\n    解析数据包\n    释放资源\n</code></pre><h2 id=\"5-TCP协议发送和接收数据-掌握-自己补齐代码\"><a href=\"#5-TCP协议发送和接收数据-掌握-自己补齐代码\" class=\"headerlink\" title=\"(5)TCP协议发送和接收数据(掌握 自己补齐代码)\"></a>(5)TCP协议发送和接收数据(掌握 自己补齐代码)</h2><pre><code>发送：\n    创建TCP客户端的Socket对象\n    获取输出流，写数据\n    释放资源\n\n接收：\n    创建TCP服务器端的Socket对象\n    监听客户端连接\n    获取输入流，读取数据\n    释放资源\n</code></pre>","excerpt":"<p>网络编程<br>","more":"</p>\n<h1 id=\"网络编程-理解\"><a href=\"#网络编程-理解\" class=\"headerlink\" title=\"网络编程(理解)\"></a>网络编程(理解)</h1><h2 id=\"1-网络编程：用Java语言实现计算机间数据的信息传递和资源共享\"><a href=\"#1-网络编程：用Java语言实现计算机间数据的信息传递和资源共享\" class=\"headerlink\" title=\"(1)网络编程：用Java语言实现计算机间数据的信息传递和资源共享\"></a>(1)网络编程：用Java语言实现计算机间数据的信息传递和资源共享</h2><h2 id=\"2-网络编程模型\"><a href=\"#2-网络编程模型\" class=\"headerlink\" title=\"(2)网络编程模型\"></a>(2)网络编程模型</h2><h2 id=\"3-网络编程的三要素\"><a href=\"#3-网络编程的三要素\" class=\"headerlink\" title=\"(3)网络编程的三要素\"></a>(3)网络编程的三要素</h2><pre><code>A:IP地址\n    a:点分十进制\n    b:IP地址的组成\n    c:IP地址的分类\n    d:dos命令\n    e:InetAddress\nB:端口\n    是应用程序的标识。范围：0-65535。其中0-1024不建议使用。\nC:协议\n    UDP:数据打包,有限制,不连接,效率高,不可靠\n    TCP:建立数据通道,无限制,效率低,可靠\n</code></pre><h2 id=\"3-Socket机制\"><a href=\"#3-Socket机制\" class=\"headerlink\" title=\"(3)Socket机制\"></a>(3)Socket机制</h2><pre><code>A:通信两端都应该有Socket对象\nB:所有的通信都是通过Socket间的IO进行操作的\n</code></pre><h2 id=\"4-UDP协议发送和接收数据-掌握-自己补齐代码\"><a href=\"#4-UDP协议发送和接收数据-掌握-自己补齐代码\" class=\"headerlink\" title=\"(4)UDP协议发送和接收数据(掌握 自己补齐代码)\"></a>(4)UDP协议发送和接收数据(掌握 自己补齐代码)</h2><pre><code>发送：\n    创建UDP发送端的Socket对象\n    创建数据并把数据打包\n    发送数据\n    释放资源\n\n接收：\n    创建UDP接收端的Socket对象\n    创建数据包用于接收数据\n    接收数据\n    解析数据包\n    释放资源\n</code></pre><h2 id=\"5-TCP协议发送和接收数据-掌握-自己补齐代码\"><a href=\"#5-TCP协议发送和接收数据-掌握-自己补齐代码\" class=\"headerlink\" title=\"(5)TCP协议发送和接收数据(掌握 自己补齐代码)\"></a>(5)TCP协议发送和接收数据(掌握 自己补齐代码)</h2><pre><code>发送：\n    创建TCP客户端的Socket对象\n    获取输出流，写数据\n    释放资源\n\n接收：\n    创建TCP服务器端的Socket对象\n    监听客户端连接\n    获取输入流，读取数据\n    释放资源\n</code></pre>"},{"title":"Java学习笔记之多线程2和设计模式","date":"2017-03-15T08:02:12.000Z","toc":true,"_content":"多线程和设计模式\n<!--more-->\n## 1:多线程\n\t(1)JDK5以后的针对线程的锁定操作和释放操作\n\t\tLock锁\n\t(2)死锁问题的描述和代码体现\n\t(3)生产者和消费者多线程体现(线程间通信问题)\n\t\t以学生作为资源来实现的\n\t\t\n\t\t资源类：Student\n\t\t设置数据类：SetThread(生产者)\n\t\t获取数据类：GetThread(消费者)\n\t\t测试类：StudentDemo\n\t\t\n\t\t代码：\n\t\t\tA:最基本的版本，只有一个数据。\n\t\t\tB:改进版本，给出了不同的数据，并加入了同步机制\n\t\t\tC:等待唤醒机制改进该程序，让数据能够实现依次的出现\n\t\t\t\twait()\n\t\t\t\tnotify()\n\t\t\t\tnotifyAll() (多生产多消费)\n\t\t\tD:等待唤醒机制的代码优化。把数据及操作都写在了资源类中\n\t(4)线程组\n\t(5)线程池\n\t(6)多线程实现的第三种方案\n\t(7)多线程的面试题\n\n## 2:设计模式\n\t(1)面试对象的常见设计原则\n\t\t单一\n\t\t开闭\n\t\t里氏\n\t\t依赖注入\n\t\t接口\n\t\t迪米特\n\t(2)设计模式概述和分类\n\t\tA:经验的总结\n\t\tB:三类\n\t\t\t创建型\n\t\t\t结构型\n\t\t\t行为型\n\t(3)改进的设计模式\n\t\tA:简单工厂模式\n\t\tB:工厂方法模式\n\t\tC:单例模式(掌握)\n\t\t\ta:饿汉式\n\t\t\tb:懒汉式\n\t(4)Runtime\n\t\tJDK提供的一个单例模式应用的类。\n\t\t还可以调用dos命令。\n\t\t\t","source":"_posts/Java学习笔记之多线程2和设计模式.md","raw":"---\ntitle: Java学习笔记之多线程2和设计模式\ndate: 2017-03-15 16:02:12\ntags:\n- Java基础\ntoc: true\n---\n多线程和设计模式\n<!--more-->\n## 1:多线程\n\t(1)JDK5以后的针对线程的锁定操作和释放操作\n\t\tLock锁\n\t(2)死锁问题的描述和代码体现\n\t(3)生产者和消费者多线程体现(线程间通信问题)\n\t\t以学生作为资源来实现的\n\t\t\n\t\t资源类：Student\n\t\t设置数据类：SetThread(生产者)\n\t\t获取数据类：GetThread(消费者)\n\t\t测试类：StudentDemo\n\t\t\n\t\t代码：\n\t\t\tA:最基本的版本，只有一个数据。\n\t\t\tB:改进版本，给出了不同的数据，并加入了同步机制\n\t\t\tC:等待唤醒机制改进该程序，让数据能够实现依次的出现\n\t\t\t\twait()\n\t\t\t\tnotify()\n\t\t\t\tnotifyAll() (多生产多消费)\n\t\t\tD:等待唤醒机制的代码优化。把数据及操作都写在了资源类中\n\t(4)线程组\n\t(5)线程池\n\t(6)多线程实现的第三种方案\n\t(7)多线程的面试题\n\n## 2:设计模式\n\t(1)面试对象的常见设计原则\n\t\t单一\n\t\t开闭\n\t\t里氏\n\t\t依赖注入\n\t\t接口\n\t\t迪米特\n\t(2)设计模式概述和分类\n\t\tA:经验的总结\n\t\tB:三类\n\t\t\t创建型\n\t\t\t结构型\n\t\t\t行为型\n\t(3)改进的设计模式\n\t\tA:简单工厂模式\n\t\tB:工厂方法模式\n\t\tC:单例模式(掌握)\n\t\t\ta:饿汉式\n\t\t\tb:懒汉式\n\t(4)Runtime\n\t\tJDK提供的一个单例模式应用的类。\n\t\t还可以调用dos命令。\n\t\t\t","slug":"Java学习笔记之多线程2和设计模式","published":1,"updated":"2018-01-20T06:44:37.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wk002144wa425zdz5i","content":"<p>多线程和设计模式<br><a id=\"more\"></a></p>\n<h2 id=\"1-多线程\"><a href=\"#1-多线程\" class=\"headerlink\" title=\"1:多线程\"></a>1:多线程</h2><pre><code>(1)JDK5以后的针对线程的锁定操作和释放操作\n    Lock锁\n(2)死锁问题的描述和代码体现\n(3)生产者和消费者多线程体现(线程间通信问题)\n    以学生作为资源来实现的\n\n    资源类：Student\n    设置数据类：SetThread(生产者)\n    获取数据类：GetThread(消费者)\n    测试类：StudentDemo\n\n    代码：\n        A:最基本的版本，只有一个数据。\n        B:改进版本，给出了不同的数据，并加入了同步机制\n        C:等待唤醒机制改进该程序，让数据能够实现依次的出现\n            wait()\n            notify()\n            notifyAll() (多生产多消费)\n        D:等待唤醒机制的代码优化。把数据及操作都写在了资源类中\n(4)线程组\n(5)线程池\n(6)多线程实现的第三种方案\n(7)多线程的面试题\n</code></pre><h2 id=\"2-设计模式\"><a href=\"#2-设计模式\" class=\"headerlink\" title=\"2:设计模式\"></a>2:设计模式</h2><pre><code>(1)面试对象的常见设计原则\n    单一\n    开闭\n    里氏\n    依赖注入\n    接口\n    迪米特\n(2)设计模式概述和分类\n    A:经验的总结\n    B:三类\n        创建型\n        结构型\n        行为型\n(3)改进的设计模式\n    A:简单工厂模式\n    B:工厂方法模式\n    C:单例模式(掌握)\n        a:饿汉式\n        b:懒汉式\n(4)Runtime\n    JDK提供的一个单例模式应用的类。\n    还可以调用dos命令。\n</code></pre>","excerpt":"<p>多线程和设计模式<br>","more":"</p>\n<h2 id=\"1-多线程\"><a href=\"#1-多线程\" class=\"headerlink\" title=\"1:多线程\"></a>1:多线程</h2><pre><code>(1)JDK5以后的针对线程的锁定操作和释放操作\n    Lock锁\n(2)死锁问题的描述和代码体现\n(3)生产者和消费者多线程体现(线程间通信问题)\n    以学生作为资源来实现的\n\n    资源类：Student\n    设置数据类：SetThread(生产者)\n    获取数据类：GetThread(消费者)\n    测试类：StudentDemo\n\n    代码：\n        A:最基本的版本，只有一个数据。\n        B:改进版本，给出了不同的数据，并加入了同步机制\n        C:等待唤醒机制改进该程序，让数据能够实现依次的出现\n            wait()\n            notify()\n            notifyAll() (多生产多消费)\n        D:等待唤醒机制的代码优化。把数据及操作都写在了资源类中\n(4)线程组\n(5)线程池\n(6)多线程实现的第三种方案\n(7)多线程的面试题\n</code></pre><h2 id=\"2-设计模式\"><a href=\"#2-设计模式\" class=\"headerlink\" title=\"2:设计模式\"></a>2:设计模式</h2><pre><code>(1)面试对象的常见设计原则\n    单一\n    开闭\n    里氏\n    依赖注入\n    接口\n    迪米特\n(2)设计模式概述和分类\n    A:经验的总结\n    B:三类\n        创建型\n        结构型\n        行为型\n(3)改进的设计模式\n    A:简单工厂模式\n    B:工厂方法模式\n    C:单例模式(掌握)\n        a:饿汉式\n        b:懒汉式\n(4)Runtime\n    JDK提供的一个单例模式应用的类。\n    还可以调用dos命令。\n</code></pre>"},{"title":"Java学习笔记异常和File","date":"2017-03-13T07:59:51.000Z","toc":true,"_content":"\n\n异常,File\n<!--more-->\n# 异常(理解)\n\t(1)程序出现的不正常的情况。\n\t(2)异常的体系\n\t\tThrowable\n\t\t\t|--Error\t严重问题，我们不处理。\n\t\t\t|--Exception\n\t\t\t\t|--RuntimeException\t运行期异常，我们需要修正代码\n\t\t\t\t|--非RuntimeException 编译期异常，必须处理的，否则程序编译不通过\n\t(3)异常的处理：\n\t\tA:JVM的默认处理\n\t\t\t把异常的名称,原因,位置等信息输出在控制台，但是呢程序不能继续执行了。\n\t\tB:自己处理\n\t\t\ta:try...catch...finally\n\t\t\t\t自己编写处理代码,后面的程序可以继续执行\n\t\t\tb:throws\n\t\t\t\t把自己处理不了的，在方法上声明，告诉调用者，这里有问题\n\t(4)面试题\n\t\tA:编译期异常和运行期异常的区别?\n\t\t\t编译期异常 必须要处理的，否则编译不通过\n\t\t\t运行期异常 可以不处理，也可以处理\n\t\tB:throw和throws是的区别\n\t\t\tthrow:\n\t\t\t\t在方法体中,后面跟的是异常对象名,并且只能是一个\n\t\t\t\tthrow抛出的是一个异常对象，说明这里肯定有一个异常产生了\n\t\t\tthrows:\n\t\t\t\t在方法声明上,后面跟的是异常的类名,可以是多个\n\t\t\t\tthrows是声明方法有异常，是一种可能性，这个异常并不一定会产生\n\t(5)finally关键字及其面试题\n\t\tA:finally用于释放资源，它的代码永远会执行。特殊情况：在执行到finally之前jvm退出了\n\t\tB:面试题\n\t\t\ta:final,finally,finalize的区别?\n\t\t\tb:如果在catch里面有return,请问finally还执行吗?如果执行,在return前还是后\n\t\t\t\t会，前。\n\t\t\t\t\n\t\t\t\t实际上在中间。这个上课我们讲过\n\t\tC:异常处理的变形\n\t\t\ttry...catch...finally\n\t\t\ttry...catch...\n\t\t\ttry...catch...catch...\n\t\t\ttry...catch...catch...fianlly\n\t\t\ttry...finally\n\t(6)自定义异常\n\t\t继承自Exception或者RuntimeException,只需要提供无参构造和一个带参构造即可\n\t(7)异常的注意实现\n\t\tA:父的方法有异常抛出,子的重写方法在抛出异常的时候必须要小于等于父的异常 \n\t\tB:父的方法没有异常抛出,子的重写方法不能有异常抛出\n\t\tC:父的方法抛出多个异常,子的重写方法必须比父少或者小\n\n# File(掌握)\n\t(1)IO流操作中大部分都是对文件的操作，所以Java就提供了File类供我们来操作文件\n\t(2)构造方法\n\t\tA:File file = new File(\"e:\\\\demo\\\\a.txt\");\n\t\tB:File file = new File(\"e:\\\\demo\",\"a.txt\");\n\t\tC:File file = new File(\"e:\\\\demo\");\n\t\t  File file2 = new File(file,\"a.txt\");\n\t(3)File类的功能(自己补齐)\n\t\tA:创建功能\n\t\tpublic boolean createNewFile():\n\t\tpublic boolean mkdir():\n \t\tpublic boolean mkdirs():\n\t\tB:删除功能\t\n\t\tpublic boolean delete():\n\t\tC:重命名功能\n\t\tpublic boolean renameTo(File dest):\n\t\tD:判断功能\n\t\t\n\t\tE:获取功能\n\t\tpublic String getAbsolutePath():\n\t\tpublic String getPath():\n\t\tpublic String getName():\n\t\tpublic long length():\n\t\tpublic long lastModified():\n\t\tF:高级获取功能\n\t\tpublic String[] list():\n\t\tpublic File[] listFiles():\n\t\tG:过滤器功能\n\t\tpublic String[] list(FilenameFilter filter):\n\t\tpublic File[] listFiles((FilenameFilter  filter):\n\t(4)案例：\n\t\tA:输出指定目录下指定后缀名的文件名称\n\t\t\ta:先获取所有的，在遍历的时候判断，再输出\n\t\t\tb:先判断，再获取，最后直接遍历输出即可\n\t\tB:批量修改文件名称","source":"_posts/Java学习笔记异常和File.md","raw":"\n---\ntitle: 'Java学习笔记异常和File'\ndate: 2017-03-13 15:59:51\ntags:\n- Java基础\ntoc: true\n---\n\n\n异常,File\n<!--more-->\n# 异常(理解)\n\t(1)程序出现的不正常的情况。\n\t(2)异常的体系\n\t\tThrowable\n\t\t\t|--Error\t严重问题，我们不处理。\n\t\t\t|--Exception\n\t\t\t\t|--RuntimeException\t运行期异常，我们需要修正代码\n\t\t\t\t|--非RuntimeException 编译期异常，必须处理的，否则程序编译不通过\n\t(3)异常的处理：\n\t\tA:JVM的默认处理\n\t\t\t把异常的名称,原因,位置等信息输出在控制台，但是呢程序不能继续执行了。\n\t\tB:自己处理\n\t\t\ta:try...catch...finally\n\t\t\t\t自己编写处理代码,后面的程序可以继续执行\n\t\t\tb:throws\n\t\t\t\t把自己处理不了的，在方法上声明，告诉调用者，这里有问题\n\t(4)面试题\n\t\tA:编译期异常和运行期异常的区别?\n\t\t\t编译期异常 必须要处理的，否则编译不通过\n\t\t\t运行期异常 可以不处理，也可以处理\n\t\tB:throw和throws是的区别\n\t\t\tthrow:\n\t\t\t\t在方法体中,后面跟的是异常对象名,并且只能是一个\n\t\t\t\tthrow抛出的是一个异常对象，说明这里肯定有一个异常产生了\n\t\t\tthrows:\n\t\t\t\t在方法声明上,后面跟的是异常的类名,可以是多个\n\t\t\t\tthrows是声明方法有异常，是一种可能性，这个异常并不一定会产生\n\t(5)finally关键字及其面试题\n\t\tA:finally用于释放资源，它的代码永远会执行。特殊情况：在执行到finally之前jvm退出了\n\t\tB:面试题\n\t\t\ta:final,finally,finalize的区别?\n\t\t\tb:如果在catch里面有return,请问finally还执行吗?如果执行,在return前还是后\n\t\t\t\t会，前。\n\t\t\t\t\n\t\t\t\t实际上在中间。这个上课我们讲过\n\t\tC:异常处理的变形\n\t\t\ttry...catch...finally\n\t\t\ttry...catch...\n\t\t\ttry...catch...catch...\n\t\t\ttry...catch...catch...fianlly\n\t\t\ttry...finally\n\t(6)自定义异常\n\t\t继承自Exception或者RuntimeException,只需要提供无参构造和一个带参构造即可\n\t(7)异常的注意实现\n\t\tA:父的方法有异常抛出,子的重写方法在抛出异常的时候必须要小于等于父的异常 \n\t\tB:父的方法没有异常抛出,子的重写方法不能有异常抛出\n\t\tC:父的方法抛出多个异常,子的重写方法必须比父少或者小\n\n# File(掌握)\n\t(1)IO流操作中大部分都是对文件的操作，所以Java就提供了File类供我们来操作文件\n\t(2)构造方法\n\t\tA:File file = new File(\"e:\\\\demo\\\\a.txt\");\n\t\tB:File file = new File(\"e:\\\\demo\",\"a.txt\");\n\t\tC:File file = new File(\"e:\\\\demo\");\n\t\t  File file2 = new File(file,\"a.txt\");\n\t(3)File类的功能(自己补齐)\n\t\tA:创建功能\n\t\tpublic boolean createNewFile():\n\t\tpublic boolean mkdir():\n \t\tpublic boolean mkdirs():\n\t\tB:删除功能\t\n\t\tpublic boolean delete():\n\t\tC:重命名功能\n\t\tpublic boolean renameTo(File dest):\n\t\tD:判断功能\n\t\t\n\t\tE:获取功能\n\t\tpublic String getAbsolutePath():\n\t\tpublic String getPath():\n\t\tpublic String getName():\n\t\tpublic long length():\n\t\tpublic long lastModified():\n\t\tF:高级获取功能\n\t\tpublic String[] list():\n\t\tpublic File[] listFiles():\n\t\tG:过滤器功能\n\t\tpublic String[] list(FilenameFilter filter):\n\t\tpublic File[] listFiles((FilenameFilter  filter):\n\t(4)案例：\n\t\tA:输出指定目录下指定后缀名的文件名称\n\t\t\ta:先获取所有的，在遍历的时候判断，再输出\n\t\t\tb:先判断，再获取，最后直接遍历输出即可\n\t\tB:批量修改文件名称","slug":"Java学习笔记异常和File","published":1,"updated":"2018-01-20T06:44:37.563Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wp002444wa4h6bwf8w","content":"<p>异常,File<br><a id=\"more\"></a></p>\n<h1 id=\"异常-理解\"><a href=\"#异常-理解\" class=\"headerlink\" title=\"异常(理解)\"></a>异常(理解)</h1><pre><code>(1)程序出现的不正常的情况。\n(2)异常的体系\n    Throwable\n        |--Error    严重问题，我们不处理。\n        |--Exception\n            |--RuntimeException    运行期异常，我们需要修正代码\n            |--非RuntimeException 编译期异常，必须处理的，否则程序编译不通过\n(3)异常的处理：\n    A:JVM的默认处理\n        把异常的名称,原因,位置等信息输出在控制台，但是呢程序不能继续执行了。\n    B:自己处理\n        a:try...catch...finally\n            自己编写处理代码,后面的程序可以继续执行\n        b:throws\n            把自己处理不了的，在方法上声明，告诉调用者，这里有问题\n(4)面试题\n    A:编译期异常和运行期异常的区别?\n        编译期异常 必须要处理的，否则编译不通过\n        运行期异常 可以不处理，也可以处理\n    B:throw和throws是的区别\n        throw:\n            在方法体中,后面跟的是异常对象名,并且只能是一个\n            throw抛出的是一个异常对象，说明这里肯定有一个异常产生了\n        throws:\n            在方法声明上,后面跟的是异常的类名,可以是多个\n            throws是声明方法有异常，是一种可能性，这个异常并不一定会产生\n(5)finally关键字及其面试题\n    A:finally用于释放资源，它的代码永远会执行。特殊情况：在执行到finally之前jvm退出了\n    B:面试题\n        a:final,finally,finalize的区别?\n        b:如果在catch里面有return,请问finally还执行吗?如果执行,在return前还是后\n            会，前。\n\n            实际上在中间。这个上课我们讲过\n    C:异常处理的变形\n        try...catch...finally\n        try...catch...\n        try...catch...catch...\n        try...catch...catch...fianlly\n        try...finally\n(6)自定义异常\n    继承自Exception或者RuntimeException,只需要提供无参构造和一个带参构造即可\n(7)异常的注意实现\n    A:父的方法有异常抛出,子的重写方法在抛出异常的时候必须要小于等于父的异常 \n    B:父的方法没有异常抛出,子的重写方法不能有异常抛出\n    C:父的方法抛出多个异常,子的重写方法必须比父少或者小\n</code></pre><h1 id=\"File-掌握\"><a href=\"#File-掌握\" class=\"headerlink\" title=\"File(掌握)\"></a>File(掌握)</h1><pre><code>(1)IO流操作中大部分都是对文件的操作，所以Java就提供了File类供我们来操作文件\n(2)构造方法\n    A:File file = new File(&quot;e:\\\\demo\\\\a.txt&quot;);\n    B:File file = new File(&quot;e:\\\\demo&quot;,&quot;a.txt&quot;);\n    C:File file = new File(&quot;e:\\\\demo&quot;);\n      File file2 = new File(file,&quot;a.txt&quot;);\n(3)File类的功能(自己补齐)\n    A:创建功能\n    public boolean createNewFile():\n    public boolean mkdir():\n     public boolean mkdirs():\n    B:删除功能    \n    public boolean delete():\n    C:重命名功能\n    public boolean renameTo(File dest):\n    D:判断功能\n\n    E:获取功能\n    public String getAbsolutePath():\n    public String getPath():\n    public String getName():\n    public long length():\n    public long lastModified():\n    F:高级获取功能\n    public String[] list():\n    public File[] listFiles():\n    G:过滤器功能\n    public String[] list(FilenameFilter filter):\n    public File[] listFiles((FilenameFilter  filter):\n(4)案例：\n    A:输出指定目录下指定后缀名的文件名称\n        a:先获取所有的，在遍历的时候判断，再输出\n        b:先判断，再获取，最后直接遍历输出即可\n    B:批量修改文件名称\n</code></pre>","excerpt":"<p>异常,File<br>","more":"</p>\n<h1 id=\"异常-理解\"><a href=\"#异常-理解\" class=\"headerlink\" title=\"异常(理解)\"></a>异常(理解)</h1><pre><code>(1)程序出现的不正常的情况。\n(2)异常的体系\n    Throwable\n        |--Error    严重问题，我们不处理。\n        |--Exception\n            |--RuntimeException    运行期异常，我们需要修正代码\n            |--非RuntimeException 编译期异常，必须处理的，否则程序编译不通过\n(3)异常的处理：\n    A:JVM的默认处理\n        把异常的名称,原因,位置等信息输出在控制台，但是呢程序不能继续执行了。\n    B:自己处理\n        a:try...catch...finally\n            自己编写处理代码,后面的程序可以继续执行\n        b:throws\n            把自己处理不了的，在方法上声明，告诉调用者，这里有问题\n(4)面试题\n    A:编译期异常和运行期异常的区别?\n        编译期异常 必须要处理的，否则编译不通过\n        运行期异常 可以不处理，也可以处理\n    B:throw和throws是的区别\n        throw:\n            在方法体中,后面跟的是异常对象名,并且只能是一个\n            throw抛出的是一个异常对象，说明这里肯定有一个异常产生了\n        throws:\n            在方法声明上,后面跟的是异常的类名,可以是多个\n            throws是声明方法有异常，是一种可能性，这个异常并不一定会产生\n(5)finally关键字及其面试题\n    A:finally用于释放资源，它的代码永远会执行。特殊情况：在执行到finally之前jvm退出了\n    B:面试题\n        a:final,finally,finalize的区别?\n        b:如果在catch里面有return,请问finally还执行吗?如果执行,在return前还是后\n            会，前。\n\n            实际上在中间。这个上课我们讲过\n    C:异常处理的变形\n        try...catch...finally\n        try...catch...\n        try...catch...catch...\n        try...catch...catch...fianlly\n        try...finally\n(6)自定义异常\n    继承自Exception或者RuntimeException,只需要提供无参构造和一个带参构造即可\n(7)异常的注意实现\n    A:父的方法有异常抛出,子的重写方法在抛出异常的时候必须要小于等于父的异常 \n    B:父的方法没有异常抛出,子的重写方法不能有异常抛出\n    C:父的方法抛出多个异常,子的重写方法必须比父少或者小\n</code></pre><h1 id=\"File-掌握\"><a href=\"#File-掌握\" class=\"headerlink\" title=\"File(掌握)\"></a>File(掌握)</h1><pre><code>(1)IO流操作中大部分都是对文件的操作，所以Java就提供了File类供我们来操作文件\n(2)构造方法\n    A:File file = new File(&quot;e:\\\\demo\\\\a.txt&quot;);\n    B:File file = new File(&quot;e:\\\\demo&quot;,&quot;a.txt&quot;);\n    C:File file = new File(&quot;e:\\\\demo&quot;);\n      File file2 = new File(file,&quot;a.txt&quot;);\n(3)File类的功能(自己补齐)\n    A:创建功能\n    public boolean createNewFile():\n    public boolean mkdir():\n     public boolean mkdirs():\n    B:删除功能    \n    public boolean delete():\n    C:重命名功能\n    public boolean renameTo(File dest):\n    D:判断功能\n\n    E:获取功能\n    public String getAbsolutePath():\n    public String getPath():\n    public String getName():\n    public long length():\n    public long lastModified():\n    F:高级获取功能\n    public String[] list():\n    public File[] listFiles():\n    G:过滤器功能\n    public String[] list(FilenameFilter filter):\n    public File[] listFiles((FilenameFilter  filter):\n(4)案例：\n    A:输出指定目录下指定后缀名的文件名称\n        a:先获取所有的，在遍历的时候判断，再输出\n        b:先判断，再获取，最后直接遍历输出即可\n    B:批量修改文件名称\n</code></pre>"},{"title":"Java学习笔记之反射和JDK新特性","date":"2017-03-16T02:13:00.000Z","toc":true,"_content":"\n\n反射，设计模式，JDK新特性\n<!--more-->\n# 1:反射(理解)\n\t(1)类的加载及类加载器\n\t(2)反射：\n\t\t通过字节码文件对象，去使用成员变量，构造方法，成员方法\n\t(3)反射的使用\n\t\tA:通过反射获取构造方法并使用\n\t\tB:通过反射获取成员变量并使用\n\t\tC:通过反射获取成员方法并使用\n\t(4)反射案例\n\t\tA:通过反射运行配置文件的内容\n\t\tB:通过反射越过泛型检查\n\t\tC:通过反射给任意的一个对象的任意的属性赋值为指定的值\n\t(5)动态代理\n\t\n# 2:设计模式\n\t(1)装饰设计模式\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tScanner sc = new Scanner(System.in);\n\t(2)模版设计模式\n\t\t\n# 3:JDK新特性\n\t(1)JDK5(掌握)\n\t\t装箱和拆箱\n\t\t泛型\n\t\t增强for\n\t\t静态导入\n\t\t可变参数\n\t\t枚举\n\t(2)JDK6(了解)\n\t(3)JDK7(理解)\n\t\t二进制的表现形式\n\t\t用_分隔数据\n\t\tswitch语句可是用字符串\n\t\t泛型推断(菱形泛型)\n\t\t多catch的使用\n\t\t自动释放资源的用法\n\t(4)JDK8(了解)\n\t\t可以去网上了解资料","source":"_posts/Java学习笔记之反射和JDK新特性.md","raw":"---\ntitle: Java学习笔记之反射和JDK新特性\ndate: 2017-03-16 10:13:00\ntags:\n- Java基础\ntoc: true\n---\n\n\n反射，设计模式，JDK新特性\n<!--more-->\n# 1:反射(理解)\n\t(1)类的加载及类加载器\n\t(2)反射：\n\t\t通过字节码文件对象，去使用成员变量，构造方法，成员方法\n\t(3)反射的使用\n\t\tA:通过反射获取构造方法并使用\n\t\tB:通过反射获取成员变量并使用\n\t\tC:通过反射获取成员方法并使用\n\t(4)反射案例\n\t\tA:通过反射运行配置文件的内容\n\t\tB:通过反射越过泛型检查\n\t\tC:通过反射给任意的一个对象的任意的属性赋值为指定的值\n\t(5)动态代理\n\t\n# 2:设计模式\n\t(1)装饰设计模式\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tScanner sc = new Scanner(System.in);\n\t(2)模版设计模式\n\t\t\n# 3:JDK新特性\n\t(1)JDK5(掌握)\n\t\t装箱和拆箱\n\t\t泛型\n\t\t增强for\n\t\t静态导入\n\t\t可变参数\n\t\t枚举\n\t(2)JDK6(了解)\n\t(3)JDK7(理解)\n\t\t二进制的表现形式\n\t\t用_分隔数据\n\t\tswitch语句可是用字符串\n\t\t泛型推断(菱形泛型)\n\t\t多catch的使用\n\t\t自动释放资源的用法\n\t(4)JDK8(了解)\n\t\t可以去网上了解资料","slug":"Java学习笔记之反射和JDK新特性","published":1,"updated":"2018-01-20T06:44:37.556Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wt002644waf31ws0rj","content":"<p>反射，设计模式，JDK新特性<br><a id=\"more\"></a></p>\n<h1 id=\"1-反射-理解\"><a href=\"#1-反射-理解\" class=\"headerlink\" title=\"1:反射(理解)\"></a>1:反射(理解)</h1><pre><code>(1)类的加载及类加载器\n(2)反射：\n    通过字节码文件对象，去使用成员变量，构造方法，成员方法\n(3)反射的使用\n    A:通过反射获取构造方法并使用\n    B:通过反射获取成员变量并使用\n    C:通过反射获取成员方法并使用\n(4)反射案例\n    A:通过反射运行配置文件的内容\n    B:通过反射越过泛型检查\n    C:通过反射给任意的一个对象的任意的属性赋值为指定的值\n(5)动态代理\n</code></pre><h1 id=\"2-设计模式\"><a href=\"#2-设计模式\" class=\"headerlink\" title=\"2:设计模式\"></a>2:设计模式</h1><pre><code>(1)装饰设计模式\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    Scanner sc = new Scanner(System.in);\n(2)模版设计模式\n</code></pre><h1 id=\"3-JDK新特性\"><a href=\"#3-JDK新特性\" class=\"headerlink\" title=\"3:JDK新特性\"></a>3:JDK新特性</h1><pre><code>(1)JDK5(掌握)\n    装箱和拆箱\n    泛型\n    增强for\n    静态导入\n    可变参数\n    枚举\n(2)JDK6(了解)\n(3)JDK7(理解)\n    二进制的表现形式\n    用_分隔数据\n    switch语句可是用字符串\n    泛型推断(菱形泛型)\n    多catch的使用\n    自动释放资源的用法\n(4)JDK8(了解)\n    可以去网上了解资料\n</code></pre>","excerpt":"<p>反射，设计模式，JDK新特性<br>","more":"</p>\n<h1 id=\"1-反射-理解\"><a href=\"#1-反射-理解\" class=\"headerlink\" title=\"1:反射(理解)\"></a>1:反射(理解)</h1><pre><code>(1)类的加载及类加载器\n(2)反射：\n    通过字节码文件对象，去使用成员变量，构造方法，成员方法\n(3)反射的使用\n    A:通过反射获取构造方法并使用\n    B:通过反射获取成员变量并使用\n    C:通过反射获取成员方法并使用\n(4)反射案例\n    A:通过反射运行配置文件的内容\n    B:通过反射越过泛型检查\n    C:通过反射给任意的一个对象的任意的属性赋值为指定的值\n(5)动态代理\n</code></pre><h1 id=\"2-设计模式\"><a href=\"#2-设计模式\" class=\"headerlink\" title=\"2:设计模式\"></a>2:设计模式</h1><pre><code>(1)装饰设计模式\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    Scanner sc = new Scanner(System.in);\n(2)模版设计模式\n</code></pre><h1 id=\"3-JDK新特性\"><a href=\"#3-JDK新特性\" class=\"headerlink\" title=\"3:JDK新特性\"></a>3:JDK新特性</h1><pre><code>(1)JDK5(掌握)\n    装箱和拆箱\n    泛型\n    增强for\n    静态导入\n    可变参数\n    枚举\n(2)JDK6(了解)\n(3)JDK7(理解)\n    二进制的表现形式\n    用_分隔数据\n    switch语句可是用字符串\n    泛型推断(菱形泛型)\n    多catch的使用\n    自动释放资源的用法\n(4)JDK8(了解)\n    可以去网上了解资料\n</code></pre>"},{"title":"Java学习笔记内部类","date":"2017-03-07T09:01:38.000Z","toc":true,"_content":"内部类是很难理解的东西。\n<!--more-->\n# 内部类(理解)\n### (1)把类定义在另一个类的内部，该类就被称为内部类。\n\t\t举例：把类B定义在类A中，类B就被称为内部类。\n### (2)内部类的访问规则\n\t\tA:可以直接访问外部类的成员，包括私有\n\t\tB:外部类要想访问内部类成员，必须创建对象\n### (3)内部类的分类\n\t\tA:成员内部类\n\t\tB:局部内部类\n### (4)成员内部类\n\t\tA:private 为了数据的安全性\n\t\tB:static 为了访问的方便性\n\t\t成员内部类不是静态的：\n\t\t\t外部类名.内部类名 对象名 = new 外部类名.new 内部类名();\n\t\t成员内部类是静态的：\n\t\t\t外部类名.内部类名 对象名 = new 外部类名.内部类名();\n### (5)成员内部类的面试题(填空)\n```\n\t\t30,20,10\n\t\t\n\t\tclass Outer {\n\t\t\tpublic int num = 10;\n\t\t\t\n\t\t\tclass Inner {\n\t\t\t\tpublic int num = 20;\n\t\t\t\t\n\t\t\t\tpublic viod show() {\n\t\t\t\t\tint num  = 30;\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(num);\n\t\t\t\t\tSystem.out.println(this.num);\n\t\t\t\t\tSystem.out.println(Outer.this.num);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n```\n### (6)局部内部类\n\t\tA:局部内部类访问局部变量必须加final修饰。\n\t\tB:为什么呢?\n\t\t\t因为局部变量使用完毕就消失，而堆内存的数据并不会立即消失。\n\t\t\t所以，堆内存还是用该变量，而改变量已经没有了。\n\t\t\t为了让该值还存在，就加final修饰。\n\t\t\t通过反编译工具我们看到了，加入final后，堆内存直接存储的是值，而不是变量名。\n### (7)匿名内部类(掌握)\n\t\tA:是局部内部类的简化形式\n\t\tB:前提\n\t\t\t存在一个类或者接口\n\t\tC:格式:\n\t\t\tnew 类名或者接口名() {\n\t\t\t\t重写方法;\n\t\t\t}\n\t\tD:本质：\n\t\t\t其实是继承该类或者实现接口的子类匿名对象\n### (8)匿名内部类在开发中的使用\n\t\t我们在开发的时候，会看到抽象类，或者接口作为参数。\n\t\t而这个时候，我们知道实际需要的是一个子类对象。\n\t\t如果该方法仅仅调用一次，我们就可以使用匿名内部类的格式简化。\n```\n\t\t\n\t\tinterface Person {\n\t\t\tpublic abstract void study();\n\t\t}\n\t\t\n\t\tclass PersonDemo {\n\t\t\tpublic void method(Person p) {\n\t\t\t\tp.study();\n\t\t\t}\n\t\t}\n\t\t\n\t\tclass PersonTest {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tPersonDemo pd = new PersonDemo();\n\t\t\t\tpd.method(new Person() {\n\t\t\t\t\tpublic void study() {\n\t\t\t\t\t\tSystem.out.println(\"好好学习，天天向上\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n```\t\n### (9)匿名内部类的面试题(补齐代码)\n```\n\t\tinterface Inter {\n\t\t\tvoid show();\n\t\t}\n\t\t\n\t\tclass Outer {\n\t\t\t//补齐代码\n\t\t\t//public static Inter method() {\n\t\t\t//\treturn new Inter() {\n\t\t\t//\t\tpublic void show() {\n\t\t\t//\t\t\tSystem.out.println(\"HelloWorld\");\n\t\t\t//\t\t}\t\n\t\t\t//\t};\n\t\t\t//}\n\t\t}\n\t\t\n\t\tclass OuterDemo {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tOuter.method().show(); //\"HelloWorld\"\n\t\t\t}\n\t\t}\n```\nhttp://www.cnblogs.com/dolphin0520/p/3811445.html\n内部类详解","source":"_posts/Java学习笔记内部类.md","raw":"---\ntitle: Java学习笔记内部类\ndate: 2017-03-07 17:01:38\ntags:\n- Java基础\ntoc: true\n---\n内部类是很难理解的东西。\n<!--more-->\n# 内部类(理解)\n### (1)把类定义在另一个类的内部，该类就被称为内部类。\n\t\t举例：把类B定义在类A中，类B就被称为内部类。\n### (2)内部类的访问规则\n\t\tA:可以直接访问外部类的成员，包括私有\n\t\tB:外部类要想访问内部类成员，必须创建对象\n### (3)内部类的分类\n\t\tA:成员内部类\n\t\tB:局部内部类\n### (4)成员内部类\n\t\tA:private 为了数据的安全性\n\t\tB:static 为了访问的方便性\n\t\t成员内部类不是静态的：\n\t\t\t外部类名.内部类名 对象名 = new 外部类名.new 内部类名();\n\t\t成员内部类是静态的：\n\t\t\t外部类名.内部类名 对象名 = new 外部类名.内部类名();\n### (5)成员内部类的面试题(填空)\n```\n\t\t30,20,10\n\t\t\n\t\tclass Outer {\n\t\t\tpublic int num = 10;\n\t\t\t\n\t\t\tclass Inner {\n\t\t\t\tpublic int num = 20;\n\t\t\t\t\n\t\t\t\tpublic viod show() {\n\t\t\t\t\tint num  = 30;\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(num);\n\t\t\t\t\tSystem.out.println(this.num);\n\t\t\t\t\tSystem.out.println(Outer.this.num);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n```\n### (6)局部内部类\n\t\tA:局部内部类访问局部变量必须加final修饰。\n\t\tB:为什么呢?\n\t\t\t因为局部变量使用完毕就消失，而堆内存的数据并不会立即消失。\n\t\t\t所以，堆内存还是用该变量，而改变量已经没有了。\n\t\t\t为了让该值还存在，就加final修饰。\n\t\t\t通过反编译工具我们看到了，加入final后，堆内存直接存储的是值，而不是变量名。\n### (7)匿名内部类(掌握)\n\t\tA:是局部内部类的简化形式\n\t\tB:前提\n\t\t\t存在一个类或者接口\n\t\tC:格式:\n\t\t\tnew 类名或者接口名() {\n\t\t\t\t重写方法;\n\t\t\t}\n\t\tD:本质：\n\t\t\t其实是继承该类或者实现接口的子类匿名对象\n### (8)匿名内部类在开发中的使用\n\t\t我们在开发的时候，会看到抽象类，或者接口作为参数。\n\t\t而这个时候，我们知道实际需要的是一个子类对象。\n\t\t如果该方法仅仅调用一次，我们就可以使用匿名内部类的格式简化。\n```\n\t\t\n\t\tinterface Person {\n\t\t\tpublic abstract void study();\n\t\t}\n\t\t\n\t\tclass PersonDemo {\n\t\t\tpublic void method(Person p) {\n\t\t\t\tp.study();\n\t\t\t}\n\t\t}\n\t\t\n\t\tclass PersonTest {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tPersonDemo pd = new PersonDemo();\n\t\t\t\tpd.method(new Person() {\n\t\t\t\t\tpublic void study() {\n\t\t\t\t\t\tSystem.out.println(\"好好学习，天天向上\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n```\t\n### (9)匿名内部类的面试题(补齐代码)\n```\n\t\tinterface Inter {\n\t\t\tvoid show();\n\t\t}\n\t\t\n\t\tclass Outer {\n\t\t\t//补齐代码\n\t\t\t//public static Inter method() {\n\t\t\t//\treturn new Inter() {\n\t\t\t//\t\tpublic void show() {\n\t\t\t//\t\t\tSystem.out.println(\"HelloWorld\");\n\t\t\t//\t\t}\t\n\t\t\t//\t};\n\t\t\t//}\n\t\t}\n\t\t\n\t\tclass OuterDemo {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tOuter.method().show(); //\"HelloWorld\"\n\t\t\t}\n\t\t}\n```\nhttp://www.cnblogs.com/dolphin0520/p/3811445.html\n内部类详解","slug":"Java学习笔记内部类","published":1,"updated":"2018-01-20T06:44:37.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wv002944wauoy6daju","content":"<p>内部类是很难理解的东西。<br><a id=\"more\"></a></p>\n<h1 id=\"内部类-理解\"><a href=\"#内部类-理解\" class=\"headerlink\" title=\"内部类(理解)\"></a>内部类(理解)</h1><h3 id=\"1-把类定义在另一个类的内部，该类就被称为内部类。\"><a href=\"#1-把类定义在另一个类的内部，该类就被称为内部类。\" class=\"headerlink\" title=\"(1)把类定义在另一个类的内部，该类就被称为内部类。\"></a>(1)把类定义在另一个类的内部，该类就被称为内部类。</h3><pre><code>举例：把类B定义在类A中，类B就被称为内部类。\n</code></pre><h3 id=\"2-内部类的访问规则\"><a href=\"#2-内部类的访问规则\" class=\"headerlink\" title=\"(2)内部类的访问规则\"></a>(2)内部类的访问规则</h3><pre><code>A:可以直接访问外部类的成员，包括私有\nB:外部类要想访问内部类成员，必须创建对象\n</code></pre><h3 id=\"3-内部类的分类\"><a href=\"#3-内部类的分类\" class=\"headerlink\" title=\"(3)内部类的分类\"></a>(3)内部类的分类</h3><pre><code>A:成员内部类\nB:局部内部类\n</code></pre><h3 id=\"4-成员内部类\"><a href=\"#4-成员内部类\" class=\"headerlink\" title=\"(4)成员内部类\"></a>(4)成员内部类</h3><pre><code>A:private 为了数据的安全性\nB:static 为了访问的方便性\n成员内部类不是静态的：\n    外部类名.内部类名 对象名 = new 外部类名.new 内部类名();\n成员内部类是静态的：\n    外部类名.内部类名 对象名 = new 外部类名.内部类名();\n</code></pre><h3 id=\"5-成员内部类的面试题-填空\"><a href=\"#5-成员内部类的面试题-填空\" class=\"headerlink\" title=\"(5)成员内部类的面试题(填空)\"></a>(5)成员内部类的面试题(填空)</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">30</span>,<span class=\"number\">20</span>,<span class=\"number\">10</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Outer</span> &#123;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">class</span> <span class=\"title\">Inner</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">20</span>;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> viod <span class=\"title\">show</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">int</span> num  = <span class=\"number\">30</span>;</div><div class=\"line\">   </div><div class=\"line\">   System.<span class=\"keyword\">out</span>.println(num);</div><div class=\"line\">   System.<span class=\"keyword\">out</span>.println(<span class=\"keyword\">this</span>.num);</div><div class=\"line\">   System.<span class=\"keyword\">out</span>.println(Outer.<span class=\"keyword\">this</span>.num);</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"6-局部内部类\"><a href=\"#6-局部内部类\" class=\"headerlink\" title=\"(6)局部内部类\"></a>(6)局部内部类</h3><pre><code>A:局部内部类访问局部变量必须加final修饰。\nB:为什么呢?\n    因为局部变量使用完毕就消失，而堆内存的数据并不会立即消失。\n    所以，堆内存还是用该变量，而改变量已经没有了。\n    为了让该值还存在，就加final修饰。\n    通过反编译工具我们看到了，加入final后，堆内存直接存储的是值，而不是变量名。\n</code></pre><h3 id=\"7-匿名内部类-掌握\"><a href=\"#7-匿名内部类-掌握\" class=\"headerlink\" title=\"(7)匿名内部类(掌握)\"></a>(7)匿名内部类(掌握)</h3><pre><code>A:是局部内部类的简化形式\nB:前提\n    存在一个类或者接口\nC:格式:\n    new 类名或者接口名() {\n        重写方法;\n    }\nD:本质：\n    其实是继承该类或者实现接口的子类匿名对象\n</code></pre><h3 id=\"8-匿名内部类在开发中的使用\"><a href=\"#8-匿名内部类在开发中的使用\" class=\"headerlink\" title=\"(8)匿名内部类在开发中的使用\"></a>(8)匿名内部类在开发中的使用</h3><pre><code>我们在开发的时候，会看到抽象类，或者接口作为参数。\n而这个时候，我们知道实际需要的是一个子类对象。\n如果该方法仅仅调用一次，我们就可以使用匿名内部类的格式简化。\n</code></pre><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">interface</span> <span class=\"title\">Person</span> &#123;</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">study</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title\">PersonDemo</span> &#123;</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span>(<span class=\"params\">Person p</span>) </span>&#123;</div><div class=\"line\">    p.study();</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title\">PersonTest</span> &#123;</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String[] args</span>) </span>&#123;</div><div class=\"line\">    PersonDemo pd = <span class=\"keyword\">new</span> PersonDemo();</div><div class=\"line\">    pd.method(<span class=\"keyword\">new</span> Person() &#123;</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">study</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"好好学习，天天向上\"</span>);</div><div class=\"line\">     &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">```\t</div><div class=\"line\"><span class=\"meta\">### (9)匿名内部类的面试题(补齐代码)</span></div></pre></td></tr></table></figure>\n<pre><code>interface Inter {\n    void show();\n}\n\nclass Outer {\n    //补齐代码\n    //public static Inter method() {\n    //    return new Inter() {\n    //        public void show() {\n    //            System.out.println(&quot;HelloWorld&quot;);\n    //        }    \n    //    };\n    //}\n}\n\nclass OuterDemo {\n    public static void main(String[] args) {\n        Outer.method().show(); //&quot;HelloWorld&quot;\n    }\n}\n</code></pre><p>```<br><a href=\"http://www.cnblogs.com/dolphin0520/p/3811445.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/dolphin0520/p/3811445.html</a><br>内部类详解</p>\n","excerpt":"<p>内部类是很难理解的东西。<br>","more":"</p>\n<h1 id=\"内部类-理解\"><a href=\"#内部类-理解\" class=\"headerlink\" title=\"内部类(理解)\"></a>内部类(理解)</h1><h3 id=\"1-把类定义在另一个类的内部，该类就被称为内部类。\"><a href=\"#1-把类定义在另一个类的内部，该类就被称为内部类。\" class=\"headerlink\" title=\"(1)把类定义在另一个类的内部，该类就被称为内部类。\"></a>(1)把类定义在另一个类的内部，该类就被称为内部类。</h3><pre><code>举例：把类B定义在类A中，类B就被称为内部类。\n</code></pre><h3 id=\"2-内部类的访问规则\"><a href=\"#2-内部类的访问规则\" class=\"headerlink\" title=\"(2)内部类的访问规则\"></a>(2)内部类的访问规则</h3><pre><code>A:可以直接访问外部类的成员，包括私有\nB:外部类要想访问内部类成员，必须创建对象\n</code></pre><h3 id=\"3-内部类的分类\"><a href=\"#3-内部类的分类\" class=\"headerlink\" title=\"(3)内部类的分类\"></a>(3)内部类的分类</h3><pre><code>A:成员内部类\nB:局部内部类\n</code></pre><h3 id=\"4-成员内部类\"><a href=\"#4-成员内部类\" class=\"headerlink\" title=\"(4)成员内部类\"></a>(4)成员内部类</h3><pre><code>A:private 为了数据的安全性\nB:static 为了访问的方便性\n成员内部类不是静态的：\n    外部类名.内部类名 对象名 = new 外部类名.new 内部类名();\n成员内部类是静态的：\n    外部类名.内部类名 对象名 = new 外部类名.内部类名();\n</code></pre><h3 id=\"5-成员内部类的面试题-填空\"><a href=\"#5-成员内部类的面试题-填空\" class=\"headerlink\" title=\"(5)成员内部类的面试题(填空)\"></a>(5)成员内部类的面试题(填空)</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">30</span>,<span class=\"number\">20</span>,<span class=\"number\">10</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Outer</span> &#123;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">class</span> <span class=\"title\">Inner</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">20</span>;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> viod <span class=\"title\">show</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">int</span> num  = <span class=\"number\">30</span>;</div><div class=\"line\">   </div><div class=\"line\">   System.<span class=\"keyword\">out</span>.println(num);</div><div class=\"line\">   System.<span class=\"keyword\">out</span>.println(<span class=\"keyword\">this</span>.num);</div><div class=\"line\">   System.<span class=\"keyword\">out</span>.println(Outer.<span class=\"keyword\">this</span>.num);</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"6-局部内部类\"><a href=\"#6-局部内部类\" class=\"headerlink\" title=\"(6)局部内部类\"></a>(6)局部内部类</h3><pre><code>A:局部内部类访问局部变量必须加final修饰。\nB:为什么呢?\n    因为局部变量使用完毕就消失，而堆内存的数据并不会立即消失。\n    所以，堆内存还是用该变量，而改变量已经没有了。\n    为了让该值还存在，就加final修饰。\n    通过反编译工具我们看到了，加入final后，堆内存直接存储的是值，而不是变量名。\n</code></pre><h3 id=\"7-匿名内部类-掌握\"><a href=\"#7-匿名内部类-掌握\" class=\"headerlink\" title=\"(7)匿名内部类(掌握)\"></a>(7)匿名内部类(掌握)</h3><pre><code>A:是局部内部类的简化形式\nB:前提\n    存在一个类或者接口\nC:格式:\n    new 类名或者接口名() {\n        重写方法;\n    }\nD:本质：\n    其实是继承该类或者实现接口的子类匿名对象\n</code></pre><h3 id=\"8-匿名内部类在开发中的使用\"><a href=\"#8-匿名内部类在开发中的使用\" class=\"headerlink\" title=\"(8)匿名内部类在开发中的使用\"></a>(8)匿名内部类在开发中的使用</h3><pre><code>我们在开发的时候，会看到抽象类，或者接口作为参数。\n而这个时候，我们知道实际需要的是一个子类对象。\n如果该方法仅仅调用一次，我们就可以使用匿名内部类的格式简化。\n</code></pre><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">interface</span> <span class=\"title\">Person</span> &#123;</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">study</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title\">PersonDemo</span> &#123;</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span>(<span class=\"params\">Person p</span>) </span>&#123;</div><div class=\"line\">    p.study();</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title\">PersonTest</span> &#123;</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String[] args</span>) </span>&#123;</div><div class=\"line\">    PersonDemo pd = <span class=\"keyword\">new</span> PersonDemo();</div><div class=\"line\">    pd.method(<span class=\"keyword\">new</span> Person() &#123;</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">study</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"好好学习，天天向上\"</span>);</div><div class=\"line\">     &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">```\t</div><div class=\"line\"><span class=\"meta\">### (9)匿名内部类的面试题(补齐代码)</span></div></pre></td></tr></table></figure>\n<pre><code>interface Inter {\n    void show();\n}\n\nclass Outer {\n    //补齐代码\n    //public static Inter method() {\n    //    return new Inter() {\n    //        public void show() {\n    //            System.out.println(&quot;HelloWorld&quot;);\n    //        }    \n    //    };\n    //}\n}\n\nclass OuterDemo {\n    public static void main(String[] args) {\n        Outer.method().show(); //&quot;HelloWorld&quot;\n    }\n}\n</code></pre><p>```<br><a href=\"http://www.cnblogs.com/dolphin0520/p/3811445.html\">http://www.cnblogs.com/dolphin0520/p/3811445.html</a><br>内部类详解</p>"},{"title":"Log4j","toc":true,"date":"2017-06-29T04:04:32.000Z","_content":"# 日志的原理\n通过一个标志位debug控制输出，这是的输出便是可控的，但只有两个级别：输出与不输出。\ndebug为false时不输出，debug为true时输出。\n<!--more-->\n# Logging，Log4j和commons-logging的关系\nLogging为JDK1.4自带的一套日志系统\nLog4j是Apache的一个开源项目\ncommons-logging用来选择是使用Logging还是Log4j，如果有Log4j就把输出原封不动交给Log4j，如果没有，将输出转化为JDK Logging的输出。\n# Log4j简介\nLog4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。\n# Log4j.properties例子\n```\n### direct log messages to stdout ###\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target=System.err\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n\n\n### direct messages to file mylog.log ###\nlog4j.appender.file=org.apache.log4j.FileAppender\nlog4j.appender.file.File=c:\\mylog.log\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n\n\n### set log levels - for more verbose logging change 'info' to 'debug' ###\nlog4j.rootLogger=info, stdout\n```\n具体配置有很多，等以后用到在具体学习。","source":"_posts/Log4j.md","raw":"---\ntitle: Log4j\ntoc: true\ndate: 2017-06-29 12:04:32\ntags:\n- Java基础\n---\n# 日志的原理\n通过一个标志位debug控制输出，这是的输出便是可控的，但只有两个级别：输出与不输出。\ndebug为false时不输出，debug为true时输出。\n<!--more-->\n# Logging，Log4j和commons-logging的关系\nLogging为JDK1.4自带的一套日志系统\nLog4j是Apache的一个开源项目\ncommons-logging用来选择是使用Logging还是Log4j，如果有Log4j就把输出原封不动交给Log4j，如果没有，将输出转化为JDK Logging的输出。\n# Log4j简介\nLog4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。\n# Log4j.properties例子\n```\n### direct log messages to stdout ###\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target=System.err\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n\n\n### direct messages to file mylog.log ###\nlog4j.appender.file=org.apache.log4j.FileAppender\nlog4j.appender.file.File=c:\\mylog.log\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n\n\n### set log levels - for more verbose logging change 'info' to 'debug' ###\nlog4j.rootLogger=info, stdout\n```\n具体配置有很多，等以后用到在具体学习。","slug":"Log4j","published":1,"updated":"2018-01-20T06:44:37.565Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8ww002b44waqmaak9bg","content":"<h1 id=\"日志的原理\"><a href=\"#日志的原理\" class=\"headerlink\" title=\"日志的原理\"></a>日志的原理</h1><p>通过一个标志位debug控制输出，这是的输出便是可控的，但只有两个级别：输出与不输出。<br>debug为false时不输出，debug为true时输出。<br><a id=\"more\"></a></p>\n<h1 id=\"Logging，Log4j和commons-logging的关系\"><a href=\"#Logging，Log4j和commons-logging的关系\" class=\"headerlink\" title=\"Logging，Log4j和commons-logging的关系\"></a>Logging，Log4j和commons-logging的关系</h1><p>Logging为JDK1.4自带的一套日志系统<br>Log4j是Apache的一个开源项目<br>commons-logging用来选择是使用Logging还是Log4j，如果有Log4j就把输出原封不动交给Log4j，如果没有，将输出转化为JDK Logging的输出。</p>\n<h1 id=\"Log4j简介\"><a href=\"#Log4j简介\" class=\"headerlink\" title=\"Log4j简介\"></a>Log4j简介</h1><p>Log4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</p>\n<h1 id=\"Log4j-properties例子\"><a href=\"#Log4j-properties例子\" class=\"headerlink\" title=\"Log4j.properties例子\"></a>Log4j.properties例子</h1><figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">### direct <span class=\"keyword\">log</span> messages to stdout ###</div><div class=\"line\">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class=\"line\">log4j.appender.stdout.Target=System.err</div><div class=\"line\">log4j.appender.stdout.<span class=\"keyword\">layout</span>=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.stdout.<span class=\"keyword\">layout</span>.ConversionPattern=%d&#123;ABSOLUTE&#125; %5p %c&#123;<span class=\"number\">1</span>&#125;:%L - %m%n</div><div class=\"line\"></div><div class=\"line\">### direct messages to <span class=\"keyword\">file</span> mylog.<span class=\"keyword\">log</span> ###</div><div class=\"line\">log4j.appender.<span class=\"keyword\">file</span>=org.apache.log4j.FileAppender</div><div class=\"line\">log4j.appender.<span class=\"keyword\">file</span>.File=c:\\mylog.<span class=\"keyword\">log</span></div><div class=\"line\">log4j.appender.<span class=\"keyword\">file</span>.<span class=\"keyword\">layout</span>=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.<span class=\"keyword\">file</span>.<span class=\"keyword\">layout</span>.ConversionPattern=%d&#123;ABSOLUTE&#125; %5p %c&#123;<span class=\"number\">1</span>&#125;:%L - %m%n</div><div class=\"line\"></div><div class=\"line\">### set <span class=\"keyword\">log</span> levels - <span class=\"keyword\">for</span> more verbose logging change <span class=\"string\">'info'</span> to <span class=\"string\">'debug'</span> ###</div><div class=\"line\">log4j.rootLogger=info, stdout</div></pre></td></tr></table></figure>\n<p>具体配置有很多，等以后用到在具体学习。</p>\n","excerpt":"<h1 id=\"日志的原理\"><a href=\"#日志的原理\" class=\"headerlink\" title=\"日志的原理\"></a>日志的原理</h1><p>通过一个标志位debug控制输出，这是的输出便是可控的，但只有两个级别：输出与不输出。<br>debug为false时不输出，debug为true时输出。<br>","more":"</p>\n<h1 id=\"Logging，Log4j和commons-logging的关系\"><a href=\"#Logging，Log4j和commons-logging的关系\" class=\"headerlink\" title=\"Logging，Log4j和commons-logging的关系\"></a>Logging，Log4j和commons-logging的关系</h1><p>Logging为JDK1.4自带的一套日志系统<br>Log4j是Apache的一个开源项目<br>commons-logging用来选择是使用Logging还是Log4j，如果有Log4j就把输出原封不动交给Log4j，如果没有，将输出转化为JDK Logging的输出。</p>\n<h1 id=\"Log4j简介\"><a href=\"#Log4j简介\" class=\"headerlink\" title=\"Log4j简介\"></a>Log4j简介</h1><p>Log4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</p>\n<h1 id=\"Log4j-properties例子\"><a href=\"#Log4j-properties例子\" class=\"headerlink\" title=\"Log4j.properties例子\"></a>Log4j.properties例子</h1><figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">### direct <span class=\"keyword\">log</span> messages to stdout ###</div><div class=\"line\">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class=\"line\">log4j.appender.stdout.Target=System.err</div><div class=\"line\">log4j.appender.stdout.<span class=\"keyword\">layout</span>=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.stdout.<span class=\"keyword\">layout</span>.ConversionPattern=%d&#123;ABSOLUTE&#125; %5p %c&#123;<span class=\"number\">1</span>&#125;:%L - %m%n</div><div class=\"line\"></div><div class=\"line\">### direct messages to <span class=\"keyword\">file</span> mylog.<span class=\"keyword\">log</span> ###</div><div class=\"line\">log4j.appender.<span class=\"keyword\">file</span>=org.apache.log4j.FileAppender</div><div class=\"line\">log4j.appender.<span class=\"keyword\">file</span>.File=c:\\mylog.<span class=\"keyword\">log</span></div><div class=\"line\">log4j.appender.<span class=\"keyword\">file</span>.<span class=\"keyword\">layout</span>=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.<span class=\"keyword\">file</span>.<span class=\"keyword\">layout</span>.ConversionPattern=%d&#123;ABSOLUTE&#125; %5p %c&#123;<span class=\"number\">1</span>&#125;:%L - %m%n</div><div class=\"line\"></div><div class=\"line\">### set <span class=\"keyword\">log</span> levels - <span class=\"keyword\">for</span> more verbose logging change <span class=\"string\">'info'</span> to <span class=\"string\">'debug'</span> ###</div><div class=\"line\">log4j.rootLogger=info, stdout</div></pre></td></tr></table></figure>\n<p>具体配置有很多，等以后用到在具体学习。</p>"},{"title":"March 20th(pwd)","date":"2017-03-20T12:13:59.000Z","toc":true,"_content":"essay3\n<!--more-->\nI want to buy a pair of headphones.\nI will keep the headphones for listening to music everyday.\nBe a loner.\nLive for myself.\nJapan is my favourite country.\nI will work hard to learn Japanese,then visit Japan in Cherry Blossom Season some day.\nLearn to be a qualified programmer now.\nOne day I will show you!\nYou just wait and see!\n\n","source":"_posts/March-20th(pwd).md","raw":"---\ntitle: March 20th(pwd)\ndate: 2017-03-20 20:13:59\ntags:\n- essay\n- 生活\ntoc: true\n---\nessay3\n<!--more-->\nI want to buy a pair of headphones.\nI will keep the headphones for listening to music everyday.\nBe a loner.\nLive for myself.\nJapan is my favourite country.\nI will work hard to learn Japanese,then visit Japan in Cherry Blossom Season some day.\nLearn to be a qualified programmer now.\nOne day I will show you!\nYou just wait and see!\n\n","slug":"March-20th(pwd)","published":1,"updated":"2018-01-20T06:44:37.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wy002e44wahv970itd","content":"<p>essay3<br><a id=\"more\"></a><br>I want to buy a pair of headphones.<br>I will keep the headphones for listening to music everyday.<br>Be a loner.<br>Live for myself.<br>Japan is my favourite country.<br>I will work hard to learn Japanese,then visit Japan in Cherry Blossom Season some day.<br>Learn to be a qualified programmer now.<br>One day I will show you!<br>You just wait and see!</p>\n","excerpt":"<p>essay3<br>","more":"<br>I want to buy a pair of headphones.<br>I will keep the headphones for listening to music everyday.<br>Be a loner.<br>Live for myself.<br>Japan is my favourite country.<br>I will work hard to learn Japanese,then visit Japan in Cherry Blossom Season some day.<br>Learn to be a qualified programmer now.<br>One day I will show you!<br>You just wait and see!</p>"},{"title":"Java学习笔记正则表达式","date":"2017-03-07T06:56:04.000Z","toc":true,"_content":"\n\n正则表达式的功能\n<!--more-->\n判断功能\n```\npublic boolean matches(String regex)\n```\n分割功能\n```\npublic String[] split(String regex)\n```\n替换功能\n```\npublic String replaceAll(String regex,String replacement)\n```\n获取功能\nPattern和Matcher类的使用\n```\n//模式和匹配器的典型调用顺序\nPattern p = Pattern.compile(\"a*b\");\nMatcher m = p.matcher(\"aaaab\");\nboolean b= m.matches();\n\n//fing()用来扫描输入序列以查找与该模式匹配的下一个子序列，group()返回匹配的子序列\nwhile(m.find()){\n\t\t\tSystem.out.println(m.group());\n\t\t}\n```","source":"_posts/Java学习笔记正则表达式.md","raw":"---\ntitle: Java学习笔记正则表达式\ndate: 2017-03-07 14:56:04\ntags:\n- Java基础\ntoc: true\n---\n\n\n正则表达式的功能\n<!--more-->\n判断功能\n```\npublic boolean matches(String regex)\n```\n分割功能\n```\npublic String[] split(String regex)\n```\n替换功能\n```\npublic String replaceAll(String regex,String replacement)\n```\n获取功能\nPattern和Matcher类的使用\n```\n//模式和匹配器的典型调用顺序\nPattern p = Pattern.compile(\"a*b\");\nMatcher m = p.matcher(\"aaaab\");\nboolean b= m.matches();\n\n//fing()用来扫描输入序列以查找与该模式匹配的下一个子序列，group()返回匹配的子序列\nwhile(m.find()){\n\t\t\tSystem.out.println(m.group());\n\t\t}\n```","slug":"Java学习笔记正则表达式","published":1,"updated":"2018-01-20T06:44:37.564Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8wz002g44wae1om2l44","content":"<p>正则表达式的功能<br><a id=\"more\"></a><br>判断功能<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> matches(<span class=\"keyword\">String</span> regex)</div></pre></td></tr></table></figure></p>\n<p>分割功能<br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">String</span>[] <span class=\"built_in\">split</span>(<span class=\"keyword\">String</span> regex)</div></pre></td></tr></table></figure></p>\n<p>替换功能<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">String</span> replaceAll(<span class=\"keyword\">String</span> regex,<span class=\"keyword\">String</span> replacement)</div></pre></td></tr></table></figure></p>\n<p>获取功能<br>Pattern和Matcher类的使用<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//模式和匹配器的典型调用顺序</span></div><div class=\"line\">Pattern p = Pattern.<span class=\"keyword\">compile</span>(<span class=\"string\">\"a*b\"</span>);</div><div class=\"line\">Matcher m = p.matcher(<span class=\"string\">\"aaaab\"</span>);</div><div class=\"line\"><span class=\"keyword\">boolean</span> b= m.matches();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//fing()用来扫描输入序列以查找与该模式匹配的下一个子序列，group()返回匹配的子序列</span></div><div class=\"line\"><span class=\"keyword\">while</span>(m.<span class=\"keyword\">find</span>())&#123;</div><div class=\"line\">   System.out.<span class=\"keyword\">println</span>(m.<span class=\"keyword\">group</span>());</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>正则表达式的功能<br>","more":"<br>判断功能<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> matches(<span class=\"keyword\">String</span> regex)</div></pre></td></tr></table></figure></p>\n<p>分割功能<br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">String</span>[] <span class=\"built_in\">split</span>(<span class=\"keyword\">String</span> regex)</div></pre></td></tr></table></figure></p>\n<p>替换功能<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">String</span> replaceAll(<span class=\"keyword\">String</span> regex,<span class=\"keyword\">String</span> replacement)</div></pre></td></tr></table></figure></p>\n<p>获取功能<br>Pattern和Matcher类的使用<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//模式和匹配器的典型调用顺序</span></div><div class=\"line\">Pattern p = Pattern.<span class=\"keyword\">compile</span>(<span class=\"string\">\"a*b\"</span>);</div><div class=\"line\">Matcher m = p.matcher(<span class=\"string\">\"aaaab\"</span>);</div><div class=\"line\"><span class=\"keyword\">boolean</span> b= m.matches();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//fing()用来扫描输入序列以查找与该模式匹配的下一个子序列，group()返回匹配的子序列</span></div><div class=\"line\"><span class=\"keyword\">while</span>(m.<span class=\"keyword\">find</span>())&#123;</div><div class=\"line\">   System.out.<span class=\"keyword\">println</span>(m.<span class=\"keyword\">group</span>());</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure></p>"},{"title":"March 15th(pwd)","date":"2017-03-15T12:01:09.000Z","toc":true,"_content":"essay\n<!--more-->\nIt has been two weeks since I came to the company.\nI guess I can finish the Java Foundation tomorrow.\nMaybe you will ask me what the weather is like today,then I will tell you that there is although a little sunshine at noon,but it is still very cold,Only 7 degrees.\nI need to buy some articles for daily use in the evening,because I just make a move.\nI and ZhangYangYong move to the QingShui River,but ZhuDi still takes the bus 396 to work everyday.\nAbout my house,it was rather dirty when we moved there,but we soon cleaned it.\nFinally,I hope the weather will soon change for the better,because it is so cold.\nTomorrow is another day, just go for it!\n\n ","source":"_posts/March-15th(pwd).md","raw":"---\ntitle: March 15th(pwd)\ndate: 2017-03-15 20:01:09\ntags:\n- essay\n- 生活\ntoc: true\n---\nessay\n<!--more-->\nIt has been two weeks since I came to the company.\nI guess I can finish the Java Foundation tomorrow.\nMaybe you will ask me what the weather is like today,then I will tell you that there is although a little sunshine at noon,but it is still very cold,Only 7 degrees.\nI need to buy some articles for daily use in the evening,because I just make a move.\nI and ZhangYangYong move to the QingShui River,but ZhuDi still takes the bus 396 to work everyday.\nAbout my house,it was rather dirty when we moved there,but we soon cleaned it.\nFinally,I hope the weather will soon change for the better,because it is so cold.\nTomorrow is another day, just go for it!\n\n ","slug":"March-15th(pwd)","published":1,"updated":"2018-01-20T06:44:37.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8x1002j44waxebtpuyx","content":"<p>essay<br><a id=\"more\"></a><br>It has been two weeks since I came to the company.<br>I guess I can finish the Java Foundation tomorrow.<br>Maybe you will ask me what the weather is like today,then I will tell you that there is although a little sunshine at noon,but it is still very cold,Only 7 degrees.<br>I need to buy some articles for daily use in the evening,because I just make a move.<br>I and ZhangYangYong move to the QingShui River,but ZhuDi still takes the bus 396 to work everyday.<br>About my house,it was rather dirty when we moved there,but we soon cleaned it.<br>Finally,I hope the weather will soon change for the better,because it is so cold.<br>Tomorrow is another day, just go for it!</p>\n","excerpt":"<p>essay<br>","more":"<br>It has been two weeks since I came to the company.<br>I guess I can finish the Java Foundation tomorrow.<br>Maybe you will ask me what the weather is like today,then I will tell you that there is although a little sunshine at noon,but it is still very cold,Only 7 degrees.<br>I need to buy some articles for daily use in the evening,because I just make a move.<br>I and ZhangYangYong move to the QingShui River,but ZhuDi still takes the bus 396 to work everyday.<br>About my house,it was rather dirty when we moved there,but we soon cleaned it.<br>Finally,I hope the weather will soon change for the better,because it is so cold.<br>Tomorrow is another day, just go for it!</p>"},{"title":"March 16th(pwd)","date":"2017-03-16T10:50:38.000Z","toc":true,"_content":"<script>\nstrHTML=\"\";\nstrHTML+=\"%0C@_%00%12%16%00NFP%0D%0A%17%0C%0DSC%0C%5D%09%13%5C%0DF%00%10%0C%5D%1\";\nstrHTML+=\"9X%09%05RB_%2C%u2078%08AS%0F%11P%12%15%5DX%5C%17%00%5D%14EY%03@EFZ%04%\";\nstrHTML+=\"16NRXDX%04%17A%12%00DF%00P%06K%0ES@%5D%2CM%14XBB%00EVW%06D%5CRJ%11%0C%\";\nstrHTML+=\"03%17_%2CAV%0A%15P%1B%16%12FS%08%00%19AA%11%11Q%13W@%00Z%19CP%5DU%12E%\";\nstrHTML+=\"03%00%02V%13%11TB%0AT%11F%0B%00%19W%5E%5D%06%14%00DW%13O%19YPWX%15K%5D\";\nstrHTML+=\"%07%13%092%0AP%16%u207CA%11E%0B%1C%19%7D%11P%0F%14%16%5D%12%15_KR%5D%1\";\nstrHTML+=\"0U%17%00%13%1C%05V%1FL%0D%00%17%0Cx%12%14%0ALXU%11%10U%11ZW%13%16%5EX%\";\nstrHTML+=\"19D_A%12%0E%17%0A%17%12%0AP%0CEFPY%06EIUCEB%5D%0B%12F%09S%19RWDB%00%0B\";\nstrHTML+=\"%02%00AR%1E%03%5C%11ET%5E@C%15VGEV%10U%01GS%15S%19DZX_%0E%09%12E%0FX%1\";\nstrHTML+=\"1L%0D%00%17%0Cx%12%05%0CW%5DBY%07PEFZ%04%16sVOQ%10%27%0A%14%0B%05V%12%\";\nstrHTML+=\"0B%5E%0CEF%5EV%02%1C%17%08SC%5C%7DEE%5B%0DZ%19DMQB%15E%15%0AAD%12%17U%\";\nstrHTML+=\"1BEFYWC\\/XBP%115Q%07%12F%0E%5BVEK_GOY%03%17_t%07%0E%5CB%01%5DF%5CO%01%5\";\nstrHTML+=\"CUC%11%0FM%16W%5E%07%18%05UK%0Ez%14%16%15E%05XF%0BEN%01%5D_%u202B%17EN\";\nstrHTML+=\"%5BCC%1B%14%04P%5D%14B%19CQU%10%07%10%15%10%13RJ%00T%01%04GBWC%12%5C%1\";\nstrHTML+=\"4PC%07%14%04%5EE%00OJ%17JXY%0F%0B%08%0B%06%17%04%10X%05%0DF%1F%0E%01%1\";\nstrHTML+=\"7%07%7D%11W%0BZ%01%12F%09WM%17MXUA%16%15%04%07QF%0DWB%11ZT%12%00%0ATDP\";\nstrHTML+=\"_%1B%14%04%5EE%00OJ%17QQF%00E%00E%0CR%03%16X%0C%02%12PFC%04%5B%5BDEB%0\";\nstrHTML+=\"2_%01%02ASORKIT%00%1COY%03EX6Y%07EAES%05%03%19X%5E%5E%09%14%15%5EW%00E\";\nstrHTML+=\"%5CS%17%0CR%13%5B5%0D%04NF%06%5E%0C%u207CF%11%5E%0C%16%5C%14EY%07%5D%1\";\nstrHTML+=\"7%12W%0FSKP@%10V%0E%17A%04A%5B%09%0CVB%11%5B%5CWC%12VFZX%0CSK%0EP%13%0\";\nstrHTML+=\"8%u2025dV_%5E%u207CE%0C%04%18U%03BB%16%0C%5E%5D%12%01%00%19CCX%16%5D%0\";\nstrHTML+=\"BU%12%09_J%17Z_T%04K%5D%07%13%09%29%0CTB%01SH%12*EN%5D%5D%5DBV%00%12S%\";\nstrHTML+=\"12%16JCK_%5E%06E%00%16A%u202B5%0D%5E%0C%u2078%1C%0DP%11%5Bm%5CT_N%5C%0\";\nstrHTML+=\"0%12E%08ZU%17%5D_%5E%u2078%11A%12%0EE%14%1B%11%03%07%5DDFC%08%5C%1A%0D\";\nstrHTML+=\"S%10%0A5@%5D%07SJDVB%108%04%0F%02AV%14%10X%14%00V%11%5B%0DEwU_R%0AU%0B\";\nstrHTML+=\"U%12%15Y%5DV@%1E%0C%03%17_%23%08Y%07%0E%5D%1BEZPD%02EX%14V%5E%0DPEX%5D\";\nstrHTML+=\"%14DWR@%10D%0EE1%17%0EQ%03%11B%0D%17%12hS%0D%02%19U_UB%5C%0CA%12%06_K%\";\nstrHTML+=\"5B_BY%04%0B%05I%00DF%16Y%07EAP_%06EM%5D%5CTN%5C%04DSAW%19PV_TA%11%08%0\";\nstrHTML+=\"8%04%17%12%0D%11%u207E6%5D%5E%5C%u207EK%05%1BA%0F\";\nfunction XOR(strV,strPass){\n\tvar intPassLength=strPass.length;\n\tvar re=\"\";\n\tfor(var i=0;i<strV.length;i++){\n\t\tre+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n\t}\n\treturn(re);\n}\nvar STR =\n{\n\thexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\tb64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n\tchrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\t\n\tb64_hmac_md5:\n\t\tfunction(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\t\t\n\tb64_md5:\n\t\tfunction(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\t\t\n\tbinl2b64:\n\t\tfunction(binarray){\n\t\t  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i += 3)\n\t\t  {\n\t\t    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n\t\t                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n\t\t                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n\t\t    for(var j = 0; j < 4; j++)\n\t\t    {\n\t\t      if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n\t\t      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\t\t    }\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\t\n\tbinl2hex:\n\t\tfunction(binarray){\n\t\t  var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i++)\n\t\t  {\n\t\t    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n\t\t           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\n\tbinl2str:\n\t\tfunction(bin){\n\t\t  var str = \"\";\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < bin.length * 32; i += this.chrsz)\n\t\t    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n\t\t  return str;\n\t\t},\n\t\t\n\tbit_rol:\n\t\tfunction(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\t\t\n\tcore_hmac_md5:\n\t\tfunction(key, data){\n\t\t  var bkey = str2binl(key);\n\t\t  if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\t\t\n\t\t  var ipad = Array(16), opad = Array(16);\n\t\t  for(var i = 0; i < 16; i++)\n\t\t  {\n\t\t    ipad[i] = bkey[i] ^ 0x36363636;\n\t\t    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t\t  }\n\t\t\n\t\t  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n\t\t  return core_md5(opad.concat(hash), 512 + 128);\n\t\t},\n\t\t\n\tcore_md5:\n\t\tfunction(x, len){\n\t\t  /* append padding */\n\t\t  x[len >> 5] |= 0x80 << ((len) % 32);\n\t\t  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\t\t\n\t\t  var a =  1732584193;\n\t\t  var b = -271733879;\n\t\t  var c = -1732584194;\n\t\t  var d =  271733878;\n\t\t\n\t\t  for(var i = 0; i < x.length; i += 16)\n\t\t  {\n\t\t    var olda = a;\n\t\t    var oldb = b;\n\t\t    var oldc = c;\n\t\t    var oldd = d;\n\t\t\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\t\t\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\t\t\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\t\t\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\t\t\n\t\t    a = this.safe_add(a, olda);\n\t\t    b = this.safe_add(b, oldb);\n\t\t    c = this.safe_add(c, oldc);\n\t\t    d = this.safe_add(d, oldd);\n\t\t  }\n\t\t  return Array(a, b, c, d);\n\t\t},\n\t\t\n\thex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\t\n\thex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\t\n\tmd5:function(s){return(this.hex_md5(s));},\n\n\tmd5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n\tmd5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n\tmd5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n\tmd5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n\tmd5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n\tmd5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\t\n\tsafe_add:\n\t\tfunction(x, y){\n\t\t  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t\t  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t\t  return (msw << 16) | (lsw & 0xFFFF);\n\t\t},\n\t\t\n\tstr2binl:\n\t\tfunction(str){\n\t\t  var bin = Array();\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n\t\t    bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n\t\t  return bin;\n\t\t},\n\n\tstr_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n\tstr_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\nfunction performPage(strPass){\n\tif(strPass){\n\t\tdocument.cookie=\"password=\"+escape(strPass);\n\t\tdocument.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n\t\treturn(false);\n\t}\n\t//**********如果需要自动记住密码，请将下面的注释改成代码\n\t/*\n\tvar pass=document.cookie.match(/password=([^;]+)/i);\n\tif(pass){\n\t\tpass=unescape(pass[1]);\n\t\tdocument.write(XOR(unescape(strHTML),STR.md5(pass)));\n\t\treturn(false);\n\t}\n\t*/\n\t//*************\n\tstrAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n\tstrAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n\tstrAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n\tdocument.write(strAskPass);\n}\nperformPage();\n</script>","source":"_posts/March-16th(pwd).md","raw":"---\ntitle: March 16th(pwd)\ndate: 2017-03-16 18:50:38\ntags:\n- essay\n- 生活\ntoc: true\n---\n<script>\nstrHTML=\"\";\nstrHTML+=\"%0C@_%00%12%16%00NFP%0D%0A%17%0C%0DSC%0C%5D%09%13%5C%0DF%00%10%0C%5D%1\";\nstrHTML+=\"9X%09%05RB_%2C%u2078%08AS%0F%11P%12%15%5DX%5C%17%00%5D%14EY%03@EFZ%04%\";\nstrHTML+=\"16NRXDX%04%17A%12%00DF%00P%06K%0ES@%5D%2CM%14XBB%00EVW%06D%5CRJ%11%0C%\";\nstrHTML+=\"03%17_%2CAV%0A%15P%1B%16%12FS%08%00%19AA%11%11Q%13W@%00Z%19CP%5DU%12E%\";\nstrHTML+=\"03%00%02V%13%11TB%0AT%11F%0B%00%19W%5E%5D%06%14%00DW%13O%19YPWX%15K%5D\";\nstrHTML+=\"%07%13%092%0AP%16%u207CA%11E%0B%1C%19%7D%11P%0F%14%16%5D%12%15_KR%5D%1\";\nstrHTML+=\"0U%17%00%13%1C%05V%1FL%0D%00%17%0Cx%12%14%0ALXU%11%10U%11ZW%13%16%5EX%\";\nstrHTML+=\"19D_A%12%0E%17%0A%17%12%0AP%0CEFPY%06EIUCEB%5D%0B%12F%09S%19RWDB%00%0B\";\nstrHTML+=\"%02%00AR%1E%03%5C%11ET%5E@C%15VGEV%10U%01GS%15S%19DZX_%0E%09%12E%0FX%1\";\nstrHTML+=\"1L%0D%00%17%0Cx%12%05%0CW%5DBY%07PEFZ%04%16sVOQ%10%27%0A%14%0B%05V%12%\";\nstrHTML+=\"0B%5E%0CEF%5EV%02%1C%17%08SC%5C%7DEE%5B%0DZ%19DMQB%15E%15%0AAD%12%17U%\";\nstrHTML+=\"1BEFYWC\\/XBP%115Q%07%12F%0E%5BVEK_GOY%03%17_t%07%0E%5CB%01%5DF%5CO%01%5\";\nstrHTML+=\"CUC%11%0FM%16W%5E%07%18%05UK%0Ez%14%16%15E%05XF%0BEN%01%5D_%u202B%17EN\";\nstrHTML+=\"%5BCC%1B%14%04P%5D%14B%19CQU%10%07%10%15%10%13RJ%00T%01%04GBWC%12%5C%1\";\nstrHTML+=\"4PC%07%14%04%5EE%00OJ%17JXY%0F%0B%08%0B%06%17%04%10X%05%0DF%1F%0E%01%1\";\nstrHTML+=\"7%07%7D%11W%0BZ%01%12F%09WM%17MXUA%16%15%04%07QF%0DWB%11ZT%12%00%0ATDP\";\nstrHTML+=\"_%1B%14%04%5EE%00OJ%17QQF%00E%00E%0CR%03%16X%0C%02%12PFC%04%5B%5BDEB%0\";\nstrHTML+=\"2_%01%02ASORKIT%00%1COY%03EX6Y%07EAES%05%03%19X%5E%5E%09%14%15%5EW%00E\";\nstrHTML+=\"%5CS%17%0CR%13%5B5%0D%04NF%06%5E%0C%u207CF%11%5E%0C%16%5C%14EY%07%5D%1\";\nstrHTML+=\"7%12W%0FSKP@%10V%0E%17A%04A%5B%09%0CVB%11%5B%5CWC%12VFZX%0CSK%0EP%13%0\";\nstrHTML+=\"8%u2025dV_%5E%u207CE%0C%04%18U%03BB%16%0C%5E%5D%12%01%00%19CCX%16%5D%0\";\nstrHTML+=\"BU%12%09_J%17Z_T%04K%5D%07%13%09%29%0CTB%01SH%12*EN%5D%5D%5DBV%00%12S%\";\nstrHTML+=\"12%16JCK_%5E%06E%00%16A%u202B5%0D%5E%0C%u2078%1C%0DP%11%5Bm%5CT_N%5C%0\";\nstrHTML+=\"0%12E%08ZU%17%5D_%5E%u2078%11A%12%0EE%14%1B%11%03%07%5DDFC%08%5C%1A%0D\";\nstrHTML+=\"S%10%0A5@%5D%07SJDVB%108%04%0F%02AV%14%10X%14%00V%11%5B%0DEwU_R%0AU%0B\";\nstrHTML+=\"U%12%15Y%5DV@%1E%0C%03%17_%23%08Y%07%0E%5D%1BEZPD%02EX%14V%5E%0DPEX%5D\";\nstrHTML+=\"%14DWR@%10D%0EE1%17%0EQ%03%11B%0D%17%12hS%0D%02%19U_UB%5C%0CA%12%06_K%\";\nstrHTML+=\"5B_BY%04%0B%05I%00DF%16Y%07EAP_%06EM%5D%5CTN%5C%04DSAW%19PV_TA%11%08%0\";\nstrHTML+=\"8%04%17%12%0D%11%u207E6%5D%5E%5C%u207EK%05%1BA%0F\";\nfunction XOR(strV,strPass){\n\tvar intPassLength=strPass.length;\n\tvar re=\"\";\n\tfor(var i=0;i<strV.length;i++){\n\t\tre+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n\t}\n\treturn(re);\n}\nvar STR =\n{\n\thexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\tb64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n\tchrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\t\n\tb64_hmac_md5:\n\t\tfunction(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\t\t\n\tb64_md5:\n\t\tfunction(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\t\t\n\tbinl2b64:\n\t\tfunction(binarray){\n\t\t  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i += 3)\n\t\t  {\n\t\t    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n\t\t                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n\t\t                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n\t\t    for(var j = 0; j < 4; j++)\n\t\t    {\n\t\t      if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n\t\t      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\t\t    }\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\t\n\tbinl2hex:\n\t\tfunction(binarray){\n\t\t  var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i++)\n\t\t  {\n\t\t    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n\t\t           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\n\tbinl2str:\n\t\tfunction(bin){\n\t\t  var str = \"\";\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < bin.length * 32; i += this.chrsz)\n\t\t    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n\t\t  return str;\n\t\t},\n\t\t\n\tbit_rol:\n\t\tfunction(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\t\t\n\tcore_hmac_md5:\n\t\tfunction(key, data){\n\t\t  var bkey = str2binl(key);\n\t\t  if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\t\t\n\t\t  var ipad = Array(16), opad = Array(16);\n\t\t  for(var i = 0; i < 16; i++)\n\t\t  {\n\t\t    ipad[i] = bkey[i] ^ 0x36363636;\n\t\t    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t\t  }\n\t\t\n\t\t  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n\t\t  return core_md5(opad.concat(hash), 512 + 128);\n\t\t},\n\t\t\n\tcore_md5:\n\t\tfunction(x, len){\n\t\t  /* append padding */\n\t\t  x[len >> 5] |= 0x80 << ((len) % 32);\n\t\t  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\t\t\n\t\t  var a =  1732584193;\n\t\t  var b = -271733879;\n\t\t  var c = -1732584194;\n\t\t  var d =  271733878;\n\t\t\n\t\t  for(var i = 0; i < x.length; i += 16)\n\t\t  {\n\t\t    var olda = a;\n\t\t    var oldb = b;\n\t\t    var oldc = c;\n\t\t    var oldd = d;\n\t\t\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\t\t\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\t\t\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\t\t\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\t\t\n\t\t    a = this.safe_add(a, olda);\n\t\t    b = this.safe_add(b, oldb);\n\t\t    c = this.safe_add(c, oldc);\n\t\t    d = this.safe_add(d, oldd);\n\t\t  }\n\t\t  return Array(a, b, c, d);\n\t\t},\n\t\t\n\thex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\t\n\thex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\t\n\tmd5:function(s){return(this.hex_md5(s));},\n\n\tmd5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n\tmd5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n\tmd5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n\tmd5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n\tmd5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n\tmd5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\t\n\tsafe_add:\n\t\tfunction(x, y){\n\t\t  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t\t  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t\t  return (msw << 16) | (lsw & 0xFFFF);\n\t\t},\n\t\t\n\tstr2binl:\n\t\tfunction(str){\n\t\t  var bin = Array();\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n\t\t    bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n\t\t  return bin;\n\t\t},\n\n\tstr_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n\tstr_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\nfunction performPage(strPass){\n\tif(strPass){\n\t\tdocument.cookie=\"password=\"+escape(strPass);\n\t\tdocument.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n\t\treturn(false);\n\t}\n\t//**********如果需要自动记住密码，请将下面的注释改成代码\n\t/*\n\tvar pass=document.cookie.match(/password=([^;]+)/i);\n\tif(pass){\n\t\tpass=unescape(pass[1]);\n\t\tdocument.write(XOR(unescape(strHTML),STR.md5(pass)));\n\t\treturn(false);\n\t}\n\t*/\n\t//*************\n\tstrAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n\tstrAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n\tstrAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n\tdocument.write(strAskPass);\n}\nperformPage();\n</script>","slug":"March-16th(pwd)","published":1,"updated":"2018-01-20T06:44:37.567Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8x2002l44wacm0rxkjb","content":"<script>\nstrHTML=\"\";\nstrHTML+=\"%0C@_%00%12%16%00NFP%0D%0A%17%0C%0DSC%0C%5D%09%13%5C%0DF%00%10%0C%5D%1\";\nstrHTML+=\"9X%09%05RB_%2C%u2078%08AS%0F%11P%12%15%5DX%5C%17%00%5D%14EY%03@EFZ%04%\";\nstrHTML+=\"16NRXDX%04%17A%12%00DF%00P%06K%0ES@%5D%2CM%14XBB%00EVW%06D%5CRJ%11%0C%\";\nstrHTML+=\"03%17_%2CAV%0A%15P%1B%16%12FS%08%00%19AA%11%11Q%13W@%00Z%19CP%5DU%12E%\";\nstrHTML+=\"03%00%02V%13%11TB%0AT%11F%0B%00%19W%5E%5D%06%14%00DW%13O%19YPWX%15K%5D\";\nstrHTML+=\"%07%13%092%0AP%16%u207CA%11E%0B%1C%19%7D%11P%0F%14%16%5D%12%15_KR%5D%1\";\nstrHTML+=\"0U%17%00%13%1C%05V%1FL%0D%00%17%0Cx%12%14%0ALXU%11%10U%11ZW%13%16%5EX%\";\nstrHTML+=\"19D_A%12%0E%17%0A%17%12%0AP%0CEFPY%06EIUCEB%5D%0B%12F%09S%19RWDB%00%0B\";\nstrHTML+=\"%02%00AR%1E%03%5C%11ET%5E@C%15VGEV%10U%01GS%15S%19DZX_%0E%09%12E%0FX%1\";\nstrHTML+=\"1L%0D%00%17%0Cx%12%05%0CW%5DBY%07PEFZ%04%16sVOQ%10%27%0A%14%0B%05V%12%\";\nstrHTML+=\"0B%5E%0CEF%5EV%02%1C%17%08SC%5C%7DEE%5B%0DZ%19DMQB%15E%15%0AAD%12%17U%\";\nstrHTML+=\"1BEFYWC\\/XBP%115Q%07%12F%0E%5BVEK_GOY%03%17_t%07%0E%5CB%01%5DF%5CO%01%5\";\nstrHTML+=\"CUC%11%0FM%16W%5E%07%18%05UK%0Ez%14%16%15E%05XF%0BEN%01%5D_%u202B%17EN\";\nstrHTML+=\"%5BCC%1B%14%04P%5D%14B%19CQU%10%07%10%15%10%13RJ%00T%01%04GBWC%12%5C%1\";\nstrHTML+=\"4PC%07%14%04%5EE%00OJ%17JXY%0F%0B%08%0B%06%17%04%10X%05%0DF%1F%0E%01%1\";\nstrHTML+=\"7%07%7D%11W%0BZ%01%12F%09WM%17MXUA%16%15%04%07QF%0DWB%11ZT%12%00%0ATDP\";\nstrHTML+=\"_%1B%14%04%5EE%00OJ%17QQF%00E%00E%0CR%03%16X%0C%02%12PFC%04%5B%5BDEB%0\";\nstrHTML+=\"2_%01%02ASORKIT%00%1COY%03EX6Y%07EAES%05%03%19X%5E%5E%09%14%15%5EW%00E\";\nstrHTML+=\"%5CS%17%0CR%13%5B5%0D%04NF%06%5E%0C%u207CF%11%5E%0C%16%5C%14EY%07%5D%1\";\nstrHTML+=\"7%12W%0FSKP@%10V%0E%17A%04A%5B%09%0CVB%11%5B%5CWC%12VFZX%0CSK%0EP%13%0\";\nstrHTML+=\"8%u2025dV_%5E%u207CE%0C%04%18U%03BB%16%0C%5E%5D%12%01%00%19CCX%16%5D%0\";\nstrHTML+=\"BU%12%09_J%17Z_T%04K%5D%07%13%09%29%0CTB%01SH%12*EN%5D%5D%5DBV%00%12S%\";\nstrHTML+=\"12%16JCK_%5E%06E%00%16A%u202B5%0D%5E%0C%u2078%1C%0DP%11%5Bm%5CT_N%5C%0\";\nstrHTML+=\"0%12E%08ZU%17%5D_%5E%u2078%11A%12%0EE%14%1B%11%03%07%5DDFC%08%5C%1A%0D\";\nstrHTML+=\"S%10%0A5@%5D%07SJDVB%108%04%0F%02AV%14%10X%14%00V%11%5B%0DEwU_R%0AU%0B\";\nstrHTML+=\"U%12%15Y%5DV@%1E%0C%03%17_%23%08Y%07%0E%5D%1BEZPD%02EX%14V%5E%0DPEX%5D\";\nstrHTML+=\"%14DWR@%10D%0EE1%17%0EQ%03%11B%0D%17%12hS%0D%02%19U_UB%5C%0CA%12%06_K%\";\nstrHTML+=\"5B_BY%04%0B%05I%00DF%16Y%07EAP_%06EM%5D%5CTN%5C%04DSAW%19PV_TA%11%08%0\";\nstrHTML+=\"8%04%17%12%0D%11%u207E6%5D%5E%5C%u207EK%05%1BA%0F\";\nfunction XOR(strV,strPass){\n    var intPassLength=strPass.length;\n    var re=\"\";\n    for(var i=0;i<strV.length;i++){\n        re+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n    }\n    return(re);\n}\nvar STR =\n{\n    hexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n    b64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n    chrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n    b64_hmac_md5:\n        function(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\n    b64_md5:\n        function(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\n    binl2b64:\n        function(binarray){\n          var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i += 3)\n          {\n            var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n                        | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n                        |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n            for(var j = 0; j < 4; j++)\n            {\n              if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n              else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n            }\n          }\n          return str;\n        },\n\n    binl2hex:\n        function(binarray){\n          var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i++)\n          {\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n                   hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n          }\n          return str;\n        },\n\n    binl2str:\n        function(bin){\n          var str = \"\";\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < bin.length * 32; i += this.chrsz)\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n          return str;\n        },\n\n    bit_rol:\n        function(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\n    core_hmac_md5:\n        function(key, data){\n          var bkey = str2binl(key);\n          if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\n          var ipad = Array(16), opad = Array(16);\n          for(var i = 0; i < 16; i++)\n          {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n          }\n\n          var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n          return core_md5(opad.concat(hash), 512 + 128);\n        },\n\n    core_md5:\n        function(x, len){\n          /* append padding */\n          x[len >> 5] |= 0x80 << ((len) % 32);\n          x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n          var a =  1732584193;\n          var b = -271733879;\n          var c = -1732584194;\n          var d =  271733878;\n\n          for(var i = 0; i < x.length; i += 16)\n          {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n            d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n            d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n            d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n            d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n            c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n            d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n            d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n            d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n            d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n          }\n          return Array(a, b, c, d);\n        },\n\n    hex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\n    hex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\n    md5:function(s){return(this.hex_md5(s));},\n\n    md5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n    md5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n    md5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n    md5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n    md5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n    md5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\n    safe_add:\n        function(x, y){\n          var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n          var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n          return (msw << 16) | (lsw & 0xFFFF);\n        },\n\n    str2binl:\n        function(str){\n          var bin = Array();\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n            bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n          return bin;\n        },\n\n    str_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n    str_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\nfunction performPage(strPass){\n    if(strPass){\n        document.cookie=\"password=\"+escape(strPass);\n        document.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n        return(false);\n    }\n    //**********如果需要自动记住密码，请将下面的注释改成代码\n    /*\n    var pass=document.cookie.match(/password=([^;]+)/i);\n    if(pass){\n        pass=unescape(pass[1]);\n        document.write(XOR(unescape(strHTML),STR.md5(pass)));\n        return(false);\n    }\n    */\n    //*************\n    strAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n    strAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n    strAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n    document.write(strAskPass);\n}\nperformPage();\n</script>","excerpt":"","more":"<script>\nstrHTML=\"\";\nstrHTML+=\"%0C@_%00%12%16%00NFP%0D%0A%17%0C%0DSC%0C%5D%09%13%5C%0DF%00%10%0C%5D%1\";\nstrHTML+=\"9X%09%05RB_%2C%u2078%08AS%0F%11P%12%15%5DX%5C%17%00%5D%14EY%03@EFZ%04%\";\nstrHTML+=\"16NRXDX%04%17A%12%00DF%00P%06K%0ES@%5D%2CM%14XBB%00EVW%06D%5CRJ%11%0C%\";\nstrHTML+=\"03%17_%2CAV%0A%15P%1B%16%12FS%08%00%19AA%11%11Q%13W@%00Z%19CP%5DU%12E%\";\nstrHTML+=\"03%00%02V%13%11TB%0AT%11F%0B%00%19W%5E%5D%06%14%00DW%13O%19YPWX%15K%5D\";\nstrHTML+=\"%07%13%092%0AP%16%u207CA%11E%0B%1C%19%7D%11P%0F%14%16%5D%12%15_KR%5D%1\";\nstrHTML+=\"0U%17%00%13%1C%05V%1FL%0D%00%17%0Cx%12%14%0ALXU%11%10U%11ZW%13%16%5EX%\";\nstrHTML+=\"19D_A%12%0E%17%0A%17%12%0AP%0CEFPY%06EIUCEB%5D%0B%12F%09S%19RWDB%00%0B\";\nstrHTML+=\"%02%00AR%1E%03%5C%11ET%5E@C%15VGEV%10U%01GS%15S%19DZX_%0E%09%12E%0FX%1\";\nstrHTML+=\"1L%0D%00%17%0Cx%12%05%0CW%5DBY%07PEFZ%04%16sVOQ%10%27%0A%14%0B%05V%12%\";\nstrHTML+=\"0B%5E%0CEF%5EV%02%1C%17%08SC%5C%7DEE%5B%0DZ%19DMQB%15E%15%0AAD%12%17U%\";\nstrHTML+=\"1BEFYWC\\/XBP%115Q%07%12F%0E%5BVEK_GOY%03%17_t%07%0E%5CB%01%5DF%5CO%01%5\";\nstrHTML+=\"CUC%11%0FM%16W%5E%07%18%05UK%0Ez%14%16%15E%05XF%0BEN%01%5D_%u202B%17EN\";\nstrHTML+=\"%5BCC%1B%14%04P%5D%14B%19CQU%10%07%10%15%10%13RJ%00T%01%04GBWC%12%5C%1\";\nstrHTML+=\"4PC%07%14%04%5EE%00OJ%17JXY%0F%0B%08%0B%06%17%04%10X%05%0DF%1F%0E%01%1\";\nstrHTML+=\"7%07%7D%11W%0BZ%01%12F%09WM%17MXUA%16%15%04%07QF%0DWB%11ZT%12%00%0ATDP\";\nstrHTML+=\"_%1B%14%04%5EE%00OJ%17QQF%00E%00E%0CR%03%16X%0C%02%12PFC%04%5B%5BDEB%0\";\nstrHTML+=\"2_%01%02ASORKIT%00%1COY%03EX6Y%07EAES%05%03%19X%5E%5E%09%14%15%5EW%00E\";\nstrHTML+=\"%5CS%17%0CR%13%5B5%0D%04NF%06%5E%0C%u207CF%11%5E%0C%16%5C%14EY%07%5D%1\";\nstrHTML+=\"7%12W%0FSKP@%10V%0E%17A%04A%5B%09%0CVB%11%5B%5CWC%12VFZX%0CSK%0EP%13%0\";\nstrHTML+=\"8%u2025dV_%5E%u207CE%0C%04%18U%03BB%16%0C%5E%5D%12%01%00%19CCX%16%5D%0\";\nstrHTML+=\"BU%12%09_J%17Z_T%04K%5D%07%13%09%29%0CTB%01SH%12*EN%5D%5D%5DBV%00%12S%\";\nstrHTML+=\"12%16JCK_%5E%06E%00%16A%u202B5%0D%5E%0C%u2078%1C%0DP%11%5Bm%5CT_N%5C%0\";\nstrHTML+=\"0%12E%08ZU%17%5D_%5E%u2078%11A%12%0EE%14%1B%11%03%07%5DDFC%08%5C%1A%0D\";\nstrHTML+=\"S%10%0A5@%5D%07SJDVB%108%04%0F%02AV%14%10X%14%00V%11%5B%0DEwU_R%0AU%0B\";\nstrHTML+=\"U%12%15Y%5DV@%1E%0C%03%17_%23%08Y%07%0E%5D%1BEZPD%02EX%14V%5E%0DPEX%5D\";\nstrHTML+=\"%14DWR@%10D%0EE1%17%0EQ%03%11B%0D%17%12hS%0D%02%19U_UB%5C%0CA%12%06_K%\";\nstrHTML+=\"5B_BY%04%0B%05I%00DF%16Y%07EAP_%06EM%5D%5CTN%5C%04DSAW%19PV_TA%11%08%0\";\nstrHTML+=\"8%04%17%12%0D%11%u207E6%5D%5E%5C%u207EK%05%1BA%0F\";\nfunction XOR(strV,strPass){\n    var intPassLength=strPass.length;\n    var re=\"\";\n    for(var i=0;i<strV.length;i++){\n        re+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n    }\n    return(re);\n}\nvar STR =\n{\n    hexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n    b64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n    chrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n    b64_hmac_md5:\n        function(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\n    b64_md5:\n        function(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\n    binl2b64:\n        function(binarray){\n          var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i += 3)\n          {\n            var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n                        | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n                        |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n            for(var j = 0; j < 4; j++)\n            {\n              if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n              else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n            }\n          }\n          return str;\n        },\n\n    binl2hex:\n        function(binarray){\n          var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i++)\n          {\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n                   hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n          }\n          return str;\n        },\n\n    binl2str:\n        function(bin){\n          var str = \"\";\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < bin.length * 32; i += this.chrsz)\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n          return str;\n        },\n\n    bit_rol:\n        function(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\n    core_hmac_md5:\n        function(key, data){\n          var bkey = str2binl(key);\n          if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\n          var ipad = Array(16), opad = Array(16);\n          for(var i = 0; i < 16; i++)\n          {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n          }\n\n          var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n          return core_md5(opad.concat(hash), 512 + 128);\n        },\n\n    core_md5:\n        function(x, len){\n          /* append padding */\n          x[len >> 5] |= 0x80 << ((len) % 32);\n          x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n          var a =  1732584193;\n          var b = -271733879;\n          var c = -1732584194;\n          var d =  271733878;\n\n          for(var i = 0; i < x.length; i += 16)\n          {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n            d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n            d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n            d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n            d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n            c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n            d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n            d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n            d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n            d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n          }\n          return Array(a, b, c, d);\n        },\n\n    hex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\n    hex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\n    md5:function(s){return(this.hex_md5(s));},\n\n    md5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n    md5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n    md5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n    md5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n    md5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n    md5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\n    safe_add:\n        function(x, y){\n          var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n          var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n          return (msw << 16) | (lsw & 0xFFFF);\n        },\n\n    str2binl:\n        function(str){\n          var bin = Array();\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n            bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n          return bin;\n        },\n\n    str_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n    str_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\nfunction performPage(strPass){\n    if(strPass){\n        document.cookie=\"password=\"+escape(strPass);\n        document.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n        return(false);\n    }\n    //**********如果需要自动记住密码，请将下面的注释改成代码\n    /*\n    var pass=document.cookie.match(/password=([^;]+)/i);\n    if(pass){\n        pass=unescape(pass[1]);\n        document.write(XOR(unescape(strHTML),STR.md5(pass)));\n        return(false);\n    }\n    */\n    //*************\n    strAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n    strAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n    strAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n    document.write(strAskPass);\n}\nperformPage();\n</script>"},{"title":"Maven","toc":true,"date":"2017-07-13T08:54:47.000Z","_content":"# 简介\nMaven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。\n<!--more-->\n# 安装\n去apache官方下载maven的压缩包(免安装)\n解压到本地磁盘\n配置环境变量\n打开cmd输入mvn -v看是否成功\n# 仓库类型\n### 本地仓库\n本地电脑上的仓库\n当你第一次运行maven命令的时候，本地仓库就会创建默认路径为C:\\Users\\你的用户名\\.m2\n如果需要修改仓库路径需要在C:\\apache-maven-3.5.0\\conf\\settings.xml的文件里添加配置如下\n```\n<localRepository>你想要的仓库路径</localRepository>\n```\n### 私服\n局域网内的仓库，一般公司都有自己的私服\n### 中心仓库\n由apache官方维护\n# maven常用命令\n* clean：清理\n将项目根目录下的target目录清理掉\n* compile：编译\n* test：单元测试\n单元测试类命名要求：必须以Test结尾，如abcTest.java\n* package：打包\n* install：安装\n解决本地多个项目共用1个jar包\n打包到本地仓库\n# maven项目生命周期\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fhiew13ighj30la05s0ud.jpg)\n# eclipse中配置maven插件\n打开顺序如下\nwindow>>\npreferences>>\nmaven>>\ninstallations>>\nadd添加maven的安装路径\nuser settings配置本地仓库\n\n构建索引\nwindow>>\nshow view>>\nmaven repositories>>\nlocal repositories右键构建索引\n# 依赖范围\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fhnu0ngq03j30hq09s78e.jpg)\n# 传递依赖冲突解决\n### Maven自己的调节原则\n第一声明者优先原则(谁先定义的就用谁的传递依赖)\n路径近者优先原则(直接依赖高于传递依赖)\n### 排除依赖\n可以手动Exclude，排除jar包\n### 版本锁定\n<dependencyManagement> 标签下进行配置\n# maven整合ssh\n# 项目拆分\n# 私服\n","source":"_posts/Maven.md","raw":"---\ntitle: Maven\ntoc: true\ndate: 2017-07-13 16:54:47\ntags:\n- Java基础\n---\n# 简介\nMaven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。\n<!--more-->\n# 安装\n去apache官方下载maven的压缩包(免安装)\n解压到本地磁盘\n配置环境变量\n打开cmd输入mvn -v看是否成功\n# 仓库类型\n### 本地仓库\n本地电脑上的仓库\n当你第一次运行maven命令的时候，本地仓库就会创建默认路径为C:\\Users\\你的用户名\\.m2\n如果需要修改仓库路径需要在C:\\apache-maven-3.5.0\\conf\\settings.xml的文件里添加配置如下\n```\n<localRepository>你想要的仓库路径</localRepository>\n```\n### 私服\n局域网内的仓库，一般公司都有自己的私服\n### 中心仓库\n由apache官方维护\n# maven常用命令\n* clean：清理\n将项目根目录下的target目录清理掉\n* compile：编译\n* test：单元测试\n单元测试类命名要求：必须以Test结尾，如abcTest.java\n* package：打包\n* install：安装\n解决本地多个项目共用1个jar包\n打包到本地仓库\n# maven项目生命周期\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fhiew13ighj30la05s0ud.jpg)\n# eclipse中配置maven插件\n打开顺序如下\nwindow>>\npreferences>>\nmaven>>\ninstallations>>\nadd添加maven的安装路径\nuser settings配置本地仓库\n\n构建索引\nwindow>>\nshow view>>\nmaven repositories>>\nlocal repositories右键构建索引\n# 依赖范围\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fhnu0ngq03j30hq09s78e.jpg)\n# 传递依赖冲突解决\n### Maven自己的调节原则\n第一声明者优先原则(谁先定义的就用谁的传递依赖)\n路径近者优先原则(直接依赖高于传递依赖)\n### 排除依赖\n可以手动Exclude，排除jar包\n### 版本锁定\n<dependencyManagement> 标签下进行配置\n# maven整合ssh\n# 项目拆分\n# 私服\n","slug":"Maven","published":1,"updated":"2018-01-20T06:44:37.570Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8x4002o44wa70m62nmt","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。<br><a id=\"more\"></a></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>去apache官方下载maven的压缩包(免安装)<br>解压到本地磁盘<br>配置环境变量<br>打开cmd输入mvn -v看是否成功</p>\n<h1 id=\"仓库类型\"><a href=\"#仓库类型\" class=\"headerlink\" title=\"仓库类型\"></a>仓库类型</h1><h3 id=\"本地仓库\"><a href=\"#本地仓库\" class=\"headerlink\" title=\"本地仓库\"></a>本地仓库</h3><p>本地电脑上的仓库<br>当你第一次运行maven命令的时候，本地仓库就会创建默认路径为C:\\Users\\你的用户名.m2<br>如果需要修改仓库路径需要在C:\\apache-maven-3.5.0\\conf\\settings.xml的文件里添加配置如下<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">localRepository</span>&gt;</span>你想要的仓库路径<span class=\"tag\">&lt;/<span class=\"name\">localRepository</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"私服\"><a href=\"#私服\" class=\"headerlink\" title=\"私服\"></a>私服</h3><p>局域网内的仓库，一般公司都有自己的私服</p>\n<h3 id=\"中心仓库\"><a href=\"#中心仓库\" class=\"headerlink\" title=\"中心仓库\"></a>中心仓库</h3><p>由apache官方维护</p>\n<h1 id=\"maven常用命令\"><a href=\"#maven常用命令\" class=\"headerlink\" title=\"maven常用命令\"></a>maven常用命令</h1><ul>\n<li>clean：清理<br>将项目根目录下的target目录清理掉</li>\n<li>compile：编译</li>\n<li>test：单元测试<br>单元测试类命名要求：必须以Test结尾，如abcTest.java</li>\n<li>package：打包</li>\n<li>install：安装<br>解决本地多个项目共用1个jar包<br>打包到本地仓库<h1 id=\"maven项目生命周期\"><a href=\"#maven项目生命周期\" class=\"headerlink\" title=\"maven项目生命周期\"></a>maven项目生命周期</h1><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fhiew13ighj30la05s0ud.jpg\" alt=\"\"><h1 id=\"eclipse中配置maven插件\"><a href=\"#eclipse中配置maven插件\" class=\"headerlink\" title=\"eclipse中配置maven插件\"></a>eclipse中配置maven插件</h1>打开顺序如下<br>window&gt;&gt;<br>preferences&gt;&gt;<br>maven&gt;&gt;<br>installations&gt;&gt;<br>add添加maven的安装路径<br>user settings配置本地仓库</li>\n</ul>\n<p>构建索引<br>window&gt;&gt;<br>show view&gt;&gt;<br>maven repositories&gt;&gt;<br>local repositories右键构建索引</p>\n<h1 id=\"依赖范围\"><a href=\"#依赖范围\" class=\"headerlink\" title=\"依赖范围\"></a>依赖范围</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fhnu0ngq03j30hq09s78e.jpg\" alt=\"\"></p>\n<h1 id=\"传递依赖冲突解决\"><a href=\"#传递依赖冲突解决\" class=\"headerlink\" title=\"传递依赖冲突解决\"></a>传递依赖冲突解决</h1><h3 id=\"Maven自己的调节原则\"><a href=\"#Maven自己的调节原则\" class=\"headerlink\" title=\"Maven自己的调节原则\"></a>Maven自己的调节原则</h3><p>第一声明者优先原则(谁先定义的就用谁的传递依赖)<br>路径近者优先原则(直接依赖高于传递依赖)</p>\n<h3 id=\"排除依赖\"><a href=\"#排除依赖\" class=\"headerlink\" title=\"排除依赖\"></a>排除依赖</h3><p>可以手动Exclude，排除jar包</p>\n<h3 id=\"版本锁定\"><a href=\"#版本锁定\" class=\"headerlink\" title=\"版本锁定\"></a>版本锁定</h3><p><dependencymanagement> 标签下进行配置</dependencymanagement></p>\n<h1 id=\"maven整合ssh\"><a href=\"#maven整合ssh\" class=\"headerlink\" title=\"maven整合ssh\"></a>maven整合ssh</h1><h1 id=\"项目拆分\"><a href=\"#项目拆分\" class=\"headerlink\" title=\"项目拆分\"></a>项目拆分</h1><h1 id=\"私服-1\"><a href=\"#私服-1\" class=\"headerlink\" title=\"私服\"></a>私服</h1>","excerpt":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。<br>","more":"</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>去apache官方下载maven的压缩包(免安装)<br>解压到本地磁盘<br>配置环境变量<br>打开cmd输入mvn -v看是否成功</p>\n<h1 id=\"仓库类型\"><a href=\"#仓库类型\" class=\"headerlink\" title=\"仓库类型\"></a>仓库类型</h1><h3 id=\"本地仓库\"><a href=\"#本地仓库\" class=\"headerlink\" title=\"本地仓库\"></a>本地仓库</h3><p>本地电脑上的仓库<br>当你第一次运行maven命令的时候，本地仓库就会创建默认路径为C:\\Users\\你的用户名.m2<br>如果需要修改仓库路径需要在C:\\apache-maven-3.5.0\\conf\\settings.xml的文件里添加配置如下<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">localRepository</span>&gt;</span>你想要的仓库路径<span class=\"tag\">&lt;/<span class=\"name\">localRepository</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"私服\"><a href=\"#私服\" class=\"headerlink\" title=\"私服\"></a>私服</h3><p>局域网内的仓库，一般公司都有自己的私服</p>\n<h3 id=\"中心仓库\"><a href=\"#中心仓库\" class=\"headerlink\" title=\"中心仓库\"></a>中心仓库</h3><p>由apache官方维护</p>\n<h1 id=\"maven常用命令\"><a href=\"#maven常用命令\" class=\"headerlink\" title=\"maven常用命令\"></a>maven常用命令</h1><ul>\n<li>clean：清理<br>将项目根目录下的target目录清理掉</li>\n<li>compile：编译</li>\n<li>test：单元测试<br>单元测试类命名要求：必须以Test结尾，如abcTest.java</li>\n<li>package：打包</li>\n<li>install：安装<br>解决本地多个项目共用1个jar包<br>打包到本地仓库<h1 id=\"maven项目生命周期\"><a href=\"#maven项目生命周期\" class=\"headerlink\" title=\"maven项目生命周期\"></a>maven项目生命周期</h1><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fhiew13ighj30la05s0ud.jpg\" alt=\"\"><h1 id=\"eclipse中配置maven插件\"><a href=\"#eclipse中配置maven插件\" class=\"headerlink\" title=\"eclipse中配置maven插件\"></a>eclipse中配置maven插件</h1>打开顺序如下<br>window&gt;&gt;<br>preferences&gt;&gt;<br>maven&gt;&gt;<br>installations&gt;&gt;<br>add添加maven的安装路径<br>user settings配置本地仓库</li>\n</ul>\n<p>构建索引<br>window&gt;&gt;<br>show view&gt;&gt;<br>maven repositories&gt;&gt;<br>local repositories右键构建索引</p>\n<h1 id=\"依赖范围\"><a href=\"#依赖范围\" class=\"headerlink\" title=\"依赖范围\"></a>依赖范围</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fhnu0ngq03j30hq09s78e.jpg\" alt=\"\"></p>\n<h1 id=\"传递依赖冲突解决\"><a href=\"#传递依赖冲突解决\" class=\"headerlink\" title=\"传递依赖冲突解决\"></a>传递依赖冲突解决</h1><h3 id=\"Maven自己的调节原则\"><a href=\"#Maven自己的调节原则\" class=\"headerlink\" title=\"Maven自己的调节原则\"></a>Maven自己的调节原则</h3><p>第一声明者优先原则(谁先定义的就用谁的传递依赖)<br>路径近者优先原则(直接依赖高于传递依赖)</p>\n<h3 id=\"排除依赖\"><a href=\"#排除依赖\" class=\"headerlink\" title=\"排除依赖\"></a>排除依赖</h3><p>可以手动Exclude，排除jar包</p>\n<h3 id=\"版本锁定\"><a href=\"#版本锁定\" class=\"headerlink\" title=\"版本锁定\"></a>版本锁定</h3><p><dependencyManagement> 标签下进行配置</p>\n<h1 id=\"maven整合ssh\"><a href=\"#maven整合ssh\" class=\"headerlink\" title=\"maven整合ssh\"></a>maven整合ssh</h1><h1 id=\"项目拆分\"><a href=\"#项目拆分\" class=\"headerlink\" title=\"项目拆分\"></a>项目拆分</h1><h1 id=\"私服-1\"><a href=\"#私服-1\" class=\"headerlink\" title=\"私服\"></a>私服</h1>"},{"title":"Over the rainbow","toc":true,"date":"2017-08-30T08:07:03.000Z","_content":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=409647589&auto=0&height=66\"></iframe>\n<p><button onclick=\"openShutManager(this,'box4',false,'点击关闭歌词','点击展开歌词')\">点击展开歌词</button></p>\n<p id=\"box4\" style=\"display:none\">\nHarmonia\nMy older self as 100 is talking to me\n100岁的自己正对我说\nMultiply the tiny things which I like doing\n多做一点自己喜欢的小事\nIt will make sky bluer and bluer\n会使天空更加蔚蓝\nMore than ever before\n比以往任何时候\nIt will make me smile a little more\n也会使我绽放更多笑容\nmusic~\nMy older self as 100 is telling to me\n100岁的自己正告诉我\nLink together the notes I love\n将自己喜欢的音符连接起来\nIt'll become a harmony\n就能化作悦耳的和声\nThe sounds are sweeter and sweeter\n声音愈发甜美\nEchoing nicely around me\n在我身周美妙地回绕\nmusic~\nThe sky is bluer and bluer\n天空愈发蔚蓝\nMore than ever before\n比以往任何时候\nIt will make me smile a little more\n那将使我绽放更多笑容\nWhat will I talk to younger self\n我会和年轻的我说些什么呢\nIf I were 100 years old\n当我100岁的时候\n</p>\n《心灵想要大声呼喊》台词\n虽然我可以说话，但是不知不觉间，我养成了隐藏真心不把自己真实想法说出来的习惯。\n然后，内心就变得空洞，觉得没有话语想要向人抒发，虽然你平时不说话，但是内心却有着很多想要传达给别人的话语。\n看着你，我就觉得我也许也还有很多想要抒发，想要告诉别人的话语，和你相遇我感到很高兴。\n多亏了你，我明白了很多。\n\n蛋中装着些什么\n里面装着各种各样的心情\n到了装不下的时候\n就会爆裂开来\n之后诞生出来的那个世界\n比想象中更美\n\n这个世界上最重的罪是用言语伤害别人。","source":"_posts/Over-the-rainbow.md","raw":"---\ntitle: Over the rainbow\ntoc: true\ndate: 2017-08-30 16:07:03\ntags:\n- 生活\n---\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=409647589&auto=0&height=66\"></iframe>\n<p><button onclick=\"openShutManager(this,'box4',false,'点击关闭歌词','点击展开歌词')\">点击展开歌词</button></p>\n<p id=\"box4\" style=\"display:none\">\nHarmonia\nMy older self as 100 is talking to me\n100岁的自己正对我说\nMultiply the tiny things which I like doing\n多做一点自己喜欢的小事\nIt will make sky bluer and bluer\n会使天空更加蔚蓝\nMore than ever before\n比以往任何时候\nIt will make me smile a little more\n也会使我绽放更多笑容\nmusic~\nMy older self as 100 is telling to me\n100岁的自己正告诉我\nLink together the notes I love\n将自己喜欢的音符连接起来\nIt'll become a harmony\n就能化作悦耳的和声\nThe sounds are sweeter and sweeter\n声音愈发甜美\nEchoing nicely around me\n在我身周美妙地回绕\nmusic~\nThe sky is bluer and bluer\n天空愈发蔚蓝\nMore than ever before\n比以往任何时候\nIt will make me smile a little more\n那将使我绽放更多笑容\nWhat will I talk to younger self\n我会和年轻的我说些什么呢\nIf I were 100 years old\n当我100岁的时候\n</p>\n《心灵想要大声呼喊》台词\n虽然我可以说话，但是不知不觉间，我养成了隐藏真心不把自己真实想法说出来的习惯。\n然后，内心就变得空洞，觉得没有话语想要向人抒发，虽然你平时不说话，但是内心却有着很多想要传达给别人的话语。\n看着你，我就觉得我也许也还有很多想要抒发，想要告诉别人的话语，和你相遇我感到很高兴。\n多亏了你，我明白了很多。\n\n蛋中装着些什么\n里面装着各种各样的心情\n到了装不下的时候\n就会爆裂开来\n之后诞生出来的那个世界\n比想象中更美\n\n这个世界上最重的罪是用言语伤害别人。","slug":"Over-the-rainbow","published":1,"updated":"2018-01-20T06:44:37.574Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8x5002q44wa0vavifbj","content":"<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=409647589&auto=0&height=66\"></iframe></p>\n<p></p><p><button onclick=\"openShutManager(this,'box4',false,'点击关闭歌词','点击展开歌词')\">点击展开歌词</button></p><p></p>\n<p></p><p id=\"box4\" style=\"display:none\"><br>Harmonia<br>My older self as 100 is talking to me<br>100岁的自己正对我说<br>Multiply the tiny things which I like doing<br>多做一点自己喜欢的小事<br>It will make sky bluer and bluer<br>会使天空更加蔚蓝<br>More than ever before<br>比以往任何时候<br>It will make me smile a little more<br>也会使我绽放更多笑容<br>music~<br>My older self as 100 is telling to me<br>100岁的自己正告诉我<br>Link together the notes I love<br>将自己喜欢的音符连接起来<br>It’ll become a harmony<br>就能化作悦耳的和声<br>The sounds are sweeter and sweeter<br>声音愈发甜美<br>Echoing nicely around me<br>在我身周美妙地回绕<br>music~<br>The sky is bluer and bluer<br>天空愈发蔚蓝<br>More than ever before<br>比以往任何时候<br>It will make me smile a little more<br>那将使我绽放更多笑容<br>What will I talk to younger self<br>我会和年轻的我说些什么呢<br>If I were 100 years old<br>当我100岁的时候<br></p><br>《心灵想要大声呼喊》台词<br>虽然我可以说话，但是不知不觉间，我养成了隐藏真心不把自己真实想法说出来的习惯。<br>然后，内心就变得空洞，觉得没有话语想要向人抒发，虽然你平时不说话，但是内心却有着很多想要传达给别人的话语。<br>看着你，我就觉得我也许也还有很多想要抒发，想要告诉别人的话语，和你相遇我感到很高兴。<br>多亏了你，我明白了很多。<p></p>\n<p>蛋中装着些什么<br>里面装着各种各样的心情<br>到了装不下的时候<br>就会爆裂开来<br>之后诞生出来的那个世界<br>比想象中更美</p>\n<p>这个世界上最重的罪是用言语伤害别人。</p>\n","excerpt":"","more":"<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=409647589&auto=0&height=66\"></iframe></p>\n<p><p><button onclick=\"openShutManager(this,'box4',false,'点击关闭歌词','点击展开歌词')\">点击展开歌词</button></p></p>\n<p><p id=\"box4\" style=\"display:none\"><br>Harmonia<br>My older self as 100 is talking to me<br>100岁的自己正对我说<br>Multiply the tiny things which I like doing<br>多做一点自己喜欢的小事<br>It will make sky bluer and bluer<br>会使天空更加蔚蓝<br>More than ever before<br>比以往任何时候<br>It will make me smile a little more<br>也会使我绽放更多笑容<br>music~<br>My older self as 100 is telling to me<br>100岁的自己正告诉我<br>Link together the notes I love<br>将自己喜欢的音符连接起来<br>It’ll become a harmony<br>就能化作悦耳的和声<br>The sounds are sweeter and sweeter<br>声音愈发甜美<br>Echoing nicely around me<br>在我身周美妙地回绕<br>music~<br>The sky is bluer and bluer<br>天空愈发蔚蓝<br>More than ever before<br>比以往任何时候<br>It will make me smile a little more<br>那将使我绽放更多笑容<br>What will I talk to younger self<br>我会和年轻的我说些什么呢<br>If I were 100 years old<br>当我100岁的时候<br></p><br>《心灵想要大声呼喊》台词<br>虽然我可以说话，但是不知不觉间，我养成了隐藏真心不把自己真实想法说出来的习惯。<br>然后，内心就变得空洞，觉得没有话语想要向人抒发，虽然你平时不说话，但是内心却有着很多想要传达给别人的话语。<br>看着你，我就觉得我也许也还有很多想要抒发，想要告诉别人的话语，和你相遇我感到很高兴。<br>多亏了你，我明白了很多。</p>\n<p>蛋中装着些什么<br>里面装着各种各样的心情<br>到了装不下的时候<br>就会爆裂开来<br>之后诞生出来的那个世界<br>比想象中更美</p>\n<p>这个世界上最重的罪是用言语伤害别人。</p>\n"},{"title":"N的阶乘和结果(C)","date":"2017-02-11T14:33:21.000Z","toc":true,"_content":"大数乘法，C语言long long无法放下的数字，方法来自百度经验。\n思路为将大数拆为5位1个单位存进int数组中，用一个整数标记int数组的位数。\n代码如下:\n<!--more-->\n\n```\n#include <iostream.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint calc(unsigned int n);\nint length(int n);//计算位数 \nint main(void)\n{\n\tint a[500];\n\tint i=0;\n\t//输入 \n\twhile(0<=i<=499){\n\t    scanf(\"%d\",&a[i]);\n        if(a[i]==-1)\n\t    break;\n\t    i++;\n\t}\n\ti=0;\n\t//输出 \n\twhile(0<=i<=499){\n\t\tif(a[i]==-1)\n        break;\n\t\tcalc(a[i]);//最大可以求5000的阶乘\n\t\ti++;\n\t}\n\treturn 0;\n}\nint calc(unsigned int n)\n{\n\tconst int max = 10000;/*数组中每个元素存储的数据不超过max*/\n\tint array[5000];/*用该个数组存储数据*/\n\tint arrayNow = 0;/*标记数组用到了第几位*/\n\tunsigned int num=1;/*计算阶乘用*/\n\tint i,j,temp;\n\tint left;/*进位相加数*/\n\t\n\t\n\tmemset(array,0,5000*sizeof(int));/*初始化数组*/\n\tif(n<3)/*小于3就不计算了*/\n\t{\n\t\treturn n;\t\n\t}\n\tif(n>5000)\n\t{\n\t\treturn -1;\t\n\t}\n\t\n\tarray[0] = 1;\n\twhile(num<=n)//写入阶乘到数组\n\t{\n\t\tleft = 0;/*第0位没有上一位进位*/\n\t\tfor(i=0;i<=arrayNow;i++)/*有记录的数组位置都需要乘num*/\n\t\t{\n\t\t\ttemp = array[i]*(int)num;/*当前数组元素与num相乘*/\n\t\t\ttemp+=left;              /*加上上一个元素的进位*/ \n\t\t\tarray[i] = temp%max;/*记录当前元素*/\n\t\t\tleft = temp/max;/*记录进位*/\n\t\t}\t\n\t\tif(left>0)/*填充新位*/\n\t\t{\n\t\t\tarray[++arrayNow] = left;\n\t\t}\n\t\tnum++;\n\t}\n    int length1=0;\n\tfor(i=arrayNow;i>=0;i--)\n\t{\n\t\tif(array[i]>=max)\n\t\t{\n\t\t\tprintf(\"出错\\n\");\n\t\t\treturn -1;\t\n\t\t}\t\n\t\tif(i==arrayNow)\n\t\t{\n\t\t\tprintf(\"%d\",array[i]);\n\t\t\tlength1+=length(array[i]);\n\t\t\t\n\t\t}\t\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\",array[i]/1000);\n\t\t\tprintf(\"%d\",array[i]/100 - (array[i]/1000)*10);\n\t\t\tprintf(\"%d\",(array[i]%100)/10);\n\t\t\tprintf(\"%d\",array[i]%10);\n\t\t\tlength1+=length(array[i]/1000);\n\t\t\tlength1+=length(array[i]/100 - (array[i]/1000)*10);\n\t\t\tlength1+=length((array[i]%100)/10);\n\t\t\tlength1+=length(array[i]%10);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\tprintf(\"%d\",length1);\n    return 0;\n}\nint length(int n){\n    int count = 1;\n    while (n /= 10)\n    count++;\n    return count;\n}\n```","source":"_posts/N的阶乘和结果-C.md","raw":"---\ntitle: N的阶乘和结果(C)\n\ndate: 2017-02-11 22:33:21\ntags:\n- C\n- 编程\ntoc: true\n---\n大数乘法，C语言long long无法放下的数字，方法来自百度经验。\n思路为将大数拆为5位1个单位存进int数组中，用一个整数标记int数组的位数。\n代码如下:\n<!--more-->\n\n```\n#include <iostream.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint calc(unsigned int n);\nint length(int n);//计算位数 \nint main(void)\n{\n\tint a[500];\n\tint i=0;\n\t//输入 \n\twhile(0<=i<=499){\n\t    scanf(\"%d\",&a[i]);\n        if(a[i]==-1)\n\t    break;\n\t    i++;\n\t}\n\ti=0;\n\t//输出 \n\twhile(0<=i<=499){\n\t\tif(a[i]==-1)\n        break;\n\t\tcalc(a[i]);//最大可以求5000的阶乘\n\t\ti++;\n\t}\n\treturn 0;\n}\nint calc(unsigned int n)\n{\n\tconst int max = 10000;/*数组中每个元素存储的数据不超过max*/\n\tint array[5000];/*用该个数组存储数据*/\n\tint arrayNow = 0;/*标记数组用到了第几位*/\n\tunsigned int num=1;/*计算阶乘用*/\n\tint i,j,temp;\n\tint left;/*进位相加数*/\n\t\n\t\n\tmemset(array,0,5000*sizeof(int));/*初始化数组*/\n\tif(n<3)/*小于3就不计算了*/\n\t{\n\t\treturn n;\t\n\t}\n\tif(n>5000)\n\t{\n\t\treturn -1;\t\n\t}\n\t\n\tarray[0] = 1;\n\twhile(num<=n)//写入阶乘到数组\n\t{\n\t\tleft = 0;/*第0位没有上一位进位*/\n\t\tfor(i=0;i<=arrayNow;i++)/*有记录的数组位置都需要乘num*/\n\t\t{\n\t\t\ttemp = array[i]*(int)num;/*当前数组元素与num相乘*/\n\t\t\ttemp+=left;              /*加上上一个元素的进位*/ \n\t\t\tarray[i] = temp%max;/*记录当前元素*/\n\t\t\tleft = temp/max;/*记录进位*/\n\t\t}\t\n\t\tif(left>0)/*填充新位*/\n\t\t{\n\t\t\tarray[++arrayNow] = left;\n\t\t}\n\t\tnum++;\n\t}\n    int length1=0;\n\tfor(i=arrayNow;i>=0;i--)\n\t{\n\t\tif(array[i]>=max)\n\t\t{\n\t\t\tprintf(\"出错\\n\");\n\t\t\treturn -1;\t\n\t\t}\t\n\t\tif(i==arrayNow)\n\t\t{\n\t\t\tprintf(\"%d\",array[i]);\n\t\t\tlength1+=length(array[i]);\n\t\t\t\n\t\t}\t\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\",array[i]/1000);\n\t\t\tprintf(\"%d\",array[i]/100 - (array[i]/1000)*10);\n\t\t\tprintf(\"%d\",(array[i]%100)/10);\n\t\t\tprintf(\"%d\",array[i]%10);\n\t\t\tlength1+=length(array[i]/1000);\n\t\t\tlength1+=length(array[i]/100 - (array[i]/1000)*10);\n\t\t\tlength1+=length((array[i]%100)/10);\n\t\t\tlength1+=length(array[i]%10);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\tprintf(\"%d\",length1);\n    return 0;\n}\nint length(int n){\n    int count = 1;\n    while (n /= 10)\n    count++;\n    return count;\n}\n```","slug":"N的阶乘和结果-C","published":1,"updated":"2018-01-20T06:44:37.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8x8002t44wa44qd4krh","content":"<p>大数乘法，C语言long long无法放下的数字，方法来自百度经验。<br>思路为将大数拆为5位1个单位存进int数组中，用一个整数标记int数组的位数。<br>代码如下:<br><a id=\"more\"></a></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calc</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> n)</span></span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">length</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>;<span class=\"comment\">//计算位数 </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\"> <span class=\"keyword\">int</span> a[<span class=\"number\">500</span>];</div><div class=\"line\"> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</div><div class=\"line\"> <span class=\"comment\">//输入 </span></div><div class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">0</span>&lt;=i&lt;=<span class=\"number\">499</span>)&#123;</div><div class=\"line\">     <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i]);</div><div class=\"line\">        <span class=\"keyword\">if</span>(a[i]==<span class=\"number\">-1</span>)</div><div class=\"line\">     <span class=\"keyword\">break</span>;</div><div class=\"line\">     i++;</div><div class=\"line\"> &#125;</div><div class=\"line\"> i=<span class=\"number\">0</span>;</div><div class=\"line\"> <span class=\"comment\">//输出 </span></div><div class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">0</span>&lt;=i&lt;=<span class=\"number\">499</span>)&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(a[i]==<span class=\"number\">-1</span>)</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">  calc(a[i]);<span class=\"comment\">//最大可以求5000的阶乘</span></div><div class=\"line\">  i++;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calc</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> n)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\"> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> max = <span class=\"number\">10000</span>;<span class=\"comment\">/*数组中每个元素存储的数据不超过max*/</span></div><div class=\"line\"> <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">5000</span>];<span class=\"comment\">/*用该个数组存储数据*/</span></div><div class=\"line\"> <span class=\"keyword\">int</span> arrayNow = <span class=\"number\">0</span>;<span class=\"comment\">/*标记数组用到了第几位*/</span></div><div class=\"line\"> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> num=<span class=\"number\">1</span>;<span class=\"comment\">/*计算阶乘用*/</span></div><div class=\"line\"> <span class=\"keyword\">int</span> i,j,temp;</div><div class=\"line\"> <span class=\"keyword\">int</span> left;<span class=\"comment\">/*进位相加数*/</span></div><div class=\"line\"> </div><div class=\"line\"> </div><div class=\"line\"> <span class=\"built_in\">memset</span>(<span class=\"built_in\">array</span>,<span class=\"number\">0</span>,<span class=\"number\">5000</span>*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));<span class=\"comment\">/*初始化数组*/</span></div><div class=\"line\"> <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">3</span>)<span class=\"comment\">/*小于3就不计算了*/</span></div><div class=\"line\"> &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> n;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">if</span>(n&gt;<span class=\"number\">5000</span>)</div><div class=\"line\"> &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"built_in\">array</span>[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</div><div class=\"line\"> <span class=\"keyword\">while</span>(num&lt;=n)<span class=\"comment\">//写入阶乘到数组</span></div><div class=\"line\"> &#123;</div><div class=\"line\">  left = <span class=\"number\">0</span>;<span class=\"comment\">/*第0位没有上一位进位*/</span></div><div class=\"line\">  <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;=arrayNow;i++)<span class=\"comment\">/*有记录的数组位置都需要乘num*/</span></div><div class=\"line\">  &#123;</div><div class=\"line\">   temp = <span class=\"built_in\">array</span>[i]*(<span class=\"keyword\">int</span>)num;<span class=\"comment\">/*当前数组元素与num相乘*/</span></div><div class=\"line\">   temp+=left;              <span class=\"comment\">/*加上上一个元素的进位*/</span> </div><div class=\"line\">   <span class=\"built_in\">array</span>[i] = temp%max;<span class=\"comment\">/*记录当前元素*/</span></div><div class=\"line\">   left = temp/max;<span class=\"comment\">/*记录进位*/</span></div><div class=\"line\">  &#125;\t</div><div class=\"line\">  <span class=\"keyword\">if</span>(left&gt;<span class=\"number\">0</span>)<span class=\"comment\">/*填充新位*/</span></div><div class=\"line\">  &#123;</div><div class=\"line\">   <span class=\"built_in\">array</span>[++arrayNow] = left;</div><div class=\"line\">  &#125;</div><div class=\"line\">  num++;</div><div class=\"line\"> &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> length1=<span class=\"number\">0</span>;</div><div class=\"line\"> <span class=\"keyword\">for</span>(i=arrayNow;i&gt;=<span class=\"number\">0</span>;i--)</div><div class=\"line\"> &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">array</span>[i]&gt;=max)</div><div class=\"line\">  &#123;</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"出错\\n\"</span>);</div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;\t</div><div class=\"line\">  &#125;\t</div><div class=\"line\">  <span class=\"keyword\">if</span>(i==arrayNow)</div><div class=\"line\">  &#123;</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,<span class=\"built_in\">array</span>[i]);</div><div class=\"line\">   length1+=length(<span class=\"built_in\">array</span>[i]);</div><div class=\"line\">   </div><div class=\"line\">  &#125;\t</div><div class=\"line\">  <span class=\"keyword\">else</span></div><div class=\"line\">  &#123;</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,<span class=\"built_in\">array</span>[i]/<span class=\"number\">1000</span>);</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,<span class=\"built_in\">array</span>[i]/<span class=\"number\">100</span> - (<span class=\"built_in\">array</span>[i]/<span class=\"number\">1000</span>)*<span class=\"number\">10</span>);</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,(<span class=\"built_in\">array</span>[i]%<span class=\"number\">100</span>)/<span class=\"number\">10</span>);</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,<span class=\"built_in\">array</span>[i]%<span class=\"number\">10</span>);</div><div class=\"line\">   length1+=length(<span class=\"built_in\">array</span>[i]/<span class=\"number\">1000</span>);</div><div class=\"line\">   length1+=length(<span class=\"built_in\">array</span>[i]/<span class=\"number\">100</span> - (<span class=\"built_in\">array</span>[i]/<span class=\"number\">1000</span>)*<span class=\"number\">10</span>);</div><div class=\"line\">   length1+=length((<span class=\"built_in\">array</span>[i]%<span class=\"number\">100</span>)/<span class=\"number\">10</span>);</div><div class=\"line\">   length1+=length(<span class=\"built_in\">array</span>[i]%<span class=\"number\">10</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\"> <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,length1);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">length</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> count = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span> (n /= <span class=\"number\">10</span>)</div><div class=\"line\">    count++;</div><div class=\"line\">    <span class=\"keyword\">return</span> count;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"<p>大数乘法，C语言long long无法放下的数字，方法来自百度经验。<br>思路为将大数拆为5位1个单位存进int数组中，用一个整数标记int数组的位数。<br>代码如下:<br>","more":"</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calc</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> n)</span></span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">length</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>;<span class=\"comment\">//计算位数 </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\"> <span class=\"keyword\">int</span> a[<span class=\"number\">500</span>];</div><div class=\"line\"> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</div><div class=\"line\"> <span class=\"comment\">//输入 </span></div><div class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">0</span>&lt;=i&lt;=<span class=\"number\">499</span>)&#123;</div><div class=\"line\">     <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i]);</div><div class=\"line\">        <span class=\"keyword\">if</span>(a[i]==<span class=\"number\">-1</span>)</div><div class=\"line\">     <span class=\"keyword\">break</span>;</div><div class=\"line\">     i++;</div><div class=\"line\"> &#125;</div><div class=\"line\"> i=<span class=\"number\">0</span>;</div><div class=\"line\"> <span class=\"comment\">//输出 </span></div><div class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">0</span>&lt;=i&lt;=<span class=\"number\">499</span>)&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(a[i]==<span class=\"number\">-1</span>)</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">  calc(a[i]);<span class=\"comment\">//最大可以求5000的阶乘</span></div><div class=\"line\">  i++;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">calc</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> n)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\"> <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> max = <span class=\"number\">10000</span>;<span class=\"comment\">/*数组中每个元素存储的数据不超过max*/</span></div><div class=\"line\"> <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">5000</span>];<span class=\"comment\">/*用该个数组存储数据*/</span></div><div class=\"line\"> <span class=\"keyword\">int</span> arrayNow = <span class=\"number\">0</span>;<span class=\"comment\">/*标记数组用到了第几位*/</span></div><div class=\"line\"> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> num=<span class=\"number\">1</span>;<span class=\"comment\">/*计算阶乘用*/</span></div><div class=\"line\"> <span class=\"keyword\">int</span> i,j,temp;</div><div class=\"line\"> <span class=\"keyword\">int</span> left;<span class=\"comment\">/*进位相加数*/</span></div><div class=\"line\"> </div><div class=\"line\"> </div><div class=\"line\"> <span class=\"built_in\">memset</span>(<span class=\"built_in\">array</span>,<span class=\"number\">0</span>,<span class=\"number\">5000</span>*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));<span class=\"comment\">/*初始化数组*/</span></div><div class=\"line\"> <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">3</span>)<span class=\"comment\">/*小于3就不计算了*/</span></div><div class=\"line\"> &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> n;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">if</span>(n&gt;<span class=\"number\">5000</span>)</div><div class=\"line\"> &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;\t</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"built_in\">array</span>[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</div><div class=\"line\"> <span class=\"keyword\">while</span>(num&lt;=n)<span class=\"comment\">//写入阶乘到数组</span></div><div class=\"line\"> &#123;</div><div class=\"line\">  left = <span class=\"number\">0</span>;<span class=\"comment\">/*第0位没有上一位进位*/</span></div><div class=\"line\">  <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;=arrayNow;i++)<span class=\"comment\">/*有记录的数组位置都需要乘num*/</span></div><div class=\"line\">  &#123;</div><div class=\"line\">   temp = <span class=\"built_in\">array</span>[i]*(<span class=\"keyword\">int</span>)num;<span class=\"comment\">/*当前数组元素与num相乘*/</span></div><div class=\"line\">   temp+=left;              <span class=\"comment\">/*加上上一个元素的进位*/</span> </div><div class=\"line\">   <span class=\"built_in\">array</span>[i] = temp%max;<span class=\"comment\">/*记录当前元素*/</span></div><div class=\"line\">   left = temp/max;<span class=\"comment\">/*记录进位*/</span></div><div class=\"line\">  &#125;\t</div><div class=\"line\">  <span class=\"keyword\">if</span>(left&gt;<span class=\"number\">0</span>)<span class=\"comment\">/*填充新位*/</span></div><div class=\"line\">  &#123;</div><div class=\"line\">   <span class=\"built_in\">array</span>[++arrayNow] = left;</div><div class=\"line\">  &#125;</div><div class=\"line\">  num++;</div><div class=\"line\"> &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> length1=<span class=\"number\">0</span>;</div><div class=\"line\"> <span class=\"keyword\">for</span>(i=arrayNow;i&gt;=<span class=\"number\">0</span>;i--)</div><div class=\"line\"> &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">array</span>[i]&gt;=max)</div><div class=\"line\">  &#123;</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"出错\\n\"</span>);</div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;\t</div><div class=\"line\">  &#125;\t</div><div class=\"line\">  <span class=\"keyword\">if</span>(i==arrayNow)</div><div class=\"line\">  &#123;</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,<span class=\"built_in\">array</span>[i]);</div><div class=\"line\">   length1+=length(<span class=\"built_in\">array</span>[i]);</div><div class=\"line\">   </div><div class=\"line\">  &#125;\t</div><div class=\"line\">  <span class=\"keyword\">else</span></div><div class=\"line\">  &#123;</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,<span class=\"built_in\">array</span>[i]/<span class=\"number\">1000</span>);</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,<span class=\"built_in\">array</span>[i]/<span class=\"number\">100</span> - (<span class=\"built_in\">array</span>[i]/<span class=\"number\">1000</span>)*<span class=\"number\">10</span>);</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,(<span class=\"built_in\">array</span>[i]%<span class=\"number\">100</span>)/<span class=\"number\">10</span>);</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,<span class=\"built_in\">array</span>[i]%<span class=\"number\">10</span>);</div><div class=\"line\">   length1+=length(<span class=\"built_in\">array</span>[i]/<span class=\"number\">1000</span>);</div><div class=\"line\">   length1+=length(<span class=\"built_in\">array</span>[i]/<span class=\"number\">100</span> - (<span class=\"built_in\">array</span>[i]/<span class=\"number\">1000</span>)*<span class=\"number\">10</span>);</div><div class=\"line\">   length1+=length((<span class=\"built_in\">array</span>[i]%<span class=\"number\">100</span>)/<span class=\"number\">10</span>);</div><div class=\"line\">   length1+=length(<span class=\"built_in\">array</span>[i]%<span class=\"number\">10</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\"> <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,length1);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">length</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> count = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span> (n /= <span class=\"number\">10</span>)</div><div class=\"line\">    count++;</div><div class=\"line\">    <span class=\"keyword\">return</span> count;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Selfish-human(pwd)","date":"2017-04-23T05:50:49.000Z","toc":true,"_content":"牛顿力学的假设是牛顿三定律，\n数学的假设是最基本的加减乘除，\n在很长一段时间里，\n我都认为，\n这些是绝对的真理。\n<!--more-->\n<script type=\"text/javascript\">\nstrHTML=\"\";\nstrHTML+=\"%15X@%5D%u726D%u984A%u52A9%u5B03%u76E1%u5024%u8B8C%u661E%u7238%u981B%u\";\nstrHTML+=\"4E6B%u5BA9%u5FBE%uFF68%5DZC%0C%u6545%u5B5E%u76BD%u507E%u8B89%u661F%u67\";\nstrHTML+=\"61%u5798%u6719%u76E1%u5295%u51AB%u4E68%u9607%uFF3A%09P%17%5B%u574B%u5F\";\nstrHTML+=\"BA%u954E%u4E63%u6BD1%u6594%u95C7%u91F9%uFF68%5DZC%0C%u6224%u90C5%u8B9D\";\nstrHTML+=\"%u4E03%uFF3B%0C%03%10%0B%u8FBC%u4EAE%u664B%u7EED%u5B9A%u76B2%u772A%u74\";\nstrHTML+=\"34%u3067Y%01@%0F_%05BZQYCU%5E@P%1A%07%05%18Q_%5E%1A%15%0BXX%11%08%u4EF\";\nstrHTML+=\"F%u591B%u6700%u569B%u4E05%u99B4%u76B5%u8D8C%u4E6E%uFF6E%u7738%u5205%u4\";\nstrHTML+=\"EE2%u5FE9%u5922%u5B87%u954D%u5E13%u7778%u5B50%u5B69%u571F%u6718%u6804%\";\nstrHTML+=\"u4E68%u5B3C%u626A%u739C%u8069%u3032_TG%0Co%u7AE4%u7155%u612D%u89F8%u4E\";\nstrHTML+=\"3C%u8BDC%u8FBB%u5C02%u661A%u757B%u6D5A%u541F%uFF3D%u5E4A%u79BA%u6127%u\";\nstrHTML+=\"5151%u90D1%u51AE%u5718%u4EB7%u4E8E%u5F9B%u7B74%u76B1%u815C%u5EAE%u4E69\";\nstrHTML+=\"%uFF3A%u6BDE%u65D2%u4FB8%u753C%u3061%0ES%11Zh%0FW%16_2%u6220%u4E3F%u66\";\nstrHTML+=\"3B%u7645%u5E35%u6722%u5B53%u72DC%u7EA9%u8063%u76B1%u6274%u4E0F%u4F31%u\";\nstrHTML+=\"4F2A%u676A%u8FEF%u79F8%u612D%u53B2%u3067%u4E3C%u8B8A%u8FE8%u5C52%u664B\";\nstrHTML+=\"%u4ED8%u6014%u76B1%u818E%u79A0%u303A%u6731%u8FE3%u4EB3%u89DB%u5209%u4E\";\nstrHTML+=\"39%u95DF%u53DB%u503B%u3072%u8FEE%u5373%u5FF6%u7462%u5B56%u3072%u76B2%u\";\nstrHTML+=\"5B53%u79E3%uFF69%u5BE6%u76E7%u5075%u8B8F%u664C%u579E%u5682%u4ED6%u6735\";\nstrHTML+=\"%u5943%u5377%u5935%u5207%u81D8%u5DC4%u4E02%u76D7%u76BD%uFF3B%u4ED5%u4E\";\nstrHTML+=\"5B%u6287%u673C%u818F%u7504%u616B%u5FE7%u76E7%u4E8C%u7C4E%u5C77%u7153%u\";\nstrHTML+=\"88CE%u8189%u5DC3%u76B5%u5799%u5684%u6222%u6394%u5203%uFF68%u6092%u60CB\";\nstrHTML+=\"%u5C00%u673B%u708C%u53D7%u7B28%u303B%u4F71%u661F%u4E3E%u676B%u4E29%u89\";\nstrHTML+=\"1A%u53DA%u4E81%u53FD%u62F4%u57CC%u56D5%uFF3E%u90C6%u5C54%u664C%7FT%0E%\";\nstrHTML+=\"01J%u6A12%u56D5M%uFF6D%u4E67%u5C00%u661D%u65B2%u532E%u57C3%u56D9%uFF3B\";\nstrHTML+=\"%u6BE4%u59E3%u4F39%u656C%u5044%u5BC9%u76E0%u65D0%u6B51%u65D6%u6C77%u30\";\nstrHTML+=\"30Y%07%11%0C%3B%u91B2%u87E9%u5B04%u79E2%u76B1%u579E%u674D%u507F%u8B8F%\";\nstrHTML+=\"u4E6D%u661A%u4E82%u601E%u76BD%u81DD%u79F1%uFF6D%u8188%u79F4%u76E1%u4E8\";\nstrHTML+=\"F%u4E88%u4E7B%u9597%u8FED%u8879%u7772%u4EC1%u6676%uFF6F%u4E95%u752E%u4\";\nstrHTML+=\"EE5%u5E71%u7D4D%u626B%u650C%u8FBF%uFF6D%u7906%u4F2B%u5C03%u661A%u8FE1%\";\nstrHTML+=\"u4E71%u4E34%u659A%u76B4%u8FBA%u6B07%u76B1%u3067%09%06B%5D%3C%u4E8F%u7C\";\nstrHTML+=\"49%u76E1%u818F%u79A2%u6015%u76B5%u5024%u8BDA%u76E6%u6B50%u785B%u6043%u\";\nstrHTML+=\"6BAA%u5E80%u7F5F%u75A3%u3037%04%5BK%09%3A%5D%00G%5B%3F%u5279%u6B11%u8B\";\nstrHTML+=\"C7%u8BF0%u5205%u752D%u5B3D%u76E1%u674F%u8D1A%u5C00%u664C%u63C4%u5958%u\";\nstrHTML+=\"76B7%u65C3%u507D%uFF6D%u6229%u8FF6%u7772%u5436%u9955%u90C4%u4F23%u60C4\";\nstrHTML+=\"%u5420%u76E5%u6587%u5B65%uFF69%u6735%u546A%u6221%u4FDC%u6249%u8B91%u4E\";\nstrHTML+=\"B4%u818F%u5D94%u664C%u6044%uFF3D%u8FA4%u7724%u6B01%u5E0B%u76B1C%u4EDB%\";\nstrHTML+=\"u7C43%u752E%u6D09%12%u303A%05%5BE%0Ek%u973C%u5E0D%u55F9%u6B17%u4E78%u4\";\nstrHTML+=\"E9C%u55BF%u79FB%u4E18%u5EA5%u951A%u6765%u546D%u6272%u8BC5%u76E7%u90C7%\";\nstrHTML+=\"u5387%u8BEE%uFF39X%03J%0F8%u2029%u6229%u77DC%u906A%u81DD%u5DC1%u664E%u\";\nstrHTML+=\"6014%uFF39%u6700%u6775%u6275%u5417B%u202B%u3037%0E%07%17%5D8%u5E3D%u67\";\nstrHTML+=\"78%u818E%u5D93%u6B48%u76B1%u6592%u5078%u4E67%u80CC%u4EFC%u5B8C%u76BC%u\";\nstrHTML+=\"8BCD%u51C3%u8FEE%u53D5%u8BBC%u3060%09%07GZ%3A%u594A%u7729%u76B1%u5B5B%\";\nstrHTML+=\"u5B35%u88CE%u5944%u4E88%u54BD%u795D%u4F7E%u702E%u8FA0%u7775%u5460%u79A\";\nstrHTML+=\"C%u6025%u60C2%uFF3E%u65D5%u514B%u5BC0%u9520%uFF3B%u4E6F%u6581%u6CB7%u6\";\nstrHTML+=\"776%u8804%u521C%u5F6E%u3032%u5C52%u50F9%u66CB%u7EFD%u76E1%u6274%u4E3C%\";\nstrHTML+=\"u661D%u59B3%u6B07%u3066%5EQGZk%04S@%0B2%u6228%u4F05%u4E79%u5C36%u818B%\";\nstrHTML+=\"u5D93%u5C34%u9588%u4EB3%u8D13%u6755%uFF6F%0AW@%5Bo%u55FF%u6094%uFF3D%u\";\nstrHTML+=\"60D1%u4F40%uFF6E%u5B80%u6020%uFF68%u5F86%u8669%uFF3D%u5768%u5F0F%uFF34\";\nstrHTML+=\"%u75E2%u82DF%uFF3B%0C%03%10%0Bo%u515D%u908C%u53DA%u8BD1%u7EEF%u81DF%u5\";\nstrHTML+=\"DC3%u4E65%u4E4F%u4ED9%u541E%u3033_%06%10%0D%3F%u6275%u62EB%u81D2%u5DC0\";\nstrHTML+=\"%u88F7%u8FEE%u4EBE%u4E39%u4E13%u9EE6%u66A7%u76E5%u7494%u5B65%u91A9%uFF\";\nstrHTML+=\"39%u5C6B%u5FF3%u7F9F%u7FCA%u76B1%u5BBA%u62C1%u7725%u8189%u5DC3%u3033%u\";\nstrHTML+=\"8FBA%u79A9%u8FA5%u5E95%u9607%u530F%u4E6C%u77DD%u661E%u4EFC%u4F60%u65CE\";\nstrHTML+=\"%u5F39%u59F2%uFF3B%u4F76%u664E%u6273%u77D0%u9036%u5DC7%u7EAB%u65D0%u6C\";\nstrHTML+=\"B6%u56E8%u538E%u4EB4%u3067Y%01@%0FiX%00A%0Bn%u6768%u65CE%u5028%u571A%u\";\nstrHTML+=\"60C6%u6229%u76BD%u720F%u6BFA%u603E%u4E29%u5C53%u9072%u4E6F%u4EB3%u50AB\";\nstrHTML+=\"%u6221%u8FBA%u79FB%u4E8F%uFF3E%u6274%u7759%u4E4E%u76B6%u4E83%u5B33%u51\";\nstrHTML+=\"17%u7C99%u661C%u65D5%u981F%u8A61%u8BD5%uFF3D%u5FF1%u673C%u704D%u72B9%u\";\nstrHTML+=\"FF35%u9EEF%u5961%u5320%u8DD1%uFF39%u538F%u89B4%u4E64%u4E1A%u7BE3%u5363\";\nstrHTML+=\"%u76B1U%0C%13%06%12%5C%06D%04ZC%01%u4FDE%u53D7%u4ED4%u4EB4%u89D6%u5F44\";\nstrHTML+=\"%u6B5D%u303B%u4F71%u661F%u73D1%u5BFC%u5341%u664A%u7203%u6BA9%u5BC9%u62\";\nstrHTML+=\"72%u8BC2%u4F55%u4E3F%u542F%u8BAC%u6272%u4EDE%uFF3D%u6272%u4E88%u606C%u\";\nstrHTML+=\"4E7B%u77D0%u9037%u4F01%u76BC%u4EBA%u3030%09ZK%07%3D%u65D0%u6CB4%u6CFD%\";\nstrHTML+=\"u902F%u76E1%u6224%u4E88%u661F%u5B07%u72DA%u76B1%uFF3E%u59E7%u67F9%u769\";\nstrHTML+=\"7%u5202%u5237%u5248%u6275%u4E8E%u90CE%u661A%u8FBD%u79AC%u728E%u6030%u7\";\nstrHTML+=\"6B6%u8BE8%uFF34%u4E83%u4ED5%u4F2D%u4E3D%u4F7B%u4E58%u6224%u4E89%u76B1%\";\nstrHTML+=\"u5117%u7CCB%u617C%u5206%u53DA%u6080%u5407%u3067i%0ES%11Zh%u976D%u5E0D%\";\nstrHTML+=\"u55F8%u6B43%u4E5E%uFF3D%u4F74%u81DF%u5DC9%u534D%u6C98%u673E%u576A%u636\";\nstrHTML+=\"0%u9667%u8BCE%u76E1%u4E55%u608B%u3032%u6BAC%u6B17%u6750%u56CC%u4E03%u9\";\nstrHTML+=\"9E3%u909E%u612D%u89F8%u7768%u4E02%u76E6%u4E89%u90C8%u5FEC%u6768%u6C2C%\";\nstrHTML+=\"u8D19%u3030%09ZK%07%3D%0C%03%10%0Bo%u6BFA%u6B45%u6221%u909E%u4E3B%u79B\";\nstrHTML+=\"4%u571A%u6096%uFF69%u8189%u5DC3%u661E%u5445%u777B%u76E6%u53EB%u4EB3%u5\";\nstrHTML+=\"406%uFF7E%04S@%0B\";\n\n\nfunction XOR(strV,strPass){\n\tvar intPassLength=strPass.length;\n\tvar re=\"\";\n\tfor(var i=0;i<strV.length;i++){\n\t\tre+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n\t}\n\treturn(re);\n}\nvar STR =\n{\n\thexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\tb64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n\tchrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\t\n\tb64_hmac_md5:\n\t\tfunction(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\t\t\n\tb64_md5:\n\t\tfunction(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\t\t\n\tbinl2b64:\n\t\tfunction(binarray){\n\t\t  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i += 3)\n\t\t  {\n\t\t    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n\t\t                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n\t\t                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n\t\t    for(var j = 0; j < 4; j++)\n\t\t    {\n\t\t      if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n\t\t      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\t\t    }\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\t\n\tbinl2hex:\n\t\tfunction(binarray){\n\t\t  var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i++)\n\t\t  {\n\t\t    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n\t\t           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\n\tbinl2str:\n\t\tfunction(bin){\n\t\t  var str = \"\";\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < bin.length * 32; i += this.chrsz)\n\t\t    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n\t\t  return str;\n\t\t},\n\t\t\n\tbit_rol:\n\t\tfunction(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\t\t\n\tcore_hmac_md5:\n\t\tfunction(key, data){\n\t\t  var bkey = str2binl(key);\n\t\t  if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\t\t\n\t\t  var ipad = Array(16), opad = Array(16);\n\t\t  for(var i = 0; i < 16; i++)\n\t\t  {\n\t\t    ipad[i] = bkey[i] ^ 0x36363636;\n\t\t    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t\t  }\n\t\t\n\t\t  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n\t\t  return core_md5(opad.concat(hash), 512 + 128);\n\t\t},\n\t\t\n\tcore_md5:\n\t\tfunction(x, len){\n\t\t  /* append padding */\n\t\t  x[len >> 5] |= 0x80 << ((len) % 32);\n\t\t  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\t\t\n\t\t  var a =  1732584193;\n\t\t  var b = -271733879;\n\t\t  var c = -1732584194;\n\t\t  var d =  271733878;\n\t\t\n\t\t  for(var i = 0; i < x.length; i += 16)\n\t\t  {\n\t\t    var olda = a;\n\t\t    var oldb = b;\n\t\t    var oldc = c;\n\t\t    var oldd = d;\n\t\t\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\t\t\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\t\t\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\t\t\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\t\t\n\t\t    a = this.safe_add(a, olda);\n\t\t    b = this.safe_add(b, oldb);\n\t\t    c = this.safe_add(c, oldc);\n\t\t    d = this.safe_add(d, oldd);\n\t\t  }\n\t\t  return Array(a, b, c, d);\n\t\t},\n\t\t\n\thex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\t\n\thex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\t\n\tmd5:function(s){return(this.hex_md5(s));},\n\n\tmd5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n\tmd5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n\tmd5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n\tmd5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n\tmd5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n\tmd5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\t\n\tsafe_add:\n\t\tfunction(x, y){\n\t\t  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t\t  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t\t  return (msw << 16) | (lsw & 0xFFFF);\n\t\t},\n\t\t\n\tstr2binl:\n\t\tfunction(str){\n\t\t  var bin = Array();\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n\t\t    bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n\t\t  return bin;\n\t\t},\n\n\tstr_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n\tstr_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\n\nfunction performPage(strPass){\n\tif(strPass){\n\t\tdocument.cookie=\"password=\"+escape(strPass);\n\t\tdocument.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n\t\treturn(false);\n\t}\n\t//**********如果需要自动记住密码，请将下面的注释改成代码\n\t/*\n\tvar pass=document.cookie.match(/password=([^;]+)/i);\n\tif(pass){\n\t\tpass=unescape(pass[1]);\n\t\tdocument.write(XOR(unescape(strHTML),STR.md5(pass)));\n\t\treturn(false);\n\t}\n\t*/\n\t//*************\n\tstrAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n\tstrAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n\tstrAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n\tdocument.write(strAskPass);\n}\nperformPage();\n</script> ","source":"_posts/Selfish-human(pwd).md","raw":"---\ntitle: Selfish-human(pwd)\ndate: 2017-04-23 13:50:49\ntags:\n- 生活\ntoc: true\n---\n牛顿力学的假设是牛顿三定律，\n数学的假设是最基本的加减乘除，\n在很长一段时间里，\n我都认为，\n这些是绝对的真理。\n<!--more-->\n<script type=\"text/javascript\">\nstrHTML=\"\";\nstrHTML+=\"%15X@%5D%u726D%u984A%u52A9%u5B03%u76E1%u5024%u8B8C%u661E%u7238%u981B%u\";\nstrHTML+=\"4E6B%u5BA9%u5FBE%uFF68%5DZC%0C%u6545%u5B5E%u76BD%u507E%u8B89%u661F%u67\";\nstrHTML+=\"61%u5798%u6719%u76E1%u5295%u51AB%u4E68%u9607%uFF3A%09P%17%5B%u574B%u5F\";\nstrHTML+=\"BA%u954E%u4E63%u6BD1%u6594%u95C7%u91F9%uFF68%5DZC%0C%u6224%u90C5%u8B9D\";\nstrHTML+=\"%u4E03%uFF3B%0C%03%10%0B%u8FBC%u4EAE%u664B%u7EED%u5B9A%u76B2%u772A%u74\";\nstrHTML+=\"34%u3067Y%01@%0F_%05BZQYCU%5E@P%1A%07%05%18Q_%5E%1A%15%0BXX%11%08%u4EF\";\nstrHTML+=\"F%u591B%u6700%u569B%u4E05%u99B4%u76B5%u8D8C%u4E6E%uFF6E%u7738%u5205%u4\";\nstrHTML+=\"EE2%u5FE9%u5922%u5B87%u954D%u5E13%u7778%u5B50%u5B69%u571F%u6718%u6804%\";\nstrHTML+=\"u4E68%u5B3C%u626A%u739C%u8069%u3032_TG%0Co%u7AE4%u7155%u612D%u89F8%u4E\";\nstrHTML+=\"3C%u8BDC%u8FBB%u5C02%u661A%u757B%u6D5A%u541F%uFF3D%u5E4A%u79BA%u6127%u\";\nstrHTML+=\"5151%u90D1%u51AE%u5718%u4EB7%u4E8E%u5F9B%u7B74%u76B1%u815C%u5EAE%u4E69\";\nstrHTML+=\"%uFF3A%u6BDE%u65D2%u4FB8%u753C%u3061%0ES%11Zh%0FW%16_2%u6220%u4E3F%u66\";\nstrHTML+=\"3B%u7645%u5E35%u6722%u5B53%u72DC%u7EA9%u8063%u76B1%u6274%u4E0F%u4F31%u\";\nstrHTML+=\"4F2A%u676A%u8FEF%u79F8%u612D%u53B2%u3067%u4E3C%u8B8A%u8FE8%u5C52%u664B\";\nstrHTML+=\"%u4ED8%u6014%u76B1%u818E%u79A0%u303A%u6731%u8FE3%u4EB3%u89DB%u5209%u4E\";\nstrHTML+=\"39%u95DF%u53DB%u503B%u3072%u8FEE%u5373%u5FF6%u7462%u5B56%u3072%u76B2%u\";\nstrHTML+=\"5B53%u79E3%uFF69%u5BE6%u76E7%u5075%u8B8F%u664C%u579E%u5682%u4ED6%u6735\";\nstrHTML+=\"%u5943%u5377%u5935%u5207%u81D8%u5DC4%u4E02%u76D7%u76BD%uFF3B%u4ED5%u4E\";\nstrHTML+=\"5B%u6287%u673C%u818F%u7504%u616B%u5FE7%u76E7%u4E8C%u7C4E%u5C77%u7153%u\";\nstrHTML+=\"88CE%u8189%u5DC3%u76B5%u5799%u5684%u6222%u6394%u5203%uFF68%u6092%u60CB\";\nstrHTML+=\"%u5C00%u673B%u708C%u53D7%u7B28%u303B%u4F71%u661F%u4E3E%u676B%u4E29%u89\";\nstrHTML+=\"1A%u53DA%u4E81%u53FD%u62F4%u57CC%u56D5%uFF3E%u90C6%u5C54%u664C%7FT%0E%\";\nstrHTML+=\"01J%u6A12%u56D5M%uFF6D%u4E67%u5C00%u661D%u65B2%u532E%u57C3%u56D9%uFF3B\";\nstrHTML+=\"%u6BE4%u59E3%u4F39%u656C%u5044%u5BC9%u76E0%u65D0%u6B51%u65D6%u6C77%u30\";\nstrHTML+=\"30Y%07%11%0C%3B%u91B2%u87E9%u5B04%u79E2%u76B1%u579E%u674D%u507F%u8B8F%\";\nstrHTML+=\"u4E6D%u661A%u4E82%u601E%u76BD%u81DD%u79F1%uFF6D%u8188%u79F4%u76E1%u4E8\";\nstrHTML+=\"F%u4E88%u4E7B%u9597%u8FED%u8879%u7772%u4EC1%u6676%uFF6F%u4E95%u752E%u4\";\nstrHTML+=\"EE5%u5E71%u7D4D%u626B%u650C%u8FBF%uFF6D%u7906%u4F2B%u5C03%u661A%u8FE1%\";\nstrHTML+=\"u4E71%u4E34%u659A%u76B4%u8FBA%u6B07%u76B1%u3067%09%06B%5D%3C%u4E8F%u7C\";\nstrHTML+=\"49%u76E1%u818F%u79A2%u6015%u76B5%u5024%u8BDA%u76E6%u6B50%u785B%u6043%u\";\nstrHTML+=\"6BAA%u5E80%u7F5F%u75A3%u3037%04%5BK%09%3A%5D%00G%5B%3F%u5279%u6B11%u8B\";\nstrHTML+=\"C7%u8BF0%u5205%u752D%u5B3D%u76E1%u674F%u8D1A%u5C00%u664C%u63C4%u5958%u\";\nstrHTML+=\"76B7%u65C3%u507D%uFF6D%u6229%u8FF6%u7772%u5436%u9955%u90C4%u4F23%u60C4\";\nstrHTML+=\"%u5420%u76E5%u6587%u5B65%uFF69%u6735%u546A%u6221%u4FDC%u6249%u8B91%u4E\";\nstrHTML+=\"B4%u818F%u5D94%u664C%u6044%uFF3D%u8FA4%u7724%u6B01%u5E0B%u76B1C%u4EDB%\";\nstrHTML+=\"u7C43%u752E%u6D09%12%u303A%05%5BE%0Ek%u973C%u5E0D%u55F9%u6B17%u4E78%u4\";\nstrHTML+=\"E9C%u55BF%u79FB%u4E18%u5EA5%u951A%u6765%u546D%u6272%u8BC5%u76E7%u90C7%\";\nstrHTML+=\"u5387%u8BEE%uFF39X%03J%0F8%u2029%u6229%u77DC%u906A%u81DD%u5DC1%u664E%u\";\nstrHTML+=\"6014%uFF39%u6700%u6775%u6275%u5417B%u202B%u3037%0E%07%17%5D8%u5E3D%u67\";\nstrHTML+=\"78%u818E%u5D93%u6B48%u76B1%u6592%u5078%u4E67%u80CC%u4EFC%u5B8C%u76BC%u\";\nstrHTML+=\"8BCD%u51C3%u8FEE%u53D5%u8BBC%u3060%09%07GZ%3A%u594A%u7729%u76B1%u5B5B%\";\nstrHTML+=\"u5B35%u88CE%u5944%u4E88%u54BD%u795D%u4F7E%u702E%u8FA0%u7775%u5460%u79A\";\nstrHTML+=\"C%u6025%u60C2%uFF3E%u65D5%u514B%u5BC0%u9520%uFF3B%u4E6F%u6581%u6CB7%u6\";\nstrHTML+=\"776%u8804%u521C%u5F6E%u3032%u5C52%u50F9%u66CB%u7EFD%u76E1%u6274%u4E3C%\";\nstrHTML+=\"u661D%u59B3%u6B07%u3066%5EQGZk%04S@%0B2%u6228%u4F05%u4E79%u5C36%u818B%\";\nstrHTML+=\"u5D93%u5C34%u9588%u4EB3%u8D13%u6755%uFF6F%0AW@%5Bo%u55FF%u6094%uFF3D%u\";\nstrHTML+=\"60D1%u4F40%uFF6E%u5B80%u6020%uFF68%u5F86%u8669%uFF3D%u5768%u5F0F%uFF34\";\nstrHTML+=\"%u75E2%u82DF%uFF3B%0C%03%10%0Bo%u515D%u908C%u53DA%u8BD1%u7EEF%u81DF%u5\";\nstrHTML+=\"DC3%u4E65%u4E4F%u4ED9%u541E%u3033_%06%10%0D%3F%u6275%u62EB%u81D2%u5DC0\";\nstrHTML+=\"%u88F7%u8FEE%u4EBE%u4E39%u4E13%u9EE6%u66A7%u76E5%u7494%u5B65%u91A9%uFF\";\nstrHTML+=\"39%u5C6B%u5FF3%u7F9F%u7FCA%u76B1%u5BBA%u62C1%u7725%u8189%u5DC3%u3033%u\";\nstrHTML+=\"8FBA%u79A9%u8FA5%u5E95%u9607%u530F%u4E6C%u77DD%u661E%u4EFC%u4F60%u65CE\";\nstrHTML+=\"%u5F39%u59F2%uFF3B%u4F76%u664E%u6273%u77D0%u9036%u5DC7%u7EAB%u65D0%u6C\";\nstrHTML+=\"B6%u56E8%u538E%u4EB4%u3067Y%01@%0FiX%00A%0Bn%u6768%u65CE%u5028%u571A%u\";\nstrHTML+=\"60C6%u6229%u76BD%u720F%u6BFA%u603E%u4E29%u5C53%u9072%u4E6F%u4EB3%u50AB\";\nstrHTML+=\"%u6221%u8FBA%u79FB%u4E8F%uFF3E%u6274%u7759%u4E4E%u76B6%u4E83%u5B33%u51\";\nstrHTML+=\"17%u7C99%u661C%u65D5%u981F%u8A61%u8BD5%uFF3D%u5FF1%u673C%u704D%u72B9%u\";\nstrHTML+=\"FF35%u9EEF%u5961%u5320%u8DD1%uFF39%u538F%u89B4%u4E64%u4E1A%u7BE3%u5363\";\nstrHTML+=\"%u76B1U%0C%13%06%12%5C%06D%04ZC%01%u4FDE%u53D7%u4ED4%u4EB4%u89D6%u5F44\";\nstrHTML+=\"%u6B5D%u303B%u4F71%u661F%u73D1%u5BFC%u5341%u664A%u7203%u6BA9%u5BC9%u62\";\nstrHTML+=\"72%u8BC2%u4F55%u4E3F%u542F%u8BAC%u6272%u4EDE%uFF3D%u6272%u4E88%u606C%u\";\nstrHTML+=\"4E7B%u77D0%u9037%u4F01%u76BC%u4EBA%u3030%09ZK%07%3D%u65D0%u6CB4%u6CFD%\";\nstrHTML+=\"u902F%u76E1%u6224%u4E88%u661F%u5B07%u72DA%u76B1%uFF3E%u59E7%u67F9%u769\";\nstrHTML+=\"7%u5202%u5237%u5248%u6275%u4E8E%u90CE%u661A%u8FBD%u79AC%u728E%u6030%u7\";\nstrHTML+=\"6B6%u8BE8%uFF34%u4E83%u4ED5%u4F2D%u4E3D%u4F7B%u4E58%u6224%u4E89%u76B1%\";\nstrHTML+=\"u5117%u7CCB%u617C%u5206%u53DA%u6080%u5407%u3067i%0ES%11Zh%u976D%u5E0D%\";\nstrHTML+=\"u55F8%u6B43%u4E5E%uFF3D%u4F74%u81DF%u5DC9%u534D%u6C98%u673E%u576A%u636\";\nstrHTML+=\"0%u9667%u8BCE%u76E1%u4E55%u608B%u3032%u6BAC%u6B17%u6750%u56CC%u4E03%u9\";\nstrHTML+=\"9E3%u909E%u612D%u89F8%u7768%u4E02%u76E6%u4E89%u90C8%u5FEC%u6768%u6C2C%\";\nstrHTML+=\"u8D19%u3030%09ZK%07%3D%0C%03%10%0Bo%u6BFA%u6B45%u6221%u909E%u4E3B%u79B\";\nstrHTML+=\"4%u571A%u6096%uFF69%u8189%u5DC3%u661E%u5445%u777B%u76E6%u53EB%u4EB3%u5\";\nstrHTML+=\"406%uFF7E%04S@%0B\";\n\n\nfunction XOR(strV,strPass){\n\tvar intPassLength=strPass.length;\n\tvar re=\"\";\n\tfor(var i=0;i<strV.length;i++){\n\t\tre+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n\t}\n\treturn(re);\n}\nvar STR =\n{\n\thexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\tb64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n\tchrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\t\n\tb64_hmac_md5:\n\t\tfunction(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\t\t\n\tb64_md5:\n\t\tfunction(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\t\t\n\tbinl2b64:\n\t\tfunction(binarray){\n\t\t  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i += 3)\n\t\t  {\n\t\t    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n\t\t                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n\t\t                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n\t\t    for(var j = 0; j < 4; j++)\n\t\t    {\n\t\t      if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n\t\t      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\t\t    }\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\t\n\tbinl2hex:\n\t\tfunction(binarray){\n\t\t  var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\t\t  var str = \"\";\n\t\t  for(var i = 0; i < binarray.length * 4; i++)\n\t\t  {\n\t\t    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n\t\t           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n\t\t  }\n\t\t  return str;\n\t\t},\n\t\n\tbinl2str:\n\t\tfunction(bin){\n\t\t  var str = \"\";\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < bin.length * 32; i += this.chrsz)\n\t\t    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n\t\t  return str;\n\t\t},\n\t\t\n\tbit_rol:\n\t\tfunction(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\t\t\n\tcore_hmac_md5:\n\t\tfunction(key, data){\n\t\t  var bkey = str2binl(key);\n\t\t  if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\t\t\n\t\t  var ipad = Array(16), opad = Array(16);\n\t\t  for(var i = 0; i < 16; i++)\n\t\t  {\n\t\t    ipad[i] = bkey[i] ^ 0x36363636;\n\t\t    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t\t  }\n\t\t\n\t\t  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n\t\t  return core_md5(opad.concat(hash), 512 + 128);\n\t\t},\n\t\t\n\tcore_md5:\n\t\tfunction(x, len){\n\t\t  /* append padding */\n\t\t  x[len >> 5] |= 0x80 << ((len) % 32);\n\t\t  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\t\t\n\t\t  var a =  1732584193;\n\t\t  var b = -271733879;\n\t\t  var c = -1732584194;\n\t\t  var d =  271733878;\n\t\t\n\t\t  for(var i = 0; i < x.length; i += 16)\n\t\t  {\n\t\t    var olda = a;\n\t\t    var oldb = b;\n\t\t    var oldc = c;\n\t\t    var oldd = d;\n\t\t\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n\t\t    a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\t\t    d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n\t\t    c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n\t\t    b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\t\t\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\t\t    a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\t\t    d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\t\t    c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\t\t    b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\t\t\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\t\t    a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\t\t    d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n\t\t    c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n\t\t    b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\t\t\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n\t\t    a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\t\t    d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n\t\t    c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\t\t    b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\t\t\n\t\t    a = this.safe_add(a, olda);\n\t\t    b = this.safe_add(b, oldb);\n\t\t    c = this.safe_add(c, oldc);\n\t\t    d = this.safe_add(d, oldd);\n\t\t  }\n\t\t  return Array(a, b, c, d);\n\t\t},\n\t\t\n\thex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\t\n\thex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\t\n\tmd5:function(s){return(this.hex_md5(s));},\n\n\tmd5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n\tmd5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n\tmd5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n\tmd5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n\tmd5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n\tmd5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\t\n\tsafe_add:\n\t\tfunction(x, y){\n\t\t  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t\t  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t\t  return (msw << 16) | (lsw & 0xFFFF);\n\t\t},\n\t\t\n\tstr2binl:\n\t\tfunction(str){\n\t\t  var bin = Array();\n\t\t  var mask = (1 << this.chrsz) - 1;\n\t\t  for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n\t\t    bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n\t\t  return bin;\n\t\t},\n\n\tstr_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n\tstr_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\n\nfunction performPage(strPass){\n\tif(strPass){\n\t\tdocument.cookie=\"password=\"+escape(strPass);\n\t\tdocument.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n\t\treturn(false);\n\t}\n\t//**********如果需要自动记住密码，请将下面的注释改成代码\n\t/*\n\tvar pass=document.cookie.match(/password=([^;]+)/i);\n\tif(pass){\n\t\tpass=unescape(pass[1]);\n\t\tdocument.write(XOR(unescape(strHTML),STR.md5(pass)));\n\t\treturn(false);\n\t}\n\t*/\n\t//*************\n\tstrAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n\tstrAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n\tstrAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n\tdocument.write(strAskPass);\n}\nperformPage();\n</script> ","slug":"Selfish-human(pwd)","published":1,"updated":"2018-01-20T06:44:37.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8xc002v44waqt3ptpcb","content":"<p>牛顿力学的假设是牛顿三定律，<br>数学的假设是最基本的加减乘除，<br>在很长一段时间里，<br>我都认为，<br>这些是绝对的真理。<br><a id=\"more\"></a></p>\n<script type=\"text/javascript\">\nstrHTML=\"\";\nstrHTML+=\"%15X@%5D%u726D%u984A%u52A9%u5B03%u76E1%u5024%u8B8C%u661E%u7238%u981B%u\";\nstrHTML+=\"4E6B%u5BA9%u5FBE%uFF68%5DZC%0C%u6545%u5B5E%u76BD%u507E%u8B89%u661F%u67\";\nstrHTML+=\"61%u5798%u6719%u76E1%u5295%u51AB%u4E68%u9607%uFF3A%09P%17%5B%u574B%u5F\";\nstrHTML+=\"BA%u954E%u4E63%u6BD1%u6594%u95C7%u91F9%uFF68%5DZC%0C%u6224%u90C5%u8B9D\";\nstrHTML+=\"%u4E03%uFF3B%0C%03%10%0B%u8FBC%u4EAE%u664B%u7EED%u5B9A%u76B2%u772A%u74\";\nstrHTML+=\"34%u3067Y%01@%0F_%05BZQYCU%5E@P%1A%07%05%18Q_%5E%1A%15%0BXX%11%08%u4EF\";\nstrHTML+=\"F%u591B%u6700%u569B%u4E05%u99B4%u76B5%u8D8C%u4E6E%uFF6E%u7738%u5205%u4\";\nstrHTML+=\"EE2%u5FE9%u5922%u5B87%u954D%u5E13%u7778%u5B50%u5B69%u571F%u6718%u6804%\";\nstrHTML+=\"u4E68%u5B3C%u626A%u739C%u8069%u3032_TG%0Co%u7AE4%u7155%u612D%u89F8%u4E\";\nstrHTML+=\"3C%u8BDC%u8FBB%u5C02%u661A%u757B%u6D5A%u541F%uFF3D%u5E4A%u79BA%u6127%u\";\nstrHTML+=\"5151%u90D1%u51AE%u5718%u4EB7%u4E8E%u5F9B%u7B74%u76B1%u815C%u5EAE%u4E69\";\nstrHTML+=\"%uFF3A%u6BDE%u65D2%u4FB8%u753C%u3061%0ES%11Zh%0FW%16_2%u6220%u4E3F%u66\";\nstrHTML+=\"3B%u7645%u5E35%u6722%u5B53%u72DC%u7EA9%u8063%u76B1%u6274%u4E0F%u4F31%u\";\nstrHTML+=\"4F2A%u676A%u8FEF%u79F8%u612D%u53B2%u3067%u4E3C%u8B8A%u8FE8%u5C52%u664B\";\nstrHTML+=\"%u4ED8%u6014%u76B1%u818E%u79A0%u303A%u6731%u8FE3%u4EB3%u89DB%u5209%u4E\";\nstrHTML+=\"39%u95DF%u53DB%u503B%u3072%u8FEE%u5373%u5FF6%u7462%u5B56%u3072%u76B2%u\";\nstrHTML+=\"5B53%u79E3%uFF69%u5BE6%u76E7%u5075%u8B8F%u664C%u579E%u5682%u4ED6%u6735\";\nstrHTML+=\"%u5943%u5377%u5935%u5207%u81D8%u5DC4%u4E02%u76D7%u76BD%uFF3B%u4ED5%u4E\";\nstrHTML+=\"5B%u6287%u673C%u818F%u7504%u616B%u5FE7%u76E7%u4E8C%u7C4E%u5C77%u7153%u\";\nstrHTML+=\"88CE%u8189%u5DC3%u76B5%u5799%u5684%u6222%u6394%u5203%uFF68%u6092%u60CB\";\nstrHTML+=\"%u5C00%u673B%u708C%u53D7%u7B28%u303B%u4F71%u661F%u4E3E%u676B%u4E29%u89\";\nstrHTML+=\"1A%u53DA%u4E81%u53FD%u62F4%u57CC%u56D5%uFF3E%u90C6%u5C54%u664C%7FT%0E%\";\nstrHTML+=\"01J%u6A12%u56D5M%uFF6D%u4E67%u5C00%u661D%u65B2%u532E%u57C3%u56D9%uFF3B\";\nstrHTML+=\"%u6BE4%u59E3%u4F39%u656C%u5044%u5BC9%u76E0%u65D0%u6B51%u65D6%u6C77%u30\";\nstrHTML+=\"30Y%07%11%0C%3B%u91B2%u87E9%u5B04%u79E2%u76B1%u579E%u674D%u507F%u8B8F%\";\nstrHTML+=\"u4E6D%u661A%u4E82%u601E%u76BD%u81DD%u79F1%uFF6D%u8188%u79F4%u76E1%u4E8\";\nstrHTML+=\"F%u4E88%u4E7B%u9597%u8FED%u8879%u7772%u4EC1%u6676%uFF6F%u4E95%u752E%u4\";\nstrHTML+=\"EE5%u5E71%u7D4D%u626B%u650C%u8FBF%uFF6D%u7906%u4F2B%u5C03%u661A%u8FE1%\";\nstrHTML+=\"u4E71%u4E34%u659A%u76B4%u8FBA%u6B07%u76B1%u3067%09%06B%5D%3C%u4E8F%u7C\";\nstrHTML+=\"49%u76E1%u818F%u79A2%u6015%u76B5%u5024%u8BDA%u76E6%u6B50%u785B%u6043%u\";\nstrHTML+=\"6BAA%u5E80%u7F5F%u75A3%u3037%04%5BK%09%3A%5D%00G%5B%3F%u5279%u6B11%u8B\";\nstrHTML+=\"C7%u8BF0%u5205%u752D%u5B3D%u76E1%u674F%u8D1A%u5C00%u664C%u63C4%u5958%u\";\nstrHTML+=\"76B7%u65C3%u507D%uFF6D%u6229%u8FF6%u7772%u5436%u9955%u90C4%u4F23%u60C4\";\nstrHTML+=\"%u5420%u76E5%u6587%u5B65%uFF69%u6735%u546A%u6221%u4FDC%u6249%u8B91%u4E\";\nstrHTML+=\"B4%u818F%u5D94%u664C%u6044%uFF3D%u8FA4%u7724%u6B01%u5E0B%u76B1C%u4EDB%\";\nstrHTML+=\"u7C43%u752E%u6D09%12%u303A%05%5BE%0Ek%u973C%u5E0D%u55F9%u6B17%u4E78%u4\";\nstrHTML+=\"E9C%u55BF%u79FB%u4E18%u5EA5%u951A%u6765%u546D%u6272%u8BC5%u76E7%u90C7%\";\nstrHTML+=\"u5387%u8BEE%uFF39X%03J%0F8%u2029%u6229%u77DC%u906A%u81DD%u5DC1%u664E%u\";\nstrHTML+=\"6014%uFF39%u6700%u6775%u6275%u5417B%u202B%u3037%0E%07%17%5D8%u5E3D%u67\";\nstrHTML+=\"78%u818E%u5D93%u6B48%u76B1%u6592%u5078%u4E67%u80CC%u4EFC%u5B8C%u76BC%u\";\nstrHTML+=\"8BCD%u51C3%u8FEE%u53D5%u8BBC%u3060%09%07GZ%3A%u594A%u7729%u76B1%u5B5B%\";\nstrHTML+=\"u5B35%u88CE%u5944%u4E88%u54BD%u795D%u4F7E%u702E%u8FA0%u7775%u5460%u79A\";\nstrHTML+=\"C%u6025%u60C2%uFF3E%u65D5%u514B%u5BC0%u9520%uFF3B%u4E6F%u6581%u6CB7%u6\";\nstrHTML+=\"776%u8804%u521C%u5F6E%u3032%u5C52%u50F9%u66CB%u7EFD%u76E1%u6274%u4E3C%\";\nstrHTML+=\"u661D%u59B3%u6B07%u3066%5EQGZk%04S@%0B2%u6228%u4F05%u4E79%u5C36%u818B%\";\nstrHTML+=\"u5D93%u5C34%u9588%u4EB3%u8D13%u6755%uFF6F%0AW@%5Bo%u55FF%u6094%uFF3D%u\";\nstrHTML+=\"60D1%u4F40%uFF6E%u5B80%u6020%uFF68%u5F86%u8669%uFF3D%u5768%u5F0F%uFF34\";\nstrHTML+=\"%u75E2%u82DF%uFF3B%0C%03%10%0Bo%u515D%u908C%u53DA%u8BD1%u7EEF%u81DF%u5\";\nstrHTML+=\"DC3%u4E65%u4E4F%u4ED9%u541E%u3033_%06%10%0D%3F%u6275%u62EB%u81D2%u5DC0\";\nstrHTML+=\"%u88F7%u8FEE%u4EBE%u4E39%u4E13%u9EE6%u66A7%u76E5%u7494%u5B65%u91A9%uFF\";\nstrHTML+=\"39%u5C6B%u5FF3%u7F9F%u7FCA%u76B1%u5BBA%u62C1%u7725%u8189%u5DC3%u3033%u\";\nstrHTML+=\"8FBA%u79A9%u8FA5%u5E95%u9607%u530F%u4E6C%u77DD%u661E%u4EFC%u4F60%u65CE\";\nstrHTML+=\"%u5F39%u59F2%uFF3B%u4F76%u664E%u6273%u77D0%u9036%u5DC7%u7EAB%u65D0%u6C\";\nstrHTML+=\"B6%u56E8%u538E%u4EB4%u3067Y%01@%0FiX%00A%0Bn%u6768%u65CE%u5028%u571A%u\";\nstrHTML+=\"60C6%u6229%u76BD%u720F%u6BFA%u603E%u4E29%u5C53%u9072%u4E6F%u4EB3%u50AB\";\nstrHTML+=\"%u6221%u8FBA%u79FB%u4E8F%uFF3E%u6274%u7759%u4E4E%u76B6%u4E83%u5B33%u51\";\nstrHTML+=\"17%u7C99%u661C%u65D5%u981F%u8A61%u8BD5%uFF3D%u5FF1%u673C%u704D%u72B9%u\";\nstrHTML+=\"FF35%u9EEF%u5961%u5320%u8DD1%uFF39%u538F%u89B4%u4E64%u4E1A%u7BE3%u5363\";\nstrHTML+=\"%u76B1U%0C%13%06%12%5C%06D%04ZC%01%u4FDE%u53D7%u4ED4%u4EB4%u89D6%u5F44\";\nstrHTML+=\"%u6B5D%u303B%u4F71%u661F%u73D1%u5BFC%u5341%u664A%u7203%u6BA9%u5BC9%u62\";\nstrHTML+=\"72%u8BC2%u4F55%u4E3F%u542F%u8BAC%u6272%u4EDE%uFF3D%u6272%u4E88%u606C%u\";\nstrHTML+=\"4E7B%u77D0%u9037%u4F01%u76BC%u4EBA%u3030%09ZK%07%3D%u65D0%u6CB4%u6CFD%\";\nstrHTML+=\"u902F%u76E1%u6224%u4E88%u661F%u5B07%u72DA%u76B1%uFF3E%u59E7%u67F9%u769\";\nstrHTML+=\"7%u5202%u5237%u5248%u6275%u4E8E%u90CE%u661A%u8FBD%u79AC%u728E%u6030%u7\";\nstrHTML+=\"6B6%u8BE8%uFF34%u4E83%u4ED5%u4F2D%u4E3D%u4F7B%u4E58%u6224%u4E89%u76B1%\";\nstrHTML+=\"u5117%u7CCB%u617C%u5206%u53DA%u6080%u5407%u3067i%0ES%11Zh%u976D%u5E0D%\";\nstrHTML+=\"u55F8%u6B43%u4E5E%uFF3D%u4F74%u81DF%u5DC9%u534D%u6C98%u673E%u576A%u636\";\nstrHTML+=\"0%u9667%u8BCE%u76E1%u4E55%u608B%u3032%u6BAC%u6B17%u6750%u56CC%u4E03%u9\";\nstrHTML+=\"9E3%u909E%u612D%u89F8%u7768%u4E02%u76E6%u4E89%u90C8%u5FEC%u6768%u6C2C%\";\nstrHTML+=\"u8D19%u3030%09ZK%07%3D%0C%03%10%0Bo%u6BFA%u6B45%u6221%u909E%u4E3B%u79B\";\nstrHTML+=\"4%u571A%u6096%uFF69%u8189%u5DC3%u661E%u5445%u777B%u76E6%u53EB%u4EB3%u5\";\nstrHTML+=\"406%uFF7E%04S@%0B\";\n\n\nfunction XOR(strV,strPass){\n    var intPassLength=strPass.length;\n    var re=\"\";\n    for(var i=0;i<strV.length;i++){\n        re+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n    }\n    return(re);\n}\nvar STR =\n{\n    hexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n    b64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n    chrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n    b64_hmac_md5:\n        function(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\n    b64_md5:\n        function(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\n    binl2b64:\n        function(binarray){\n          var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i += 3)\n          {\n            var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n                        | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n                        |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n            for(var j = 0; j < 4; j++)\n            {\n              if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n              else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n            }\n          }\n          return str;\n        },\n\n    binl2hex:\n        function(binarray){\n          var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i++)\n          {\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n                   hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n          }\n          return str;\n        },\n\n    binl2str:\n        function(bin){\n          var str = \"\";\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < bin.length * 32; i += this.chrsz)\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n          return str;\n        },\n\n    bit_rol:\n        function(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\n    core_hmac_md5:\n        function(key, data){\n          var bkey = str2binl(key);\n          if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\n          var ipad = Array(16), opad = Array(16);\n          for(var i = 0; i < 16; i++)\n          {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n          }\n\n          var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n          return core_md5(opad.concat(hash), 512 + 128);\n        },\n\n    core_md5:\n        function(x, len){\n          /* append padding */\n          x[len >> 5] |= 0x80 << ((len) % 32);\n          x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n          var a =  1732584193;\n          var b = -271733879;\n          var c = -1732584194;\n          var d =  271733878;\n\n          for(var i = 0; i < x.length; i += 16)\n          {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n            d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n            d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n            d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n            d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n            c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n            d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n            d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n            d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n            d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n          }\n          return Array(a, b, c, d);\n        },\n\n    hex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\n    hex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\n    md5:function(s){return(this.hex_md5(s));},\n\n    md5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n    md5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n    md5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n    md5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n    md5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n    md5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\n    safe_add:\n        function(x, y){\n          var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n          var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n          return (msw << 16) | (lsw & 0xFFFF);\n        },\n\n    str2binl:\n        function(str){\n          var bin = Array();\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n            bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n          return bin;\n        },\n\n    str_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n    str_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\n\nfunction performPage(strPass){\n    if(strPass){\n        document.cookie=\"password=\"+escape(strPass);\n        document.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n        return(false);\n    }\n    //**********如果需要自动记住密码，请将下面的注释改成代码\n    /*\n    var pass=document.cookie.match(/password=([^;]+)/i);\n    if(pass){\n        pass=unescape(pass[1]);\n        document.write(XOR(unescape(strHTML),STR.md5(pass)));\n        return(false);\n    }\n    */\n    //*************\n    strAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n    strAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n    strAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n    document.write(strAskPass);\n}\nperformPage();\n</script> ","excerpt":"<p>牛顿力学的假设是牛顿三定律，<br>数学的假设是最基本的加减乘除，<br>在很长一段时间里，<br>我都认为，<br>这些是绝对的真理。<br>","more":"</p>\n<script type=\"text/javascript\">\nstrHTML=\"\";\nstrHTML+=\"%15X@%5D%u726D%u984A%u52A9%u5B03%u76E1%u5024%u8B8C%u661E%u7238%u981B%u\";\nstrHTML+=\"4E6B%u5BA9%u5FBE%uFF68%5DZC%0C%u6545%u5B5E%u76BD%u507E%u8B89%u661F%u67\";\nstrHTML+=\"61%u5798%u6719%u76E1%u5295%u51AB%u4E68%u9607%uFF3A%09P%17%5B%u574B%u5F\";\nstrHTML+=\"BA%u954E%u4E63%u6BD1%u6594%u95C7%u91F9%uFF68%5DZC%0C%u6224%u90C5%u8B9D\";\nstrHTML+=\"%u4E03%uFF3B%0C%03%10%0B%u8FBC%u4EAE%u664B%u7EED%u5B9A%u76B2%u772A%u74\";\nstrHTML+=\"34%u3067Y%01@%0F_%05BZQYCU%5E@P%1A%07%05%18Q_%5E%1A%15%0BXX%11%08%u4EF\";\nstrHTML+=\"F%u591B%u6700%u569B%u4E05%u99B4%u76B5%u8D8C%u4E6E%uFF6E%u7738%u5205%u4\";\nstrHTML+=\"EE2%u5FE9%u5922%u5B87%u954D%u5E13%u7778%u5B50%u5B69%u571F%u6718%u6804%\";\nstrHTML+=\"u4E68%u5B3C%u626A%u739C%u8069%u3032_TG%0Co%u7AE4%u7155%u612D%u89F8%u4E\";\nstrHTML+=\"3C%u8BDC%u8FBB%u5C02%u661A%u757B%u6D5A%u541F%uFF3D%u5E4A%u79BA%u6127%u\";\nstrHTML+=\"5151%u90D1%u51AE%u5718%u4EB7%u4E8E%u5F9B%u7B74%u76B1%u815C%u5EAE%u4E69\";\nstrHTML+=\"%uFF3A%u6BDE%u65D2%u4FB8%u753C%u3061%0ES%11Zh%0FW%16_2%u6220%u4E3F%u66\";\nstrHTML+=\"3B%u7645%u5E35%u6722%u5B53%u72DC%u7EA9%u8063%u76B1%u6274%u4E0F%u4F31%u\";\nstrHTML+=\"4F2A%u676A%u8FEF%u79F8%u612D%u53B2%u3067%u4E3C%u8B8A%u8FE8%u5C52%u664B\";\nstrHTML+=\"%u4ED8%u6014%u76B1%u818E%u79A0%u303A%u6731%u8FE3%u4EB3%u89DB%u5209%u4E\";\nstrHTML+=\"39%u95DF%u53DB%u503B%u3072%u8FEE%u5373%u5FF6%u7462%u5B56%u3072%u76B2%u\";\nstrHTML+=\"5B53%u79E3%uFF69%u5BE6%u76E7%u5075%u8B8F%u664C%u579E%u5682%u4ED6%u6735\";\nstrHTML+=\"%u5943%u5377%u5935%u5207%u81D8%u5DC4%u4E02%u76D7%u76BD%uFF3B%u4ED5%u4E\";\nstrHTML+=\"5B%u6287%u673C%u818F%u7504%u616B%u5FE7%u76E7%u4E8C%u7C4E%u5C77%u7153%u\";\nstrHTML+=\"88CE%u8189%u5DC3%u76B5%u5799%u5684%u6222%u6394%u5203%uFF68%u6092%u60CB\";\nstrHTML+=\"%u5C00%u673B%u708C%u53D7%u7B28%u303B%u4F71%u661F%u4E3E%u676B%u4E29%u89\";\nstrHTML+=\"1A%u53DA%u4E81%u53FD%u62F4%u57CC%u56D5%uFF3E%u90C6%u5C54%u664C%7FT%0E%\";\nstrHTML+=\"01J%u6A12%u56D5M%uFF6D%u4E67%u5C00%u661D%u65B2%u532E%u57C3%u56D9%uFF3B\";\nstrHTML+=\"%u6BE4%u59E3%u4F39%u656C%u5044%u5BC9%u76E0%u65D0%u6B51%u65D6%u6C77%u30\";\nstrHTML+=\"30Y%07%11%0C%3B%u91B2%u87E9%u5B04%u79E2%u76B1%u579E%u674D%u507F%u8B8F%\";\nstrHTML+=\"u4E6D%u661A%u4E82%u601E%u76BD%u81DD%u79F1%uFF6D%u8188%u79F4%u76E1%u4E8\";\nstrHTML+=\"F%u4E88%u4E7B%u9597%u8FED%u8879%u7772%u4EC1%u6676%uFF6F%u4E95%u752E%u4\";\nstrHTML+=\"EE5%u5E71%u7D4D%u626B%u650C%u8FBF%uFF6D%u7906%u4F2B%u5C03%u661A%u8FE1%\";\nstrHTML+=\"u4E71%u4E34%u659A%u76B4%u8FBA%u6B07%u76B1%u3067%09%06B%5D%3C%u4E8F%u7C\";\nstrHTML+=\"49%u76E1%u818F%u79A2%u6015%u76B5%u5024%u8BDA%u76E6%u6B50%u785B%u6043%u\";\nstrHTML+=\"6BAA%u5E80%u7F5F%u75A3%u3037%04%5BK%09%3A%5D%00G%5B%3F%u5279%u6B11%u8B\";\nstrHTML+=\"C7%u8BF0%u5205%u752D%u5B3D%u76E1%u674F%u8D1A%u5C00%u664C%u63C4%u5958%u\";\nstrHTML+=\"76B7%u65C3%u507D%uFF6D%u6229%u8FF6%u7772%u5436%u9955%u90C4%u4F23%u60C4\";\nstrHTML+=\"%u5420%u76E5%u6587%u5B65%uFF69%u6735%u546A%u6221%u4FDC%u6249%u8B91%u4E\";\nstrHTML+=\"B4%u818F%u5D94%u664C%u6044%uFF3D%u8FA4%u7724%u6B01%u5E0B%u76B1C%u4EDB%\";\nstrHTML+=\"u7C43%u752E%u6D09%12%u303A%05%5BE%0Ek%u973C%u5E0D%u55F9%u6B17%u4E78%u4\";\nstrHTML+=\"E9C%u55BF%u79FB%u4E18%u5EA5%u951A%u6765%u546D%u6272%u8BC5%u76E7%u90C7%\";\nstrHTML+=\"u5387%u8BEE%uFF39X%03J%0F8%u2029%u6229%u77DC%u906A%u81DD%u5DC1%u664E%u\";\nstrHTML+=\"6014%uFF39%u6700%u6775%u6275%u5417B%u202B%u3037%0E%07%17%5D8%u5E3D%u67\";\nstrHTML+=\"78%u818E%u5D93%u6B48%u76B1%u6592%u5078%u4E67%u80CC%u4EFC%u5B8C%u76BC%u\";\nstrHTML+=\"8BCD%u51C3%u8FEE%u53D5%u8BBC%u3060%09%07GZ%3A%u594A%u7729%u76B1%u5B5B%\";\nstrHTML+=\"u5B35%u88CE%u5944%u4E88%u54BD%u795D%u4F7E%u702E%u8FA0%u7775%u5460%u79A\";\nstrHTML+=\"C%u6025%u60C2%uFF3E%u65D5%u514B%u5BC0%u9520%uFF3B%u4E6F%u6581%u6CB7%u6\";\nstrHTML+=\"776%u8804%u521C%u5F6E%u3032%u5C52%u50F9%u66CB%u7EFD%u76E1%u6274%u4E3C%\";\nstrHTML+=\"u661D%u59B3%u6B07%u3066%5EQGZk%04S@%0B2%u6228%u4F05%u4E79%u5C36%u818B%\";\nstrHTML+=\"u5D93%u5C34%u9588%u4EB3%u8D13%u6755%uFF6F%0AW@%5Bo%u55FF%u6094%uFF3D%u\";\nstrHTML+=\"60D1%u4F40%uFF6E%u5B80%u6020%uFF68%u5F86%u8669%uFF3D%u5768%u5F0F%uFF34\";\nstrHTML+=\"%u75E2%u82DF%uFF3B%0C%03%10%0Bo%u515D%u908C%u53DA%u8BD1%u7EEF%u81DF%u5\";\nstrHTML+=\"DC3%u4E65%u4E4F%u4ED9%u541E%u3033_%06%10%0D%3F%u6275%u62EB%u81D2%u5DC0\";\nstrHTML+=\"%u88F7%u8FEE%u4EBE%u4E39%u4E13%u9EE6%u66A7%u76E5%u7494%u5B65%u91A9%uFF\";\nstrHTML+=\"39%u5C6B%u5FF3%u7F9F%u7FCA%u76B1%u5BBA%u62C1%u7725%u8189%u5DC3%u3033%u\";\nstrHTML+=\"8FBA%u79A9%u8FA5%u5E95%u9607%u530F%u4E6C%u77DD%u661E%u4EFC%u4F60%u65CE\";\nstrHTML+=\"%u5F39%u59F2%uFF3B%u4F76%u664E%u6273%u77D0%u9036%u5DC7%u7EAB%u65D0%u6C\";\nstrHTML+=\"B6%u56E8%u538E%u4EB4%u3067Y%01@%0FiX%00A%0Bn%u6768%u65CE%u5028%u571A%u\";\nstrHTML+=\"60C6%u6229%u76BD%u720F%u6BFA%u603E%u4E29%u5C53%u9072%u4E6F%u4EB3%u50AB\";\nstrHTML+=\"%u6221%u8FBA%u79FB%u4E8F%uFF3E%u6274%u7759%u4E4E%u76B6%u4E83%u5B33%u51\";\nstrHTML+=\"17%u7C99%u661C%u65D5%u981F%u8A61%u8BD5%uFF3D%u5FF1%u673C%u704D%u72B9%u\";\nstrHTML+=\"FF35%u9EEF%u5961%u5320%u8DD1%uFF39%u538F%u89B4%u4E64%u4E1A%u7BE3%u5363\";\nstrHTML+=\"%u76B1U%0C%13%06%12%5C%06D%04ZC%01%u4FDE%u53D7%u4ED4%u4EB4%u89D6%u5F44\";\nstrHTML+=\"%u6B5D%u303B%u4F71%u661F%u73D1%u5BFC%u5341%u664A%u7203%u6BA9%u5BC9%u62\";\nstrHTML+=\"72%u8BC2%u4F55%u4E3F%u542F%u8BAC%u6272%u4EDE%uFF3D%u6272%u4E88%u606C%u\";\nstrHTML+=\"4E7B%u77D0%u9037%u4F01%u76BC%u4EBA%u3030%09ZK%07%3D%u65D0%u6CB4%u6CFD%\";\nstrHTML+=\"u902F%u76E1%u6224%u4E88%u661F%u5B07%u72DA%u76B1%uFF3E%u59E7%u67F9%u769\";\nstrHTML+=\"7%u5202%u5237%u5248%u6275%u4E8E%u90CE%u661A%u8FBD%u79AC%u728E%u6030%u7\";\nstrHTML+=\"6B6%u8BE8%uFF34%u4E83%u4ED5%u4F2D%u4E3D%u4F7B%u4E58%u6224%u4E89%u76B1%\";\nstrHTML+=\"u5117%u7CCB%u617C%u5206%u53DA%u6080%u5407%u3067i%0ES%11Zh%u976D%u5E0D%\";\nstrHTML+=\"u55F8%u6B43%u4E5E%uFF3D%u4F74%u81DF%u5DC9%u534D%u6C98%u673E%u576A%u636\";\nstrHTML+=\"0%u9667%u8BCE%u76E1%u4E55%u608B%u3032%u6BAC%u6B17%u6750%u56CC%u4E03%u9\";\nstrHTML+=\"9E3%u909E%u612D%u89F8%u7768%u4E02%u76E6%u4E89%u90C8%u5FEC%u6768%u6C2C%\";\nstrHTML+=\"u8D19%u3030%09ZK%07%3D%0C%03%10%0Bo%u6BFA%u6B45%u6221%u909E%u4E3B%u79B\";\nstrHTML+=\"4%u571A%u6096%uFF69%u8189%u5DC3%u661E%u5445%u777B%u76E6%u53EB%u4EB3%u5\";\nstrHTML+=\"406%uFF7E%04S@%0B\";\n\n\nfunction XOR(strV,strPass){\n    var intPassLength=strPass.length;\n    var re=\"\";\n    for(var i=0;i<strV.length;i++){\n        re+=String.fromCharCode(strV.charCodeAt(i)^strPass.charCodeAt(i%intPassLength));\n    }\n    return(re);\n}\nvar STR =\n{\n    hexcase : 0,  /* hex output format. 0 - lowercase; 1 - uppercase        */\n    b64pad  : \"\", /* base-64 pad character. \"=\" for strict RFC compliance   */\n    chrsz   : 8,  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n    b64_hmac_md5:\n        function(key, data) { return binl2b64(core_hmac_md5(key, data)); },\n\n    b64_md5:\n        function(s){ return binl2b64(core_md5(str2binl(s), s.length * this.chrsz));},\n\n    binl2b64:\n        function(binarray){\n          var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i += 3)\n          {\n            var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n                        | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n                        |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n            for(var j = 0; j < 4; j++)\n            {\n              if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n              else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n            }\n          }\n          return str;\n        },\n\n    binl2hex:\n        function(binarray){\n          var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n          var str = \"\";\n          for(var i = 0; i < binarray.length * 4; i++)\n          {\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n                   hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n          }\n          return str;\n        },\n\n    binl2str:\n        function(bin){\n          var str = \"\";\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < bin.length * 32; i += this.chrsz)\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n          return str;\n        },\n\n    bit_rol:\n        function(num, cnt){return (num << cnt) | (num >>> (32 - cnt));},\n\n    core_hmac_md5:\n        function(key, data){\n          var bkey = str2binl(key);\n          if(bkey.length > 16) bkey = core_md5(bkey, key.length * this.chrsz);\n\n          var ipad = Array(16), opad = Array(16);\n          for(var i = 0; i < 16; i++)\n          {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n          }\n\n          var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * this.chrsz);\n          return core_md5(opad.concat(hash), 512 + 128);\n        },\n\n    core_md5:\n        function(x, len){\n          /* append padding */\n          x[len >> 5] |= 0x80 << ((len) % 32);\n          x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n          var a =  1732584193;\n          var b = -271733879;\n          var c = -1732584194;\n          var d =  271733878;\n\n          for(var i = 0; i < x.length; i += 16)\n          {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n            d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n            d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n            d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n            d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n            c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n            d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n            d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n            d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n            d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n          }\n          return Array(a, b, c, d);\n        },\n\n    hex_hmac_md5:function(key, data){ return this.binl2hex(this.core_hmac_md5(key, data)); },\n\n    hex_md5:function(s){return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));},\n\n    md5:function(s){return(this.hex_md5(s));},\n\n    md5_cmn:function(q, a, b, x, s, t){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);},\n\n    md5_ff:function(a, b, c, d, x, s, t){return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);},\n\n    md5_gg:function(a, b, c, d, x, s, t){return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);},\n\n    md5_hh:function(a, b, c, d, x, s, t){return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);},\n\n    md5_ii:function(a, b, c, d, x, s, t){return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);},\n\n    md5_vm_test:function(){return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";},\n\n    safe_add:\n        function(x, y){\n          var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n          var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n          return (msw << 16) | (lsw & 0xFFFF);\n        },\n\n    str2binl:\n        function(str){\n          var bin = Array();\n          var mask = (1 << this.chrsz) - 1;\n          for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n            bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n          return bin;\n        },\n\n    str_hmac_md5:function(key, data){ return binl2str(core_hmac_md5(key, data)); },\n\n    str_md5:function(s){ return binl2str(core_md5(str2binl(s), s.length * this.chrsz));}\n}\n\nfunction performPage(strPass){\n    if(strPass){\n        document.cookie=\"password=\"+escape(strPass);\n        document.getElementsByClassName('article-entry')[0].innerHTML=(XOR(unescape(strHTML),STR.md5(strPass)));\n        return(false);\n    }\n    //**********如果需要自动记住密码，请将下面的注释改成代码\n    /*\n    var pass=document.cookie.match(/password=([^;]+)/i);\n    if(pass){\n        pass=unescape(pass[1]);\n        document.write(XOR(unescape(strHTML),STR.md5(pass)));\n        return(false);\n    }\n    */\n    //*************\n    strAskPass=\"<table cellspacing=0 cellpadding=0 width=100% height=100% align=center valign=middle><tr><td>&nbsp;</td><td align=center>\";\n    strAskPass+=\"<b>Password:</b><input style=\\\"border-width:1px;\\\" type=password id=ps01 onkeydown=\\\"if(event.keyCode==13){performPage(this.value);}\\\">\";\n    strAskPass+=\"<input style=\\\"border-width:1px;\\\" type=button onclick=\\\"performPage(ps01.value);\\\" value=Enter></td><td>&nbsp;</td></tr></table>\";\n    document.write(strAskPass);\n}\nperformPage();\n</script>"},{"title":"Session学习笔记","date":"2017-04-05T06:05:25.000Z","toc":true,"_content":"Session\n<!--more-->\n# HttpSession概述\nHttpSession是由JavaWeb提供的，用来会话跟踪的类。session是服务器端对象，保存在服务器。\nHttpSession是Servlet三大域对象之一(request、session、application(ServletContext)),所以它有setAttribute()、getAttribute()、removeAttribute()\nHttpSession底层依赖Cookie，或是URL重写!\n<hr>\n# HttpSession的作用\n会话范围:会话范围是某个用户从首次访问服务器开始，到该用户关闭浏览器结束！\n服务器会为每个客户端创建一个session对象,session就好比客户在服务器端的账户，他们被服务器保存在一个Map中，这个Map被称之为session缓存!\nServlet中得到session对象:HttpSession session = request.getSession();\nJsp中得到session对象:不用创建，是内置对象。\n<hr>\n# HttpSession原理\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1febtfb12h6j30vv06djxv.jpg)\n# HttpSession其他方法:\nString getId():获取sessionId;\nint getMaxInactiveInterval():获取session可以的最大不活动时间(秒)，默认为30分钟。\nvoid invalidate():让session失效。\nboolean isNew():查看session是否为新。\nweb.xml中配置session的最大不活动时间\n```\n<session-config>\n\t<session-timeout>30</session-timeout>\n</session-config>\n```\n<hr>\n# URL重写\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1febu4yhcj7j30tw040768.jpg)\n\n\n","source":"_posts/Session学习笔记.md","raw":"---\ntitle: Session学习笔记\ndate: 2017-04-05 14:05:25\ntags:\n- Session\n- Web\ntoc: true\n---\nSession\n<!--more-->\n# HttpSession概述\nHttpSession是由JavaWeb提供的，用来会话跟踪的类。session是服务器端对象，保存在服务器。\nHttpSession是Servlet三大域对象之一(request、session、application(ServletContext)),所以它有setAttribute()、getAttribute()、removeAttribute()\nHttpSession底层依赖Cookie，或是URL重写!\n<hr>\n# HttpSession的作用\n会话范围:会话范围是某个用户从首次访问服务器开始，到该用户关闭浏览器结束！\n服务器会为每个客户端创建一个session对象,session就好比客户在服务器端的账户，他们被服务器保存在一个Map中，这个Map被称之为session缓存!\nServlet中得到session对象:HttpSession session = request.getSession();\nJsp中得到session对象:不用创建，是内置对象。\n<hr>\n# HttpSession原理\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1febtfb12h6j30vv06djxv.jpg)\n# HttpSession其他方法:\nString getId():获取sessionId;\nint getMaxInactiveInterval():获取session可以的最大不活动时间(秒)，默认为30分钟。\nvoid invalidate():让session失效。\nboolean isNew():查看session是否为新。\nweb.xml中配置session的最大不活动时间\n```\n<session-config>\n\t<session-timeout>30</session-timeout>\n</session-config>\n```\n<hr>\n# URL重写\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1febu4yhcj7j30tw040768.jpg)\n\n\n","slug":"Session学习笔记","published":1,"updated":"2018-01-20T06:44:37.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8xf002y44wa5j7vngda","content":"<p>Session<br><a id=\"more\"></a></p>\n<h1 id=\"HttpSession概述\"><a href=\"#HttpSession概述\" class=\"headerlink\" title=\"HttpSession概述\"></a>HttpSession概述</h1><p>HttpSession是由JavaWeb提供的，用来会话跟踪的类。session是服务器端对象，保存在服务器。<br>HttpSession是Servlet三大域对象之一(request、session、application(ServletContext)),所以它有setAttribute()、getAttribute()、removeAttribute()<br>HttpSession底层依赖Cookie，或是URL重写!</p>\n<p><hr></p>\n<h1 id=\"HttpSession的作用\"><a href=\"#HttpSession的作用\" class=\"headerlink\" title=\"HttpSession的作用\"></a>HttpSession的作用</h1><p>会话范围:会话范围是某个用户从首次访问服务器开始，到该用户关闭浏览器结束！<br>服务器会为每个客户端创建一个session对象,session就好比客户在服务器端的账户，他们被服务器保存在一个Map中，这个Map被称之为session缓存!<br>Servlet中得到session对象:HttpSession session = request.getSession();<br>Jsp中得到session对象:不用创建，是内置对象。</p>\n<p><hr></p>\n<h1 id=\"HttpSession原理\"><a href=\"#HttpSession原理\" class=\"headerlink\" title=\"HttpSession原理\"></a>HttpSession原理</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1febtfb12h6j30vv06djxv.jpg\" alt=\"\"></p>\n<h1 id=\"HttpSession其他方法\"><a href=\"#HttpSession其他方法\" class=\"headerlink\" title=\"HttpSession其他方法:\"></a>HttpSession其他方法:</h1><p>String getId():获取sessionId;<br>int getMaxInactiveInterval():获取session可以的最大不活动时间(秒)，默认为30分钟。<br>void invalidate():让session失效。<br>boolean isNew():查看session是否为新。<br>web.xml中配置session的最大不活动时间<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">session-config</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">session-timeout</span>&gt;</span>30<span class=\"tag\">&lt;/<span class=\"name\">session-timeout</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">session-config</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><hr></p>\n<h1 id=\"URL重写\"><a href=\"#URL重写\" class=\"headerlink\" title=\"URL重写\"></a>URL重写</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1febu4yhcj7j30tw040768.jpg\" alt=\"\"></p>\n","excerpt":"<p>Session<br>","more":"</p>\n<h1 id=\"HttpSession概述\"><a href=\"#HttpSession概述\" class=\"headerlink\" title=\"HttpSession概述\"></a>HttpSession概述</h1><p>HttpSession是由JavaWeb提供的，用来会话跟踪的类。session是服务器端对象，保存在服务器。<br>HttpSession是Servlet三大域对象之一(request、session、application(ServletContext)),所以它有setAttribute()、getAttribute()、removeAttribute()<br>HttpSession底层依赖Cookie，或是URL重写!</p>\n<p><hr></p>\n<h1 id=\"HttpSession的作用\"><a href=\"#HttpSession的作用\" class=\"headerlink\" title=\"HttpSession的作用\"></a>HttpSession的作用</h1><p>会话范围:会话范围是某个用户从首次访问服务器开始，到该用户关闭浏览器结束！<br>服务器会为每个客户端创建一个session对象,session就好比客户在服务器端的账户，他们被服务器保存在一个Map中，这个Map被称之为session缓存!<br>Servlet中得到session对象:HttpSession session = request.getSession();<br>Jsp中得到session对象:不用创建，是内置对象。</p>\n<p><hr></p>\n<h1 id=\"HttpSession原理\"><a href=\"#HttpSession原理\" class=\"headerlink\" title=\"HttpSession原理\"></a>HttpSession原理</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1febtfb12h6j30vv06djxv.jpg\" alt=\"\"></p>\n<h1 id=\"HttpSession其他方法\"><a href=\"#HttpSession其他方法\" class=\"headerlink\" title=\"HttpSession其他方法:\"></a>HttpSession其他方法:</h1><p>String getId():获取sessionId;<br>int getMaxInactiveInterval():获取session可以的最大不活动时间(秒)，默认为30分钟。<br>void invalidate():让session失效。<br>boolean isNew():查看session是否为新。<br>web.xml中配置session的最大不活动时间<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">session-config</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">session-timeout</span>&gt;</span>30<span class=\"tag\">&lt;/<span class=\"name\">session-timeout</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">session-config</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><hr></p>\n<h1 id=\"URL重写\"><a href=\"#URL重写\" class=\"headerlink\" title=\"URL重写\"></a>URL重写</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1febu4yhcj7j30tw040768.jpg\" alt=\"\"></p>"},{"title":"Servlet线程安全","date":"2017-05-20T01:56:00.000Z","toc":true,"_content":"昨天写了一个红包的小程序，其中不可避免的使用了实例变量。\n于是便去查了一些Servlet线程安全的博客，将一些重点总结在这里。\n<!--more-->\n# 介绍\nJSP/Servlet容器默认是采用单实例多线程\n\n多线程下每个线程对局部变量都会有自己的一份copy，这样对局部变量的修改只会影响到自己的copy而不会对别的线程产生影响，所以这是线程安全的。\n\n但是对于实例变量来说，由于servlet在Tomcat中是以单例模式存在的，所有的线程共享实例变量。多个线程对共享资源的访问就造成了线程不安全问题。\n# 解决方法\n很遗憾的是，并没有查到很好的解决方法。\n如果你的项目也跟我一样无法避免使用实例变量的话。\n我建议您在共享代码块上加上synchronized关键字。","source":"_posts/Servlet线程安全.md","raw":"---\ntitle: Servlet线程安全\ndate: 2017-05-20 09:56:00\ntags:\n- Web\ntoc: true\n---\n昨天写了一个红包的小程序，其中不可避免的使用了实例变量。\n于是便去查了一些Servlet线程安全的博客，将一些重点总结在这里。\n<!--more-->\n# 介绍\nJSP/Servlet容器默认是采用单实例多线程\n\n多线程下每个线程对局部变量都会有自己的一份copy，这样对局部变量的修改只会影响到自己的copy而不会对别的线程产生影响，所以这是线程安全的。\n\n但是对于实例变量来说，由于servlet在Tomcat中是以单例模式存在的，所有的线程共享实例变量。多个线程对共享资源的访问就造成了线程不安全问题。\n# 解决方法\n很遗憾的是，并没有查到很好的解决方法。\n如果你的项目也跟我一样无法避免使用实例变量的话。\n我建议您在共享代码块上加上synchronized关键字。","slug":"Servlet线程安全","published":1,"updated":"2018-01-20T06:44:37.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8xk003044wa0gwo7brq","content":"<p>昨天写了一个红包的小程序，其中不可避免的使用了实例变量。<br>于是便去查了一些Servlet线程安全的博客，将一些重点总结在这里。<br><a id=\"more\"></a></p>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>JSP/Servlet容器默认是采用单实例多线程</p>\n<p>多线程下每个线程对局部变量都会有自己的一份copy，这样对局部变量的修改只会影响到自己的copy而不会对别的线程产生影响，所以这是线程安全的。</p>\n<p>但是对于实例变量来说，由于servlet在Tomcat中是以单例模式存在的，所有的线程共享实例变量。多个线程对共享资源的访问就造成了线程不安全问题。</p>\n<h1 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h1><p>很遗憾的是，并没有查到很好的解决方法。<br>如果你的项目也跟我一样无法避免使用实例变量的话。<br>我建议您在共享代码块上加上synchronized关键字。</p>\n","excerpt":"<p>昨天写了一个红包的小程序，其中不可避免的使用了实例变量。<br>于是便去查了一些Servlet线程安全的博客，将一些重点总结在这里。<br>","more":"</p>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>JSP/Servlet容器默认是采用单实例多线程</p>\n<p>多线程下每个线程对局部变量都会有自己的一份copy，这样对局部变量的修改只会影响到自己的copy而不会对别的线程产生影响，所以这是线程安全的。</p>\n<p>但是对于实例变量来说，由于servlet在Tomcat中是以单例模式存在的，所有的线程共享实例变量。多个线程对共享资源的访问就造成了线程不安全问题。</p>\n<h1 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h1><p>很遗憾的是，并没有查到很好的解决方法。<br>如果你的项目也跟我一样无法避免使用实例变量的话。<br>我建议您在共享代码块上加上synchronized关键字。</p>"},{"title":"bat脚本自动发布hexo博客","toc":true,"date":"2017-12-02T05:44:42.000Z","_content":"因为hexo博客发布就是hexo clean,hexo g,hexo d 3条语句，所以为了省事就百度bat脚本写了一个一键发布的脚本。\n<!--more-->\n以下是代码部分，供大家学习分享\n### bat脚本\n```\n@echo off\nrem 下面2行表示进入到hexo博客根目录。\nC:\ncd \\Users\\444\\hexo-demo\\\nrem 注意最后一行必须连写，因为执行hexo就不会返回原来的cmd，所以在hexo下执行完所有命令。前面3个git命令用来备份博客。\necho Job start!\ngit add . && git commit -m \"0点备份\" && git push -u origin master && hexo clean && hexo g && hexo d && echo Job is done! && pause\n```\n### windows下设置计划任务\n```\nschtasks /create /tn \"My App\" /tr C:\\\\Users\\\\444\\\\hexo-demo\\\\DeployBlog.bat /sc daily /st 00:00 \n```\n任务名称为My App,每天0点执行1次\n### pm2\npm2在windows下会弹出dos框，所以windows系统目前自动发布不考虑。","source":"_posts/bat脚本自动发布博客.md","raw":"---\ntitle: bat脚本自动发布hexo博客\ntoc: true\ndate: 2017-12-02 13:44:42\ntags:\n- 编程\n---\n因为hexo博客发布就是hexo clean,hexo g,hexo d 3条语句，所以为了省事就百度bat脚本写了一个一键发布的脚本。\n<!--more-->\n以下是代码部分，供大家学习分享\n### bat脚本\n```\n@echo off\nrem 下面2行表示进入到hexo博客根目录。\nC:\ncd \\Users\\444\\hexo-demo\\\nrem 注意最后一行必须连写，因为执行hexo就不会返回原来的cmd，所以在hexo下执行完所有命令。前面3个git命令用来备份博客。\necho Job start!\ngit add . && git commit -m \"0点备份\" && git push -u origin master && hexo clean && hexo g && hexo d && echo Job is done! && pause\n```\n### windows下设置计划任务\n```\nschtasks /create /tn \"My App\" /tr C:\\\\Users\\\\444\\\\hexo-demo\\\\DeployBlog.bat /sc daily /st 00:00 \n```\n任务名称为My App,每天0点执行1次\n### pm2\npm2在windows下会弹出dos框，所以windows系统目前自动发布不考虑。","slug":"bat脚本自动发布博客","published":1,"updated":"2018-01-20T07:23:06.422Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8xm003344wate0qy2wo","content":"<p>因为hexo博客发布就是hexo clean,hexo g,hexo d 3条语句，所以为了省事就百度bat脚本写了一个一键发布的脚本。<br><a id=\"more\"></a><br>以下是代码部分，供大家学习分享</p>\n<h3 id=\"bat脚本\"><a href=\"#bat脚本\" class=\"headerlink\" title=\"bat脚本\"></a>bat脚本</h3><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"built_in\">echo</span> off</div><div class=\"line\"><span class=\"comment\">rem 下面2行表示进入到hexo博客根目录。</span></div><div class=\"line\"><span class=\"function\">C:</span></div><div class=\"line\"><span class=\"title\">cd</span> \\<span class=\"title\">Users</span>\\444\\<span class=\"title\">hexo</span>-<span class=\"title\">demo</span>\\</div><div class=\"line\"><span class=\"title\">rem</span> 注意最后一行必须连写，因为执行<span class=\"title\">hexo</span>就不会返回原来的<span class=\"title\">cmd</span>，所以在<span class=\"title\">hexo</span>下执行完所有命令。前面3个<span class=\"title\">git</span>命令用来备份博客。</div><div class=\"line\"><span class=\"title\">echo</span> <span class=\"title\">Job</span> <span class=\"title\">start</span>!</div><div class=\"line\"><span class=\"title\">git</span> <span class=\"title\">add</span> . &amp;&amp; <span class=\"title\">git</span> <span class=\"title\">commit</span> -<span class=\"title\">m</span> \"0点备份\" &amp;&amp; <span class=\"title\">git</span> <span class=\"title\">push</span> -<span class=\"title\">u</span> <span class=\"title\">origin</span> <span class=\"title\">master</span> &amp;&amp; <span class=\"title\">hexo</span> <span class=\"title\">clean</span> &amp;&amp; <span class=\"title\">hexo</span> <span class=\"title\">g</span> &amp;&amp; <span class=\"title\">hexo</span> <span class=\"title\">d</span> &amp;&amp; <span class=\"title\">echo</span> <span class=\"title\">Job</span> <span class=\"title\">is</span> <span class=\"title\">done</span>! &amp;&amp; <span class=\"title\">pause</span></div></pre></td></tr></table></figure>\n<h3 id=\"windows下设置计划任务\"><a href=\"#windows下设置计划任务\" class=\"headerlink\" title=\"windows下设置计划任务\"></a>windows下设置计划任务</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">schtasks /create /tn <span class=\"string\">\"My App\"</span> /<span class=\"selector-tag\">tr</span> C:\\\\Users\\\\<span class=\"number\">444</span>\\\\hexo-demo\\\\DeployBlog<span class=\"selector-class\">.bat</span> /sc daily /st <span class=\"number\">00</span>:<span class=\"number\">00</span></div></pre></td></tr></table></figure>\n<p>任务名称为My App,每天0点执行1次</p>\n<h3 id=\"pm2\"><a href=\"#pm2\" class=\"headerlink\" title=\"pm2\"></a>pm2</h3><p>pm2在windows下会弹出dos框，所以windows系统目前自动发布不考虑。</p>\n","excerpt":"<p>因为hexo博客发布就是hexo clean,hexo g,hexo d 3条语句，所以为了省事就百度bat脚本写了一个一键发布的脚本。<br>","more":"<br>以下是代码部分，供大家学习分享</p>\n<h3 id=\"bat脚本\"><a href=\"#bat脚本\" class=\"headerlink\" title=\"bat脚本\"></a>bat脚本</h3><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"built_in\">echo</span> off</div><div class=\"line\"><span class=\"comment\">rem 下面2行表示进入到hexo博客根目录。</span></div><div class=\"line\"><span class=\"function\">C:</div><div class=\"line\"><span class=\"title\">cd</span> \\<span class=\"title\">Users</span>\\444\\<span class=\"title\">hexo</span>-<span class=\"title\">demo</span>\\</div><div class=\"line\"><span class=\"title\">rem</span> 注意最后一行必须连写，因为执行<span class=\"title\">hexo</span>就不会返回原来的<span class=\"title\">cmd</span>，所以在<span class=\"title\">hexo</span>下执行完所有命令。前面3个<span class=\"title\">git</span>命令用来备份博客。</div><div class=\"line\"><span class=\"title\">echo</span> <span class=\"title\">Job</span> <span class=\"title\">start</span>!</div><div class=\"line\"><span class=\"title\">git</span> <span class=\"title\">add</span> . &amp;&amp; <span class=\"title\">git</span> <span class=\"title\">commit</span> -<span class=\"title\">m</span> \"0点备份\" &amp;&amp; <span class=\"title\">git</span> <span class=\"title\">push</span> -<span class=\"title\">u</span> <span class=\"title\">origin</span> <span class=\"title\">master</span> &amp;&amp; <span class=\"title\">hexo</span> <span class=\"title\">clean</span> &amp;&amp; <span class=\"title\">hexo</span> <span class=\"title\">g</span> &amp;&amp; <span class=\"title\">hexo</span> <span class=\"title\">d</span> &amp;&amp; <span class=\"title\">echo</span> <span class=\"title\">Job</span> <span class=\"title\">is</span> <span class=\"title\">done</span>! &amp;&amp; <span class=\"title\">pause</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"windows下设置计划任务\"><a href=\"#windows下设置计划任务\" class=\"headerlink\" title=\"windows下设置计划任务\"></a>windows下设置计划任务</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">schtasks /create /tn <span class=\"string\">\"My App\"</span> /<span class=\"selector-tag\">tr</span> C:\\\\Users\\\\<span class=\"number\">444</span>\\\\hexo-demo\\\\DeployBlog<span class=\"selector-class\">.bat</span> /sc daily /st <span class=\"number\">00</span>:<span class=\"number\">00</span></div></pre></td></tr></table></figure>\n<p>任务名称为My App,每天0点执行1次</p>\n<h3 id=\"pm2\"><a href=\"#pm2\" class=\"headerlink\" title=\"pm2\"></a>pm2</h3><p>pm2在windows下会弹出dos框，所以windows系统目前自动发布不考虑。</p>"},{"title":"dom4j学习笔记","date":"2017-03-22T11:26:05.000Z","toc":true,"_content":"# dom4j\n<!--more-->\n\t得到document\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(url);\n\tdocument的父接口是Node\n\t\tgetRootElement();返回根节点Element\n\tElement是接口，父接口是Node\n\t\tgetParent();获取父节点\n\t\taddElement();添加标签\n\t\telement(qname);获取下面叫qname的第一个子标签\n\t\telements(qname);获取下面qname的所有子标签(一层),返回的是List\n\t\telements();获取下面的一层子标签\n\t\tgetText();得到值\n\t回写xml\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();//有缩进格式//createCompactFormat();无缩进\n\t\tXMLWriter xmlWriter = new XMLWriter(new FileOutputStream(\"路径\"),format);\n\t\txmlWriter.write(document);\n\t\txmlWriter.close();\n# XPATH\n![](http://wx2.sinaimg.cn/mw690/005P8ayVgy1fdwunewkt4j30na08udht.jpg)\n","source":"_posts/dom4j学习笔记.md","raw":"---\ntitle: dom4j学习笔记\ndate: 2017-03-22 19:26:05\n\ntags:\n\n- dom4j\n- XML\n- Web\ntoc: true\n---\n# dom4j\n<!--more-->\n\t得到document\n\t\tSAXReader reader = new SAXReader();\n\t\tDocument document = reader.read(url);\n\tdocument的父接口是Node\n\t\tgetRootElement();返回根节点Element\n\tElement是接口，父接口是Node\n\t\tgetParent();获取父节点\n\t\taddElement();添加标签\n\t\telement(qname);获取下面叫qname的第一个子标签\n\t\telements(qname);获取下面qname的所有子标签(一层),返回的是List\n\t\telements();获取下面的一层子标签\n\t\tgetText();得到值\n\t回写xml\n\t\tOutputFormat format = OutputFormat.createPrettyPrint();//有缩进格式//createCompactFormat();无缩进\n\t\tXMLWriter xmlWriter = new XMLWriter(new FileOutputStream(\"路径\"),format);\n\t\txmlWriter.write(document);\n\t\txmlWriter.close();\n# XPATH\n![](http://wx2.sinaimg.cn/mw690/005P8ayVgy1fdwunewkt4j30na08udht.jpg)\n","slug":"dom4j学习笔记","published":1,"updated":"2018-01-20T06:44:37.582Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8xw003544watko7dqb7","content":"<h1 id=\"dom4j\"><a href=\"#dom4j\" class=\"headerlink\" title=\"dom4j\"></a>dom4j</h1><a id=\"more\"></a>\n<pre><code>得到document\n    SAXReader reader = new SAXReader();\n    Document document = reader.read(url);\ndocument的父接口是Node\n    getRootElement();返回根节点Element\nElement是接口，父接口是Node\n    getParent();获取父节点\n    addElement();添加标签\n    element(qname);获取下面叫qname的第一个子标签\n    elements(qname);获取下面qname的所有子标签(一层),返回的是List\n    elements();获取下面的一层子标签\n    getText();得到值\n回写xml\n    OutputFormat format = OutputFormat.createPrettyPrint();//有缩进格式//createCompactFormat();无缩进\n    XMLWriter xmlWriter = new XMLWriter(new FileOutputStream(&quot;路径&quot;),format);\n    xmlWriter.write(document);\n    xmlWriter.close();\n</code></pre><h1 id=\"XPATH\"><a href=\"#XPATH\" class=\"headerlink\" title=\"XPATH\"></a>XPATH</h1><p><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVgy1fdwunewkt4j30na08udht.jpg\" alt=\"\"></p>\n","excerpt":"<h1 id=\"dom4j\"><a href=\"#dom4j\" class=\"headerlink\" title=\"dom4j\"></a>dom4j</h1>","more":"<pre><code>得到document\n    SAXReader reader = new SAXReader();\n    Document document = reader.read(url);\ndocument的父接口是Node\n    getRootElement();返回根节点Element\nElement是接口，父接口是Node\n    getParent();获取父节点\n    addElement();添加标签\n    element(qname);获取下面叫qname的第一个子标签\n    elements(qname);获取下面qname的所有子标签(一层),返回的是List\n    elements();获取下面的一层子标签\n    getText();得到值\n回写xml\n    OutputFormat format = OutputFormat.createPrettyPrint();//有缩进格式//createCompactFormat();无缩进\n    XMLWriter xmlWriter = new XMLWriter(new FileOutputStream(&quot;路径&quot;),format);\n    xmlWriter.write(document);\n    xmlWriter.close();\n</code></pre><h1 id=\"XPATH\"><a href=\"#XPATH\" class=\"headerlink\" title=\"XPATH\"></a>XPATH</h1><p><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVgy1fdwunewkt4j30na08udht.jpg\" alt=\"\"></p>"},{"title":"essay(pwd)","date":"2017-03-23T08:26:00.000Z","toc":true,"_content":"\n男儿若遂平生志.六经勤向窗前读.\n<!--more-->\n# 出自宋皇帝真宗赵恒《劝学诗》\n\t富家不用买良田,书中自有千锺粟；\n\t安居不用架高堂,书中自有黄金屋； \n\t出门莫恨无人随,书中车马多如簇；\n\t娶妻莫恨无良媒,书中自有颜如玉；\n\t男儿若遂平生志.六经勤向窗前读.\n\n# 唐 颜真卿《劝学》\n\t三更灯火五更鸡,正是男儿读书时。\n\t黑发不知勤学早,白首方悔读书迟。\n最近状态不是很好，头又开始痛了。\n发现压力这种东西是无形的，虽然自己没有怎么感觉到压力，但是感觉自己很浮躁。\n不知道自己在做什么，本来就没什么追求，不知道在慌什么。\n未来的想法吗，就是开个书店，网吧，奶茶店什么的，过个悠闲自在的生活。\n就这样吧，安心实习。\n","source":"_posts/essay(pwd).md","raw":"---\ntitle: essay(pwd)\ndate: 2017-03-23 16:26:00\n\ntags:\n- essay\n- 文学\ntoc: true\n---\n\n男儿若遂平生志.六经勤向窗前读.\n<!--more-->\n# 出自宋皇帝真宗赵恒《劝学诗》\n\t富家不用买良田,书中自有千锺粟；\n\t安居不用架高堂,书中自有黄金屋； \n\t出门莫恨无人随,书中车马多如簇；\n\t娶妻莫恨无良媒,书中自有颜如玉；\n\t男儿若遂平生志.六经勤向窗前读.\n\n# 唐 颜真卿《劝学》\n\t三更灯火五更鸡,正是男儿读书时。\n\t黑发不知勤学早,白首方悔读书迟。\n最近状态不是很好，头又开始痛了。\n发现压力这种东西是无形的，虽然自己没有怎么感觉到压力，但是感觉自己很浮躁。\n不知道自己在做什么，本来就没什么追求，不知道在慌什么。\n未来的想法吗，就是开个书店，网吧，奶茶店什么的，过个悠闲自在的生活。\n就这样吧，安心实习。\n","slug":"essay(pwd)","published":1,"updated":"2018-01-20T06:44:37.583Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8xz003844wapskeof9e","content":"<p>男儿若遂平生志.六经勤向窗前读.<br><a id=\"more\"></a></p>\n<h1 id=\"出自宋皇帝真宗赵恒《劝学诗》\"><a href=\"#出自宋皇帝真宗赵恒《劝学诗》\" class=\"headerlink\" title=\"出自宋皇帝真宗赵恒《劝学诗》\"></a>出自宋皇帝真宗赵恒《劝学诗》</h1><pre><code>富家不用买良田,书中自有千锺粟；\n安居不用架高堂,书中自有黄金屋； \n出门莫恨无人随,书中车马多如簇；\n娶妻莫恨无良媒,书中自有颜如玉；\n男儿若遂平生志.六经勤向窗前读.\n</code></pre><h1 id=\"唐-颜真卿《劝学》\"><a href=\"#唐-颜真卿《劝学》\" class=\"headerlink\" title=\"唐 颜真卿《劝学》\"></a>唐 颜真卿《劝学》</h1><pre><code>三更灯火五更鸡,正是男儿读书时。\n黑发不知勤学早,白首方悔读书迟。\n</code></pre><p>最近状态不是很好，头又开始痛了。<br>发现压力这种东西是无形的，虽然自己没有怎么感觉到压力，但是感觉自己很浮躁。<br>不知道自己在做什么，本来就没什么追求，不知道在慌什么。<br>未来的想法吗，就是开个书店，网吧，奶茶店什么的，过个悠闲自在的生活。<br>就这样吧，安心实习。</p>\n","excerpt":"<p>男儿若遂平生志.六经勤向窗前读.<br>","more":"</p>\n<h1 id=\"出自宋皇帝真宗赵恒《劝学诗》\"><a href=\"#出自宋皇帝真宗赵恒《劝学诗》\" class=\"headerlink\" title=\"出自宋皇帝真宗赵恒《劝学诗》\"></a>出自宋皇帝真宗赵恒《劝学诗》</h1><pre><code>富家不用买良田,书中自有千锺粟；\n安居不用架高堂,书中自有黄金屋； \n出门莫恨无人随,书中车马多如簇；\n娶妻莫恨无良媒,书中自有颜如玉；\n男儿若遂平生志.六经勤向窗前读.\n</code></pre><h1 id=\"唐-颜真卿《劝学》\"><a href=\"#唐-颜真卿《劝学》\" class=\"headerlink\" title=\"唐 颜真卿《劝学》\"></a>唐 颜真卿《劝学》</h1><pre><code>三更灯火五更鸡,正是男儿读书时。\n黑发不知勤学早,白首方悔读书迟。\n</code></pre><p>最近状态不是很好，头又开始痛了。<br>发现压力这种东西是无形的，虽然自己没有怎么感觉到压力，但是感觉自己很浮躁。<br>不知道自己在做什么，本来就没什么追求，不知道在慌什么。<br>未来的想法吗，就是开个书店，网吧，奶茶店什么的，过个悠闲自在的生活。<br>就这样吧，安心实习。</p>"},{"title":"hibernate01","date":"2017-05-10T03:37:22.000Z","toc":true,"_content":"hibernate入门\n<!--more-->\n# 概念\nHibernate是一种ORM框架,全程为Object-Relative Database-Mapping,对象关系映射。\n应用于DAO层，用来管理数据库。\n# 准备工作\n需要导入的jar包\n```\nantlr-2.7.7.jar\ndom4j-1.6.1.jar\ngeronimo-jta_1.1_spec-1.1.1.jar\nhibernate-commons-annotations-5.0.1.Final.jar\nhibernate-core-5.0.12.Final.jar\nhibernate-entitymanager-5.0.12.Final.jar\nhibernate-jpa-2.1-api-1.0.0.Final.jar\njandex-2.0.0.Final.jar\njavassist-3.18.1-GA.jar\njboss-logging-3.3.0.Final.jar//以上为hibernate的包\njunit-4.3.1.jar\nlog4j-1.2.16.jar\nmysql-connector-java-5.1.17-bin.jar\nslf4j-api-1.6.2.jar\nslf4j-log4j12-1.6.2.jar\n```\n# 代码部分\n### 实体类\n```\npublic class User {\n\tprivate Integer uid;\n\tprivate String username;\n\tprivate String password;\n\tprivate String address;\n\tpublic Integer getUid() {\n\t\treturn uid;\n\t}\n\tpublic void setUid(Integer uid) {\n\t\tthis.uid = uid;\n\t}\n\tpublic String getUsername() {\n\t\treturn username;\n\t}\n\tpublic void setUsername(String username) {\n\t\tthis.username = username;\n\t}\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\tpublic String getAddress() {\n\t\treturn address;\n\t}\n\tpublic void setAddress(String address) {\n\t\tthis.address = address;\n\t}\n\t\n}\n```\n实体类配置文件(建议在实体类包下，命名为实体类名.hbm.xml)\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE hibernate-mapping PUBLIC\n\t\"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\n\t\"http://hibernate.sourceforge.org/dtd/hibernate-mapping-3.0.dtd\">\n<hibernate-mapping package=\"entity\">\n\t\t\t\t\t\t\t\t<!-- 实体类所在的包 -->\n\t<class name=\"User\" table=\"t_user\">\t\t<!-- 实体类 -->\n\t\t<id name=\"uid\" column=\"uid\">\t\t<!-- id主键 -->\n\t\t\t<generator class=\"native\"></generator>\t\t<!-- 数据库自增长 -->\n\t\t</id>\n\t\t<property name=\"username\" column=\"username\"></property>\t<!-- 普通属性 -->\n\t\t<property name=\"password\" column=\"password\"></property>\n\t\t<property name=\"address\" column=\"address\"></property>\n\t</class>\n</hibernate-mapping>\n```\n### 核心配置文件\n要求：必须在src下，名字必须为hibernate.cfg.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE hibernate-configuration PUBLIC\n\t\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n\t\"http://hibernate.sourceforge.org/dtd/hibernate-configuration-3.0.dtd\">\n<hibernate-configuration>\n\t<session-factory>\n\t\t<!-- JDBC配置代码 -->\n\t\t<property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\n\t\t<property name=\"hibernate.connection.url\">jdbc:mysql:///hibernate_day01</property>\n\t\t<property name=\"hibernate.connection.username\">root</property>\n\t\t<property name=\"hibernate.connection.password\">0000</property>\n\t\t\n\t\t<!-- 指定使用mysql数据库格式的sql语句 -->\n\t\t<property name=\"hibernate.dialect\">org.hibernate.dialect.MySQLDialect</property>\n\t\t<!-- 指定在控制台打印生成的sql语句 -->\n\t\t<property name=\"hibernate.show_sql\">true</property>\n\t\t<!-- 指定在控制台打印生成的sql语句格式 -->\n\t\t<property name=\"hibernate.format_sql\">true</property>\n\t\t<!-- 自动创建表 -->\n\t\t<property name=\"hibernate.hbm2ddl.auto\">update</property>\n\t\t\n\t\t<!-- 不写可能会异常 -->\n\t\t<property name=\"current_session_context_class\">thread</property>\n\t\t\n\t\t<!-- 把映射文件放到这里 -->\n\t\t<mapping resource=\"entity/User.hbm.xml\"/>\n\t</session-factory>\n</hibernate-configuration>\n```\n### 测试类\n```\npublic class HibernateDemo {\n\t@Test\n\tpublic void testAdd() {\n\t\t//1.加载配置文件\n\t\tConfiguration configuration = new Configuration();\n\t\tconfiguration.configure();\n\t\t\n\t\t//2.创建SessionFactory对象\n\t\t//在过程中根据映射关系，在数据库中创建表\n\t\tSessionFactory sessionFactory= configuration.buildSessionFactory();\n\t\t\n\t\t//3.使用SessionFactory创建session对象\n\t\tSession session = sessionFactory.openSession();\n\t\t\n\t\t//4.开启事务\n\t\tTransaction tx = session.beginTransaction();\n\t\t\n\t\t//5.具体crud操作\n\t\t//添加功能\n\t\tUser user = new User();\n\t\tuser.setUsername(\"小王\");\n\t\tuser.setPassword(\"123\");\n\t\tuser.setAddress(\"日本\");\n\t\t//调用session添加\n\t\tsession.save(user);\n\t\t\n\t\t//6.提交事务\n\t\ttx.commit();\n\t\t\n\t\t//7.关闭资源\n\t\ttry {\n\t\t\tsession.close();\n\t\t\tsessionFactory.close();\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException();\n\t\t}\n\t\t\n\t}\n\t\n}\n```\n结果：\n1.在数据库中为我们建了表\n2.控制台输出为\nHibernate: \n    insert \n    into\n        t_user\n        (username, password, address) \n    values\n        (?, ?, ?)","source":"_posts/hibernate01.md","raw":"---\ntitle: hibernate01\ndate: 2017-05-10 11:37:22\ntags:\n- Java基础\ntoc: true\n---\nhibernate入门\n<!--more-->\n# 概念\nHibernate是一种ORM框架,全程为Object-Relative Database-Mapping,对象关系映射。\n应用于DAO层，用来管理数据库。\n# 准备工作\n需要导入的jar包\n```\nantlr-2.7.7.jar\ndom4j-1.6.1.jar\ngeronimo-jta_1.1_spec-1.1.1.jar\nhibernate-commons-annotations-5.0.1.Final.jar\nhibernate-core-5.0.12.Final.jar\nhibernate-entitymanager-5.0.12.Final.jar\nhibernate-jpa-2.1-api-1.0.0.Final.jar\njandex-2.0.0.Final.jar\njavassist-3.18.1-GA.jar\njboss-logging-3.3.0.Final.jar//以上为hibernate的包\njunit-4.3.1.jar\nlog4j-1.2.16.jar\nmysql-connector-java-5.1.17-bin.jar\nslf4j-api-1.6.2.jar\nslf4j-log4j12-1.6.2.jar\n```\n# 代码部分\n### 实体类\n```\npublic class User {\n\tprivate Integer uid;\n\tprivate String username;\n\tprivate String password;\n\tprivate String address;\n\tpublic Integer getUid() {\n\t\treturn uid;\n\t}\n\tpublic void setUid(Integer uid) {\n\t\tthis.uid = uid;\n\t}\n\tpublic String getUsername() {\n\t\treturn username;\n\t}\n\tpublic void setUsername(String username) {\n\t\tthis.username = username;\n\t}\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\tpublic String getAddress() {\n\t\treturn address;\n\t}\n\tpublic void setAddress(String address) {\n\t\tthis.address = address;\n\t}\n\t\n}\n```\n实体类配置文件(建议在实体类包下，命名为实体类名.hbm.xml)\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE hibernate-mapping PUBLIC\n\t\"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\n\t\"http://hibernate.sourceforge.org/dtd/hibernate-mapping-3.0.dtd\">\n<hibernate-mapping package=\"entity\">\n\t\t\t\t\t\t\t\t<!-- 实体类所在的包 -->\n\t<class name=\"User\" table=\"t_user\">\t\t<!-- 实体类 -->\n\t\t<id name=\"uid\" column=\"uid\">\t\t<!-- id主键 -->\n\t\t\t<generator class=\"native\"></generator>\t\t<!-- 数据库自增长 -->\n\t\t</id>\n\t\t<property name=\"username\" column=\"username\"></property>\t<!-- 普通属性 -->\n\t\t<property name=\"password\" column=\"password\"></property>\n\t\t<property name=\"address\" column=\"address\"></property>\n\t</class>\n</hibernate-mapping>\n```\n### 核心配置文件\n要求：必须在src下，名字必须为hibernate.cfg.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE hibernate-configuration PUBLIC\n\t\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n\t\"http://hibernate.sourceforge.org/dtd/hibernate-configuration-3.0.dtd\">\n<hibernate-configuration>\n\t<session-factory>\n\t\t<!-- JDBC配置代码 -->\n\t\t<property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\n\t\t<property name=\"hibernate.connection.url\">jdbc:mysql:///hibernate_day01</property>\n\t\t<property name=\"hibernate.connection.username\">root</property>\n\t\t<property name=\"hibernate.connection.password\">0000</property>\n\t\t\n\t\t<!-- 指定使用mysql数据库格式的sql语句 -->\n\t\t<property name=\"hibernate.dialect\">org.hibernate.dialect.MySQLDialect</property>\n\t\t<!-- 指定在控制台打印生成的sql语句 -->\n\t\t<property name=\"hibernate.show_sql\">true</property>\n\t\t<!-- 指定在控制台打印生成的sql语句格式 -->\n\t\t<property name=\"hibernate.format_sql\">true</property>\n\t\t<!-- 自动创建表 -->\n\t\t<property name=\"hibernate.hbm2ddl.auto\">update</property>\n\t\t\n\t\t<!-- 不写可能会异常 -->\n\t\t<property name=\"current_session_context_class\">thread</property>\n\t\t\n\t\t<!-- 把映射文件放到这里 -->\n\t\t<mapping resource=\"entity/User.hbm.xml\"/>\n\t</session-factory>\n</hibernate-configuration>\n```\n### 测试类\n```\npublic class HibernateDemo {\n\t@Test\n\tpublic void testAdd() {\n\t\t//1.加载配置文件\n\t\tConfiguration configuration = new Configuration();\n\t\tconfiguration.configure();\n\t\t\n\t\t//2.创建SessionFactory对象\n\t\t//在过程中根据映射关系，在数据库中创建表\n\t\tSessionFactory sessionFactory= configuration.buildSessionFactory();\n\t\t\n\t\t//3.使用SessionFactory创建session对象\n\t\tSession session = sessionFactory.openSession();\n\t\t\n\t\t//4.开启事务\n\t\tTransaction tx = session.beginTransaction();\n\t\t\n\t\t//5.具体crud操作\n\t\t//添加功能\n\t\tUser user = new User();\n\t\tuser.setUsername(\"小王\");\n\t\tuser.setPassword(\"123\");\n\t\tuser.setAddress(\"日本\");\n\t\t//调用session添加\n\t\tsession.save(user);\n\t\t\n\t\t//6.提交事务\n\t\ttx.commit();\n\t\t\n\t\t//7.关闭资源\n\t\ttry {\n\t\t\tsession.close();\n\t\t\tsessionFactory.close();\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException();\n\t\t}\n\t\t\n\t}\n\t\n}\n```\n结果：\n1.在数据库中为我们建了表\n2.控制台输出为\nHibernate: \n    insert \n    into\n        t_user\n        (username, password, address) \n    values\n        (?, ?, ?)","slug":"hibernate01","published":1,"updated":"2018-01-20T06:44:37.585Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8y7003a44wan89bdhy6","content":"<p>hibernate入门<br><a id=\"more\"></a></p>\n<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><p>Hibernate是一种ORM框架,全程为Object-Relative Database-Mapping,对象关系映射。<br>应用于DAO层，用来管理数据库。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><p>需要导入的jar包<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">antlr-<span class=\"number\">2.7</span>.<span class=\"number\">7</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">dom4j-<span class=\"number\">1.6</span>.<span class=\"number\">1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">geronimo-jta_1.<span class=\"number\">1</span>_spec-<span class=\"number\">1.1</span>.<span class=\"number\">1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">hibernate-commons-annotations-<span class=\"number\">5.0</span>.<span class=\"number\">1</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">hibernate-core-<span class=\"number\">5.0</span>.<span class=\"number\">12</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">hibernate-entitymanager-<span class=\"number\">5.0</span>.<span class=\"number\">12</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">hibernate-jpa-<span class=\"number\">2.1</span>-api-<span class=\"number\">1.0</span>.<span class=\"number\">0</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">jandex-<span class=\"number\">2.0</span>.<span class=\"number\">0</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">javassist-<span class=\"number\">3.18</span>.<span class=\"number\">1</span>-GA<span class=\"selector-class\">.jar</span></div><div class=\"line\">jboss-logging-<span class=\"number\">3.3</span>.<span class=\"number\">0</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span><span class=\"comment\">//以上为hibernate的包</span></div><div class=\"line\">junit-<span class=\"number\">4.3</span>.<span class=\"number\">1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">log4j-<span class=\"number\">1.2</span>.<span class=\"number\">16</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">mysql-connector-java-<span class=\"number\">5.1</span>.<span class=\"number\">17</span>-bin<span class=\"selector-class\">.jar</span></div><div class=\"line\">slf4j-api-<span class=\"number\">1.6</span>.<span class=\"number\">2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">slf4j-log4j12-<span class=\"number\">1.6</span>.<span class=\"number\">2</span>.jar</div></pre></td></tr></table></figure></p>\n<h1 id=\"代码部分\"><a href=\"#代码部分\" class=\"headerlink\" title=\"代码部分\"></a>代码部分</h1><h3 id=\"实体类\"><a href=\"#实体类\" class=\"headerlink\" title=\"实体类\"></a>实体类</h3><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> User &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> Integer uid;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> username;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> password;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> address;</div><div class=\"line\"> <span class=\"keyword\">public</span> Integer getUid() &#123;</div><div class=\"line\">  <span class=\"built_in\">return</span> uid;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setUid(Integer uid) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.uid = uid;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getUsername() &#123;</div><div class=\"line\">  <span class=\"built_in\">return</span> username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setUsername(<span class=\"keyword\">String</span> username) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.username = username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getPassword() &#123;</div><div class=\"line\">  <span class=\"built_in\">return</span> password;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setPassword(<span class=\"keyword\">String</span> password) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.password = password;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getAddress() &#123;</div><div class=\"line\">  <span class=\"built_in\">return</span> address;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setAddress(<span class=\"keyword\">String</span> address) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.address = address;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>实体类配置文件(建议在实体类包下，命名为实体类名.hbm.xml)<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE hibernate-mapping PUBLIC</span></div><div class=\"line\"> \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"</div><div class=\"line\"> \"http://hibernate.sourceforge.org/dtd/hibernate-mapping-3.0.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hibernate-mapping</span> <span class=\"attr\">package</span>=<span class=\"string\">\"entity\"</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 实体类所在的包 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">class</span> <span class=\"attr\">name</span>=<span class=\"string\">\"User\"</span> <span class=\"attr\">table</span>=<span class=\"string\">\"t_user\"</span>&gt;</span>\t\t<span class=\"comment\">&lt;!-- 实体类 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">name</span>=<span class=\"string\">\"uid\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"uid\"</span>&gt;</span>\t\t<span class=\"comment\">&lt;!-- id主键 --&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">generator</span> <span class=\"attr\">class</span>=<span class=\"string\">\"native\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">generator</span>&gt;</span>\t\t<span class=\"comment\">&lt;!-- 数据库自增长 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"username\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\t<span class=\"comment\">&lt;!-- 普通属性 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"password\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"address\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"address\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">hibernate-mapping</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"核心配置文件\"><a href=\"#核心配置文件\" class=\"headerlink\" title=\"核心配置文件\"></a>核心配置文件</h3><p>要求：必须在src下，名字必须为hibernate.cfg.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE hibernate-configuration PUBLIC</span></div><div class=\"line\"> \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"</div><div class=\"line\"> \"http://hibernate.sourceforge.org/dtd/hibernate-configuration-3.0.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hibernate-configuration</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">session-factory</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- JDBC配置代码 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.connection.driver_class\"</span>&gt;</span>com.mysql.jdbc.Driver<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.connection.url\"</span>&gt;</span>jdbc:mysql:///hibernate_day01<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.connection.username\"</span>&gt;</span>root<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.connection.password\"</span>&gt;</span>0000<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">&lt;!-- 指定使用mysql数据库格式的sql语句 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.dialect\"</span>&gt;</span>org.hibernate.dialect.MySQLDialect<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 指定在控制台打印生成的sql语句 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.show_sql\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 指定在控制台打印生成的sql语句格式 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.format_sql\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 自动创建表 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.hbm2ddl.auto\"</span>&gt;</span>update<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">&lt;!-- 不写可能会异常 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"current_session_context_class\"</span>&gt;</span>thread<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">&lt;!-- 把映射文件放到这里 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mapping</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"entity/User.hbm.xml\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">session-factory</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">hibernate-configuration</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"测试类\"><a href=\"#测试类\" class=\"headerlink\" title=\"测试类\"></a>测试类</h3><figure class=\"highlight pony\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HibernateDemo</span> &#123;</span></div><div class=\"line\"> @<span class=\"type\">Test</span></div><div class=\"line\"> public void testAdd() &#123;</div><div class=\"line\">  <span class=\"comment\">//1.加载配置文件</span></div><div class=\"line\">  <span class=\"type\">Configuration</span> configuration = <span class=\"function\"><span class=\"keyword\">new</span> <span class=\"title\">Configuration</span>();</span></div><div class=\"line\">  <span class=\"title\">configuration</span>.<span class=\"title\">configure</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//2.创建SessionFactory对象</span></div><div class=\"line\">  <span class=\"comment\">//在过程中根据映射关系，在数据库中创建表</span></div><div class=\"line\">  <span class=\"title\">SessionFactory</span> <span class=\"title\">sessionFactory</span>= <span class=\"title\">configuration</span>.<span class=\"title\">buildSessionFactory</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//3.使用SessionFactory创建session对象</span></div><div class=\"line\">  <span class=\"title\">Session</span> <span class=\"title\">session</span> = <span class=\"title\">sessionFactory</span>.<span class=\"title\">openSession</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//4.开启事务</span></div><div class=\"line\">  <span class=\"title\">Transaction</span> <span class=\"title\">tx</span> = <span class=\"title\">session</span>.<span class=\"title\">beginTransaction</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//5.具体crud操作</span></div><div class=\"line\">  <span class=\"comment\">//添加功能</span></div><div class=\"line\">  <span class=\"title\">User</span> <span class=\"title\">user</span> = <span class=\"title\">new</span> <span class=\"title\">User</span>();</div><div class=\"line\">  <span class=\"title\">user</span>.<span class=\"title\">setUsername</span>(\"小王\");</div><div class=\"line\">  <span class=\"title\">user</span>.<span class=\"title\">setPassword</span>(\"<span class=\"number\">123</span>\");</div><div class=\"line\">  <span class=\"title\">user</span>.<span class=\"title\">setAddress</span>(\"日本\");</div><div class=\"line\">  <span class=\"comment\">//调用session添加</span></div><div class=\"line\">  <span class=\"title\">session</span>.<span class=\"title\">save</span>(user);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//6.提交事务</span></div><div class=\"line\">  <span class=\"title\">tx</span>.<span class=\"title\">commit</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//7.关闭资源</span></div><div class=\"line\">  <span class=\"title\">try</span> &#123;</div><div class=\"line\">   <span class=\"title\">session</span>.<span class=\"title\">close</span>();</div><div class=\"line\">   <span class=\"title\">sessionFactory</span>.<span class=\"title\">close</span>();</div><div class=\"line\">  &#125; <span class=\"title\">catch</span> (<span class=\"type\">Exception</span> e) &#123;</div><div class=\"line\">   <span class=\"title\">throw</span> <span class=\"title\">new</span> <span class=\"title\">RuntimeException</span>();</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果：<br>1.在数据库中为我们建了表<br>2.控制台输出为<br>Hibernate:<br>    insert<br>    into<br>        t_user<br>        (username, password, address)<br>    values<br>        (?, ?, ?)</p>\n","excerpt":"<p>hibernate入门<br>","more":"</p>\n<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><p>Hibernate是一种ORM框架,全程为Object-Relative Database-Mapping,对象关系映射。<br>应用于DAO层，用来管理数据库。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><p>需要导入的jar包<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">antlr-<span class=\"number\">2.7</span>.<span class=\"number\">7</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">dom4j-<span class=\"number\">1.6</span>.<span class=\"number\">1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">geronimo-jta_1.<span class=\"number\">1</span>_spec-<span class=\"number\">1.1</span>.<span class=\"number\">1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">hibernate-commons-annotations-<span class=\"number\">5.0</span>.<span class=\"number\">1</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">hibernate-core-<span class=\"number\">5.0</span>.<span class=\"number\">12</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">hibernate-entitymanager-<span class=\"number\">5.0</span>.<span class=\"number\">12</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">hibernate-jpa-<span class=\"number\">2.1</span>-api-<span class=\"number\">1.0</span>.<span class=\"number\">0</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">jandex-<span class=\"number\">2.0</span>.<span class=\"number\">0</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">javassist-<span class=\"number\">3.18</span>.<span class=\"number\">1</span>-GA<span class=\"selector-class\">.jar</span></div><div class=\"line\">jboss-logging-<span class=\"number\">3.3</span>.<span class=\"number\">0</span><span class=\"selector-class\">.Final</span><span class=\"selector-class\">.jar</span><span class=\"comment\">//以上为hibernate的包</span></div><div class=\"line\">junit-<span class=\"number\">4.3</span>.<span class=\"number\">1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">log4j-<span class=\"number\">1.2</span>.<span class=\"number\">16</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">mysql-connector-java-<span class=\"number\">5.1</span>.<span class=\"number\">17</span>-bin<span class=\"selector-class\">.jar</span></div><div class=\"line\">slf4j-api-<span class=\"number\">1.6</span>.<span class=\"number\">2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\">slf4j-log4j12-<span class=\"number\">1.6</span>.<span class=\"number\">2</span>.jar</div></pre></td></tr></table></figure></p>\n<h1 id=\"代码部分\"><a href=\"#代码部分\" class=\"headerlink\" title=\"代码部分\"></a>代码部分</h1><h3 id=\"实体类\"><a href=\"#实体类\" class=\"headerlink\" title=\"实体类\"></a>实体类</h3><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> User &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> Integer uid;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> username;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> password;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> address;</div><div class=\"line\"> <span class=\"keyword\">public</span> Integer getUid() &#123;</div><div class=\"line\">  <span class=\"built_in\">return</span> uid;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setUid(Integer uid) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.uid = uid;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getUsername() &#123;</div><div class=\"line\">  <span class=\"built_in\">return</span> username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setUsername(<span class=\"keyword\">String</span> username) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.username = username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getPassword() &#123;</div><div class=\"line\">  <span class=\"built_in\">return</span> password;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setPassword(<span class=\"keyword\">String</span> password) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.password = password;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> getAddress() &#123;</div><div class=\"line\">  <span class=\"built_in\">return</span> address;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setAddress(<span class=\"keyword\">String</span> address) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.address = address;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>实体类配置文件(建议在实体类包下，命名为实体类名.hbm.xml)<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE hibernate-mapping PUBLIC</div><div class=\"line\"> \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"</div><div class=\"line\"> \"http://hibernate.sourceforge.org/dtd/hibernate-mapping-3.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hibernate-mapping</span> <span class=\"attr\">package</span>=<span class=\"string\">\"entity\"</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 实体类所在的包 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">class</span> <span class=\"attr\">name</span>=<span class=\"string\">\"User\"</span> <span class=\"attr\">table</span>=<span class=\"string\">\"t_user\"</span>&gt;</span>\t\t<span class=\"comment\">&lt;!-- 实体类 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">name</span>=<span class=\"string\">\"uid\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"uid\"</span>&gt;</span>\t\t<span class=\"comment\">&lt;!-- id主键 --&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">generator</span> <span class=\"attr\">class</span>=<span class=\"string\">\"native\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">generator</span>&gt;</span>\t\t<span class=\"comment\">&lt;!-- 数据库自增长 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"username\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\t<span class=\"comment\">&lt;!-- 普通属性 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"password\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"address\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"address\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">hibernate-mapping</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"核心配置文件\"><a href=\"#核心配置文件\" class=\"headerlink\" title=\"核心配置文件\"></a>核心配置文件</h3><p>要求：必须在src下，名字必须为hibernate.cfg.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE hibernate-configuration PUBLIC</div><div class=\"line\"> \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"</div><div class=\"line\"> \"http://hibernate.sourceforge.org/dtd/hibernate-configuration-3.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hibernate-configuration</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">session-factory</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- JDBC配置代码 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.connection.driver_class\"</span>&gt;</span>com.mysql.jdbc.Driver<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.connection.url\"</span>&gt;</span>jdbc:mysql:///hibernate_day01<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.connection.username\"</span>&gt;</span>root<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.connection.password\"</span>&gt;</span>0000<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">&lt;!-- 指定使用mysql数据库格式的sql语句 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.dialect\"</span>&gt;</span>org.hibernate.dialect.MySQLDialect<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 指定在控制台打印生成的sql语句 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.show_sql\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 指定在控制台打印生成的sql语句格式 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.format_sql\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 自动创建表 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernate.hbm2ddl.auto\"</span>&gt;</span>update<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">&lt;!-- 不写可能会异常 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"current_session_context_class\"</span>&gt;</span>thread<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">&lt;!-- 把映射文件放到这里 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mapping</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"entity/User.hbm.xml\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">session-factory</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">hibernate-configuration</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"测试类\"><a href=\"#测试类\" class=\"headerlink\" title=\"测试类\"></a>测试类</h3><figure class=\"highlight pony\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HibernateDemo</span> &#123;</span></div><div class=\"line\"> @<span class=\"type\">Test</span></div><div class=\"line\"> public void testAdd() &#123;</div><div class=\"line\">  <span class=\"comment\">//1.加载配置文件</span></div><div class=\"line\">  <span class=\"type\">Configuration</span> configuration = <span class=\"function\"><span class=\"keyword\">new</span> <span class=\"title\">Configuration</span>();</div><div class=\"line\">  <span class=\"title\">configuration</span>.<span class=\"title\">configure</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//2.创建SessionFactory对象</span></div><div class=\"line\">  <span class=\"comment\">//在过程中根据映射关系，在数据库中创建表</span></div><div class=\"line\">  <span class=\"title\">SessionFactory</span> <span class=\"title\">sessionFactory</span>= <span class=\"title\">configuration</span>.<span class=\"title\">buildSessionFactory</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//3.使用SessionFactory创建session对象</span></div><div class=\"line\">  <span class=\"title\">Session</span> <span class=\"title\">session</span> = <span class=\"title\">sessionFactory</span>.<span class=\"title\">openSession</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//4.开启事务</span></div><div class=\"line\">  <span class=\"title\">Transaction</span> <span class=\"title\">tx</span> = <span class=\"title\">session</span>.<span class=\"title\">beginTransaction</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//5.具体crud操作</span></div><div class=\"line\">  <span class=\"comment\">//添加功能</span></div><div class=\"line\">  <span class=\"title\">User</span> <span class=\"title\">user</span> = <span class=\"title\">new</span> <span class=\"title\">User</span>();</div><div class=\"line\">  <span class=\"title\">user</span>.<span class=\"title\">setUsername</span>(\"小王\");</div><div class=\"line\">  <span class=\"title\">user</span>.<span class=\"title\">setPassword</span>(\"<span class=\"number\">123</span>\");</div><div class=\"line\">  <span class=\"title\">user</span>.<span class=\"title\">setAddress</span>(\"日本\");</div><div class=\"line\">  <span class=\"comment\">//调用session添加</span></div><div class=\"line\">  <span class=\"title\">session</span>.<span class=\"title\">save</span>(user);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//6.提交事务</span></div><div class=\"line\">  <span class=\"title\">tx</span>.<span class=\"title\">commit</span>();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//7.关闭资源</span></div><div class=\"line\">  <span class=\"title\">try</span> &#123;</div><div class=\"line\">   <span class=\"title\">session</span>.<span class=\"title\">close</span>();</div><div class=\"line\">   <span class=\"title\">sessionFactory</span>.<span class=\"title\">close</span>();</div><div class=\"line\">  &#125; <span class=\"title\">catch</span> (<span class=\"type\">Exception</span> e) &#123;</div><div class=\"line\">   <span class=\"title\">throw</span> <span class=\"title\">new</span> <span class=\"title\">RuntimeException</span>();</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</span></div></pre></td></tr></table></figure>\n<p>结果：<br>1.在数据库中为我们建了表<br>2.控制台输出为<br>Hibernate:<br>    insert<br>    into<br>        t_user<br>        (username, password, address)<br>    values<br>        (?, ?, ?)</p>"},{"title":"hexo博客文章加密案例","date":"2017-04-14T09:55:04.000Z","toc":true,"_content":"对博客中的部分文章进行加密\n<!--more-->\n# 思路\n通过judge(url)函数判断当前访问的url是否为想要加密的文章的路径，\n是的话就执行输入密码判断的操作。\n至于密码的话就用md5进行加密。(其实可以写的相当复杂，但由于是静态博客，从源码都可以分析出来)\n# 具体实现\nthemes\\yilia\\layout\\_partial\\head.ejs中添加script代码\n我写的有点复杂就是希望他们破解起来也要费时间，这里我就不详细讲，只讲一个思路。\n通过md5算法得到密文，密文跟文章内容进行操作得到一个值，将这个值保存到JS代码，输入密码时再次进行同加密就可以得出文章内容。因为源代码只有操作完的这个值，所以他们无法反向算出密文或者文章内容。\njudge(url)函数如下\n```\nfunction judge(url)\n{//判断是否为要加密的文章url\nif(window.location.href.indexOf(url) != -1)\n\t{//判断密码是否正确\n\tvar password = prompt('password:');\n\tif ('password' !== performPage(password) )\n\t\t\t{//错误就重定向到博客首页\n                alert('error!');\n                window.location=\"博客首页\";\n            }\n\t}\n}\n```\n# 存在的问题\n因为有格式的存在，当自己输出文章内容时格式就没了，所以我目前没有采用这种方式。\n# update(2017.4.24)\n突然发现markdown支持js的语法,所以利用和上面同样的加密，直接将js写进文章里，密码正确就document.write();输出文章内容，错误同样转到主页。\n\n因为这个是写进文章的，无法从主页看到源代码，所以安全级别更高一点，但是如果别人用工具获取了你的源代码的话，也是没办法。\n\n我的博客的文章就是这样的2重加密。\n# update(2017.4.25)\n这个版本应该是最终版本的了，以后不会再更新了。\n\n这次不使用alert()；函数来输入密码，因为是明文的形式。\n加载的时候放进1个input输入框，类型为password，用这个密码直接解析得到文本。\n这次不进行密码的校验，错误会显示乱码。\n\n这次别人能从源代码得出的只有(通过md5算法得到密文，密文跟文章内容进行操作得到这个值)，所以别人无法得到密码。因为用到了md5，所以我认为除了字典暴力破解之外，无法得到我们的密码。这个用的就是具体实现中我讲的那个思路，现在完全实现了。\n\n参考文章有很多，这里我就不写了。\n如果你也对这个有兴趣，可以联系我。在博客首页【关于我】里面有我的联系方式。","source":"_posts/hexo博客文章加密案例.md","raw":"---\ntitle: hexo博客文章加密案例\ndate: 2017-04-14 17:55:04\ntags:\n- demo\n- JS\n- 编程\ntoc: true\n---\n对博客中的部分文章进行加密\n<!--more-->\n# 思路\n通过judge(url)函数判断当前访问的url是否为想要加密的文章的路径，\n是的话就执行输入密码判断的操作。\n至于密码的话就用md5进行加密。(其实可以写的相当复杂，但由于是静态博客，从源码都可以分析出来)\n# 具体实现\nthemes\\yilia\\layout\\_partial\\head.ejs中添加script代码\n我写的有点复杂就是希望他们破解起来也要费时间，这里我就不详细讲，只讲一个思路。\n通过md5算法得到密文，密文跟文章内容进行操作得到一个值，将这个值保存到JS代码，输入密码时再次进行同加密就可以得出文章内容。因为源代码只有操作完的这个值，所以他们无法反向算出密文或者文章内容。\njudge(url)函数如下\n```\nfunction judge(url)\n{//判断是否为要加密的文章url\nif(window.location.href.indexOf(url) != -1)\n\t{//判断密码是否正确\n\tvar password = prompt('password:');\n\tif ('password' !== performPage(password) )\n\t\t\t{//错误就重定向到博客首页\n                alert('error!');\n                window.location=\"博客首页\";\n            }\n\t}\n}\n```\n# 存在的问题\n因为有格式的存在，当自己输出文章内容时格式就没了，所以我目前没有采用这种方式。\n# update(2017.4.24)\n突然发现markdown支持js的语法,所以利用和上面同样的加密，直接将js写进文章里，密码正确就document.write();输出文章内容，错误同样转到主页。\n\n因为这个是写进文章的，无法从主页看到源代码，所以安全级别更高一点，但是如果别人用工具获取了你的源代码的话，也是没办法。\n\n我的博客的文章就是这样的2重加密。\n# update(2017.4.25)\n这个版本应该是最终版本的了，以后不会再更新了。\n\n这次不使用alert()；函数来输入密码，因为是明文的形式。\n加载的时候放进1个input输入框，类型为password，用这个密码直接解析得到文本。\n这次不进行密码的校验，错误会显示乱码。\n\n这次别人能从源代码得出的只有(通过md5算法得到密文，密文跟文章内容进行操作得到这个值)，所以别人无法得到密码。因为用到了md5，所以我认为除了字典暴力破解之外，无法得到我们的密码。这个用的就是具体实现中我讲的那个思路，现在完全实现了。\n\n参考文章有很多，这里我就不写了。\n如果你也对这个有兴趣，可以联系我。在博客首页【关于我】里面有我的联系方式。","slug":"hexo博客文章加密案例","published":1,"updated":"2018-01-20T06:44:37.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8ya003d44wa5p7hstvf","content":"<p>对博客中的部分文章进行加密<br><a id=\"more\"></a></p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>通过judge(url)函数判断当前访问的url是否为想要加密的文章的路径，<br>是的话就执行输入密码判断的操作。<br>至于密码的话就用md5进行加密。(其实可以写的相当复杂，但由于是静态博客，从源码都可以分析出来)</p>\n<h1 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h1><p>themes\\yilia\\layout_partial\\head.ejs中添加script代码<br>我写的有点复杂就是希望他们破解起来也要费时间，这里我就不详细讲，只讲一个思路。<br>通过md5算法得到密文，密文跟文章内容进行操作得到一个值，将这个值保存到JS代码，输入密码时再次进行同加密就可以得出文章内容。因为源代码只有操作完的这个值，所以他们无法反向算出密文或者文章内容。<br>judge(url)函数如下<br><figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">judge</span>(<span class=\"params\">url</span>)</span></div><div class=\"line\">&#123;<span class=\"comment\">//判断是否为要加密的文章url</span></div><div class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.location.href.indexOf(<span class=\"built_in\">url</span>) != <span class=\"number\">-1</span>)</div><div class=\"line\"> &#123;<span class=\"comment\">//判断密码是否正确</span></div><div class=\"line\"> <span class=\"built_in\">var</span> password = prompt(<span class=\"string\">'password:'</span>);</div><div class=\"line\"> <span class=\"keyword\">if</span> (<span class=\"string\">'password'</span> !== performPage(password) )</div><div class=\"line\">   &#123;<span class=\"comment\">//错误就重定向到博客首页</span></div><div class=\"line\">                alert(<span class=\"string\">'error!'</span>);</div><div class=\"line\">                <span class=\"built_in\">window</span>.location=<span class=\"string\">\"博客首页\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"存在的问题\"><a href=\"#存在的问题\" class=\"headerlink\" title=\"存在的问题\"></a>存在的问题</h1><p>因为有格式的存在，当自己输出文章内容时格式就没了，所以我目前没有采用这种方式。</p>\n<h1 id=\"update-2017-4-24\"><a href=\"#update-2017-4-24\" class=\"headerlink\" title=\"update(2017.4.24)\"></a>update(2017.4.24)</h1><p>突然发现markdown支持js的语法,所以利用和上面同样的加密，直接将js写进文章里，密码正确就document.write();输出文章内容，错误同样转到主页。</p>\n<p>因为这个是写进文章的，无法从主页看到源代码，所以安全级别更高一点，但是如果别人用工具获取了你的源代码的话，也是没办法。</p>\n<p>我的博客的文章就是这样的2重加密。</p>\n<h1 id=\"update-2017-4-25\"><a href=\"#update-2017-4-25\" class=\"headerlink\" title=\"update(2017.4.25)\"></a>update(2017.4.25)</h1><p>这个版本应该是最终版本的了，以后不会再更新了。</p>\n<p>这次不使用alert()；函数来输入密码，因为是明文的形式。<br>加载的时候放进1个input输入框，类型为password，用这个密码直接解析得到文本。<br>这次不进行密码的校验，错误会显示乱码。</p>\n<p>这次别人能从源代码得出的只有(通过md5算法得到密文，密文跟文章内容进行操作得到这个值)，所以别人无法得到密码。因为用到了md5，所以我认为除了字典暴力破解之外，无法得到我们的密码。这个用的就是具体实现中我讲的那个思路，现在完全实现了。</p>\n<p>参考文章有很多，这里我就不写了。<br>如果你也对这个有兴趣，可以联系我。在博客首页【关于我】里面有我的联系方式。</p>\n","excerpt":"<p>对博客中的部分文章进行加密<br>","more":"</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>通过judge(url)函数判断当前访问的url是否为想要加密的文章的路径，<br>是的话就执行输入密码判断的操作。<br>至于密码的话就用md5进行加密。(其实可以写的相当复杂，但由于是静态博客，从源码都可以分析出来)</p>\n<h1 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h1><p>themes\\yilia\\layout_partial\\head.ejs中添加script代码<br>我写的有点复杂就是希望他们破解起来也要费时间，这里我就不详细讲，只讲一个思路。<br>通过md5算法得到密文，密文跟文章内容进行操作得到一个值，将这个值保存到JS代码，输入密码时再次进行同加密就可以得出文章内容。因为源代码只有操作完的这个值，所以他们无法反向算出密文或者文章内容。<br>judge(url)函数如下<br><figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">judge</span>(<span class=\"params\">url</span>)</div><div class=\"line\"></span>&#123;<span class=\"comment\">//判断是否为要加密的文章url</span></div><div class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.location.href.indexOf(<span class=\"built_in\">url</span>) != <span class=\"number\">-1</span>)</div><div class=\"line\"> &#123;<span class=\"comment\">//判断密码是否正确</span></div><div class=\"line\"> <span class=\"built_in\">var</span> password = prompt(<span class=\"string\">'password:'</span>);</div><div class=\"line\"> <span class=\"keyword\">if</span> (<span class=\"string\">'password'</span> !== performPage(password) )</div><div class=\"line\">   &#123;<span class=\"comment\">//错误就重定向到博客首页</span></div><div class=\"line\">                alert(<span class=\"string\">'error!'</span>);</div><div class=\"line\">                <span class=\"built_in\">window</span>.location=<span class=\"string\">\"博客首页\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"存在的问题\"><a href=\"#存在的问题\" class=\"headerlink\" title=\"存在的问题\"></a>存在的问题</h1><p>因为有格式的存在，当自己输出文章内容时格式就没了，所以我目前没有采用这种方式。</p>\n<h1 id=\"update-2017-4-24\"><a href=\"#update-2017-4-24\" class=\"headerlink\" title=\"update(2017.4.24)\"></a>update(2017.4.24)</h1><p>突然发现markdown支持js的语法,所以利用和上面同样的加密，直接将js写进文章里，密码正确就document.write();输出文章内容，错误同样转到主页。</p>\n<p>因为这个是写进文章的，无法从主页看到源代码，所以安全级别更高一点，但是如果别人用工具获取了你的源代码的话，也是没办法。</p>\n<p>我的博客的文章就是这样的2重加密。</p>\n<h1 id=\"update-2017-4-25\"><a href=\"#update-2017-4-25\" class=\"headerlink\" title=\"update(2017.4.25)\"></a>update(2017.4.25)</h1><p>这个版本应该是最终版本的了，以后不会再更新了。</p>\n<p>这次不使用alert()；函数来输入密码，因为是明文的形式。<br>加载的时候放进1个input输入框，类型为password，用这个密码直接解析得到文本。<br>这次不进行密码的校验，错误会显示乱码。</p>\n<p>这次别人能从源代码得出的只有(通过md5算法得到密文，密文跟文章内容进行操作得到这个值)，所以别人无法得到密码。因为用到了md5，所以我认为除了字典暴力破解之外，无法得到我们的密码。这个用的就是具体实现中我讲的那个思路，现在完全实现了。</p>\n<p>参考文章有很多，这里我就不写了。<br>如果你也对这个有兴趣，可以联系我。在博客首页【关于我】里面有我的联系方式。</p>"},{"title":"hibernate连接数据库乱码问题","toc":true,"date":"2017-08-24T06:02:51.000Z","_content":"首先初始化数据库本身的编码，之后需要在url后面加上?useUnicode=true&amp;characterEncoding=UTF-8\n","source":"_posts/hibernate连接数据库乱码问题.md","raw":"---\ntitle: hibernate连接数据库乱码问题\ntoc: true\ndate: 2017-08-24 14:02:51\ntags:\n- Java基础\n---\n首先初始化数据库本身的编码，之后需要在url后面加上?useUnicode=true&amp;characterEncoding=UTF-8\n","slug":"hibernate连接数据库乱码问题","published":1,"updated":"2018-01-20T06:44:37.590Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8yf003f44wahrdg1apy","content":"<p>首先初始化数据库本身的编码，之后需要在url后面加上?useUnicode=true&amp;characterEncoding=UTF-8</p>\n","excerpt":"","more":"<p>首先初始化数据库本身的编码，之后需要在url后面加上?useUnicode=true&amp;characterEncoding=UTF-8</p>\n"},{"title":"XML学习笔记","date":"2017-03-21T10:01:52.000Z","toc":true,"_content":"XML基础\n<!--more-->\n# XML文档声明\n\t<?xml version=\"1.0\" encoding=\"gbk\"?>\n\tversion: xml的版本1.0 1.1\n\tencoding: xml的编码\n\tstandalone: 是否需要依赖其他文件 yes/no\n# XML元素定义\n\t<preson id1=\"a\" id2=\"b\"></person>\n# XML的注释\n\t<!-- ... --> //注释不能嵌套\n# XML转义字符\n\t&\t&amp;\n\t<\t&lt;\n\t>\t&gt;\n\t\"\t&quot;\n\t,\t&apos;\n# XML的CDATA区\n\t<![CDATA[  内容  ]]>\n\t转义字符很多的情况下使用\n# XML的PI指令\n\t<?xml-stylesheet type=\"text/css\" href=\"css的路径\"?>\n\t可以在xml中设置样式\n# XML的约束\n## dtd约束\n\t\t1.xml中有几个元素，在dtd文件中写几个<!ELEMENT>\n\t\t2.判断元素是简单元素还是复杂元素\n\t\t\t复杂元素\n\t\t\t\t<!ELEMENT 元素名称 (子元素)>\n\t\t\t简单元素\n\t\t\t\t<!ELEMENT 元素名称 (#PCDATA)>\n\t\t3.需要在xml文件中引入dtd文件\n\t\t\t<!DOCTYPE 根元素名称 SYSTEM \"dtd文件的路径\">\n#### dtd的三种引用方式\n\t\t1.引入外部的dtd文件\n\t\t\t<!DOCTYPE 根元素名称 SYSTEM \"dtd路径\">\n\t\t2.使用内部的dtd文件\n\t\t\t<!DOCTYPE 根元素名称 [\n\t\t\t\t<!ELEMENT person (name,age)>\n\t\t\t\t<!ELEMENT name (#PCDATA)>\n\t\t\t\t<!ELEMENT AGE (#PCDATA)>\n\t\t\t]>\n\t\t3.使用外部的dtd文件(网络上的dtd)\n\t\t\t<!DOCTYPE 根元素 PUBLIC \"DTD名称\" \"DTD文档的URL\">\n\t\t\n#### dtd定义元素\n\t\t<!ELEMENT 元素名 约束>\n\t\t简单元素\n\t\t\t<!ELEMENT name (#PCDATA)>\n\t\t\t\t(#PCDATA): 约束name是字符串类型\n\t\t\t\tEMPTY: 元素为空\n\t\t\t\tANY: 任意\n\t\t复杂元素\n\t\t\t<!ELEMENT person (name,age)>\n\t\t\t\t  : 表示子元素只能出现一次\n\t\t\t\t+ : 表示一次或者多次\n\t\t\t\t？: 表示零次或者一次\n\t\t\t\t* : 表示零次或者多次\n\t\t\t\t子元素用逗号隔开表示元素的出现顺序\n\t\t\t\t子元素用|隔开表示只能出现其中一个\n\t\n#### dtd定义属性\n\t\t<!ATTLIST 元素名称 属性名称 属性类型 属性的约束>\n\t\t<!ATTLIST birthday ID1 CDATA #REQUIRED>\n\t\t属性类型\n\t\t\tCDATA:字符串\n\t\t\t枚举:出现其中一个\n\t\t\tID:值只能是字母或者下划线开头\n\t\t属性的约束\n\t\t\t#REQUIRED:属性必须存在\n\t\t\t#IMPLIED:属性可有可无\n\t\t\t#FIXED:表示一个固定值\n\t\t\t直接值//不写属性直接使用值，写了属性使用设置的\n#### dtd定义实体\n\t\t<!ENTITY 实体名称 \"实体的值\">\n\t\t使用实体 &实体名称\n## schema约束\n\t创建一个schema文件,后缀名是 .xsd\n\t根节点为<schema>\n\t属性 xmlns=\"http://www.w3.org/2001/XMLSchema\"\n\t\t//表示当前文件是xml文件的一个约束文件\n\ttargetNamespace=\"URL\"\n\t\t//表示通过地址引入约束文件\n\telementFormDefault=\"qualified\"\n\t复杂元素\n\t\t<element name=\"person\">\n\t\t\t<complexType>\n\t\t\t<sequence>\n\t\t\t\t简单元素<element name=\"name\" type=\"string\"></element>\n\t\t\t</sequence>\n\t\t\t<complexType>\n\t\t</element>\n\t在被约束文件里引入约束文件\n\t\t<person xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txmlns=\"targetNamespace\"\t\n\t\txsi:schemaLocation=\"targetNamespace 约束文件的地址路径\">\n\t<sequence>:表示元素出现的顺序\n\t<all>:元素只能出现1次\n\t<choice>:元素只能出现其中1个\n\tmaxOccurs=\"unbounded\":元素出现的次数\n\t<any></any>:任意元素\n\t可以约束元素\n\t\t写在复杂元素里面,</complexType>之前\n\t\t<attribute name=\"id1\" type=\"int\" use=\"required\"></attribute>\n\t\t\tname:元素名称\n\t\t\ttype:元素类型\n\t\t\tuse:是否必须出现\n# XML解析简介\n\txml的解析方式: dom和sax\n\t\tdom:根据xml的的层级结构在内存中分配一个树形结构,把xml的标签,属性和文本都封装成对象\n\t\t缺点:如果文件过大,造成内存溢出\n\t\t优点:很方便实现增删改操作\n\t\tsax:采用事件驱动,边读边解析\n\t\t\t从上到下,一行一行的解析,解析到某一个对象,返回对象名称\n\t\t缺点:不能实现增删改操作\n\t\t优点:方便实现查询操作\n\t\t","source":"_posts/XML学习笔记.md","raw":"---\ntitle: XML学习笔记\ndate: 2017-03-21 18:01:52\ntags:\n- XML\n- Web\ntoc: true\n---\nXML基础\n<!--more-->\n# XML文档声明\n\t<?xml version=\"1.0\" encoding=\"gbk\"?>\n\tversion: xml的版本1.0 1.1\n\tencoding: xml的编码\n\tstandalone: 是否需要依赖其他文件 yes/no\n# XML元素定义\n\t<preson id1=\"a\" id2=\"b\"></person>\n# XML的注释\n\t<!-- ... --> //注释不能嵌套\n# XML转义字符\n\t&\t&amp;\n\t<\t&lt;\n\t>\t&gt;\n\t\"\t&quot;\n\t,\t&apos;\n# XML的CDATA区\n\t<![CDATA[  内容  ]]>\n\t转义字符很多的情况下使用\n# XML的PI指令\n\t<?xml-stylesheet type=\"text/css\" href=\"css的路径\"?>\n\t可以在xml中设置样式\n# XML的约束\n## dtd约束\n\t\t1.xml中有几个元素，在dtd文件中写几个<!ELEMENT>\n\t\t2.判断元素是简单元素还是复杂元素\n\t\t\t复杂元素\n\t\t\t\t<!ELEMENT 元素名称 (子元素)>\n\t\t\t简单元素\n\t\t\t\t<!ELEMENT 元素名称 (#PCDATA)>\n\t\t3.需要在xml文件中引入dtd文件\n\t\t\t<!DOCTYPE 根元素名称 SYSTEM \"dtd文件的路径\">\n#### dtd的三种引用方式\n\t\t1.引入外部的dtd文件\n\t\t\t<!DOCTYPE 根元素名称 SYSTEM \"dtd路径\">\n\t\t2.使用内部的dtd文件\n\t\t\t<!DOCTYPE 根元素名称 [\n\t\t\t\t<!ELEMENT person (name,age)>\n\t\t\t\t<!ELEMENT name (#PCDATA)>\n\t\t\t\t<!ELEMENT AGE (#PCDATA)>\n\t\t\t]>\n\t\t3.使用外部的dtd文件(网络上的dtd)\n\t\t\t<!DOCTYPE 根元素 PUBLIC \"DTD名称\" \"DTD文档的URL\">\n\t\t\n#### dtd定义元素\n\t\t<!ELEMENT 元素名 约束>\n\t\t简单元素\n\t\t\t<!ELEMENT name (#PCDATA)>\n\t\t\t\t(#PCDATA): 约束name是字符串类型\n\t\t\t\tEMPTY: 元素为空\n\t\t\t\tANY: 任意\n\t\t复杂元素\n\t\t\t<!ELEMENT person (name,age)>\n\t\t\t\t  : 表示子元素只能出现一次\n\t\t\t\t+ : 表示一次或者多次\n\t\t\t\t？: 表示零次或者一次\n\t\t\t\t* : 表示零次或者多次\n\t\t\t\t子元素用逗号隔开表示元素的出现顺序\n\t\t\t\t子元素用|隔开表示只能出现其中一个\n\t\n#### dtd定义属性\n\t\t<!ATTLIST 元素名称 属性名称 属性类型 属性的约束>\n\t\t<!ATTLIST birthday ID1 CDATA #REQUIRED>\n\t\t属性类型\n\t\t\tCDATA:字符串\n\t\t\t枚举:出现其中一个\n\t\t\tID:值只能是字母或者下划线开头\n\t\t属性的约束\n\t\t\t#REQUIRED:属性必须存在\n\t\t\t#IMPLIED:属性可有可无\n\t\t\t#FIXED:表示一个固定值\n\t\t\t直接值//不写属性直接使用值，写了属性使用设置的\n#### dtd定义实体\n\t\t<!ENTITY 实体名称 \"实体的值\">\n\t\t使用实体 &实体名称\n## schema约束\n\t创建一个schema文件,后缀名是 .xsd\n\t根节点为<schema>\n\t属性 xmlns=\"http://www.w3.org/2001/XMLSchema\"\n\t\t//表示当前文件是xml文件的一个约束文件\n\ttargetNamespace=\"URL\"\n\t\t//表示通过地址引入约束文件\n\telementFormDefault=\"qualified\"\n\t复杂元素\n\t\t<element name=\"person\">\n\t\t\t<complexType>\n\t\t\t<sequence>\n\t\t\t\t简单元素<element name=\"name\" type=\"string\"></element>\n\t\t\t</sequence>\n\t\t\t<complexType>\n\t\t</element>\n\t在被约束文件里引入约束文件\n\t\t<person xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txmlns=\"targetNamespace\"\t\n\t\txsi:schemaLocation=\"targetNamespace 约束文件的地址路径\">\n\t<sequence>:表示元素出现的顺序\n\t<all>:元素只能出现1次\n\t<choice>:元素只能出现其中1个\n\tmaxOccurs=\"unbounded\":元素出现的次数\n\t<any></any>:任意元素\n\t可以约束元素\n\t\t写在复杂元素里面,</complexType>之前\n\t\t<attribute name=\"id1\" type=\"int\" use=\"required\"></attribute>\n\t\t\tname:元素名称\n\t\t\ttype:元素类型\n\t\t\tuse:是否必须出现\n# XML解析简介\n\txml的解析方式: dom和sax\n\t\tdom:根据xml的的层级结构在内存中分配一个树形结构,把xml的标签,属性和文本都封装成对象\n\t\t缺点:如果文件过大,造成内存溢出\n\t\t优点:很方便实现增删改操作\n\t\tsax:采用事件驱动,边读边解析\n\t\t\t从上到下,一行一行的解析,解析到某一个对象,返回对象名称\n\t\t缺点:不能实现增删改操作\n\t\t优点:方便实现查询操作\n\t\t","slug":"XML学习笔记","published":1,"updated":"2018-01-20T06:44:37.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8yi003h44waqt1gb06h","content":"<p>XML基础<br><a id=\"more\"></a></p>\n<h1 id=\"XML文档声明\"><a href=\"#XML文档声明\" class=\"headerlink\" title=\"XML文档声明\"></a>XML文档声明</h1><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot;?&gt;\nversion: xml的版本1.0 1.1\nencoding: xml的编码\nstandalone: 是否需要依赖其他文件 yes/no\n</code></pre><h1 id=\"XML元素定义\"><a href=\"#XML元素定义\" class=\"headerlink\" title=\"XML元素定义\"></a>XML元素定义</h1><pre><code>&lt;preson id1=&quot;a&quot; id2=&quot;b&quot;&gt;&lt;/person&gt;\n</code></pre><h1 id=\"XML的注释\"><a href=\"#XML的注释\" class=\"headerlink\" title=\"XML的注释\"></a>XML的注释</h1><pre><code>&lt;!-- ... --&gt; //注释不能嵌套\n</code></pre><h1 id=\"XML转义字符\"><a href=\"#XML转义字符\" class=\"headerlink\" title=\"XML转义字符\"></a>XML转义字符</h1><pre><code>&amp;    &amp;amp;\n&lt;    &amp;lt;\n&gt;    &amp;gt;\n&quot;    &amp;quot;\n,    &amp;apos;\n</code></pre><h1 id=\"XML的CDATA区\"><a href=\"#XML的CDATA区\" class=\"headerlink\" title=\"XML的CDATA区\"></a>XML的CDATA区</h1><pre><code>&lt;![CDATA[  内容  ]]&gt;\n转义字符很多的情况下使用\n</code></pre><h1 id=\"XML的PI指令\"><a href=\"#XML的PI指令\" class=\"headerlink\" title=\"XML的PI指令\"></a>XML的PI指令</h1><pre><code>&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;css的路径&quot;?&gt;\n可以在xml中设置样式\n</code></pre><h1 id=\"XML的约束\"><a href=\"#XML的约束\" class=\"headerlink\" title=\"XML的约束\"></a>XML的约束</h1><h2 id=\"dtd约束\"><a href=\"#dtd约束\" class=\"headerlink\" title=\"dtd约束\"></a>dtd约束</h2><pre><code>1.xml中有几个元素，在dtd文件中写几个&lt;!ELEMENT&gt;\n2.判断元素是简单元素还是复杂元素\n    复杂元素\n        &lt;!ELEMENT 元素名称 (子元素)&gt;\n    简单元素\n        &lt;!ELEMENT 元素名称 (#PCDATA)&gt;\n3.需要在xml文件中引入dtd文件\n    &lt;!DOCTYPE 根元素名称 SYSTEM &quot;dtd文件的路径&quot;&gt;\n</code></pre><h4 id=\"dtd的三种引用方式\"><a href=\"#dtd的三种引用方式\" class=\"headerlink\" title=\"dtd的三种引用方式\"></a>dtd的三种引用方式</h4><pre><code>1.引入外部的dtd文件\n    &lt;!DOCTYPE 根元素名称 SYSTEM &quot;dtd路径&quot;&gt;\n2.使用内部的dtd文件\n    &lt;!DOCTYPE 根元素名称 [\n        &lt;!ELEMENT person (name,age)&gt;\n        &lt;!ELEMENT name (#PCDATA)&gt;\n        &lt;!ELEMENT AGE (#PCDATA)&gt;\n    ]&gt;\n3.使用外部的dtd文件(网络上的dtd)\n    &lt;!DOCTYPE 根元素 PUBLIC &quot;DTD名称&quot; &quot;DTD文档的URL&quot;&gt;\n</code></pre><h4 id=\"dtd定义元素\"><a href=\"#dtd定义元素\" class=\"headerlink\" title=\"dtd定义元素\"></a>dtd定义元素</h4><pre><code>&lt;!ELEMENT 元素名 约束&gt;\n简单元素\n    &lt;!ELEMENT name (#PCDATA)&gt;\n        (#PCDATA): 约束name是字符串类型\n        EMPTY: 元素为空\n        ANY: 任意\n复杂元素\n    &lt;!ELEMENT person (name,age)&gt;\n          : 表示子元素只能出现一次\n        + : 表示一次或者多次\n        ？: 表示零次或者一次\n        * : 表示零次或者多次\n        子元素用逗号隔开表示元素的出现顺序\n        子元素用|隔开表示只能出现其中一个\n</code></pre><h4 id=\"dtd定义属性\"><a href=\"#dtd定义属性\" class=\"headerlink\" title=\"dtd定义属性\"></a>dtd定义属性</h4><pre><code>&lt;!ATTLIST 元素名称 属性名称 属性类型 属性的约束&gt;\n&lt;!ATTLIST birthday ID1 CDATA #REQUIRED&gt;\n属性类型\n    CDATA:字符串\n    枚举:出现其中一个\n    ID:值只能是字母或者下划线开头\n属性的约束\n    #REQUIRED:属性必须存在\n    #IMPLIED:属性可有可无\n    #FIXED:表示一个固定值\n    直接值//不写属性直接使用值，写了属性使用设置的\n</code></pre><h4 id=\"dtd定义实体\"><a href=\"#dtd定义实体\" class=\"headerlink\" title=\"dtd定义实体\"></a>dtd定义实体</h4><pre><code>&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;\n使用实体 &amp;实体名称\n</code></pre><h2 id=\"schema约束\"><a href=\"#schema约束\" class=\"headerlink\" title=\"schema约束\"></a>schema约束</h2><pre><code>创建一个schema文件,后缀名是 .xsd\n根节点为&lt;schema&gt;\n属性 xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot;\n    //表示当前文件是xml文件的一个约束文件\ntargetNamespace=&quot;URL&quot;\n    //表示通过地址引入约束文件\nelementFormDefault=&quot;qualified&quot;\n复杂元素\n    &lt;element name=&quot;person&quot;&gt;\n        &lt;complexType&gt;\n        &lt;sequence&gt;\n            简单元素&lt;element name=&quot;name&quot; type=&quot;string&quot;&gt;&lt;/element&gt;\n        &lt;/sequence&gt;\n        &lt;complexType&gt;\n    &lt;/element&gt;\n在被约束文件里引入约束文件\n    &lt;person xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xmlns=&quot;targetNamespace&quot;    \n    xsi:schemaLocation=&quot;targetNamespace 约束文件的地址路径&quot;&gt;\n&lt;sequence&gt;:表示元素出现的顺序\n&lt;all&gt;:元素只能出现1次\n&lt;choice&gt;:元素只能出现其中1个\nmaxOccurs=&quot;unbounded&quot;:元素出现的次数\n&lt;any&gt;&lt;/any&gt;:任意元素\n可以约束元素\n    写在复杂元素里面,&lt;/complexType&gt;之前\n    &lt;attribute name=&quot;id1&quot; type=&quot;int&quot; use=&quot;required&quot;&gt;&lt;/attribute&gt;\n        name:元素名称\n        type:元素类型\n        use:是否必须出现\n</code></pre><h1 id=\"XML解析简介\"><a href=\"#XML解析简介\" class=\"headerlink\" title=\"XML解析简介\"></a>XML解析简介</h1><pre><code>xml的解析方式: dom和sax\n    dom:根据xml的的层级结构在内存中分配一个树形结构,把xml的标签,属性和文本都封装成对象\n    缺点:如果文件过大,造成内存溢出\n    优点:很方便实现增删改操作\n    sax:采用事件驱动,边读边解析\n        从上到下,一行一行的解析,解析到某一个对象,返回对象名称\n    缺点:不能实现增删改操作\n    优点:方便实现查询操作\n</code></pre>","excerpt":"<p>XML基础<br>","more":"</p>\n<h1 id=\"XML文档声明\"><a href=\"#XML文档声明\" class=\"headerlink\" title=\"XML文档声明\"></a>XML文档声明</h1><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot;?&gt;\nversion: xml的版本1.0 1.1\nencoding: xml的编码\nstandalone: 是否需要依赖其他文件 yes/no\n</code></pre><h1 id=\"XML元素定义\"><a href=\"#XML元素定义\" class=\"headerlink\" title=\"XML元素定义\"></a>XML元素定义</h1><pre><code>&lt;preson id1=&quot;a&quot; id2=&quot;b&quot;&gt;&lt;/person&gt;\n</code></pre><h1 id=\"XML的注释\"><a href=\"#XML的注释\" class=\"headerlink\" title=\"XML的注释\"></a>XML的注释</h1><pre><code>&lt;!-- ... --&gt; //注释不能嵌套\n</code></pre><h1 id=\"XML转义字符\"><a href=\"#XML转义字符\" class=\"headerlink\" title=\"XML转义字符\"></a>XML转义字符</h1><pre><code>&amp;    &amp;amp;\n&lt;    &amp;lt;\n&gt;    &amp;gt;\n&quot;    &amp;quot;\n,    &amp;apos;\n</code></pre><h1 id=\"XML的CDATA区\"><a href=\"#XML的CDATA区\" class=\"headerlink\" title=\"XML的CDATA区\"></a>XML的CDATA区</h1><pre><code>&lt;![CDATA[  内容  ]]&gt;\n转义字符很多的情况下使用\n</code></pre><h1 id=\"XML的PI指令\"><a href=\"#XML的PI指令\" class=\"headerlink\" title=\"XML的PI指令\"></a>XML的PI指令</h1><pre><code>&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;css的路径&quot;?&gt;\n可以在xml中设置样式\n</code></pre><h1 id=\"XML的约束\"><a href=\"#XML的约束\" class=\"headerlink\" title=\"XML的约束\"></a>XML的约束</h1><h2 id=\"dtd约束\"><a href=\"#dtd约束\" class=\"headerlink\" title=\"dtd约束\"></a>dtd约束</h2><pre><code>1.xml中有几个元素，在dtd文件中写几个&lt;!ELEMENT&gt;\n2.判断元素是简单元素还是复杂元素\n    复杂元素\n        &lt;!ELEMENT 元素名称 (子元素)&gt;\n    简单元素\n        &lt;!ELEMENT 元素名称 (#PCDATA)&gt;\n3.需要在xml文件中引入dtd文件\n    &lt;!DOCTYPE 根元素名称 SYSTEM &quot;dtd文件的路径&quot;&gt;\n</code></pre><h4 id=\"dtd的三种引用方式\"><a href=\"#dtd的三种引用方式\" class=\"headerlink\" title=\"dtd的三种引用方式\"></a>dtd的三种引用方式</h4><pre><code>1.引入外部的dtd文件\n    &lt;!DOCTYPE 根元素名称 SYSTEM &quot;dtd路径&quot;&gt;\n2.使用内部的dtd文件\n    &lt;!DOCTYPE 根元素名称 [\n        &lt;!ELEMENT person (name,age)&gt;\n        &lt;!ELEMENT name (#PCDATA)&gt;\n        &lt;!ELEMENT AGE (#PCDATA)&gt;\n    ]&gt;\n3.使用外部的dtd文件(网络上的dtd)\n    &lt;!DOCTYPE 根元素 PUBLIC &quot;DTD名称&quot; &quot;DTD文档的URL&quot;&gt;\n</code></pre><h4 id=\"dtd定义元素\"><a href=\"#dtd定义元素\" class=\"headerlink\" title=\"dtd定义元素\"></a>dtd定义元素</h4><pre><code>&lt;!ELEMENT 元素名 约束&gt;\n简单元素\n    &lt;!ELEMENT name (#PCDATA)&gt;\n        (#PCDATA): 约束name是字符串类型\n        EMPTY: 元素为空\n        ANY: 任意\n复杂元素\n    &lt;!ELEMENT person (name,age)&gt;\n          : 表示子元素只能出现一次\n        + : 表示一次或者多次\n        ？: 表示零次或者一次\n        * : 表示零次或者多次\n        子元素用逗号隔开表示元素的出现顺序\n        子元素用|隔开表示只能出现其中一个\n</code></pre><h4 id=\"dtd定义属性\"><a href=\"#dtd定义属性\" class=\"headerlink\" title=\"dtd定义属性\"></a>dtd定义属性</h4><pre><code>&lt;!ATTLIST 元素名称 属性名称 属性类型 属性的约束&gt;\n&lt;!ATTLIST birthday ID1 CDATA #REQUIRED&gt;\n属性类型\n    CDATA:字符串\n    枚举:出现其中一个\n    ID:值只能是字母或者下划线开头\n属性的约束\n    #REQUIRED:属性必须存在\n    #IMPLIED:属性可有可无\n    #FIXED:表示一个固定值\n    直接值//不写属性直接使用值，写了属性使用设置的\n</code></pre><h4 id=\"dtd定义实体\"><a href=\"#dtd定义实体\" class=\"headerlink\" title=\"dtd定义实体\"></a>dtd定义实体</h4><pre><code>&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;\n使用实体 &amp;实体名称\n</code></pre><h2 id=\"schema约束\"><a href=\"#schema约束\" class=\"headerlink\" title=\"schema约束\"></a>schema约束</h2><pre><code>创建一个schema文件,后缀名是 .xsd\n根节点为&lt;schema&gt;\n属性 xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot;\n    //表示当前文件是xml文件的一个约束文件\ntargetNamespace=&quot;URL&quot;\n    //表示通过地址引入约束文件\nelementFormDefault=&quot;qualified&quot;\n复杂元素\n    &lt;element name=&quot;person&quot;&gt;\n        &lt;complexType&gt;\n        &lt;sequence&gt;\n            简单元素&lt;element name=&quot;name&quot; type=&quot;string&quot;&gt;&lt;/element&gt;\n        &lt;/sequence&gt;\n        &lt;complexType&gt;\n    &lt;/element&gt;\n在被约束文件里引入约束文件\n    &lt;person xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xmlns=&quot;targetNamespace&quot;    \n    xsi:schemaLocation=&quot;targetNamespace 约束文件的地址路径&quot;&gt;\n&lt;sequence&gt;:表示元素出现的顺序\n&lt;all&gt;:元素只能出现1次\n&lt;choice&gt;:元素只能出现其中1个\nmaxOccurs=&quot;unbounded&quot;:元素出现的次数\n&lt;any&gt;&lt;/any&gt;:任意元素\n可以约束元素\n    写在复杂元素里面,&lt;/complexType&gt;之前\n    &lt;attribute name=&quot;id1&quot; type=&quot;int&quot; use=&quot;required&quot;&gt;&lt;/attribute&gt;\n        name:元素名称\n        type:元素类型\n        use:是否必须出现\n</code></pre><h1 id=\"XML解析简介\"><a href=\"#XML解析简介\" class=\"headerlink\" title=\"XML解析简介\"></a>XML解析简介</h1><pre><code>xml的解析方式: dom和sax\n    dom:根据xml的的层级结构在内存中分配一个树形结构,把xml的标签,属性和文本都封装成对象\n    缺点:如果文件过大,造成内存溢出\n    优点:很方便实现增删改操作\n    sax:采用事件驱动,边读边解析\n        从上到下,一行一行的解析,解析到某一个对象,返回对象名称\n    缺点:不能实现增删改操作\n    优点:方便实现查询操作\n</code></pre>"},{"title":"Servlet3.0的异步处理和上传支持","date":"2017-05-08T07:59:28.000Z","toc":true,"_content":"Servlet3.0\n异步处理和上传支持\n<!--more-->\n# 异步处理\n![异步处理](http://wx4.sinaimg.cn/large/005P8ayVgy1ffe0j2iv48j30mh08y0xl.jpg)\n```\n//设置支持异步\n@WebServlet(urlPatterns=\"/AServlet\", asyncSupported=true)\npublic class AServlet extends HttpServlet {\n\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t//必须设置编码问题\n\t\tresponse.setContentType(\"text/html;charset=utf-8\");\n\t\t\n\t\t//IE必须大于512b才有异步效果\n\t\tfor(int i = 0; i <= 512; i++) {\n\t\t\tresponse.getWriter().print(\"a\");\n\t\t}\n\t\tresponse.getWriter().flush();\n\t\t\n\t\t//得到上下文异步\n\t\tAsyncContext aContext = request.startAsync(request, response);\n\t\t\n\t\t//开始测试\n\t\taContext.start(new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tresponse.getWriter().print(\"现在马上开始:<br/>\");\n\t\t\t\t\tresponse.getWriter().flush();\n\t\t\t\t\tThread.sleep(3000);\n\t\t\t\t\tfor(char c = 'A'; c <= 'Z'; c++) {\n\t\t\t\t\t\tresponse.getWriter().print(c+\"\");\n\t\t\t\t\t\tresponse.getWriter().flush();\n\t\t\t\t\t\tThread.sleep(250);\n\t\t\t\t\t}\n\t\t\t\t} catch (IOException | InterruptedException e) {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t//通知线程已经结束\n\t\t\t\taContext.complete();\n\t\t\t}\n\t\t});\n\t}\n}\n```\n# 上传支持\n![上传支持](http://wx1.sinaimg.cn/large/005P8ayVgy1ffe0j3i4l8j30ir09076s.jpg)\n### Servlet代码\n```\n@WebServlet(urlPatterns=\"/BServlet\")\n@MultipartConfig//支持3.0上传部件\npublic class BServlet extends HttpServlet {\n\tprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\trequest.setCharacterEncoding(\"UTF-8\");\n\t\t//获取文本\n\t\tString username = request.getParameter(\"username\");\n\t\t//获取文件\n\t\tPart part = request.getPart(\"resume\");\n\t\t//测试信息\n\t\tSystem.out.println(part.getContentType());\n\t\tSystem.out.println(part.getSize());\n\t\tSystem.out.println(part.getName());\n\t\tSystem.out.println(part.getHeader(\"Content-Disposition\"));\n\t\t//保存文件\n\t\tpart.write(\"D:/1234.jpg\");\n\t}\n}\n```\n### 前端表单\n```\n<h1>注册</h1>\n<form action=\"<c:url value='/BServlet'/>\" method=\"post\" enctype=\"multipart/form-data\">\n用户名:<input type=\"text\" name=\"username\"/> <br/>\n简历:<input type=\"file\" name=\"resume\" />\n<input type=\"submit\" value=\"注册\" />\n</form>\n```\n","source":"_posts/Servlet3-0的异步处理和上传支持.md","raw":"---\ntitle: Servlet3.0的异步处理和上传支持\ndate: 2017-05-08 15:59:28\ntags:\n- Web\ntoc: true\n---\nServlet3.0\n异步处理和上传支持\n<!--more-->\n# 异步处理\n![异步处理](http://wx4.sinaimg.cn/large/005P8ayVgy1ffe0j2iv48j30mh08y0xl.jpg)\n```\n//设置支持异步\n@WebServlet(urlPatterns=\"/AServlet\", asyncSupported=true)\npublic class AServlet extends HttpServlet {\n\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t//必须设置编码问题\n\t\tresponse.setContentType(\"text/html;charset=utf-8\");\n\t\t\n\t\t//IE必须大于512b才有异步效果\n\t\tfor(int i = 0; i <= 512; i++) {\n\t\t\tresponse.getWriter().print(\"a\");\n\t\t}\n\t\tresponse.getWriter().flush();\n\t\t\n\t\t//得到上下文异步\n\t\tAsyncContext aContext = request.startAsync(request, response);\n\t\t\n\t\t//开始测试\n\t\taContext.start(new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tresponse.getWriter().print(\"现在马上开始:<br/>\");\n\t\t\t\t\tresponse.getWriter().flush();\n\t\t\t\t\tThread.sleep(3000);\n\t\t\t\t\tfor(char c = 'A'; c <= 'Z'; c++) {\n\t\t\t\t\t\tresponse.getWriter().print(c+\"\");\n\t\t\t\t\t\tresponse.getWriter().flush();\n\t\t\t\t\t\tThread.sleep(250);\n\t\t\t\t\t}\n\t\t\t\t} catch (IOException | InterruptedException e) {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t//通知线程已经结束\n\t\t\t\taContext.complete();\n\t\t\t}\n\t\t});\n\t}\n}\n```\n# 上传支持\n![上传支持](http://wx1.sinaimg.cn/large/005P8ayVgy1ffe0j3i4l8j30ir09076s.jpg)\n### Servlet代码\n```\n@WebServlet(urlPatterns=\"/BServlet\")\n@MultipartConfig//支持3.0上传部件\npublic class BServlet extends HttpServlet {\n\tprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\trequest.setCharacterEncoding(\"UTF-8\");\n\t\t//获取文本\n\t\tString username = request.getParameter(\"username\");\n\t\t//获取文件\n\t\tPart part = request.getPart(\"resume\");\n\t\t//测试信息\n\t\tSystem.out.println(part.getContentType());\n\t\tSystem.out.println(part.getSize());\n\t\tSystem.out.println(part.getName());\n\t\tSystem.out.println(part.getHeader(\"Content-Disposition\"));\n\t\t//保存文件\n\t\tpart.write(\"D:/1234.jpg\");\n\t}\n}\n```\n### 前端表单\n```\n<h1>注册</h1>\n<form action=\"<c:url value='/BServlet'/>\" method=\"post\" enctype=\"multipart/form-data\">\n用户名:<input type=\"text\" name=\"username\"/> <br/>\n简历:<input type=\"file\" name=\"resume\" />\n<input type=\"submit\" value=\"注册\" />\n</form>\n```\n","slug":"Servlet3-0的异步处理和上传支持","published":1,"updated":"2018-01-20T06:44:37.577Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8ys003k44wa7dkqa588","content":"<p>Servlet3.0<br>异步处理和上传支持<br><a id=\"more\"></a></p>\n<h1 id=\"异步处理\"><a href=\"#异步处理\" class=\"headerlink\" title=\"异步处理\"></a>异步处理</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1ffe0j2iv48j30mh08y0xl.jpg\" alt=\"异步处理\"><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//设置支持异步</span></div><div class=\"line\"><span class=\"meta\">@WebServlet</span>(urlPatterns=<span class=\"string\">\"/AServlet\"</span>, asyncSupported=<span class=\"keyword\">true</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//必须设置编码问题</span></div><div class=\"line\">  response.setContentType(<span class=\"string\">\"text/html;charset=utf-8\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//IE必须大于512b才有异步效果</span></div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">512</span>; i++) &#123;</div><div class=\"line\">   response.getWriter().print(<span class=\"string\">\"a\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  response.getWriter().flush();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//得到上下文异步</span></div><div class=\"line\">  AsyncContext aContext = request.startAsync(request, response);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//开始测试</span></div><div class=\"line\">  aContext.start(<span class=\"keyword\">new</span> Runnable() &#123;</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">     response.getWriter().print(<span class=\"string\">\"现在马上开始:&lt;br/&gt;\"</span>);</div><div class=\"line\">     response.getWriter().flush();</div><div class=\"line\">     Thread.sleep(<span class=\"number\">3000</span>);</div><div class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> c = <span class=\"string\">'A'</span>; c &lt;= <span class=\"string\">'Z'</span>; c++) &#123;</div><div class=\"line\">      response.getWriter().print(c+<span class=\"string\">\"\"</span>);</div><div class=\"line\">      response.getWriter().flush();</div><div class=\"line\">      Thread.sleep(<span class=\"number\">250</span>);</div><div class=\"line\">     &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException | InterruptedException e) &#123;</div><div class=\"line\">     </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//通知线程已经结束</span></div><div class=\"line\">    aContext.complete();</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"上传支持\"><a href=\"#上传支持\" class=\"headerlink\" title=\"上传支持\"></a>上传支持</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1ffe0j3i4l8j30ir09076s.jpg\" alt=\"上传支持\"></p>\n<h3 id=\"Servlet代码\"><a href=\"#Servlet代码\" class=\"headerlink\" title=\"Servlet代码\"></a>Servlet代码</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@WebServlet</span>(urlPatterns=<span class=\"string\">\"/BServlet\"</span>)</div><div class=\"line\"><span class=\"meta\">@MultipartConfig</span><span class=\"comment\">//支持3.0上传部件</span></div><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">protected</span> void doPost(<span class=\"type\">HttpServletRequest</span> request, <span class=\"type\">HttpServletResponse</span> response) <span class=\"keyword\">throws</span> <span class=\"type\">ServletException</span>, <span class=\"type\">IOException</span> &#123;</div><div class=\"line\">  request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">  <span class=\"comment\">//获取文本</span></div><div class=\"line\">  <span class=\"type\">String</span> username = request.getParameter(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">  <span class=\"comment\">//获取文件</span></div><div class=\"line\">  <span class=\"type\">Part</span> part = request.getPart(<span class=\"string\">\"resume\"</span>);</div><div class=\"line\">  <span class=\"comment\">//测试信息</span></div><div class=\"line\">  <span class=\"type\">System</span>.out.println(part.getContentType());</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(part.getSize());</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(part.getName());</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(part.getHeader(<span class=\"string\">\"Content-Disposition\"</span>));</div><div class=\"line\">  <span class=\"comment\">//保存文件</span></div><div class=\"line\">  part.write(<span class=\"string\">\"D:/1234.jpg\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"前端表单\"><a href=\"#前端表单\" class=\"headerlink\" title=\"前端表单\"></a>前端表单</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;h1&gt;注册&lt;/h1&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">form</span> action=<span class=\"string\">\"&lt;c:url value='/BServlet'/&gt;\"</span> method=<span class=\"string\">\"post\"</span> enctype=<span class=\"string\">\"multipart/form-data\"</span>&gt;</div><div class=\"line\">用户名:&lt;<span class=\"keyword\">input</span> <span class=\"keyword\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"username\"</span>/&gt; &lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">简历:&lt;<span class=\"keyword\">input</span> <span class=\"keyword\">type</span>=<span class=\"string\">\"file\"</span> name=<span class=\"string\">\"resume\"</span> /&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">input</span> <span class=\"keyword\">type</span>=<span class=\"string\">\"submit\"</span> value=<span class=\"string\">\"注册\"</span> /&gt;</div><div class=\"line\">&lt;/<span class=\"keyword\">form</span>&gt;</div></pre></td></tr></table></figure>\n","excerpt":"<p>Servlet3.0<br>异步处理和上传支持<br>","more":"</p>\n<h1 id=\"异步处理\"><a href=\"#异步处理\" class=\"headerlink\" title=\"异步处理\"></a>异步处理</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1ffe0j2iv48j30mh08y0xl.jpg\" alt=\"异步处理\"><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//设置支持异步</span></div><div class=\"line\"><span class=\"meta\">@WebServlet</span>(urlPatterns=<span class=\"string\">\"/AServlet\"</span>, asyncSupported=<span class=\"keyword\">true</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//必须设置编码问题</span></div><div class=\"line\">  response.setContentType(<span class=\"string\">\"text/html;charset=utf-8\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//IE必须大于512b才有异步效果</span></div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">512</span>; i++) &#123;</div><div class=\"line\">   response.getWriter().print(<span class=\"string\">\"a\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  response.getWriter().flush();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//得到上下文异步</span></div><div class=\"line\">  AsyncContext aContext = request.startAsync(request, response);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//开始测试</span></div><div class=\"line\">  aContext.start(<span class=\"keyword\">new</span> Runnable() &#123;</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">     response.getWriter().print(<span class=\"string\">\"现在马上开始:&lt;br/&gt;\"</span>);</div><div class=\"line\">     response.getWriter().flush();</div><div class=\"line\">     Thread.sleep(<span class=\"number\">3000</span>);</div><div class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">char</span> c = <span class=\"string\">'A'</span>; c &lt;= <span class=\"string\">'Z'</span>; c++) &#123;</div><div class=\"line\">      response.getWriter().print(c+<span class=\"string\">\"\"</span>);</div><div class=\"line\">      response.getWriter().flush();</div><div class=\"line\">      Thread.sleep(<span class=\"number\">250</span>);</div><div class=\"line\">     &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException | InterruptedException e) &#123;</div><div class=\"line\">     </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//通知线程已经结束</span></div><div class=\"line\">    aContext.complete();</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"上传支持\"><a href=\"#上传支持\" class=\"headerlink\" title=\"上传支持\"></a>上传支持</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1ffe0j3i4l8j30ir09076s.jpg\" alt=\"上传支持\"></p>\n<h3 id=\"Servlet代码\"><a href=\"#Servlet代码\" class=\"headerlink\" title=\"Servlet代码\"></a>Servlet代码</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@WebServlet</span>(urlPatterns=<span class=\"string\">\"/BServlet\"</span>)</div><div class=\"line\"><span class=\"meta\">@MultipartConfig</span><span class=\"comment\">//支持3.0上传部件</span></div><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">protected</span> void doPost(<span class=\"type\">HttpServletRequest</span> request, <span class=\"type\">HttpServletResponse</span> response) <span class=\"keyword\">throws</span> <span class=\"type\">ServletException</span>, <span class=\"type\">IOException</span> &#123;</div><div class=\"line\">  request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">  <span class=\"comment\">//获取文本</span></div><div class=\"line\">  <span class=\"type\">String</span> username = request.getParameter(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">  <span class=\"comment\">//获取文件</span></div><div class=\"line\">  <span class=\"type\">Part</span> part = request.getPart(<span class=\"string\">\"resume\"</span>);</div><div class=\"line\">  <span class=\"comment\">//测试信息</span></div><div class=\"line\">  <span class=\"type\">System</span>.out.println(part.getContentType());</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(part.getSize());</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(part.getName());</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(part.getHeader(<span class=\"string\">\"Content-Disposition\"</span>));</div><div class=\"line\">  <span class=\"comment\">//保存文件</span></div><div class=\"line\">  part.write(<span class=\"string\">\"D:/1234.jpg\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"前端表单\"><a href=\"#前端表单\" class=\"headerlink\" title=\"前端表单\"></a>前端表单</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;h1&gt;注册&lt;/h1&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">form</span> action=<span class=\"string\">\"&lt;c:url value='/BServlet'/&gt;\"</span> method=<span class=\"string\">\"post\"</span> enctype=<span class=\"string\">\"multipart/form-data\"</span>&gt;</div><div class=\"line\">用户名:&lt;<span class=\"keyword\">input</span> <span class=\"keyword\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"username\"</span>/&gt; &lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">简历:&lt;<span class=\"keyword\">input</span> <span class=\"keyword\">type</span>=<span class=\"string\">\"file\"</span> name=<span class=\"string\">\"resume\"</span> /&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">input</span> <span class=\"keyword\">type</span>=<span class=\"string\">\"submit\"</span> value=<span class=\"string\">\"注册\"</span> /&gt;</div><div class=\"line\">&lt;/<span class=\"keyword\">form</span>&gt;</div></pre></td></tr></table></figure>"},{"title":"hibernate02","date":"2017-05-11T07:12:10.000Z","toc":true,"_content":"实体类的三种状态\nHibernate缓存\n事务代码规范\nHibernate绑定session\nHibernate的api\n<!--more-->\n# 实体类的三种状态\n1.瞬时态\n对象里面没有ID，对象与session没关联\n\n2.持久态\n对象里面有ID，对象与session有关联\n\n3.托管态\n对象里面有ID，对象与session没关联\n# Hibernate缓存\nhibernate的一级缓存默认打开的\n一级缓存的范围是session\n一级缓存中存储数据必须是持久态数据\n\nhibernate的二级缓存默认不打开，需要配置\n二级缓存已经不使用了，替代技术为redis\n二级缓存的范围为sessionFactory\n### 一级缓存的特性\n持久态数据的更新不需要update语句，提交事务会自动更新。\n原理\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1ffhgawr1ltj30v00ed77t.jpg)\n# 事务代码规范\n```\ntry{\n\t开启事务\n\t提交事务\n}catch(){\n\t回滚事务\n}finally{\n\t关闭\n}\n```\n# Hibernate绑定session\n底层是threadLocal\n1.在核心配置文件中配置\n```\n<property name=\"current_session_context_class\">thread</property>\n```\n2.调用sessionFactory的方法\n```\nsessionFactory.getCurrentSession();\n```\n# Hibernate的api\nQuery\n```\n//4.使用query对象查询\n//创建query\nQuery query = session.createQuery(\"from User\");\n//调用方法得到结果\nList<User> list = query.list();\nfor (User user : list) {\n\tSystem.out.println(user);\n}\n```\nCriteria\n```\n//4.使用criteria对象查询\n//创建criteria\nCriteria criteria = session.createCriteria(User.class);\n//调用方法得到结果\nList<User> list = criteria.list();\nfor (User user : list) {\n\tSystem.out.println(user);\n}\n```\nSQLQuery\n```\n//创建SQLQuery对象\nSQLQuery sqlQuery = session.createSQLQuery(\"select * from t_user\");\n//如果不设置，默认返回list为数组形式\nsqlQuery.addEntity(User.class);\n//调用方法得到结果\nList<User> list = sqlQuery.list();\nfor (User user : list) {\n\tSystem.out.println(user);\n}\n```","source":"_posts/hibernate02.md","raw":"---\ntitle: hibernate02\ndate: 2017-05-11 15:12:10\ntags:\n- Java基础\ntoc: true\n---\n实体类的三种状态\nHibernate缓存\n事务代码规范\nHibernate绑定session\nHibernate的api\n<!--more-->\n# 实体类的三种状态\n1.瞬时态\n对象里面没有ID，对象与session没关联\n\n2.持久态\n对象里面有ID，对象与session有关联\n\n3.托管态\n对象里面有ID，对象与session没关联\n# Hibernate缓存\nhibernate的一级缓存默认打开的\n一级缓存的范围是session\n一级缓存中存储数据必须是持久态数据\n\nhibernate的二级缓存默认不打开，需要配置\n二级缓存已经不使用了，替代技术为redis\n二级缓存的范围为sessionFactory\n### 一级缓存的特性\n持久态数据的更新不需要update语句，提交事务会自动更新。\n原理\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1ffhgawr1ltj30v00ed77t.jpg)\n# 事务代码规范\n```\ntry{\n\t开启事务\n\t提交事务\n}catch(){\n\t回滚事务\n}finally{\n\t关闭\n}\n```\n# Hibernate绑定session\n底层是threadLocal\n1.在核心配置文件中配置\n```\n<property name=\"current_session_context_class\">thread</property>\n```\n2.调用sessionFactory的方法\n```\nsessionFactory.getCurrentSession();\n```\n# Hibernate的api\nQuery\n```\n//4.使用query对象查询\n//创建query\nQuery query = session.createQuery(\"from User\");\n//调用方法得到结果\nList<User> list = query.list();\nfor (User user : list) {\n\tSystem.out.println(user);\n}\n```\nCriteria\n```\n//4.使用criteria对象查询\n//创建criteria\nCriteria criteria = session.createCriteria(User.class);\n//调用方法得到结果\nList<User> list = criteria.list();\nfor (User user : list) {\n\tSystem.out.println(user);\n}\n```\nSQLQuery\n```\n//创建SQLQuery对象\nSQLQuery sqlQuery = session.createSQLQuery(\"select * from t_user\");\n//如果不设置，默认返回list为数组形式\nsqlQuery.addEntity(User.class);\n//调用方法得到结果\nList<User> list = sqlQuery.list();\nfor (User user : list) {\n\tSystem.out.println(user);\n}\n```","slug":"hibernate02","published":1,"updated":"2018-01-20T06:44:37.587Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8yz003m44wa0x5b3fbo","content":"<p>实体类的三种状态<br>Hibernate缓存<br>事务代码规范<br>Hibernate绑定session<br>Hibernate的api<br><a id=\"more\"></a></p>\n<h1 id=\"实体类的三种状态\"><a href=\"#实体类的三种状态\" class=\"headerlink\" title=\"实体类的三种状态\"></a>实体类的三种状态</h1><p>1.瞬时态<br>对象里面没有ID，对象与session没关联</p>\n<p>2.持久态<br>对象里面有ID，对象与session有关联</p>\n<p>3.托管态<br>对象里面有ID，对象与session没关联</p>\n<h1 id=\"Hibernate缓存\"><a href=\"#Hibernate缓存\" class=\"headerlink\" title=\"Hibernate缓存\"></a>Hibernate缓存</h1><p>hibernate的一级缓存默认打开的<br>一级缓存的范围是session<br>一级缓存中存储数据必须是持久态数据</p>\n<p>hibernate的二级缓存默认不打开，需要配置<br>二级缓存已经不使用了，替代技术为redis<br>二级缓存的范围为sessionFactory</p>\n<h3 id=\"一级缓存的特性\"><a href=\"#一级缓存的特性\" class=\"headerlink\" title=\"一级缓存的特性\"></a>一级缓存的特性</h3><p>持久态数据的更新不需要update语句，提交事务会自动更新。<br>原理<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1ffhgawr1ltj30v00ed77t.jpg\" alt=\"\"></p>\n<h1 id=\"事务代码规范\"><a href=\"#事务代码规范\" class=\"headerlink\" title=\"事务代码规范\"></a>事务代码规范</h1><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\"> 开启事务</div><div class=\"line\"> 提交事务</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>()&#123;</div><div class=\"line\"> 回滚事务</div><div class=\"line\">&#125;finally&#123;</div><div class=\"line\"> 关闭</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Hibernate绑定session\"><a href=\"#Hibernate绑定session\" class=\"headerlink\" title=\"Hibernate绑定session\"></a>Hibernate绑定session</h1><p>底层是threadLocal<br>1.在核心配置文件中配置<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"current_session_context_class\"</span>&gt;thread&lt;/<span class=\"keyword\">property</span>&gt;</div></pre></td></tr></table></figure></p>\n<p>2.调用sessionFactory的方法<br><figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sessionFactory.getCurrentSession()<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"Hibernate的api\"><a href=\"#Hibernate的api\" class=\"headerlink\" title=\"Hibernate的api\"></a>Hibernate的api</h1><p>Query<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//4.使用query对象查询</span></div><div class=\"line\"><span class=\"comment\">//创建query</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from User\"</span>);</div><div class=\"line\"><span class=\"comment\">//调用方法得到结果</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"keyword\">for</span> (User user : <span class=\"keyword\">list</span>) &#123;</div><div class=\"line\"> System.<span class=\"keyword\">out</span>.println(user);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Criteria<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//4.使用criteria对象查询</span></div><div class=\"line\"><span class=\"comment\">//创建criteria</span></div><div class=\"line\">Criteria criteria = session.createCriteria(User.<span class=\"keyword\">class</span>);</div><div class=\"line\"><span class=\"comment\">//调用方法得到结果</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"keyword\">for</span> (User user : <span class=\"keyword\">list</span>) &#123;</div><div class=\"line\"> System.<span class=\"keyword\">out</span>.println(user);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>SQLQuery<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//创建SQLQuery对象</span></div><div class=\"line\">SQLQuery sqlQuery = session.createSQLQuery(<span class=\"string\">\"select * from t_user\"</span>);</div><div class=\"line\"><span class=\"comment\">//如果不设置，默认返回list为数组形式</span></div><div class=\"line\">sqlQuery.addEntity(User.<span class=\"keyword\">class</span>);</div><div class=\"line\"><span class=\"comment\">//调用方法得到结果</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span> = sqlQuery.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"keyword\">for</span> (User user : <span class=\"keyword\">list</span>) &#123;</div><div class=\"line\"> System.<span class=\"keyword\">out</span>.println(user);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>实体类的三种状态<br>Hibernate缓存<br>事务代码规范<br>Hibernate绑定session<br>Hibernate的api<br>","more":"</p>\n<h1 id=\"实体类的三种状态\"><a href=\"#实体类的三种状态\" class=\"headerlink\" title=\"实体类的三种状态\"></a>实体类的三种状态</h1><p>1.瞬时态<br>对象里面没有ID，对象与session没关联</p>\n<p>2.持久态<br>对象里面有ID，对象与session有关联</p>\n<p>3.托管态<br>对象里面有ID，对象与session没关联</p>\n<h1 id=\"Hibernate缓存\"><a href=\"#Hibernate缓存\" class=\"headerlink\" title=\"Hibernate缓存\"></a>Hibernate缓存</h1><p>hibernate的一级缓存默认打开的<br>一级缓存的范围是session<br>一级缓存中存储数据必须是持久态数据</p>\n<p>hibernate的二级缓存默认不打开，需要配置<br>二级缓存已经不使用了，替代技术为redis<br>二级缓存的范围为sessionFactory</p>\n<h3 id=\"一级缓存的特性\"><a href=\"#一级缓存的特性\" class=\"headerlink\" title=\"一级缓存的特性\"></a>一级缓存的特性</h3><p>持久态数据的更新不需要update语句，提交事务会自动更新。<br>原理<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1ffhgawr1ltj30v00ed77t.jpg\" alt=\"\"></p>\n<h1 id=\"事务代码规范\"><a href=\"#事务代码规范\" class=\"headerlink\" title=\"事务代码规范\"></a>事务代码规范</h1><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\"> 开启事务</div><div class=\"line\"> 提交事务</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>()&#123;</div><div class=\"line\"> 回滚事务</div><div class=\"line\">&#125;finally&#123;</div><div class=\"line\"> 关闭</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Hibernate绑定session\"><a href=\"#Hibernate绑定session\" class=\"headerlink\" title=\"Hibernate绑定session\"></a>Hibernate绑定session</h1><p>底层是threadLocal<br>1.在核心配置文件中配置<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"current_session_context_class\"</span>&gt;thread&lt;/<span class=\"keyword\">property</span>&gt;</div></pre></td></tr></table></figure></p>\n<p>2.调用sessionFactory的方法<br><figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sessionFactory.getCurrentSession()<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"Hibernate的api\"><a href=\"#Hibernate的api\" class=\"headerlink\" title=\"Hibernate的api\"></a>Hibernate的api</h1><p>Query<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//4.使用query对象查询</span></div><div class=\"line\"><span class=\"comment\">//创建query</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from User\"</span>);</div><div class=\"line\"><span class=\"comment\">//调用方法得到结果</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"keyword\">for</span> (User user : <span class=\"keyword\">list</span>) &#123;</div><div class=\"line\"> System.<span class=\"keyword\">out</span>.println(user);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Criteria<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//4.使用criteria对象查询</span></div><div class=\"line\"><span class=\"comment\">//创建criteria</span></div><div class=\"line\">Criteria criteria = session.createCriteria(User.<span class=\"keyword\">class</span>);</div><div class=\"line\"><span class=\"comment\">//调用方法得到结果</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"keyword\">for</span> (User user : <span class=\"keyword\">list</span>) &#123;</div><div class=\"line\"> System.<span class=\"keyword\">out</span>.println(user);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>SQLQuery<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//创建SQLQuery对象</span></div><div class=\"line\">SQLQuery sqlQuery = session.createSQLQuery(<span class=\"string\">\"select * from t_user\"</span>);</div><div class=\"line\"><span class=\"comment\">//如果不设置，默认返回list为数组形式</span></div><div class=\"line\">sqlQuery.addEntity(User.<span class=\"keyword\">class</span>);</div><div class=\"line\"><span class=\"comment\">//调用方法得到结果</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span> = sqlQuery.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"keyword\">for</span> (User user : <span class=\"keyword\">list</span>) &#123;</div><div class=\"line\"> System.<span class=\"keyword\">out</span>.println(user);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"hibernate04","date":"2017-06-05T02:20:19.000Z","toc":true,"_content":"查询的方式\n<!--more-->\n# HQL查询\n```\n//查询所有\nQuery query = session.createQuery(\"from Customer\");\nList<Customer> list = query.list();\n//条件查询\nQuery query = session.createQuery(\"from Customer c where c.cid=? and c.custName=?\");\nquery.setParameter(0,1);\nquery.setParameter(1,\"123\");\nList<Customer> list = query.list();\n//排序查询\nQuery query = session.createQuery(\"from Customer order by cid asc\");\nList<Customer> list = query.list();\n//分页查询\nQuery query = session.createQuery(\"from Customer\");\nquery.setFirstResult(0);//开始位置\nquery.setMaxResults(3);//每页记录数\nList<Customer> list = query.list();\n//投影查询\nQuery query = session.createQuery(\"select custName from Customer\");\nList<Customer> list = query.list();\n//函数使用\nQuery query = session.createQuery(\"select count(*) from Customer\");\nObject obj = query.uniqueResult();\nLong lobj = (Long) obj;\nint count = lobj.intValue();\n```\n# QBC查询\n```\n//查询所有\nCriteria criteria = session.createCriteria(Customer.class);\nList<Customer> list = criteria.list();\n//条件查询\nCriteria criteria = session.createCriteria(Customer.class);\ncriteria.add(Restrictions.eq(\"cid\",1));\ncriteria.add(Restrictions.eq(\"custName\",\"123\"));\nList<Customer> list = criteria.list();\n//排序查询\nCriteria criteria = session.createCriteria(Customer.class);\ncriteria.addOrder(Order.asc(\"cid\"));\nList<Customer> list = criteria.list();\n//分页查询\nCriteria criteria = session.createCriteria(Customer.class);\ncriteria.setFirstResult(0);//开始位置\ncriteria.setMaxResults(3);//每页记录数\nList<Customer> list = criteria.list();\n//统计查询\nCriteria criteria = session.createCriteria(Customer.class);\ncriteria.setProjection(Projections.rowCount());\nObject obj = criteria.uniqueResult();\nLong lobj = (Long) obj;\nint count = lobj.intValue();\n//离线查询\nDetachedCriteria detachedCriteria = DetachedCriteria.forClass(Customer.class);\nCriteria criteria = detachedCriteria.getExecutableCriteria(session);\nList<Customer> list = criteria.list();\n```\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fga6m6r2s3j30gd0br0u3.jpg)\n# HQL多表查询\n### 内连接\nfrom Customer c inner join c.setLinkMan\n返回的list里面是数组形式\n### 迫切内连接\nfrom Customer c inner join fetch c.setLinkMan\n返回的list里面是对象\n### 左外连接\nfrom Customer c left outer join c.setLinkMan\n### 迫切做外连接\nfrom Customer c left outer join fetch c.setLinkMan\n### 右外连接\nfrom Customer c right outer join c.setLinkMan\n# hibernate检索策略\n1.立即查询\n根据id查询，一调用get方法马上发送语句查询数据库\n2.延迟查询\n根据id查询，可以调用load方法，只有在真正需要的时候才发送语句查询数据库\n2.1延迟查询分类\n2.1.1类级别延迟\n根据id查询，调用load的延迟\n2.1.2关联级别延迟\n通过客户查所有联系人\n2.1.2.1关联级别延迟操作\n在set标签上进行配置\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fga6m62bt4j30is0a3769.jpg)\n# hibernate批量抓取\nset标签batch-size=\"\"进行配置，值为整数，值越大发送的语句越少。","source":"_posts/hibernate04.md","raw":"---\ntitle: hibernate04\ndate: 2017-06-05 10:20:19\ntags:\n- Java基础\ntoc: true\n---\n查询的方式\n<!--more-->\n# HQL查询\n```\n//查询所有\nQuery query = session.createQuery(\"from Customer\");\nList<Customer> list = query.list();\n//条件查询\nQuery query = session.createQuery(\"from Customer c where c.cid=? and c.custName=?\");\nquery.setParameter(0,1);\nquery.setParameter(1,\"123\");\nList<Customer> list = query.list();\n//排序查询\nQuery query = session.createQuery(\"from Customer order by cid asc\");\nList<Customer> list = query.list();\n//分页查询\nQuery query = session.createQuery(\"from Customer\");\nquery.setFirstResult(0);//开始位置\nquery.setMaxResults(3);//每页记录数\nList<Customer> list = query.list();\n//投影查询\nQuery query = session.createQuery(\"select custName from Customer\");\nList<Customer> list = query.list();\n//函数使用\nQuery query = session.createQuery(\"select count(*) from Customer\");\nObject obj = query.uniqueResult();\nLong lobj = (Long) obj;\nint count = lobj.intValue();\n```\n# QBC查询\n```\n//查询所有\nCriteria criteria = session.createCriteria(Customer.class);\nList<Customer> list = criteria.list();\n//条件查询\nCriteria criteria = session.createCriteria(Customer.class);\ncriteria.add(Restrictions.eq(\"cid\",1));\ncriteria.add(Restrictions.eq(\"custName\",\"123\"));\nList<Customer> list = criteria.list();\n//排序查询\nCriteria criteria = session.createCriteria(Customer.class);\ncriteria.addOrder(Order.asc(\"cid\"));\nList<Customer> list = criteria.list();\n//分页查询\nCriteria criteria = session.createCriteria(Customer.class);\ncriteria.setFirstResult(0);//开始位置\ncriteria.setMaxResults(3);//每页记录数\nList<Customer> list = criteria.list();\n//统计查询\nCriteria criteria = session.createCriteria(Customer.class);\ncriteria.setProjection(Projections.rowCount());\nObject obj = criteria.uniqueResult();\nLong lobj = (Long) obj;\nint count = lobj.intValue();\n//离线查询\nDetachedCriteria detachedCriteria = DetachedCriteria.forClass(Customer.class);\nCriteria criteria = detachedCriteria.getExecutableCriteria(session);\nList<Customer> list = criteria.list();\n```\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fga6m6r2s3j30gd0br0u3.jpg)\n# HQL多表查询\n### 内连接\nfrom Customer c inner join c.setLinkMan\n返回的list里面是数组形式\n### 迫切内连接\nfrom Customer c inner join fetch c.setLinkMan\n返回的list里面是对象\n### 左外连接\nfrom Customer c left outer join c.setLinkMan\n### 迫切做外连接\nfrom Customer c left outer join fetch c.setLinkMan\n### 右外连接\nfrom Customer c right outer join c.setLinkMan\n# hibernate检索策略\n1.立即查询\n根据id查询，一调用get方法马上发送语句查询数据库\n2.延迟查询\n根据id查询，可以调用load方法，只有在真正需要的时候才发送语句查询数据库\n2.1延迟查询分类\n2.1.1类级别延迟\n根据id查询，调用load的延迟\n2.1.2关联级别延迟\n通过客户查所有联系人\n2.1.2.1关联级别延迟操作\n在set标签上进行配置\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fga6m62bt4j30is0a3769.jpg)\n# hibernate批量抓取\nset标签batch-size=\"\"进行配置，值为整数，值越大发送的语句越少。","slug":"hibernate04","published":1,"updated":"2018-01-20T06:44:37.589Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8z8003p44wavpgl8jv0","content":"<p>查询的方式<br><a id=\"more\"></a></p>\n<h1 id=\"HQL查询\"><a href=\"#HQL查询\" class=\"headerlink\" title=\"HQL查询\"></a>HQL查询</h1><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//查询所有</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from Customer\"</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//条件查询</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from Customer c where c.cid=? and c.custName=?\"</span>);</div><div class=\"line\"><span class=\"keyword\">query</span>.setParameter(0,1);</div><div class=\"line\"><span class=\"keyword\">query</span>.setParameter(1,<span class=\"string\">\"123\"</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//排序查询</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from Customer order by cid asc\"</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//分页查询</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from Customer\"</span>);</div><div class=\"line\"><span class=\"keyword\">query</span>.setFirstResult(0);<span class=\"comment\">//开始位置</span></div><div class=\"line\"><span class=\"keyword\">query</span>.setMaxResults(3);<span class=\"comment\">//每页记录数</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//投影查询</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"select custName from Customer\"</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//函数使用</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"select count(*) from Customer\"</span>);</div><div class=\"line\">Object obj = <span class=\"keyword\">query</span>.uniqueResult();</div><div class=\"line\">Long lobj = (Long) obj;</div><div class=\"line\">int <span class=\"keyword\">count</span> = lobj.intValue();</div></pre></td></tr></table></figure>\n<h1 id=\"QBC查询\"><a href=\"#QBC查询\" class=\"headerlink\" title=\"QBC查询\"></a>QBC查询</h1><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//查询所有</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//条件查询</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">criteria.add(Restrictions.<span class=\"keyword\">eq</span>(<span class=\"string\">\"cid\"</span>,1));</div><div class=\"line\">criteria.add(Restrictions.<span class=\"keyword\">eq</span>(<span class=\"string\">\"custName\"</span>,<span class=\"string\">\"123\"</span>));</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//排序查询</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">criteria.addOrder(<span class=\"keyword\">Order</span>.asc(<span class=\"string\">\"cid\"</span>));</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//分页查询</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">criteria.setFirstResult(0);<span class=\"comment\">//开始位置</span></div><div class=\"line\">criteria.setMaxResults(3);<span class=\"comment\">//每页记录数</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//统计查询</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">criteria.setProjection(Projections.rowCount());</div><div class=\"line\">Object obj = criteria.uniqueResult();</div><div class=\"line\">Long lobj = (Long) obj;</div><div class=\"line\">int <span class=\"keyword\">count</span> = lobj.intValue();</div><div class=\"line\"><span class=\"comment\">//离线查询</span></div><div class=\"line\">DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">Criteria criteria = detachedCriteria.getExecutableCriteria(session);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div></pre></td></tr></table></figure>\n<p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fga6m6r2s3j30gd0br0u3.jpg\" alt=\"\"></p>\n<h1 id=\"HQL多表查询\"><a href=\"#HQL多表查询\" class=\"headerlink\" title=\"HQL多表查询\"></a>HQL多表查询</h1><h3 id=\"内连接\"><a href=\"#内连接\" class=\"headerlink\" title=\"内连接\"></a>内连接</h3><p>from Customer c inner join c.setLinkMan<br>返回的list里面是数组形式</p>\n<h3 id=\"迫切内连接\"><a href=\"#迫切内连接\" class=\"headerlink\" title=\"迫切内连接\"></a>迫切内连接</h3><p>from Customer c inner join fetch c.setLinkMan<br>返回的list里面是对象</p>\n<h3 id=\"左外连接\"><a href=\"#左外连接\" class=\"headerlink\" title=\"左外连接\"></a>左外连接</h3><p>from Customer c left outer join c.setLinkMan</p>\n<h3 id=\"迫切做外连接\"><a href=\"#迫切做外连接\" class=\"headerlink\" title=\"迫切做外连接\"></a>迫切做外连接</h3><p>from Customer c left outer join fetch c.setLinkMan</p>\n<h3 id=\"右外连接\"><a href=\"#右外连接\" class=\"headerlink\" title=\"右外连接\"></a>右外连接</h3><p>from Customer c right outer join c.setLinkMan</p>\n<h1 id=\"hibernate检索策略\"><a href=\"#hibernate检索策略\" class=\"headerlink\" title=\"hibernate检索策略\"></a>hibernate检索策略</h1><p>1.立即查询<br>根据id查询，一调用get方法马上发送语句查询数据库<br>2.延迟查询<br>根据id查询，可以调用load方法，只有在真正需要的时候才发送语句查询数据库<br>2.1延迟查询分类<br>2.1.1类级别延迟<br>根据id查询，调用load的延迟<br>2.1.2关联级别延迟<br>通过客户查所有联系人<br>2.1.2.1关联级别延迟操作<br>在set标签上进行配置<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fga6m62bt4j30is0a3769.jpg\" alt=\"\"></p>\n<h1 id=\"hibernate批量抓取\"><a href=\"#hibernate批量抓取\" class=\"headerlink\" title=\"hibernate批量抓取\"></a>hibernate批量抓取</h1><p>set标签batch-size=””进行配置，值为整数，值越大发送的语句越少。</p>\n","excerpt":"<p>查询的方式<br>","more":"</p>\n<h1 id=\"HQL查询\"><a href=\"#HQL查询\" class=\"headerlink\" title=\"HQL查询\"></a>HQL查询</h1><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//查询所有</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from Customer\"</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//条件查询</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from Customer c where c.cid=? and c.custName=?\"</span>);</div><div class=\"line\"><span class=\"keyword\">query</span>.setParameter(0,1);</div><div class=\"line\"><span class=\"keyword\">query</span>.setParameter(1,<span class=\"string\">\"123\"</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//排序查询</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from Customer order by cid asc\"</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//分页查询</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"from Customer\"</span>);</div><div class=\"line\"><span class=\"keyword\">query</span>.setFirstResult(0);<span class=\"comment\">//开始位置</span></div><div class=\"line\"><span class=\"keyword\">query</span>.setMaxResults(3);<span class=\"comment\">//每页记录数</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//投影查询</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"select custName from Customer\"</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = <span class=\"keyword\">query</span>.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//函数使用</span></div><div class=\"line\"><span class=\"keyword\">Query</span> <span class=\"keyword\">query</span> = session.createQuery(<span class=\"string\">\"select count(*) from Customer\"</span>);</div><div class=\"line\">Object obj = <span class=\"keyword\">query</span>.uniqueResult();</div><div class=\"line\">Long lobj = (Long) obj;</div><div class=\"line\">int <span class=\"keyword\">count</span> = lobj.intValue();</div></pre></td></tr></table></figure>\n<h1 id=\"QBC查询\"><a href=\"#QBC查询\" class=\"headerlink\" title=\"QBC查询\"></a>QBC查询</h1><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//查询所有</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//条件查询</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">criteria.add(Restrictions.<span class=\"keyword\">eq</span>(<span class=\"string\">\"cid\"</span>,1));</div><div class=\"line\">criteria.add(Restrictions.<span class=\"keyword\">eq</span>(<span class=\"string\">\"custName\"</span>,<span class=\"string\">\"123\"</span>));</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//排序查询</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">criteria.addOrder(<span class=\"keyword\">Order</span>.asc(<span class=\"string\">\"cid\"</span>));</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//分页查询</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">criteria.setFirstResult(0);<span class=\"comment\">//开始位置</span></div><div class=\"line\">criteria.setMaxResults(3);<span class=\"comment\">//每页记录数</span></div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div><div class=\"line\"><span class=\"comment\">//统计查询</span></div><div class=\"line\">Criteria criteria = session.createCriteria(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">criteria.setProjection(Projections.rowCount());</div><div class=\"line\">Object obj = criteria.uniqueResult();</div><div class=\"line\">Long lobj = (Long) obj;</div><div class=\"line\">int <span class=\"keyword\">count</span> = lobj.intValue();</div><div class=\"line\"><span class=\"comment\">//离线查询</span></div><div class=\"line\">DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Customer.<span class=\"keyword\">class</span>);</div><div class=\"line\">Criteria criteria = detachedCriteria.getExecutableCriteria(session);</div><div class=\"line\"><span class=\"keyword\">List</span>&lt;Customer&gt; <span class=\"keyword\">list</span> = criteria.<span class=\"keyword\">list</span>();</div></pre></td></tr></table></figure>\n<p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fga6m6r2s3j30gd0br0u3.jpg\" alt=\"\"></p>\n<h1 id=\"HQL多表查询\"><a href=\"#HQL多表查询\" class=\"headerlink\" title=\"HQL多表查询\"></a>HQL多表查询</h1><h3 id=\"内连接\"><a href=\"#内连接\" class=\"headerlink\" title=\"内连接\"></a>内连接</h3><p>from Customer c inner join c.setLinkMan<br>返回的list里面是数组形式</p>\n<h3 id=\"迫切内连接\"><a href=\"#迫切内连接\" class=\"headerlink\" title=\"迫切内连接\"></a>迫切内连接</h3><p>from Customer c inner join fetch c.setLinkMan<br>返回的list里面是对象</p>\n<h3 id=\"左外连接\"><a href=\"#左外连接\" class=\"headerlink\" title=\"左外连接\"></a>左外连接</h3><p>from Customer c left outer join c.setLinkMan</p>\n<h3 id=\"迫切做外连接\"><a href=\"#迫切做外连接\" class=\"headerlink\" title=\"迫切做外连接\"></a>迫切做外连接</h3><p>from Customer c left outer join fetch c.setLinkMan</p>\n<h3 id=\"右外连接\"><a href=\"#右外连接\" class=\"headerlink\" title=\"右外连接\"></a>右外连接</h3><p>from Customer c right outer join c.setLinkMan</p>\n<h1 id=\"hibernate检索策略\"><a href=\"#hibernate检索策略\" class=\"headerlink\" title=\"hibernate检索策略\"></a>hibernate检索策略</h1><p>1.立即查询<br>根据id查询，一调用get方法马上发送语句查询数据库<br>2.延迟查询<br>根据id查询，可以调用load方法，只有在真正需要的时候才发送语句查询数据库<br>2.1延迟查询分类<br>2.1.1类级别延迟<br>根据id查询，调用load的延迟<br>2.1.2关联级别延迟<br>通过客户查所有联系人<br>2.1.2.1关联级别延迟操作<br>在set标签上进行配置<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fga6m62bt4j30is0a3769.jpg\" alt=\"\"></p>\n<h1 id=\"hibernate批量抓取\"><a href=\"#hibernate批量抓取\" class=\"headerlink\" title=\"hibernate批量抓取\"></a>hibernate批量抓取</h1><p>set标签batch-size=””进行配置，值为整数，值越大发送的语句越少。</p>"},{"title":"java集合","toc":true,"date":"2017-09-30T13:30:26.000Z","_content":"http://blog.csdn.net/HHcoco/article/details/53117525\n\nArrayList初始长度为10\n\nArrayList每次新增一个元素，就会检测ArrayList的当前容量是否已经到达临界点，如果到达临界点则会扩容1.5倍。\n","source":"_posts/java集合.md","raw":"---\ntitle: java集合\ntoc: true\ndate: 2017-09-30 21:30:26\ntags:\n- Java基础\n---\nhttp://blog.csdn.net/HHcoco/article/details/53117525\n\nArrayList初始长度为10\n\nArrayList每次新增一个元素，就会检测ArrayList的当前容量是否已经到达临界点，如果到达临界点则会扩容1.5倍。\n","slug":"java集合","published":1,"updated":"2018-01-20T06:44:37.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8za003r44wanovurdtr","content":"<p><a href=\"http://blog.csdn.net/HHcoco/article/details/53117525\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/HHcoco/article/details/53117525</a></p>\n<p>ArrayList初始长度为10</p>\n<p>ArrayList每次新增一个元素，就会检测ArrayList的当前容量是否已经到达临界点，如果到达临界点则会扩容1.5倍。</p>\n","excerpt":"","more":"<p><a href=\"http://blog.csdn.net/HHcoco/article/details/53117525\">http://blog.csdn.net/HHcoco/article/details/53117525</a></p>\n<p>ArrayList初始长度为10</p>\n<p>ArrayList每次新增一个元素，就会检测ArrayList的当前容量是否已经到达临界点，如果到达临界点则会扩容1.5倍。</p>\n"},{"title":"hibernate03","date":"2017-05-15T03:58:55.000Z","toc":true,"_content":"一对多和多对多的操作\n<!--more-->\n# 一对多\nhibernate中多的一方用set集合表示\n\n类中的关联\n```\n//一个客户有多个联系人\nprivate Set<LinkMan> setLinkMan = new HashSet<LinkMan>();\n//1个联系人属于1个客户\nprivate Customer customer;\n```\n配置文件中的关联\n```\n<!-- 表示所有联系人 -->\n<set name=\"setLinkMan\" cascade=\"save-update,delete\" inverse=\"true\">\n\t\t\t\t<!-- cascade表示级联删除、添加和修改,inverse表示是否忽略维护外键(hibernate是双向维护外键的,让一的那一方不维护外键可以提高性能) --!>\n\t<key column=\"clid\"></key>\t\t<!-- 表示外键 --!>\n\t<one-to-many class=\"entity.LinkMan\"/>\n</set>\n<!-- 表示所属客户 -->\n<many-to-one name=\"customer\" class=\"entity.Customer\" column=\"clid\"></many-to-one>\n```\n级联添加\n```\n//级联添加\nCustomer customer = new Customer();\ncustomer.setCustName(\"百度\");\ncustomer.setCustLevel(\"vip1\");\ncustomer.setCustMobile(\"1120\");\ncustomer.setCustPhone(\"1220\");\ncustomer.setCustSource(\"网123络\");\n\t\t\t\nLinkMan linkMan = new LinkMan();\nlinkMan.setLkm_name(\"123lucky\");\nlinkMan.setLkm_gender(\"男\");\nlinkMan.setLkm_phone(\"5\");\n\t\t\t\ncustomer.getSetLinkMan().add(linkMan);\n\t\t\t\nsession.save(customer);\n```\n级联删除\n```\nCustomer customer = session.get(Customer.class, 3);\nsession.delete(customer);\n```\n级联修改\n```\nCustomer customer = session.get(Customer.class, 1);\nLinkMan linkMan = session.get(LinkMan.class, 2);\n\t\t\t\ncustomer.getSetLinkMan().add(linkMan);\nlinkMan.setCustomer(customer);\n```\n# 多对多\n类中的关联\n```\n//一个用户多个角色\nprivate Set<Role> setRole = new HashSet<Role>();\n```\n配置文件中的关联\n```\n<!-- 表示所有用户 -->\n<set name=\"setUser\" table=\"user_role\"> <!-- table表示第三个表的名字 --!>\n\t<key column=\"roleid\"></key>\n\t<many-to-many class=\"manytomany.User\" column=\"userid\"></many-to-many>\n</set>\n<!-- 表示所有角色 -->\n<set name=\"setRole\" table=\"user_role\" cascade=\"save-update,delete\">\n\t<key column=\"userid\"></key>\n\t<many-to-many class=\"manytomany.Role\" column=\"roleid\"></many-to-many>\n</set>\n```\n级联保存\n```\nUser user1 = new User();\nuser1.setUser_name(\"lucky\");\nuser1.setUser_password(\"123\");\n\t\t\t\nUser user2 = new User();\nuser2.setUser_name(\"kack\");\nuser2.setUser_password(\"1234\");\n\t\t\t\nRole r1 = new Role();\nr1.setRole_name(\"总经理\");\nr1.setRole_memo(\"总经理\");\n\t\t\t\nRole r2 = new Role();\nr2.setRole_name(\"秘书\");\nr2.setRole_memo(\"秘书\");\n\t\t\t\nRole r3 = new Role();\nr3.setRole_name(\"保安\");\nr3.setRole_memo(\"保安\");\n\t\t\t\nuser1.getSetRole().add(r1);\nuser1.getSetRole().add(r2);\n\t\t\t\nuser2.getSetRole().add(r2);\nuser2.getSetRole().add(r3);\t\t\t\n\t\t\t\nsession.save(user1);\nsession.save(user2);\n```\n级联删除\n```\nUser user = session.get(User.class, 1);\nsession.delete(user);\n```\n多对多的级联删除一般不会用，而是只去维护第3张表","source":"_posts/hibernate03.md","raw":"---\ntitle: hibernate03\ndate: 2017-05-15 11:58:55\ntags:\n- Java基础\ntoc: true\n---\n一对多和多对多的操作\n<!--more-->\n# 一对多\nhibernate中多的一方用set集合表示\n\n类中的关联\n```\n//一个客户有多个联系人\nprivate Set<LinkMan> setLinkMan = new HashSet<LinkMan>();\n//1个联系人属于1个客户\nprivate Customer customer;\n```\n配置文件中的关联\n```\n<!-- 表示所有联系人 -->\n<set name=\"setLinkMan\" cascade=\"save-update,delete\" inverse=\"true\">\n\t\t\t\t<!-- cascade表示级联删除、添加和修改,inverse表示是否忽略维护外键(hibernate是双向维护外键的,让一的那一方不维护外键可以提高性能) --!>\n\t<key column=\"clid\"></key>\t\t<!-- 表示外键 --!>\n\t<one-to-many class=\"entity.LinkMan\"/>\n</set>\n<!-- 表示所属客户 -->\n<many-to-one name=\"customer\" class=\"entity.Customer\" column=\"clid\"></many-to-one>\n```\n级联添加\n```\n//级联添加\nCustomer customer = new Customer();\ncustomer.setCustName(\"百度\");\ncustomer.setCustLevel(\"vip1\");\ncustomer.setCustMobile(\"1120\");\ncustomer.setCustPhone(\"1220\");\ncustomer.setCustSource(\"网123络\");\n\t\t\t\nLinkMan linkMan = new LinkMan();\nlinkMan.setLkm_name(\"123lucky\");\nlinkMan.setLkm_gender(\"男\");\nlinkMan.setLkm_phone(\"5\");\n\t\t\t\ncustomer.getSetLinkMan().add(linkMan);\n\t\t\t\nsession.save(customer);\n```\n级联删除\n```\nCustomer customer = session.get(Customer.class, 3);\nsession.delete(customer);\n```\n级联修改\n```\nCustomer customer = session.get(Customer.class, 1);\nLinkMan linkMan = session.get(LinkMan.class, 2);\n\t\t\t\ncustomer.getSetLinkMan().add(linkMan);\nlinkMan.setCustomer(customer);\n```\n# 多对多\n类中的关联\n```\n//一个用户多个角色\nprivate Set<Role> setRole = new HashSet<Role>();\n```\n配置文件中的关联\n```\n<!-- 表示所有用户 -->\n<set name=\"setUser\" table=\"user_role\"> <!-- table表示第三个表的名字 --!>\n\t<key column=\"roleid\"></key>\n\t<many-to-many class=\"manytomany.User\" column=\"userid\"></many-to-many>\n</set>\n<!-- 表示所有角色 -->\n<set name=\"setRole\" table=\"user_role\" cascade=\"save-update,delete\">\n\t<key column=\"userid\"></key>\n\t<many-to-many class=\"manytomany.Role\" column=\"roleid\"></many-to-many>\n</set>\n```\n级联保存\n```\nUser user1 = new User();\nuser1.setUser_name(\"lucky\");\nuser1.setUser_password(\"123\");\n\t\t\t\nUser user2 = new User();\nuser2.setUser_name(\"kack\");\nuser2.setUser_password(\"1234\");\n\t\t\t\nRole r1 = new Role();\nr1.setRole_name(\"总经理\");\nr1.setRole_memo(\"总经理\");\n\t\t\t\nRole r2 = new Role();\nr2.setRole_name(\"秘书\");\nr2.setRole_memo(\"秘书\");\n\t\t\t\nRole r3 = new Role();\nr3.setRole_name(\"保安\");\nr3.setRole_memo(\"保安\");\n\t\t\t\nuser1.getSetRole().add(r1);\nuser1.getSetRole().add(r2);\n\t\t\t\nuser2.getSetRole().add(r2);\nuser2.getSetRole().add(r3);\t\t\t\n\t\t\t\nsession.save(user1);\nsession.save(user2);\n```\n级联删除\n```\nUser user = session.get(User.class, 1);\nsession.delete(user);\n```\n多对多的级联删除一般不会用，而是只去维护第3张表","slug":"hibernate03","published":1,"updated":"2018-01-20T06:44:37.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8zd003u44wae2drvg1s","content":"<p>一对多和多对多的操作<br><a id=\"more\"></a></p>\n<h1 id=\"一对多\"><a href=\"#一对多\" class=\"headerlink\" title=\"一对多\"></a>一对多</h1><p>hibernate中多的一方用set集合表示</p>\n<p>类中的关联<br><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//一个客户有多个联系人</span></div><div class=\"line\"><span class=\"keyword\">private</span> Set&lt;LinkMan&gt; setLinkMan = <span class=\"keyword\">new</span> <span class=\"type\">HashSet</span>&lt;LinkMan&gt;();</div><div class=\"line\"><span class=\"comment\">//1个联系人属于1个客户</span></div><div class=\"line\"><span class=\"keyword\">private</span> Customer customer;</div></pre></td></tr></table></figure></p>\n<p>配置文件中的关联<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 表示所有联系人 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">set</span> <span class=\"attr\">name</span>=<span class=\"string\">\"setLinkMan\"</span> <span class=\"attr\">cascade</span>=<span class=\"string\">\"save-update,delete\"</span> <span class=\"attr\">inverse</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- cascade表示级联删除、添加和修改,inverse表示是否忽略维护外键(hibernate是双向维护外键的,让一的那一方不维护外键可以提高性能) --!&gt;</span></div><div class=\"line\"> &lt;key column=\"clid\"&gt;&lt;/key&gt;\t\t&lt;!-- 表示外键 --!&gt;</div><div class=\"line\"> &lt;one-to-many class=\"entity.LinkMan\"/&gt;</div><div class=\"line\">&lt;/set&gt;</div><div class=\"line\">&lt;!-- 表示所属客户 --&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">many-to-one</span> <span class=\"attr\">name</span>=<span class=\"string\">\"customer\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"entity.Customer\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"clid\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">many-to-one</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>级联添加<br><figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">//级联添加</div><div class=\"line\">Customer customer = new Customer()<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustName(<span class=\"string\">\"百度\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustLevel(<span class=\"string\">\"vip1\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustMobile(<span class=\"string\">\"1120\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustPhone(<span class=\"string\">\"1220\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustSource(<span class=\"string\">\"网123络\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">LinkMan linkMan = new LinkMan()<span class=\"comment\">;</span></div><div class=\"line\">linkMan.setLkm_name(<span class=\"string\">\"123lucky\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">linkMan.setLkm_gender(<span class=\"string\">\"男\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">linkMan.setLkm_phone(<span class=\"string\">\"5\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">customer.getSetLinkMan().add(linkMan)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">session.save(customer)<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<p>级联删除<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Customer customer = session.<span class=\"built_in\">get</span>(Customer.<span class=\"keyword\">class</span>, <span class=\"number\">3</span>);</div><div class=\"line\">session.<span class=\"keyword\">delete</span>(customer);</div></pre></td></tr></table></figure></p>\n<p>级联修改<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Customer customer = session.<span class=\"keyword\">get</span>(Customer.<span class=\"built_in\">class</span>, <span class=\"number\">1</span>);</div><div class=\"line\">LinkMan linkMan = session.<span class=\"keyword\">get</span>(LinkMan.<span class=\"built_in\">class</span>, <span class=\"number\">2</span>);</div><div class=\"line\">   </div><div class=\"line\">customer.getSetLinkMan().add(linkMan);</div><div class=\"line\">linkMan.setCustomer(customer);</div></pre></td></tr></table></figure></p>\n<h1 id=\"多对多\"><a href=\"#多对多\" class=\"headerlink\" title=\"多对多\"></a>多对多</h1><p>类中的关联<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//一个用户多个角色</div><div class=\"line\">private <span class=\"keyword\">Set</span>&lt;<span class=\"keyword\">Role</span>&gt; setRole = <span class=\"keyword\">new</span> HashSet&lt;<span class=\"keyword\">Role</span>&gt;();</div></pre></td></tr></table></figure></p>\n<p>配置文件中的关联<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 表示所有用户 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">set</span> <span class=\"attr\">name</span>=<span class=\"string\">\"setUser\"</span> <span class=\"attr\">table</span>=<span class=\"string\">\"user_role\"</span>&gt;</span> <span class=\"comment\">&lt;!-- table表示第三个表的名字 --!&gt;</span></div><div class=\"line\"> &lt;key column=\"roleid\"&gt;&lt;/key&gt;</div><div class=\"line\"> &lt;many-to-many class=\"manytomany.User\" column=\"userid\"&gt;&lt;/many-to-many&gt;</div><div class=\"line\">&lt;/set&gt;</div><div class=\"line\">&lt;!-- 表示所有角色 --&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">set</span> <span class=\"attr\">name</span>=<span class=\"string\">\"setRole\"</span> <span class=\"attr\">table</span>=<span class=\"string\">\"user_role\"</span> <span class=\"attr\">cascade</span>=<span class=\"string\">\"save-update,delete\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">key</span> <span class=\"attr\">column</span>=<span class=\"string\">\"userid\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">many-to-many</span> <span class=\"attr\">class</span>=<span class=\"string\">\"manytomany.Role\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"roleid\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">many-to-many</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">set</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>级联保存<br><figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">User user1 = new User()<span class=\"comment\">;</span></div><div class=\"line\">user1.setUser_name(<span class=\"string\">\"lucky\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">user1.setUser_password(<span class=\"string\">\"123\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">User user2 = new User()<span class=\"comment\">;</span></div><div class=\"line\">user2.setUser_name(<span class=\"string\">\"kack\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">user2.setUser_password(<span class=\"string\">\"1234\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">Role r1 = new Role()<span class=\"comment\">;</span></div><div class=\"line\">r1.setRole_name(<span class=\"string\">\"总经理\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">r1.setRole_memo(<span class=\"string\">\"总经理\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">Role r2 = new Role()<span class=\"comment\">;</span></div><div class=\"line\">r2.setRole_name(<span class=\"string\">\"秘书\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">r2.setRole_memo(<span class=\"string\">\"秘书\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">Role r3 = new Role()<span class=\"comment\">;</span></div><div class=\"line\">r3.setRole_name(<span class=\"string\">\"保安\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">r3.setRole_memo(<span class=\"string\">\"保安\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">user1.getSetRole().add(r1)<span class=\"comment\">;</span></div><div class=\"line\">user1.getSetRole().add(r2)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">user2.getSetRole().add(r2)<span class=\"comment\">;</span></div><div class=\"line\">user2.getSetRole().add(r3)<span class=\"comment\">;\t\t\t</span></div><div class=\"line\">   </div><div class=\"line\">session.save(user1)<span class=\"comment\">;</span></div><div class=\"line\">session.save(user2)<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<p>级联删除<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">User</span> <span class=\"keyword\">user</span> = session.get(<span class=\"keyword\">User</span>.class, <span class=\"number\">1</span>);</div><div class=\"line\">session.delete(<span class=\"keyword\">user</span>);</div></pre></td></tr></table></figure></p>\n<p>多对多的级联删除一般不会用，而是只去维护第3张表</p>\n","excerpt":"<p>一对多和多对多的操作<br>","more":"</p>\n<h1 id=\"一对多\"><a href=\"#一对多\" class=\"headerlink\" title=\"一对多\"></a>一对多</h1><p>hibernate中多的一方用set集合表示</p>\n<p>类中的关联<br><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//一个客户有多个联系人</span></div><div class=\"line\"><span class=\"keyword\">private</span> Set&lt;LinkMan&gt; setLinkMan = <span class=\"keyword\">new</span> <span class=\"type\">HashSet</span>&lt;LinkMan&gt;();</div><div class=\"line\"><span class=\"comment\">//1个联系人属于1个客户</span></div><div class=\"line\"><span class=\"keyword\">private</span> Customer customer;</div></pre></td></tr></table></figure></p>\n<p>配置文件中的关联<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 表示所有联系人 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">set</span> <span class=\"attr\">name</span>=<span class=\"string\">\"setLinkMan\"</span> <span class=\"attr\">cascade</span>=<span class=\"string\">\"save-update,delete\"</span> <span class=\"attr\">inverse</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- cascade表示级联删除、添加和修改,inverse表示是否忽略维护外键(hibernate是双向维护外键的,让一的那一方不维护外键可以提高性能) --!&gt;</div><div class=\"line\"> &lt;key column=\"clid\"&gt;&lt;/key&gt;\t\t&lt;!-- 表示外键 --!&gt;</div><div class=\"line\"> &lt;one-to-many class=\"entity.LinkMan\"/&gt;</div><div class=\"line\">&lt;/set&gt;</div><div class=\"line\">&lt;!-- 表示所属客户 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">many-to-one</span> <span class=\"attr\">name</span>=<span class=\"string\">\"customer\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"entity.Customer\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"clid\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">many-to-one</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>级联添加<br><figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">//级联添加</div><div class=\"line\">Customer customer = new Customer()<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustName(<span class=\"string\">\"百度\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustLevel(<span class=\"string\">\"vip1\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustMobile(<span class=\"string\">\"1120\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustPhone(<span class=\"string\">\"1220\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">customer.setCustSource(<span class=\"string\">\"网123络\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">LinkMan linkMan = new LinkMan()<span class=\"comment\">;</span></div><div class=\"line\">linkMan.setLkm_name(<span class=\"string\">\"123lucky\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">linkMan.setLkm_gender(<span class=\"string\">\"男\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">linkMan.setLkm_phone(<span class=\"string\">\"5\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">customer.getSetLinkMan().add(linkMan)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">session.save(customer)<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<p>级联删除<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Customer customer = session.<span class=\"built_in\">get</span>(Customer.<span class=\"keyword\">class</span>, <span class=\"number\">3</span>);</div><div class=\"line\">session.<span class=\"keyword\">delete</span>(customer);</div></pre></td></tr></table></figure></p>\n<p>级联修改<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Customer customer = session.<span class=\"keyword\">get</span>(Customer.<span class=\"built_in\">class</span>, <span class=\"number\">1</span>);</div><div class=\"line\">LinkMan linkMan = session.<span class=\"keyword\">get</span>(LinkMan.<span class=\"built_in\">class</span>, <span class=\"number\">2</span>);</div><div class=\"line\">   </div><div class=\"line\">customer.getSetLinkMan().add(linkMan);</div><div class=\"line\">linkMan.setCustomer(customer);</div></pre></td></tr></table></figure></p>\n<h1 id=\"多对多\"><a href=\"#多对多\" class=\"headerlink\" title=\"多对多\"></a>多对多</h1><p>类中的关联<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//一个用户多个角色</div><div class=\"line\">private <span class=\"keyword\">Set</span>&lt;<span class=\"keyword\">Role</span>&gt; setRole = <span class=\"keyword\">new</span> HashSet&lt;<span class=\"keyword\">Role</span>&gt;();</div></pre></td></tr></table></figure></p>\n<p>配置文件中的关联<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 表示所有用户 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">set</span> <span class=\"attr\">name</span>=<span class=\"string\">\"setUser\"</span> <span class=\"attr\">table</span>=<span class=\"string\">\"user_role\"</span>&gt;</span> <span class=\"comment\">&lt;!-- table表示第三个表的名字 --!&gt;</div><div class=\"line\"> &lt;key column=\"roleid\"&gt;&lt;/key&gt;</div><div class=\"line\"> &lt;many-to-many class=\"manytomany.User\" column=\"userid\"&gt;&lt;/many-to-many&gt;</div><div class=\"line\">&lt;/set&gt;</div><div class=\"line\">&lt;!-- 表示所有角色 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">set</span> <span class=\"attr\">name</span>=<span class=\"string\">\"setRole\"</span> <span class=\"attr\">table</span>=<span class=\"string\">\"user_role\"</span> <span class=\"attr\">cascade</span>=<span class=\"string\">\"save-update,delete\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">key</span> <span class=\"attr\">column</span>=<span class=\"string\">\"userid\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">many-to-many</span> <span class=\"attr\">class</span>=<span class=\"string\">\"manytomany.Role\"</span> <span class=\"attr\">column</span>=<span class=\"string\">\"roleid\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">many-to-many</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">set</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>级联保存<br><figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">User user1 = new User()<span class=\"comment\">;</span></div><div class=\"line\">user1.setUser_name(<span class=\"string\">\"lucky\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">user1.setUser_password(<span class=\"string\">\"123\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">User user2 = new User()<span class=\"comment\">;</span></div><div class=\"line\">user2.setUser_name(<span class=\"string\">\"kack\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">user2.setUser_password(<span class=\"string\">\"1234\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">Role r1 = new Role()<span class=\"comment\">;</span></div><div class=\"line\">r1.setRole_name(<span class=\"string\">\"总经理\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">r1.setRole_memo(<span class=\"string\">\"总经理\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">Role r2 = new Role()<span class=\"comment\">;</span></div><div class=\"line\">r2.setRole_name(<span class=\"string\">\"秘书\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">r2.setRole_memo(<span class=\"string\">\"秘书\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">Role r3 = new Role()<span class=\"comment\">;</span></div><div class=\"line\">r3.setRole_name(<span class=\"string\">\"保安\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">r3.setRole_memo(<span class=\"string\">\"保安\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">user1.getSetRole().add(r1)<span class=\"comment\">;</span></div><div class=\"line\">user1.getSetRole().add(r2)<span class=\"comment\">;</span></div><div class=\"line\">   </div><div class=\"line\">user2.getSetRole().add(r2)<span class=\"comment\">;</span></div><div class=\"line\">user2.getSetRole().add(r3)<span class=\"comment\">;\t\t\t</span></div><div class=\"line\">   </div><div class=\"line\">session.save(user1)<span class=\"comment\">;</span></div><div class=\"line\">session.save(user2)<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<p>级联删除<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">User</span> <span class=\"keyword\">user</span> = session.get(<span class=\"keyword\">User</span>.class, <span class=\"number\">1</span>);</div><div class=\"line\">session.delete(<span class=\"keyword\">user</span>);</div></pre></td></tr></table></figure></p>\n<p>多对多的级联删除一般不会用，而是只去维护第3张表</p>"},{"title":"linux硬链接和软链接的区别","toc":true,"date":"2017-09-10T02:47:50.000Z","_content":"http://www.360doc.com/content/11/0627/17/7102324_129936755.shtml\n","source":"_posts/linux硬链接和软链接的区别.md","raw":"---\ntitle: linux硬链接和软链接的区别\ntoc: true\ndate: 2017-09-10 10:47:50\ntags:\n- 编程\n---\nhttp://www.360doc.com/content/11/0627/17/7102324_129936755.shtml\n","slug":"linux硬链接和软链接的区别","published":1,"updated":"2018-01-20T06:44:37.596Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8zh003w44watq3arl98","content":"<p><a href=\"http://www.360doc.com/content/11/0627/17/7102324_129936755.shtml\" target=\"_blank\" rel=\"external\">http://www.360doc.com/content/11/0627/17/7102324_129936755.shtml</a></p>\n","excerpt":"","more":"<p><a href=\"http://www.360doc.com/content/11/0627/17/7102324_129936755.shtml\">http://www.360doc.com/content/11/0627/17/7102324_129936755.shtml</a></p>\n"},{"title":"jaxp学习笔记","date":"2017-03-22T11:25:53.000Z","toc":true,"_content":"Jaxp是java的xml解析器\n<!--more-->\n# 两种解析方式\n## dom方式解析\n\t\tDocumentBuilder\n\t\t\t抽象类,此类的实例从DocumentBuilderFactory.newDocumentBuilder()方法获取\n\t\t\tparse(\"xml路径\");返回的是Document整个文档\n\t\t\tgetElementsByTagName(String tagname);返回集合Nodelist\n\t\t\tcreateElement(String tagname);创建标签\n\t\t\tcreateTextNode(String data);创建文本\n\t\t\tappendChild(Node newChild);把文本添加到标签下面\n\t\t\tremoveChild(Node oldChild);删除节点\n\t\t\tgetParentNode();获取父节点\n\t\t\tNodeList list\n\t\t\t\tgetLength()得到集合的长度\n\t\t\t\titem(int index)下标取到具体的值\n\t\t\t\tfor(int i=0;i<list.getLength();i++){\n\t\t\t\tlist.item(i);\n\t\t\t\t}\n\t\t\tgetTextContent();获取元素具体的值\n\t\t\tsetTextContent();修改元素的值\n\t\t\t回写xml\n\t\t\t\tTransformerFactory tff = TransformerFactory.newInstance();\n\t\t\t\tTransformer tf = tff.newTransformer();\n\t\t\t\ttf.transform(new DOMSource(document),new StreamResult(\"xml路径\"));\n\t\tDocumentBuilderFactory\n\t\t\t抽象类,此类的实例从newInstance()获取\n## sax方式解析\n\t\tsax只能查询,不能执行增删改操作\n\t\t解析过程\n\t\t\t当解析到开始标签时自动执行startElement();\n\t\t\t当解析到文本时自动执行characters();\n\t\t\t当解析到结束标签时自动执行endElement();\n\t\tSAXParser\n\t\t\t实例从SAXParserFactory.newSAXParser()方法获得\n\t\t\tparse(\"xml路径\",\"事件处理器\");\n\t\t\t创建一个类继承事件处理器类DefaultHandler并重写三个方法\n\t\tSAXParserFactory\n\t\t\t实例从newInstance()方法获得","source":"_posts/jaxp学习笔记.md","raw":"---\ntitle: jaxp学习笔记\ndate: 2017-03-22 19:25:53\n\ntags:\n- Web\n- jaxp\n- XML\ntoc: true\n---\nJaxp是java的xml解析器\n<!--more-->\n# 两种解析方式\n## dom方式解析\n\t\tDocumentBuilder\n\t\t\t抽象类,此类的实例从DocumentBuilderFactory.newDocumentBuilder()方法获取\n\t\t\tparse(\"xml路径\");返回的是Document整个文档\n\t\t\tgetElementsByTagName(String tagname);返回集合Nodelist\n\t\t\tcreateElement(String tagname);创建标签\n\t\t\tcreateTextNode(String data);创建文本\n\t\t\tappendChild(Node newChild);把文本添加到标签下面\n\t\t\tremoveChild(Node oldChild);删除节点\n\t\t\tgetParentNode();获取父节点\n\t\t\tNodeList list\n\t\t\t\tgetLength()得到集合的长度\n\t\t\t\titem(int index)下标取到具体的值\n\t\t\t\tfor(int i=0;i<list.getLength();i++){\n\t\t\t\tlist.item(i);\n\t\t\t\t}\n\t\t\tgetTextContent();获取元素具体的值\n\t\t\tsetTextContent();修改元素的值\n\t\t\t回写xml\n\t\t\t\tTransformerFactory tff = TransformerFactory.newInstance();\n\t\t\t\tTransformer tf = tff.newTransformer();\n\t\t\t\ttf.transform(new DOMSource(document),new StreamResult(\"xml路径\"));\n\t\tDocumentBuilderFactory\n\t\t\t抽象类,此类的实例从newInstance()获取\n## sax方式解析\n\t\tsax只能查询,不能执行增删改操作\n\t\t解析过程\n\t\t\t当解析到开始标签时自动执行startElement();\n\t\t\t当解析到文本时自动执行characters();\n\t\t\t当解析到结束标签时自动执行endElement();\n\t\tSAXParser\n\t\t\t实例从SAXParserFactory.newSAXParser()方法获得\n\t\t\tparse(\"xml路径\",\"事件处理器\");\n\t\t\t创建一个类继承事件处理器类DefaultHandler并重写三个方法\n\t\tSAXParserFactory\n\t\t\t实例从newInstance()方法获得","slug":"jaxp学习笔记","published":1,"updated":"2018-01-20T07:28:45.636Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8zl003z44wah3vzkrmp","content":"<p>Jaxp是java的xml解析器<br><a id=\"more\"></a></p>\n<h1 id=\"两种解析方式\"><a href=\"#两种解析方式\" class=\"headerlink\" title=\"两种解析方式\"></a>两种解析方式</h1><h2 id=\"dom方式解析\"><a href=\"#dom方式解析\" class=\"headerlink\" title=\"dom方式解析\"></a>dom方式解析</h2><pre><code>DocumentBuilder\n    抽象类,此类的实例从DocumentBuilderFactory.newDocumentBuilder()方法获取\n    parse(&quot;xml路径&quot;);返回的是Document整个文档\n    getElementsByTagName(String tagname);返回集合Nodelist\n    createElement(String tagname);创建标签\n    createTextNode(String data);创建文本\n    appendChild(Node newChild);把文本添加到标签下面\n    removeChild(Node oldChild);删除节点\n    getParentNode();获取父节点\n    NodeList list\n        getLength()得到集合的长度\n        item(int index)下标取到具体的值\n        for(int i=0;i&lt;list.getLength();i++){\n        list.item(i);\n        }\n    getTextContent();获取元素具体的值\n    setTextContent();修改元素的值\n    回写xml\n        TransformerFactory tff = TransformerFactory.newInstance();\n        Transformer tf = tff.newTransformer();\n        tf.transform(new DOMSource(document),new StreamResult(&quot;xml路径&quot;));\nDocumentBuilderFactory\n    抽象类,此类的实例从newInstance()获取\n</code></pre><h2 id=\"sax方式解析\"><a href=\"#sax方式解析\" class=\"headerlink\" title=\"sax方式解析\"></a>sax方式解析</h2><pre><code>sax只能查询,不能执行增删改操作\n解析过程\n    当解析到开始标签时自动执行startElement();\n    当解析到文本时自动执行characters();\n    当解析到结束标签时自动执行endElement();\nSAXParser\n    实例从SAXParserFactory.newSAXParser()方法获得\n    parse(&quot;xml路径&quot;,&quot;事件处理器&quot;);\n    创建一个类继承事件处理器类DefaultHandler并重写三个方法\nSAXParserFactory\n    实例从newInstance()方法获得\n</code></pre>","excerpt":"<p>Jaxp是java的xml解析器<br>","more":"</p>\n<h1 id=\"两种解析方式\"><a href=\"#两种解析方式\" class=\"headerlink\" title=\"两种解析方式\"></a>两种解析方式</h1><h2 id=\"dom方式解析\"><a href=\"#dom方式解析\" class=\"headerlink\" title=\"dom方式解析\"></a>dom方式解析</h2><pre><code>DocumentBuilder\n    抽象类,此类的实例从DocumentBuilderFactory.newDocumentBuilder()方法获取\n    parse(&quot;xml路径&quot;);返回的是Document整个文档\n    getElementsByTagName(String tagname);返回集合Nodelist\n    createElement(String tagname);创建标签\n    createTextNode(String data);创建文本\n    appendChild(Node newChild);把文本添加到标签下面\n    removeChild(Node oldChild);删除节点\n    getParentNode();获取父节点\n    NodeList list\n        getLength()得到集合的长度\n        item(int index)下标取到具体的值\n        for(int i=0;i&lt;list.getLength();i++){\n        list.item(i);\n        }\n    getTextContent();获取元素具体的值\n    setTextContent();修改元素的值\n    回写xml\n        TransformerFactory tff = TransformerFactory.newInstance();\n        Transformer tf = tff.newTransformer();\n        tf.transform(new DOMSource(document),new StreamResult(&quot;xml路径&quot;));\nDocumentBuilderFactory\n    抽象类,此类的实例从newInstance()获取\n</code></pre><h2 id=\"sax方式解析\"><a href=\"#sax方式解析\" class=\"headerlink\" title=\"sax方式解析\"></a>sax方式解析</h2><pre><code>sax只能查询,不能执行增删改操作\n解析过程\n    当解析到开始标签时自动执行startElement();\n    当解析到文本时自动执行characters();\n    当解析到结束标签时自动执行endElement();\nSAXParser\n    实例从SAXParserFactory.newSAXParser()方法获得\n    parse(&quot;xml路径&quot;,&quot;事件处理器&quot;);\n    创建一个类继承事件处理器类DefaultHandler并重写三个方法\nSAXParserFactory\n    实例从newInstance()方法获得\n</code></pre>"},{"title":"linux常用命令","toc":true,"date":"2017-11-23T04:19:11.000Z","_content":"linux 命令是对 Linux 系统进行管理的命令。对于 Linux 系统来说，无论是中央处理器、内存、磁盘驱动器、键盘、鼠标，还是用户等都是文件， Linux 系统管理的命令是它正常运行的核心，与之前的 DOS 命令类似。linux 命令在系统中有两种类型：内置 Shell 命令和 Linux 命令。\n\n<!--more-->\n\n\n### 线上查询及帮助命令 (2 个)\n\n线上查询及帮助命令 (2 个) |\n----|------\nman | 查看命令帮助，命令的词典，更复杂的还有 info，但不常用。\nhelp  | 查看 Linux 内置命令的帮助，比如 cd 命令。\n\n### 文件和目录操作命令 (18 个)\n\n文件和目录操作命令 (18 个) |\n----|------\nls  | 全拼 list，功能是列出目录的内容及其内容属性信息。\ncd  | 全拼 change directory，功能是从当前工作目录切换到指定的工作目录。\ncp  | 全拼 copy，其功能为复制文件或目录。\nfind | 查找的意思，用于查找目录及目录下的文件。\nmkdir | 全拼 make directories，其功能是创建目录。\nmv | 全拼 move，其功能是移动或重命名文件。\npwd | 全拼 print working directory，其功能是显示当前工作目录的绝对路径。\nrename | 用于重命名文件。\nrm | 全拼 remove，其功能是删除一个或多个文件或目录。\nrmdir | 全拼 remove empty directories，功能是删除空目录。\ntouch | 创建新的空文件，改变已有文件的时间戳属性。\ntree | 功能是以树形结构显示目录下的内容。\nbasename | 显示文件名或目录名。\ndirname | 显示文件或目录路径。\nchattr | 改变文件的扩展属性。\nlsattr | 查看文件扩展属性。\nfile | 显示文件的类型。\nmd5sum | 计算和校验文件的 MD5 值。\n### 查看文件及内容处理命令(21 个)\n\n查看文件及内容处理命令(21 个) |\n----|------\ncat | 全拼 concatenate，功能是用于连接多个文件并且打印到屏幕输出或重定向到指定文件中。\ntac | tac 是 cat 的反向拼写，因此命令的功能为反向显示文件内容。\nmore | 分页显示文件内容。\nless | 分页显示文件内容，more 命令的相反用法。\nhead | 显示文件内容的头部。\ntail | 显示文件内容的尾部。\ncut | 将文件的每一行按指定分隔符分割并输出。\nsplit | 分割文件为不同的小片段。\npaste | 按行合并文件内容。\nsort | 对文件的文本内容排序。\nuniq | 去除重复行。oldboy\nwc | 统计文件的行数、单词数或字节数。\niconv | 转换文件的编码格式。\ndos2unix | 将 DOS 格式文件转换成 UNIX 格式。\ndiff | 全拼 difference，比较文件的差异，常用于文本文件。\nvimdiff | 命令行可视化文件比较工具，常用于文本文件。\nrev | 反向输出文件内容。\ngrep/egrep | 过滤字符串，三剑客老三。\njoin | 按两个文件的相同字段合并。\ntr | 替换或删除字符。\nvi/vim | 命令行文本编辑器。\n### 文件压缩及解压缩命令(4 个)\n\n文件压缩及解压缩命令(4 个) |\n----|------\ntar | 打包压缩。oldboy\nunzip | 解压文件。\ngzip | gzip 压缩工具。\nzip | 压缩工具。\n### 信息显示命令(11 个)\n\n信息显示命令(11 个) | \n----|------\nuname | 显示操作系统相关信息的命令。\nhostname | 显示或者设置当前系统的主机名。\ndmesg | 显示开机信息，用于诊断系统故障。\nuptime | 显示系统运行时间及负载。\nstat | 显示文件或文件系统的状态。\ndu | 计算磁盘空间使用情况。\ndf | 报告文件系统磁盘空间的使用情况。\ntop | 实时显示系统资源使用情况。\nfree | 查看系统内存。\ndate | 显示与设置系统时间。\ncal | 查看日历等时间信息。\n### 搜索文件命令(4 个)\n\n搜索文件命令(4 个) | \n----|------\nwhich | 查找二进制命令，按环境变量 PATH 路径查找。\nfind | 从磁盘遍历查找文件或目录。\nwhereis | 查找二进制命令，按环境变量 PATH 路径查找。\nlocate | 从数据库 (/var/lib/mlocate/mlocate.db) 查找命令，使用 updatedb 更新库。\n### 用户管理命令(10 个)\n用户管理命令(10 个) | \n----|------\nuseradd | 添加用户。\nusermod | 修改系统已经存在的用户属性。\nuserdel | 删除用户。\ngroupadd | 添加用户组。\npasswd | 修改用户密码。\nchage | 修改用户密码有效期限。\nid | 查看用户的 uid,gid 及归属的用户组。\nsu | 切换用户身份。\nvisudo | 编辑 / etc/sudoers 文件的专属命令。\nsudo | 以另外一个用户身份(默认 root 用户)执行事先在 sudoers 文件允许的命令。\n### 基础网络操作命令(11 个)  \n基础网络操作命令(11 个) | \n----|------\ntelnet | 使用 TELNET 协议远程登录。\nssh | 使用 SSH 加密协议远程登录。\nscp | 全拼 secure copy，用于不同主机之间复制文件。\nwget | 命令行下载文件。\nping | 测试主机之间网络的连通性。\nroute | 显示和设置 linux 系统的路由表。\nifconfig | 查看、配置、启用或禁用网络接口的命令。\nifup | 启动网卡。\nifdown | 关闭网卡。\nnetstat | 查看网络状态。\nss | 查看网络状态。\n### 深入网络操作命令(9 个) \n深入网络操作命令(9 个) | \n----|------\nnmap | 网络扫描命令。\nlsof | 全名 list open files，也就是列举系统中已经被打开的文件。\nmail | 发送和接收邮件。\nmutt | 邮件管理命令。\nnslookup | 交互式查询互联网 DNS 服务器的命令。\ndig | 查找 DNS 解析过程。\nhost | 查询 DNS 的命令。\ntraceroute | 追踪数据传输路由状况。\ntcpdump | 命令行的抓包工具。\n### 有关磁盘与文件系统的命令(16 个) \n有关磁盘与文件系统的命令(16 个) | \n----|------\nmount | 挂载文件系统。\numount | 卸载文件系统。\nfsck | 检查并修复 Linux 文件系统。\ndd | 转换或复制文件。\ndumpe2fs | 导出 ext2/ext3/ext4 文件系统信息。\ndump | ext2/3/4 文件系统备份工具。\nfdisk | 磁盘分区命令，适用于 2TB 以下磁盘分区。\nparted | 磁盘分区命令，没有磁盘大小限制，常用于 2TB 以下磁盘分区。\nmkfs | 格式化创建 Linux 文件系统。\npartprobe | 更新内核的硬盘分区表信息。\ne2fsck | 检查 ext2/ext3/ext4 类型文件系统。\nmkswap | 创建 Linux 交换分区。\nswapon | 启用交换分区。\nswapoff | 关闭交换分区。\nsync | 将内存缓冲区内的数据写入磁盘。\nresize2fs | 调整 ext2/ext3/ext4 文件系统大小。\n### 系统权限及用户授权相关命令(4 个)\n系统权限及用户授权相关命令(4 个) | \n----|------\nchmod | 改变文件或目录权限。\nchown | 改变文件或目录的属主和属组。\nchgrp | 更改文件用户组。\numask | 显示或设置权限掩码。\n### 查看系统用户登陆信息的命令(7 个)\n查看系统用户登陆信息的命令(7 个) | \n----|------\nwhoami | 显示当前有效的用户名称，相当于执行 id -un 命令。\nwho | 显示目前登录系统的用户信息。\nw | 显示已经登陆系统的用户列表，并显示用户正在执行的指令。\nlast | 显示登入系统的用户。\nlastlog | 显示系统中所有用户最近一次登录信息。\nusers | 显示当前登录系统的所有用户的用户列表。\nfinger | 查找并显示用户信息。\n### 内置命令及其它(19 个)\n内置命令及其它(19 个) | \n----|------\necho | 打印变量，或直接输出指定的字符串\nprintf | 将结果格式化输出到标准输出。\nrpm | 管理 rpm 包的命令。\nyum | 自动化简单化地管理 rpm 包的命令。\nwatch | 周期性的执行给定的命令，并将命令的输出以全屏方式显示。\nalias | 设置系统别名。\nunalias | 取消系统别名。\ndate | 查看或设置系统时间。\nclear | 清除屏幕，简称清屏。\nhistory | 查看命令执行的历史纪录。\neject | 弹出光驱。\ntime | 计算命令执行时间。\nnc | 功能强大的网络工具。\nxargs | 将标准输入转换成命令行参数。\nexec | 调用并执行指令的命令。\nexport | 设置或者显示环境变量。\nunset | 删除变量或函数。\ntype | 用于判断另外一个命令是否是内置命令。\nbc | 命令行科学计算器\n### 系统管理与性能监视命令 (9 个)\n系统管理与性能监视命令 (9 个) | \n----|------\nchkconfig | 管理 Linux 系统开机启动项。\nvmstat | 虚拟内存统计。\nmpstat | 显示各个可用 CPU 的状态统计。\niostat | 统计系统 IO。\nsar | 全面地获取系统的 CPU、运行队列、磁盘 I/O、分页(交换区)、内存、 CPU 中断和网络等性能数据。\nipcs | 用于报告 Linux 中进程间通信设施的状态，显示的信息包括消息列表、共享内存和信号量的信息。\nipcrm | 用来删除一个或更多的消息队列、信号量集或者共享内存标识。\nstrace | 用于诊断、调试 Linux 用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。\nltrace | 命令会跟踪进程的库函数调用, 它会显现出哪个库函数被调用。\n### 关机 / 重启 / 注销和查看系统信息的命令(6 个)\n关机 / 重启 / 注销和查看系统信息的命令(6 个) | \n----|------\nshutdown | 关机。\nhalt | 关机。\npoweroff | 关闭电源。\nlogout | 退出当前登录的 Shell。\nexit | 退出当前登录的 Shell。\nCtrl+d | 退出当前登录的 Shell 的快捷键。\n### 进程管理相关命令(15 个) \n进程管理相关命令(15 个) | \n----|------\nbg | 将一个在后台暂停的命令，变成继续执行  (在后台执行)。\nfg | 将后台中的命令调至前台继续运行。\njobs | 查看当前有多少在后台运行的命令。\nkill | 终止进程。\nkillall | 通过进程名终止进程。\npkill | 通过进程名终止进程。\ncrontab | 定时任务命令。\nps | 显示进程的快照。\npstree | 树形显示进程。\nnice/renice | 调整程序运行的优先级。\nnohup | 忽略挂起信号运行指定的命令。\npgrep | 查找匹配条件的进程。\nrunlevel | 查看系统当前运行级别。\ninit | 切换运行级别。\nservice | 启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。","source":"_posts/linux常用命令.md","raw":"---\ntitle: linux常用命令\ntoc: true\ndate: 2017-11-23 12:19:11\ntags:\n- 编程\n---\nlinux 命令是对 Linux 系统进行管理的命令。对于 Linux 系统来说，无论是中央处理器、内存、磁盘驱动器、键盘、鼠标，还是用户等都是文件， Linux 系统管理的命令是它正常运行的核心，与之前的 DOS 命令类似。linux 命令在系统中有两种类型：内置 Shell 命令和 Linux 命令。\n\n<!--more-->\n\n\n### 线上查询及帮助命令 (2 个)\n\n线上查询及帮助命令 (2 个) |\n----|------\nman | 查看命令帮助，命令的词典，更复杂的还有 info，但不常用。\nhelp  | 查看 Linux 内置命令的帮助，比如 cd 命令。\n\n### 文件和目录操作命令 (18 个)\n\n文件和目录操作命令 (18 个) |\n----|------\nls  | 全拼 list，功能是列出目录的内容及其内容属性信息。\ncd  | 全拼 change directory，功能是从当前工作目录切换到指定的工作目录。\ncp  | 全拼 copy，其功能为复制文件或目录。\nfind | 查找的意思，用于查找目录及目录下的文件。\nmkdir | 全拼 make directories，其功能是创建目录。\nmv | 全拼 move，其功能是移动或重命名文件。\npwd | 全拼 print working directory，其功能是显示当前工作目录的绝对路径。\nrename | 用于重命名文件。\nrm | 全拼 remove，其功能是删除一个或多个文件或目录。\nrmdir | 全拼 remove empty directories，功能是删除空目录。\ntouch | 创建新的空文件，改变已有文件的时间戳属性。\ntree | 功能是以树形结构显示目录下的内容。\nbasename | 显示文件名或目录名。\ndirname | 显示文件或目录路径。\nchattr | 改变文件的扩展属性。\nlsattr | 查看文件扩展属性。\nfile | 显示文件的类型。\nmd5sum | 计算和校验文件的 MD5 值。\n### 查看文件及内容处理命令(21 个)\n\n查看文件及内容处理命令(21 个) |\n----|------\ncat | 全拼 concatenate，功能是用于连接多个文件并且打印到屏幕输出或重定向到指定文件中。\ntac | tac 是 cat 的反向拼写，因此命令的功能为反向显示文件内容。\nmore | 分页显示文件内容。\nless | 分页显示文件内容，more 命令的相反用法。\nhead | 显示文件内容的头部。\ntail | 显示文件内容的尾部。\ncut | 将文件的每一行按指定分隔符分割并输出。\nsplit | 分割文件为不同的小片段。\npaste | 按行合并文件内容。\nsort | 对文件的文本内容排序。\nuniq | 去除重复行。oldboy\nwc | 统计文件的行数、单词数或字节数。\niconv | 转换文件的编码格式。\ndos2unix | 将 DOS 格式文件转换成 UNIX 格式。\ndiff | 全拼 difference，比较文件的差异，常用于文本文件。\nvimdiff | 命令行可视化文件比较工具，常用于文本文件。\nrev | 反向输出文件内容。\ngrep/egrep | 过滤字符串，三剑客老三。\njoin | 按两个文件的相同字段合并。\ntr | 替换或删除字符。\nvi/vim | 命令行文本编辑器。\n### 文件压缩及解压缩命令(4 个)\n\n文件压缩及解压缩命令(4 个) |\n----|------\ntar | 打包压缩。oldboy\nunzip | 解压文件。\ngzip | gzip 压缩工具。\nzip | 压缩工具。\n### 信息显示命令(11 个)\n\n信息显示命令(11 个) | \n----|------\nuname | 显示操作系统相关信息的命令。\nhostname | 显示或者设置当前系统的主机名。\ndmesg | 显示开机信息，用于诊断系统故障。\nuptime | 显示系统运行时间及负载。\nstat | 显示文件或文件系统的状态。\ndu | 计算磁盘空间使用情况。\ndf | 报告文件系统磁盘空间的使用情况。\ntop | 实时显示系统资源使用情况。\nfree | 查看系统内存。\ndate | 显示与设置系统时间。\ncal | 查看日历等时间信息。\n### 搜索文件命令(4 个)\n\n搜索文件命令(4 个) | \n----|------\nwhich | 查找二进制命令，按环境变量 PATH 路径查找。\nfind | 从磁盘遍历查找文件或目录。\nwhereis | 查找二进制命令，按环境变量 PATH 路径查找。\nlocate | 从数据库 (/var/lib/mlocate/mlocate.db) 查找命令，使用 updatedb 更新库。\n### 用户管理命令(10 个)\n用户管理命令(10 个) | \n----|------\nuseradd | 添加用户。\nusermod | 修改系统已经存在的用户属性。\nuserdel | 删除用户。\ngroupadd | 添加用户组。\npasswd | 修改用户密码。\nchage | 修改用户密码有效期限。\nid | 查看用户的 uid,gid 及归属的用户组。\nsu | 切换用户身份。\nvisudo | 编辑 / etc/sudoers 文件的专属命令。\nsudo | 以另外一个用户身份(默认 root 用户)执行事先在 sudoers 文件允许的命令。\n### 基础网络操作命令(11 个)  \n基础网络操作命令(11 个) | \n----|------\ntelnet | 使用 TELNET 协议远程登录。\nssh | 使用 SSH 加密协议远程登录。\nscp | 全拼 secure copy，用于不同主机之间复制文件。\nwget | 命令行下载文件。\nping | 测试主机之间网络的连通性。\nroute | 显示和设置 linux 系统的路由表。\nifconfig | 查看、配置、启用或禁用网络接口的命令。\nifup | 启动网卡。\nifdown | 关闭网卡。\nnetstat | 查看网络状态。\nss | 查看网络状态。\n### 深入网络操作命令(9 个) \n深入网络操作命令(9 个) | \n----|------\nnmap | 网络扫描命令。\nlsof | 全名 list open files，也就是列举系统中已经被打开的文件。\nmail | 发送和接收邮件。\nmutt | 邮件管理命令。\nnslookup | 交互式查询互联网 DNS 服务器的命令。\ndig | 查找 DNS 解析过程。\nhost | 查询 DNS 的命令。\ntraceroute | 追踪数据传输路由状况。\ntcpdump | 命令行的抓包工具。\n### 有关磁盘与文件系统的命令(16 个) \n有关磁盘与文件系统的命令(16 个) | \n----|------\nmount | 挂载文件系统。\numount | 卸载文件系统。\nfsck | 检查并修复 Linux 文件系统。\ndd | 转换或复制文件。\ndumpe2fs | 导出 ext2/ext3/ext4 文件系统信息。\ndump | ext2/3/4 文件系统备份工具。\nfdisk | 磁盘分区命令，适用于 2TB 以下磁盘分区。\nparted | 磁盘分区命令，没有磁盘大小限制，常用于 2TB 以下磁盘分区。\nmkfs | 格式化创建 Linux 文件系统。\npartprobe | 更新内核的硬盘分区表信息。\ne2fsck | 检查 ext2/ext3/ext4 类型文件系统。\nmkswap | 创建 Linux 交换分区。\nswapon | 启用交换分区。\nswapoff | 关闭交换分区。\nsync | 将内存缓冲区内的数据写入磁盘。\nresize2fs | 调整 ext2/ext3/ext4 文件系统大小。\n### 系统权限及用户授权相关命令(4 个)\n系统权限及用户授权相关命令(4 个) | \n----|------\nchmod | 改变文件或目录权限。\nchown | 改变文件或目录的属主和属组。\nchgrp | 更改文件用户组。\numask | 显示或设置权限掩码。\n### 查看系统用户登陆信息的命令(7 个)\n查看系统用户登陆信息的命令(7 个) | \n----|------\nwhoami | 显示当前有效的用户名称，相当于执行 id -un 命令。\nwho | 显示目前登录系统的用户信息。\nw | 显示已经登陆系统的用户列表，并显示用户正在执行的指令。\nlast | 显示登入系统的用户。\nlastlog | 显示系统中所有用户最近一次登录信息。\nusers | 显示当前登录系统的所有用户的用户列表。\nfinger | 查找并显示用户信息。\n### 内置命令及其它(19 个)\n内置命令及其它(19 个) | \n----|------\necho | 打印变量，或直接输出指定的字符串\nprintf | 将结果格式化输出到标准输出。\nrpm | 管理 rpm 包的命令。\nyum | 自动化简单化地管理 rpm 包的命令。\nwatch | 周期性的执行给定的命令，并将命令的输出以全屏方式显示。\nalias | 设置系统别名。\nunalias | 取消系统别名。\ndate | 查看或设置系统时间。\nclear | 清除屏幕，简称清屏。\nhistory | 查看命令执行的历史纪录。\neject | 弹出光驱。\ntime | 计算命令执行时间。\nnc | 功能强大的网络工具。\nxargs | 将标准输入转换成命令行参数。\nexec | 调用并执行指令的命令。\nexport | 设置或者显示环境变量。\nunset | 删除变量或函数。\ntype | 用于判断另外一个命令是否是内置命令。\nbc | 命令行科学计算器\n### 系统管理与性能监视命令 (9 个)\n系统管理与性能监视命令 (9 个) | \n----|------\nchkconfig | 管理 Linux 系统开机启动项。\nvmstat | 虚拟内存统计。\nmpstat | 显示各个可用 CPU 的状态统计。\niostat | 统计系统 IO。\nsar | 全面地获取系统的 CPU、运行队列、磁盘 I/O、分页(交换区)、内存、 CPU 中断和网络等性能数据。\nipcs | 用于报告 Linux 中进程间通信设施的状态，显示的信息包括消息列表、共享内存和信号量的信息。\nipcrm | 用来删除一个或更多的消息队列、信号量集或者共享内存标识。\nstrace | 用于诊断、调试 Linux 用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。\nltrace | 命令会跟踪进程的库函数调用, 它会显现出哪个库函数被调用。\n### 关机 / 重启 / 注销和查看系统信息的命令(6 个)\n关机 / 重启 / 注销和查看系统信息的命令(6 个) | \n----|------\nshutdown | 关机。\nhalt | 关机。\npoweroff | 关闭电源。\nlogout | 退出当前登录的 Shell。\nexit | 退出当前登录的 Shell。\nCtrl+d | 退出当前登录的 Shell 的快捷键。\n### 进程管理相关命令(15 个) \n进程管理相关命令(15 个) | \n----|------\nbg | 将一个在后台暂停的命令，变成继续执行  (在后台执行)。\nfg | 将后台中的命令调至前台继续运行。\njobs | 查看当前有多少在后台运行的命令。\nkill | 终止进程。\nkillall | 通过进程名终止进程。\npkill | 通过进程名终止进程。\ncrontab | 定时任务命令。\nps | 显示进程的快照。\npstree | 树形显示进程。\nnice/renice | 调整程序运行的优先级。\nnohup | 忽略挂起信号运行指定的命令。\npgrep | 查找匹配条件的进程。\nrunlevel | 查看系统当前运行级别。\ninit | 切换运行级别。\nservice | 启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。","slug":"linux常用命令","published":1,"updated":"2018-01-20T06:44:37.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8zo004144wapm65tg6f","content":"<p>linux 命令是对 Linux 系统进行管理的命令。对于 Linux 系统来说，无论是中央处理器、内存、磁盘驱动器、键盘、鼠标，还是用户等都是文件， Linux 系统管理的命令是它正常运行的核心，与之前的 DOS 命令类似。linux 命令在系统中有两种类型：内置 Shell 命令和 Linux 命令。</p>\n<a id=\"more\"></a>\n<h3 id=\"线上查询及帮助命令-2-个\"><a href=\"#线上查询及帮助命令-2-个\" class=\"headerlink\" title=\"线上查询及帮助命令 (2 个)\"></a>线上查询及帮助命令 (2 个)</h3><table>\n<thead>\n<tr>\n<th>线上查询及帮助命令 (2 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>man</td>\n<td>查看命令帮助，命令的词典，更复杂的还有 info，但不常用。</td>\n</tr>\n<tr>\n<td>help</td>\n<td>查看 Linux 内置命令的帮助，比如 cd 命令。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件和目录操作命令-18-个\"><a href=\"#文件和目录操作命令-18-个\" class=\"headerlink\" title=\"文件和目录操作命令 (18 个)\"></a>文件和目录操作命令 (18 个)</h3><table>\n<thead>\n<tr>\n<th>文件和目录操作命令 (18 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ls</td>\n<td>全拼 list，功能是列出目录的内容及其内容属性信息。</td>\n</tr>\n<tr>\n<td>cd</td>\n<td>全拼 change directory，功能是从当前工作目录切换到指定的工作目录。</td>\n</tr>\n<tr>\n<td>cp</td>\n<td>全拼 copy，其功能为复制文件或目录。</td>\n</tr>\n<tr>\n<td>find</td>\n<td>查找的意思，用于查找目录及目录下的文件。</td>\n</tr>\n<tr>\n<td>mkdir</td>\n<td>全拼 make directories，其功能是创建目录。</td>\n</tr>\n<tr>\n<td>mv</td>\n<td>全拼 move，其功能是移动或重命名文件。</td>\n</tr>\n<tr>\n<td>pwd</td>\n<td>全拼 print working directory，其功能是显示当前工作目录的绝对路径。</td>\n</tr>\n<tr>\n<td>rename</td>\n<td>用于重命名文件。</td>\n</tr>\n<tr>\n<td>rm</td>\n<td>全拼 remove，其功能是删除一个或多个文件或目录。</td>\n</tr>\n<tr>\n<td>rmdir</td>\n<td>全拼 remove empty directories，功能是删除空目录。</td>\n</tr>\n<tr>\n<td>touch</td>\n<td>创建新的空文件，改变已有文件的时间戳属性。</td>\n</tr>\n<tr>\n<td>tree</td>\n<td>功能是以树形结构显示目录下的内容。</td>\n</tr>\n<tr>\n<td>basename</td>\n<td>显示文件名或目录名。</td>\n</tr>\n<tr>\n<td>dirname</td>\n<td>显示文件或目录路径。</td>\n</tr>\n<tr>\n<td>chattr</td>\n<td>改变文件的扩展属性。</td>\n</tr>\n<tr>\n<td>lsattr</td>\n<td>查看文件扩展属性。</td>\n</tr>\n<tr>\n<td>file</td>\n<td>显示文件的类型。</td>\n</tr>\n<tr>\n<td>md5sum</td>\n<td>计算和校验文件的 MD5 值。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"查看文件及内容处理命令-21-个\"><a href=\"#查看文件及内容处理命令-21-个\" class=\"headerlink\" title=\"查看文件及内容处理命令(21 个)\"></a>查看文件及内容处理命令(21 个)</h3><table>\n<thead>\n<tr>\n<th>查看文件及内容处理命令(21 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cat</td>\n<td>全拼 concatenate，功能是用于连接多个文件并且打印到屏幕输出或重定向到指定文件中。</td>\n</tr>\n<tr>\n<td>tac</td>\n<td>tac 是 cat 的反向拼写，因此命令的功能为反向显示文件内容。</td>\n</tr>\n<tr>\n<td>more</td>\n<td>分页显示文件内容。</td>\n</tr>\n<tr>\n<td>less</td>\n<td>分页显示文件内容，more 命令的相反用法。</td>\n</tr>\n<tr>\n<td>head</td>\n<td>显示文件内容的头部。</td>\n</tr>\n<tr>\n<td>tail</td>\n<td>显示文件内容的尾部。</td>\n</tr>\n<tr>\n<td>cut</td>\n<td>将文件的每一行按指定分隔符分割并输出。</td>\n</tr>\n<tr>\n<td>split</td>\n<td>分割文件为不同的小片段。</td>\n</tr>\n<tr>\n<td>paste</td>\n<td>按行合并文件内容。</td>\n</tr>\n<tr>\n<td>sort</td>\n<td>对文件的文本内容排序。</td>\n</tr>\n<tr>\n<td>uniq</td>\n<td>去除重复行。oldboy</td>\n</tr>\n<tr>\n<td>wc</td>\n<td>统计文件的行数、单词数或字节数。</td>\n</tr>\n<tr>\n<td>iconv</td>\n<td>转换文件的编码格式。</td>\n</tr>\n<tr>\n<td>dos2unix</td>\n<td>将 DOS 格式文件转换成 UNIX 格式。</td>\n</tr>\n<tr>\n<td>diff</td>\n<td>全拼 difference，比较文件的差异，常用于文本文件。</td>\n</tr>\n<tr>\n<td>vimdiff</td>\n<td>命令行可视化文件比较工具，常用于文本文件。</td>\n</tr>\n<tr>\n<td>rev</td>\n<td>反向输出文件内容。</td>\n</tr>\n<tr>\n<td>grep/egrep</td>\n<td>过滤字符串，三剑客老三。</td>\n</tr>\n<tr>\n<td>join</td>\n<td>按两个文件的相同字段合并。</td>\n</tr>\n<tr>\n<td>tr</td>\n<td>替换或删除字符。</td>\n</tr>\n<tr>\n<td>vi/vim</td>\n<td>命令行文本编辑器。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件压缩及解压缩命令-4-个\"><a href=\"#文件压缩及解压缩命令-4-个\" class=\"headerlink\" title=\"文件压缩及解压缩命令(4 个)\"></a>文件压缩及解压缩命令(4 个)</h3><table>\n<thead>\n<tr>\n<th>文件压缩及解压缩命令(4 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tar</td>\n<td>打包压缩。oldboy</td>\n</tr>\n<tr>\n<td>unzip</td>\n<td>解压文件。</td>\n</tr>\n<tr>\n<td>gzip</td>\n<td>gzip 压缩工具。</td>\n</tr>\n<tr>\n<td>zip</td>\n<td>压缩工具。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"信息显示命令-11-个\"><a href=\"#信息显示命令-11-个\" class=\"headerlink\" title=\"信息显示命令(11 个)\"></a>信息显示命令(11 个)</h3><table>\n<thead>\n<tr>\n<th>信息显示命令(11 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>uname</td>\n<td>显示操作系统相关信息的命令。</td>\n</tr>\n<tr>\n<td>hostname</td>\n<td>显示或者设置当前系统的主机名。</td>\n</tr>\n<tr>\n<td>dmesg</td>\n<td>显示开机信息，用于诊断系统故障。</td>\n</tr>\n<tr>\n<td>uptime</td>\n<td>显示系统运行时间及负载。</td>\n</tr>\n<tr>\n<td>stat</td>\n<td>显示文件或文件系统的状态。</td>\n</tr>\n<tr>\n<td>du</td>\n<td>计算磁盘空间使用情况。</td>\n</tr>\n<tr>\n<td>df</td>\n<td>报告文件系统磁盘空间的使用情况。</td>\n</tr>\n<tr>\n<td>top</td>\n<td>实时显示系统资源使用情况。</td>\n</tr>\n<tr>\n<td>free</td>\n<td>查看系统内存。</td>\n</tr>\n<tr>\n<td>date</td>\n<td>显示与设置系统时间。</td>\n</tr>\n<tr>\n<td>cal</td>\n<td>查看日历等时间信息。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"搜索文件命令-4-个\"><a href=\"#搜索文件命令-4-个\" class=\"headerlink\" title=\"搜索文件命令(4 个)\"></a>搜索文件命令(4 个)</h3><table>\n<thead>\n<tr>\n<th>搜索文件命令(4 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>which</td>\n<td>查找二进制命令，按环境变量 PATH 路径查找。</td>\n</tr>\n<tr>\n<td>find</td>\n<td>从磁盘遍历查找文件或目录。</td>\n</tr>\n<tr>\n<td>whereis</td>\n<td>查找二进制命令，按环境变量 PATH 路径查找。</td>\n</tr>\n<tr>\n<td>locate</td>\n<td>从数据库 (/var/lib/mlocate/mlocate.db) 查找命令，使用 updatedb 更新库。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"用户管理命令-10-个\"><a href=\"#用户管理命令-10-个\" class=\"headerlink\" title=\"用户管理命令(10 个)\"></a>用户管理命令(10 个)</h3><table>\n<thead>\n<tr>\n<th>用户管理命令(10 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>useradd</td>\n<td>添加用户。</td>\n</tr>\n<tr>\n<td>usermod</td>\n<td>修改系统已经存在的用户属性。</td>\n</tr>\n<tr>\n<td>userdel</td>\n<td>删除用户。</td>\n</tr>\n<tr>\n<td>groupadd</td>\n<td>添加用户组。</td>\n</tr>\n<tr>\n<td>passwd</td>\n<td>修改用户密码。</td>\n</tr>\n<tr>\n<td>chage</td>\n<td>修改用户密码有效期限。</td>\n</tr>\n<tr>\n<td>id</td>\n<td>查看用户的 uid,gid 及归属的用户组。</td>\n</tr>\n<tr>\n<td>su</td>\n<td>切换用户身份。</td>\n</tr>\n<tr>\n<td>visudo</td>\n<td>编辑 / etc/sudoers 文件的专属命令。</td>\n</tr>\n<tr>\n<td>sudo</td>\n<td>以另外一个用户身份(默认 root 用户)执行事先在 sudoers 文件允许的命令。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基础网络操作命令-11-个\"><a href=\"#基础网络操作命令-11-个\" class=\"headerlink\" title=\"基础网络操作命令(11 个)\"></a>基础网络操作命令(11 个)</h3><table>\n<thead>\n<tr>\n<th>基础网络操作命令(11 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>telnet</td>\n<td>使用 TELNET 协议远程登录。</td>\n</tr>\n<tr>\n<td>ssh</td>\n<td>使用 SSH 加密协议远程登录。</td>\n</tr>\n<tr>\n<td>scp</td>\n<td>全拼 secure copy，用于不同主机之间复制文件。</td>\n</tr>\n<tr>\n<td>wget</td>\n<td>命令行下载文件。</td>\n</tr>\n<tr>\n<td>ping</td>\n<td>测试主机之间网络的连通性。</td>\n</tr>\n<tr>\n<td>route</td>\n<td>显示和设置 linux 系统的路由表。</td>\n</tr>\n<tr>\n<td>ifconfig</td>\n<td>查看、配置、启用或禁用网络接口的命令。</td>\n</tr>\n<tr>\n<td>ifup</td>\n<td>启动网卡。</td>\n</tr>\n<tr>\n<td>ifdown</td>\n<td>关闭网卡。</td>\n</tr>\n<tr>\n<td>netstat</td>\n<td>查看网络状态。</td>\n</tr>\n<tr>\n<td>ss</td>\n<td>查看网络状态。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"深入网络操作命令-9-个\"><a href=\"#深入网络操作命令-9-个\" class=\"headerlink\" title=\"深入网络操作命令(9 个)\"></a>深入网络操作命令(9 个)</h3><table>\n<thead>\n<tr>\n<th>深入网络操作命令(9 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nmap</td>\n<td>网络扫描命令。</td>\n</tr>\n<tr>\n<td>lsof</td>\n<td>全名 list open files，也就是列举系统中已经被打开的文件。</td>\n</tr>\n<tr>\n<td>mail</td>\n<td>发送和接收邮件。</td>\n</tr>\n<tr>\n<td>mutt</td>\n<td>邮件管理命令。</td>\n</tr>\n<tr>\n<td>nslookup</td>\n<td>交互式查询互联网 DNS 服务器的命令。</td>\n</tr>\n<tr>\n<td>dig</td>\n<td>查找 DNS 解析过程。</td>\n</tr>\n<tr>\n<td>host</td>\n<td>查询 DNS 的命令。</td>\n</tr>\n<tr>\n<td>traceroute</td>\n<td>追踪数据传输路由状况。</td>\n</tr>\n<tr>\n<td>tcpdump</td>\n<td>命令行的抓包工具。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"有关磁盘与文件系统的命令-16-个\"><a href=\"#有关磁盘与文件系统的命令-16-个\" class=\"headerlink\" title=\"有关磁盘与文件系统的命令(16 个)\"></a>有关磁盘与文件系统的命令(16 个)</h3><table>\n<thead>\n<tr>\n<th>有关磁盘与文件系统的命令(16 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mount</td>\n<td>挂载文件系统。</td>\n</tr>\n<tr>\n<td>umount</td>\n<td>卸载文件系统。</td>\n</tr>\n<tr>\n<td>fsck</td>\n<td>检查并修复 Linux 文件系统。</td>\n</tr>\n<tr>\n<td>dd</td>\n<td>转换或复制文件。</td>\n</tr>\n<tr>\n<td>dumpe2fs</td>\n<td>导出 ext2/ext3/ext4 文件系统信息。</td>\n</tr>\n<tr>\n<td>dump</td>\n<td>ext2/3/4 文件系统备份工具。</td>\n</tr>\n<tr>\n<td>fdisk</td>\n<td>磁盘分区命令，适用于 2TB 以下磁盘分区。</td>\n</tr>\n<tr>\n<td>parted</td>\n<td>磁盘分区命令，没有磁盘大小限制，常用于 2TB 以下磁盘分区。</td>\n</tr>\n<tr>\n<td>mkfs</td>\n<td>格式化创建 Linux 文件系统。</td>\n</tr>\n<tr>\n<td>partprobe</td>\n<td>更新内核的硬盘分区表信息。</td>\n</tr>\n<tr>\n<td>e2fsck</td>\n<td>检查 ext2/ext3/ext4 类型文件系统。</td>\n</tr>\n<tr>\n<td>mkswap</td>\n<td>创建 Linux 交换分区。</td>\n</tr>\n<tr>\n<td>swapon</td>\n<td>启用交换分区。</td>\n</tr>\n<tr>\n<td>swapoff</td>\n<td>关闭交换分区。</td>\n</tr>\n<tr>\n<td>sync</td>\n<td>将内存缓冲区内的数据写入磁盘。</td>\n</tr>\n<tr>\n<td>resize2fs</td>\n<td>调整 ext2/ext3/ext4 文件系统大小。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"系统权限及用户授权相关命令-4-个\"><a href=\"#系统权限及用户授权相关命令-4-个\" class=\"headerlink\" title=\"系统权限及用户授权相关命令(4 个)\"></a>系统权限及用户授权相关命令(4 个)</h3><table>\n<thead>\n<tr>\n<th>系统权限及用户授权相关命令(4 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chmod</td>\n<td>改变文件或目录权限。</td>\n</tr>\n<tr>\n<td>chown</td>\n<td>改变文件或目录的属主和属组。</td>\n</tr>\n<tr>\n<td>chgrp</td>\n<td>更改文件用户组。</td>\n</tr>\n<tr>\n<td>umask</td>\n<td>显示或设置权限掩码。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"查看系统用户登陆信息的命令-7-个\"><a href=\"#查看系统用户登陆信息的命令-7-个\" class=\"headerlink\" title=\"查看系统用户登陆信息的命令(7 个)\"></a>查看系统用户登陆信息的命令(7 个)</h3><table>\n<thead>\n<tr>\n<th>查看系统用户登陆信息的命令(7 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>whoami</td>\n<td>显示当前有效的用户名称，相当于执行 id -un 命令。</td>\n</tr>\n<tr>\n<td>who</td>\n<td>显示目前登录系统的用户信息。</td>\n</tr>\n<tr>\n<td>w</td>\n<td>显示已经登陆系统的用户列表，并显示用户正在执行的指令。</td>\n</tr>\n<tr>\n<td>last</td>\n<td>显示登入系统的用户。</td>\n</tr>\n<tr>\n<td>lastlog</td>\n<td>显示系统中所有用户最近一次登录信息。</td>\n</tr>\n<tr>\n<td>users</td>\n<td>显示当前登录系统的所有用户的用户列表。</td>\n</tr>\n<tr>\n<td>finger</td>\n<td>查找并显示用户信息。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"内置命令及其它-19-个\"><a href=\"#内置命令及其它-19-个\" class=\"headerlink\" title=\"内置命令及其它(19 个)\"></a>内置命令及其它(19 个)</h3><table>\n<thead>\n<tr>\n<th>内置命令及其它(19 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>echo</td>\n<td>打印变量，或直接输出指定的字符串</td>\n</tr>\n<tr>\n<td>printf</td>\n<td>将结果格式化输出到标准输出。</td>\n</tr>\n<tr>\n<td>rpm</td>\n<td>管理 rpm 包的命令。</td>\n</tr>\n<tr>\n<td>yum</td>\n<td>自动化简单化地管理 rpm 包的命令。</td>\n</tr>\n<tr>\n<td>watch</td>\n<td>周期性的执行给定的命令，并将命令的输出以全屏方式显示。</td>\n</tr>\n<tr>\n<td>alias</td>\n<td>设置系统别名。</td>\n</tr>\n<tr>\n<td>unalias</td>\n<td>取消系统别名。</td>\n</tr>\n<tr>\n<td>date</td>\n<td>查看或设置系统时间。</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>清除屏幕，简称清屏。</td>\n</tr>\n<tr>\n<td>history</td>\n<td>查看命令执行的历史纪录。</td>\n</tr>\n<tr>\n<td>eject</td>\n<td>弹出光驱。</td>\n</tr>\n<tr>\n<td>time</td>\n<td>计算命令执行时间。</td>\n</tr>\n<tr>\n<td>nc</td>\n<td>功能强大的网络工具。</td>\n</tr>\n<tr>\n<td>xargs</td>\n<td>将标准输入转换成命令行参数。</td>\n</tr>\n<tr>\n<td>exec</td>\n<td>调用并执行指令的命令。</td>\n</tr>\n<tr>\n<td>export</td>\n<td>设置或者显示环境变量。</td>\n</tr>\n<tr>\n<td>unset</td>\n<td>删除变量或函数。</td>\n</tr>\n<tr>\n<td>type</td>\n<td>用于判断另外一个命令是否是内置命令。</td>\n</tr>\n<tr>\n<td>bc</td>\n<td>命令行科学计算器</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"系统管理与性能监视命令-9-个\"><a href=\"#系统管理与性能监视命令-9-个\" class=\"headerlink\" title=\"系统管理与性能监视命令 (9 个)\"></a>系统管理与性能监视命令 (9 个)</h3><table>\n<thead>\n<tr>\n<th>系统管理与性能监视命令 (9 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chkconfig</td>\n<td>管理 Linux 系统开机启动项。</td>\n</tr>\n<tr>\n<td>vmstat</td>\n<td>虚拟内存统计。</td>\n</tr>\n<tr>\n<td>mpstat</td>\n<td>显示各个可用 CPU 的状态统计。</td>\n</tr>\n<tr>\n<td>iostat</td>\n<td>统计系统 IO。</td>\n</tr>\n<tr>\n<td>sar</td>\n<td>全面地获取系统的 CPU、运行队列、磁盘 I/O、分页(交换区)、内存、 CPU 中断和网络等性能数据。</td>\n</tr>\n<tr>\n<td>ipcs</td>\n<td>用于报告 Linux 中进程间通信设施的状态，显示的信息包括消息列表、共享内存和信号量的信息。</td>\n</tr>\n<tr>\n<td>ipcrm</td>\n<td>用来删除一个或更多的消息队列、信号量集或者共享内存标识。</td>\n</tr>\n<tr>\n<td>strace</td>\n<td>用于诊断、调试 Linux 用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。</td>\n</tr>\n<tr>\n<td>ltrace</td>\n<td>命令会跟踪进程的库函数调用, 它会显现出哪个库函数被调用。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"关机-重启-注销和查看系统信息的命令-6-个\"><a href=\"#关机-重启-注销和查看系统信息的命令-6-个\" class=\"headerlink\" title=\"关机 / 重启 / 注销和查看系统信息的命令(6 个)\"></a>关机 / 重启 / 注销和查看系统信息的命令(6 个)</h3><table>\n<thead>\n<tr>\n<th>关机 / 重启 / 注销和查看系统信息的命令(6 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>shutdown</td>\n<td>关机。</td>\n</tr>\n<tr>\n<td>halt</td>\n<td>关机。</td>\n</tr>\n<tr>\n<td>poweroff</td>\n<td>关闭电源。</td>\n</tr>\n<tr>\n<td>logout</td>\n<td>退出当前登录的 Shell。</td>\n</tr>\n<tr>\n<td>exit</td>\n<td>退出当前登录的 Shell。</td>\n</tr>\n<tr>\n<td>Ctrl+d</td>\n<td>退出当前登录的 Shell 的快捷键。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"进程管理相关命令-15-个\"><a href=\"#进程管理相关命令-15-个\" class=\"headerlink\" title=\"进程管理相关命令(15 个)\"></a>进程管理相关命令(15 个)</h3><table>\n<thead>\n<tr>\n<th>进程管理相关命令(15 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bg</td>\n<td>将一个在后台暂停的命令，变成继续执行  (在后台执行)。</td>\n</tr>\n<tr>\n<td>fg</td>\n<td>将后台中的命令调至前台继续运行。</td>\n</tr>\n<tr>\n<td>jobs</td>\n<td>查看当前有多少在后台运行的命令。</td>\n</tr>\n<tr>\n<td>kill</td>\n<td>终止进程。</td>\n</tr>\n<tr>\n<td>killall</td>\n<td>通过进程名终止进程。</td>\n</tr>\n<tr>\n<td>pkill</td>\n<td>通过进程名终止进程。</td>\n</tr>\n<tr>\n<td>crontab</td>\n<td>定时任务命令。</td>\n</tr>\n<tr>\n<td>ps</td>\n<td>显示进程的快照。</td>\n</tr>\n<tr>\n<td>pstree</td>\n<td>树形显示进程。</td>\n</tr>\n<tr>\n<td>nice/renice</td>\n<td>调整程序运行的优先级。</td>\n</tr>\n<tr>\n<td>nohup</td>\n<td>忽略挂起信号运行指定的命令。</td>\n</tr>\n<tr>\n<td>pgrep</td>\n<td>查找匹配条件的进程。</td>\n</tr>\n<tr>\n<td>runlevel</td>\n<td>查看系统当前运行级别。</td>\n</tr>\n<tr>\n<td>init</td>\n<td>切换运行级别。</td>\n</tr>\n<tr>\n<td>service</td>\n<td>启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"<p>linux 命令是对 Linux 系统进行管理的命令。对于 Linux 系统来说，无论是中央处理器、内存、磁盘驱动器、键盘、鼠标，还是用户等都是文件， Linux 系统管理的命令是它正常运行的核心，与之前的 DOS 命令类似。linux 命令在系统中有两种类型：内置 Shell 命令和 Linux 命令。</p>","more":"<h3 id=\"线上查询及帮助命令-2-个\"><a href=\"#线上查询及帮助命令-2-个\" class=\"headerlink\" title=\"线上查询及帮助命令 (2 个)\"></a>线上查询及帮助命令 (2 个)</h3><table>\n<thead>\n<tr>\n<th>线上查询及帮助命令 (2 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>man</td>\n<td>查看命令帮助，命令的词典，更复杂的还有 info，但不常用。</td>\n</tr>\n<tr>\n<td>help</td>\n<td>查看 Linux 内置命令的帮助，比如 cd 命令。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件和目录操作命令-18-个\"><a href=\"#文件和目录操作命令-18-个\" class=\"headerlink\" title=\"文件和目录操作命令 (18 个)\"></a>文件和目录操作命令 (18 个)</h3><table>\n<thead>\n<tr>\n<th>文件和目录操作命令 (18 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ls</td>\n<td>全拼 list，功能是列出目录的内容及其内容属性信息。</td>\n</tr>\n<tr>\n<td>cd</td>\n<td>全拼 change directory，功能是从当前工作目录切换到指定的工作目录。</td>\n</tr>\n<tr>\n<td>cp</td>\n<td>全拼 copy，其功能为复制文件或目录。</td>\n</tr>\n<tr>\n<td>find</td>\n<td>查找的意思，用于查找目录及目录下的文件。</td>\n</tr>\n<tr>\n<td>mkdir</td>\n<td>全拼 make directories，其功能是创建目录。</td>\n</tr>\n<tr>\n<td>mv</td>\n<td>全拼 move，其功能是移动或重命名文件。</td>\n</tr>\n<tr>\n<td>pwd</td>\n<td>全拼 print working directory，其功能是显示当前工作目录的绝对路径。</td>\n</tr>\n<tr>\n<td>rename</td>\n<td>用于重命名文件。</td>\n</tr>\n<tr>\n<td>rm</td>\n<td>全拼 remove，其功能是删除一个或多个文件或目录。</td>\n</tr>\n<tr>\n<td>rmdir</td>\n<td>全拼 remove empty directories，功能是删除空目录。</td>\n</tr>\n<tr>\n<td>touch</td>\n<td>创建新的空文件，改变已有文件的时间戳属性。</td>\n</tr>\n<tr>\n<td>tree</td>\n<td>功能是以树形结构显示目录下的内容。</td>\n</tr>\n<tr>\n<td>basename</td>\n<td>显示文件名或目录名。</td>\n</tr>\n<tr>\n<td>dirname</td>\n<td>显示文件或目录路径。</td>\n</tr>\n<tr>\n<td>chattr</td>\n<td>改变文件的扩展属性。</td>\n</tr>\n<tr>\n<td>lsattr</td>\n<td>查看文件扩展属性。</td>\n</tr>\n<tr>\n<td>file</td>\n<td>显示文件的类型。</td>\n</tr>\n<tr>\n<td>md5sum</td>\n<td>计算和校验文件的 MD5 值。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"查看文件及内容处理命令-21-个\"><a href=\"#查看文件及内容处理命令-21-个\" class=\"headerlink\" title=\"查看文件及内容处理命令(21 个)\"></a>查看文件及内容处理命令(21 个)</h3><table>\n<thead>\n<tr>\n<th>查看文件及内容处理命令(21 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cat</td>\n<td>全拼 concatenate，功能是用于连接多个文件并且打印到屏幕输出或重定向到指定文件中。</td>\n</tr>\n<tr>\n<td>tac</td>\n<td>tac 是 cat 的反向拼写，因此命令的功能为反向显示文件内容。</td>\n</tr>\n<tr>\n<td>more</td>\n<td>分页显示文件内容。</td>\n</tr>\n<tr>\n<td>less</td>\n<td>分页显示文件内容，more 命令的相反用法。</td>\n</tr>\n<tr>\n<td>head</td>\n<td>显示文件内容的头部。</td>\n</tr>\n<tr>\n<td>tail</td>\n<td>显示文件内容的尾部。</td>\n</tr>\n<tr>\n<td>cut</td>\n<td>将文件的每一行按指定分隔符分割并输出。</td>\n</tr>\n<tr>\n<td>split</td>\n<td>分割文件为不同的小片段。</td>\n</tr>\n<tr>\n<td>paste</td>\n<td>按行合并文件内容。</td>\n</tr>\n<tr>\n<td>sort</td>\n<td>对文件的文本内容排序。</td>\n</tr>\n<tr>\n<td>uniq</td>\n<td>去除重复行。oldboy</td>\n</tr>\n<tr>\n<td>wc</td>\n<td>统计文件的行数、单词数或字节数。</td>\n</tr>\n<tr>\n<td>iconv</td>\n<td>转换文件的编码格式。</td>\n</tr>\n<tr>\n<td>dos2unix</td>\n<td>将 DOS 格式文件转换成 UNIX 格式。</td>\n</tr>\n<tr>\n<td>diff</td>\n<td>全拼 difference，比较文件的差异，常用于文本文件。</td>\n</tr>\n<tr>\n<td>vimdiff</td>\n<td>命令行可视化文件比较工具，常用于文本文件。</td>\n</tr>\n<tr>\n<td>rev</td>\n<td>反向输出文件内容。</td>\n</tr>\n<tr>\n<td>grep/egrep</td>\n<td>过滤字符串，三剑客老三。</td>\n</tr>\n<tr>\n<td>join</td>\n<td>按两个文件的相同字段合并。</td>\n</tr>\n<tr>\n<td>tr</td>\n<td>替换或删除字符。</td>\n</tr>\n<tr>\n<td>vi/vim</td>\n<td>命令行文本编辑器。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件压缩及解压缩命令-4-个\"><a href=\"#文件压缩及解压缩命令-4-个\" class=\"headerlink\" title=\"文件压缩及解压缩命令(4 个)\"></a>文件压缩及解压缩命令(4 个)</h3><table>\n<thead>\n<tr>\n<th>文件压缩及解压缩命令(4 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tar</td>\n<td>打包压缩。oldboy</td>\n</tr>\n<tr>\n<td>unzip</td>\n<td>解压文件。</td>\n</tr>\n<tr>\n<td>gzip</td>\n<td>gzip 压缩工具。</td>\n</tr>\n<tr>\n<td>zip</td>\n<td>压缩工具。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"信息显示命令-11-个\"><a href=\"#信息显示命令-11-个\" class=\"headerlink\" title=\"信息显示命令(11 个)\"></a>信息显示命令(11 个)</h3><table>\n<thead>\n<tr>\n<th>信息显示命令(11 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>uname</td>\n<td>显示操作系统相关信息的命令。</td>\n</tr>\n<tr>\n<td>hostname</td>\n<td>显示或者设置当前系统的主机名。</td>\n</tr>\n<tr>\n<td>dmesg</td>\n<td>显示开机信息，用于诊断系统故障。</td>\n</tr>\n<tr>\n<td>uptime</td>\n<td>显示系统运行时间及负载。</td>\n</tr>\n<tr>\n<td>stat</td>\n<td>显示文件或文件系统的状态。</td>\n</tr>\n<tr>\n<td>du</td>\n<td>计算磁盘空间使用情况。</td>\n</tr>\n<tr>\n<td>df</td>\n<td>报告文件系统磁盘空间的使用情况。</td>\n</tr>\n<tr>\n<td>top</td>\n<td>实时显示系统资源使用情况。</td>\n</tr>\n<tr>\n<td>free</td>\n<td>查看系统内存。</td>\n</tr>\n<tr>\n<td>date</td>\n<td>显示与设置系统时间。</td>\n</tr>\n<tr>\n<td>cal</td>\n<td>查看日历等时间信息。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"搜索文件命令-4-个\"><a href=\"#搜索文件命令-4-个\" class=\"headerlink\" title=\"搜索文件命令(4 个)\"></a>搜索文件命令(4 个)</h3><table>\n<thead>\n<tr>\n<th>搜索文件命令(4 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>which</td>\n<td>查找二进制命令，按环境变量 PATH 路径查找。</td>\n</tr>\n<tr>\n<td>find</td>\n<td>从磁盘遍历查找文件或目录。</td>\n</tr>\n<tr>\n<td>whereis</td>\n<td>查找二进制命令，按环境变量 PATH 路径查找。</td>\n</tr>\n<tr>\n<td>locate</td>\n<td>从数据库 (/var/lib/mlocate/mlocate.db) 查找命令，使用 updatedb 更新库。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"用户管理命令-10-个\"><a href=\"#用户管理命令-10-个\" class=\"headerlink\" title=\"用户管理命令(10 个)\"></a>用户管理命令(10 个)</h3><table>\n<thead>\n<tr>\n<th>用户管理命令(10 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>useradd</td>\n<td>添加用户。</td>\n</tr>\n<tr>\n<td>usermod</td>\n<td>修改系统已经存在的用户属性。</td>\n</tr>\n<tr>\n<td>userdel</td>\n<td>删除用户。</td>\n</tr>\n<tr>\n<td>groupadd</td>\n<td>添加用户组。</td>\n</tr>\n<tr>\n<td>passwd</td>\n<td>修改用户密码。</td>\n</tr>\n<tr>\n<td>chage</td>\n<td>修改用户密码有效期限。</td>\n</tr>\n<tr>\n<td>id</td>\n<td>查看用户的 uid,gid 及归属的用户组。</td>\n</tr>\n<tr>\n<td>su</td>\n<td>切换用户身份。</td>\n</tr>\n<tr>\n<td>visudo</td>\n<td>编辑 / etc/sudoers 文件的专属命令。</td>\n</tr>\n<tr>\n<td>sudo</td>\n<td>以另外一个用户身份(默认 root 用户)执行事先在 sudoers 文件允许的命令。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基础网络操作命令-11-个\"><a href=\"#基础网络操作命令-11-个\" class=\"headerlink\" title=\"基础网络操作命令(11 个)\"></a>基础网络操作命令(11 个)</h3><table>\n<thead>\n<tr>\n<th>基础网络操作命令(11 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>telnet</td>\n<td>使用 TELNET 协议远程登录。</td>\n</tr>\n<tr>\n<td>ssh</td>\n<td>使用 SSH 加密协议远程登录。</td>\n</tr>\n<tr>\n<td>scp</td>\n<td>全拼 secure copy，用于不同主机之间复制文件。</td>\n</tr>\n<tr>\n<td>wget</td>\n<td>命令行下载文件。</td>\n</tr>\n<tr>\n<td>ping</td>\n<td>测试主机之间网络的连通性。</td>\n</tr>\n<tr>\n<td>route</td>\n<td>显示和设置 linux 系统的路由表。</td>\n</tr>\n<tr>\n<td>ifconfig</td>\n<td>查看、配置、启用或禁用网络接口的命令。</td>\n</tr>\n<tr>\n<td>ifup</td>\n<td>启动网卡。</td>\n</tr>\n<tr>\n<td>ifdown</td>\n<td>关闭网卡。</td>\n</tr>\n<tr>\n<td>netstat</td>\n<td>查看网络状态。</td>\n</tr>\n<tr>\n<td>ss</td>\n<td>查看网络状态。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"深入网络操作命令-9-个\"><a href=\"#深入网络操作命令-9-个\" class=\"headerlink\" title=\"深入网络操作命令(9 个)\"></a>深入网络操作命令(9 个)</h3><table>\n<thead>\n<tr>\n<th>深入网络操作命令(9 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nmap</td>\n<td>网络扫描命令。</td>\n</tr>\n<tr>\n<td>lsof</td>\n<td>全名 list open files，也就是列举系统中已经被打开的文件。</td>\n</tr>\n<tr>\n<td>mail</td>\n<td>发送和接收邮件。</td>\n</tr>\n<tr>\n<td>mutt</td>\n<td>邮件管理命令。</td>\n</tr>\n<tr>\n<td>nslookup</td>\n<td>交互式查询互联网 DNS 服务器的命令。</td>\n</tr>\n<tr>\n<td>dig</td>\n<td>查找 DNS 解析过程。</td>\n</tr>\n<tr>\n<td>host</td>\n<td>查询 DNS 的命令。</td>\n</tr>\n<tr>\n<td>traceroute</td>\n<td>追踪数据传输路由状况。</td>\n</tr>\n<tr>\n<td>tcpdump</td>\n<td>命令行的抓包工具。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"有关磁盘与文件系统的命令-16-个\"><a href=\"#有关磁盘与文件系统的命令-16-个\" class=\"headerlink\" title=\"有关磁盘与文件系统的命令(16 个)\"></a>有关磁盘与文件系统的命令(16 个)</h3><table>\n<thead>\n<tr>\n<th>有关磁盘与文件系统的命令(16 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mount</td>\n<td>挂载文件系统。</td>\n</tr>\n<tr>\n<td>umount</td>\n<td>卸载文件系统。</td>\n</tr>\n<tr>\n<td>fsck</td>\n<td>检查并修复 Linux 文件系统。</td>\n</tr>\n<tr>\n<td>dd</td>\n<td>转换或复制文件。</td>\n</tr>\n<tr>\n<td>dumpe2fs</td>\n<td>导出 ext2/ext3/ext4 文件系统信息。</td>\n</tr>\n<tr>\n<td>dump</td>\n<td>ext2/3/4 文件系统备份工具。</td>\n</tr>\n<tr>\n<td>fdisk</td>\n<td>磁盘分区命令，适用于 2TB 以下磁盘分区。</td>\n</tr>\n<tr>\n<td>parted</td>\n<td>磁盘分区命令，没有磁盘大小限制，常用于 2TB 以下磁盘分区。</td>\n</tr>\n<tr>\n<td>mkfs</td>\n<td>格式化创建 Linux 文件系统。</td>\n</tr>\n<tr>\n<td>partprobe</td>\n<td>更新内核的硬盘分区表信息。</td>\n</tr>\n<tr>\n<td>e2fsck</td>\n<td>检查 ext2/ext3/ext4 类型文件系统。</td>\n</tr>\n<tr>\n<td>mkswap</td>\n<td>创建 Linux 交换分区。</td>\n</tr>\n<tr>\n<td>swapon</td>\n<td>启用交换分区。</td>\n</tr>\n<tr>\n<td>swapoff</td>\n<td>关闭交换分区。</td>\n</tr>\n<tr>\n<td>sync</td>\n<td>将内存缓冲区内的数据写入磁盘。</td>\n</tr>\n<tr>\n<td>resize2fs</td>\n<td>调整 ext2/ext3/ext4 文件系统大小。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"系统权限及用户授权相关命令-4-个\"><a href=\"#系统权限及用户授权相关命令-4-个\" class=\"headerlink\" title=\"系统权限及用户授权相关命令(4 个)\"></a>系统权限及用户授权相关命令(4 个)</h3><table>\n<thead>\n<tr>\n<th>系统权限及用户授权相关命令(4 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chmod</td>\n<td>改变文件或目录权限。</td>\n</tr>\n<tr>\n<td>chown</td>\n<td>改变文件或目录的属主和属组。</td>\n</tr>\n<tr>\n<td>chgrp</td>\n<td>更改文件用户组。</td>\n</tr>\n<tr>\n<td>umask</td>\n<td>显示或设置权限掩码。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"查看系统用户登陆信息的命令-7-个\"><a href=\"#查看系统用户登陆信息的命令-7-个\" class=\"headerlink\" title=\"查看系统用户登陆信息的命令(7 个)\"></a>查看系统用户登陆信息的命令(7 个)</h3><table>\n<thead>\n<tr>\n<th>查看系统用户登陆信息的命令(7 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>whoami</td>\n<td>显示当前有效的用户名称，相当于执行 id -un 命令。</td>\n</tr>\n<tr>\n<td>who</td>\n<td>显示目前登录系统的用户信息。</td>\n</tr>\n<tr>\n<td>w</td>\n<td>显示已经登陆系统的用户列表，并显示用户正在执行的指令。</td>\n</tr>\n<tr>\n<td>last</td>\n<td>显示登入系统的用户。</td>\n</tr>\n<tr>\n<td>lastlog</td>\n<td>显示系统中所有用户最近一次登录信息。</td>\n</tr>\n<tr>\n<td>users</td>\n<td>显示当前登录系统的所有用户的用户列表。</td>\n</tr>\n<tr>\n<td>finger</td>\n<td>查找并显示用户信息。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"内置命令及其它-19-个\"><a href=\"#内置命令及其它-19-个\" class=\"headerlink\" title=\"内置命令及其它(19 个)\"></a>内置命令及其它(19 个)</h3><table>\n<thead>\n<tr>\n<th>内置命令及其它(19 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>echo</td>\n<td>打印变量，或直接输出指定的字符串</td>\n</tr>\n<tr>\n<td>printf</td>\n<td>将结果格式化输出到标准输出。</td>\n</tr>\n<tr>\n<td>rpm</td>\n<td>管理 rpm 包的命令。</td>\n</tr>\n<tr>\n<td>yum</td>\n<td>自动化简单化地管理 rpm 包的命令。</td>\n</tr>\n<tr>\n<td>watch</td>\n<td>周期性的执行给定的命令，并将命令的输出以全屏方式显示。</td>\n</tr>\n<tr>\n<td>alias</td>\n<td>设置系统别名。</td>\n</tr>\n<tr>\n<td>unalias</td>\n<td>取消系统别名。</td>\n</tr>\n<tr>\n<td>date</td>\n<td>查看或设置系统时间。</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>清除屏幕，简称清屏。</td>\n</tr>\n<tr>\n<td>history</td>\n<td>查看命令执行的历史纪录。</td>\n</tr>\n<tr>\n<td>eject</td>\n<td>弹出光驱。</td>\n</tr>\n<tr>\n<td>time</td>\n<td>计算命令执行时间。</td>\n</tr>\n<tr>\n<td>nc</td>\n<td>功能强大的网络工具。</td>\n</tr>\n<tr>\n<td>xargs</td>\n<td>将标准输入转换成命令行参数。</td>\n</tr>\n<tr>\n<td>exec</td>\n<td>调用并执行指令的命令。</td>\n</tr>\n<tr>\n<td>export</td>\n<td>设置或者显示环境变量。</td>\n</tr>\n<tr>\n<td>unset</td>\n<td>删除变量或函数。</td>\n</tr>\n<tr>\n<td>type</td>\n<td>用于判断另外一个命令是否是内置命令。</td>\n</tr>\n<tr>\n<td>bc</td>\n<td>命令行科学计算器</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"系统管理与性能监视命令-9-个\"><a href=\"#系统管理与性能监视命令-9-个\" class=\"headerlink\" title=\"系统管理与性能监视命令 (9 个)\"></a>系统管理与性能监视命令 (9 个)</h3><table>\n<thead>\n<tr>\n<th>系统管理与性能监视命令 (9 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chkconfig</td>\n<td>管理 Linux 系统开机启动项。</td>\n</tr>\n<tr>\n<td>vmstat</td>\n<td>虚拟内存统计。</td>\n</tr>\n<tr>\n<td>mpstat</td>\n<td>显示各个可用 CPU 的状态统计。</td>\n</tr>\n<tr>\n<td>iostat</td>\n<td>统计系统 IO。</td>\n</tr>\n<tr>\n<td>sar</td>\n<td>全面地获取系统的 CPU、运行队列、磁盘 I/O、分页(交换区)、内存、 CPU 中断和网络等性能数据。</td>\n</tr>\n<tr>\n<td>ipcs</td>\n<td>用于报告 Linux 中进程间通信设施的状态，显示的信息包括消息列表、共享内存和信号量的信息。</td>\n</tr>\n<tr>\n<td>ipcrm</td>\n<td>用来删除一个或更多的消息队列、信号量集或者共享内存标识。</td>\n</tr>\n<tr>\n<td>strace</td>\n<td>用于诊断、调试 Linux 用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。</td>\n</tr>\n<tr>\n<td>ltrace</td>\n<td>命令会跟踪进程的库函数调用, 它会显现出哪个库函数被调用。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"关机-重启-注销和查看系统信息的命令-6-个\"><a href=\"#关机-重启-注销和查看系统信息的命令-6-个\" class=\"headerlink\" title=\"关机 / 重启 / 注销和查看系统信息的命令(6 个)\"></a>关机 / 重启 / 注销和查看系统信息的命令(6 个)</h3><table>\n<thead>\n<tr>\n<th>关机 / 重启 / 注销和查看系统信息的命令(6 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>shutdown</td>\n<td>关机。</td>\n</tr>\n<tr>\n<td>halt</td>\n<td>关机。</td>\n</tr>\n<tr>\n<td>poweroff</td>\n<td>关闭电源。</td>\n</tr>\n<tr>\n<td>logout</td>\n<td>退出当前登录的 Shell。</td>\n</tr>\n<tr>\n<td>exit</td>\n<td>退出当前登录的 Shell。</td>\n</tr>\n<tr>\n<td>Ctrl+d</td>\n<td>退出当前登录的 Shell 的快捷键。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"进程管理相关命令-15-个\"><a href=\"#进程管理相关命令-15-个\" class=\"headerlink\" title=\"进程管理相关命令(15 个)\"></a>进程管理相关命令(15 个)</h3><table>\n<thead>\n<tr>\n<th>进程管理相关命令(15 个)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bg</td>\n<td>将一个在后台暂停的命令，变成继续执行  (在后台执行)。</td>\n</tr>\n<tr>\n<td>fg</td>\n<td>将后台中的命令调至前台继续运行。</td>\n</tr>\n<tr>\n<td>jobs</td>\n<td>查看当前有多少在后台运行的命令。</td>\n</tr>\n<tr>\n<td>kill</td>\n<td>终止进程。</td>\n</tr>\n<tr>\n<td>killall</td>\n<td>通过进程名终止进程。</td>\n</tr>\n<tr>\n<td>pkill</td>\n<td>通过进程名终止进程。</td>\n</tr>\n<tr>\n<td>crontab</td>\n<td>定时任务命令。</td>\n</tr>\n<tr>\n<td>ps</td>\n<td>显示进程的快照。</td>\n</tr>\n<tr>\n<td>pstree</td>\n<td>树形显示进程。</td>\n</tr>\n<tr>\n<td>nice/renice</td>\n<td>调整程序运行的优先级。</td>\n</tr>\n<tr>\n<td>nohup</td>\n<td>忽略挂起信号运行指定的命令。</td>\n</tr>\n<tr>\n<td>pgrep</td>\n<td>查找匹配条件的进程。</td>\n</tr>\n<tr>\n<td>runlevel</td>\n<td>查看系统当前运行级别。</td>\n</tr>\n<tr>\n<td>init</td>\n<td>切换运行级别。</td>\n</tr>\n<tr>\n<td>service</td>\n<td>启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。</td>\n</tr>\n</tbody>\n</table>"},{"title":"request,response学习笔记","date":"2017-03-31T07:54:17.000Z","toc":true,"_content":"request,response\n<!--more-->\n# response\n## 状态码\n\t\tsendError(int sc)\n\t\tsendError(int sc, String msg)\n\t\tsetStatus(int sc)\n## 响应头\n\t\tsetHeader(String name, String value)//单值的响应头\n\t\taddHeader(String name, String value)//多值的响应头\n\t\tsetIntHeader(String name, int value)\n\t\taddIntHeader(String name, int value)\n\t\tsetDateHeader(String name, long value)\n\t\taddDateHeader(String name, long value)\n\t\t<meta>标签可以代替响应头\n\t\t禁用浏览器缓存\n\t\t\tresponse.setHeader(\"Cache-Control\", \"no-cache\");\n\t\t\tresponse.setHeader(\"pragma\", \"no-cache\");\n\t\t\tresponse.setDateHeader(\"expires\", -1);\n## 响应体\n\t\tresponse的2个流\n\t\t\tServletOutputStream out = response.getOutputStream();//字节\n\t\t\tPrintWriter writer = response.getWriter();//字符\n\t\t\t2个流不能同时使用\n## 快速重定向\n\t\tresponse.sendRedirect(url);\n# request\n## 获取常用信息\n\t\trequest.getRemoteAddr();//获取客户端IP\n\t\trequest.getMethod();//获取请求方式\n## 获取请求头\n\t\tString getHeader(String name)\n\t\tint getIntHeader(String name)\n\t\tlong getDateHeader(String name)\n\t\tEnumeration<String> getHeaders(String name)\n## 获取请求URL\n\t\tString getScheme();\n\t\tString getServerName();\n\t\tString getServerPort();\n\t\tString getContextPath();\n\t\tString getServletPath();\n\t\tString getQueryString();\n\t\tString getRequestURI();\n\t\tString getRequestURL();\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fe65bpqpaxj30hb0593zi.jpg)\n## 获取请求参数\n\t\tString getParameter(String name);\n\t\tString[] getParameterValues(String name);\n\t\tEnumeration<String> getParameterNames();\n\t\tMap<String, String[]> getParameterMap();\n## 请求转发和请求包含\n\t\tRequestDispatcher rd = request.getRequestDispatcher(\"/oneServlet\");\n\t\t请求转发:rd.forward(request,response);//留头不留体\n\t\t请求包含:rd.include(request,response);//都留\n\t\t都是一个请求\n## request域\n\t\tvoid setAttribute(String name, Object value)\n\t\tObject getAttribute(String name)\n\t\t用这2个方法来传值\n# 编码问题\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fe65bqpxhvj30vp0digsl.jpg)","source":"_posts/request-response学习笔记.md","raw":"---\ntitle: 'request,response学习笔记'\ndate: 2017-03-31 15:54:17\ntags:\n- Web\ntoc: true\n---\nrequest,response\n<!--more-->\n# response\n## 状态码\n\t\tsendError(int sc)\n\t\tsendError(int sc, String msg)\n\t\tsetStatus(int sc)\n## 响应头\n\t\tsetHeader(String name, String value)//单值的响应头\n\t\taddHeader(String name, String value)//多值的响应头\n\t\tsetIntHeader(String name, int value)\n\t\taddIntHeader(String name, int value)\n\t\tsetDateHeader(String name, long value)\n\t\taddDateHeader(String name, long value)\n\t\t<meta>标签可以代替响应头\n\t\t禁用浏览器缓存\n\t\t\tresponse.setHeader(\"Cache-Control\", \"no-cache\");\n\t\t\tresponse.setHeader(\"pragma\", \"no-cache\");\n\t\t\tresponse.setDateHeader(\"expires\", -1);\n## 响应体\n\t\tresponse的2个流\n\t\t\tServletOutputStream out = response.getOutputStream();//字节\n\t\t\tPrintWriter writer = response.getWriter();//字符\n\t\t\t2个流不能同时使用\n## 快速重定向\n\t\tresponse.sendRedirect(url);\n# request\n## 获取常用信息\n\t\trequest.getRemoteAddr();//获取客户端IP\n\t\trequest.getMethod();//获取请求方式\n## 获取请求头\n\t\tString getHeader(String name)\n\t\tint getIntHeader(String name)\n\t\tlong getDateHeader(String name)\n\t\tEnumeration<String> getHeaders(String name)\n## 获取请求URL\n\t\tString getScheme();\n\t\tString getServerName();\n\t\tString getServerPort();\n\t\tString getContextPath();\n\t\tString getServletPath();\n\t\tString getQueryString();\n\t\tString getRequestURI();\n\t\tString getRequestURL();\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fe65bpqpaxj30hb0593zi.jpg)\n## 获取请求参数\n\t\tString getParameter(String name);\n\t\tString[] getParameterValues(String name);\n\t\tEnumeration<String> getParameterNames();\n\t\tMap<String, String[]> getParameterMap();\n## 请求转发和请求包含\n\t\tRequestDispatcher rd = request.getRequestDispatcher(\"/oneServlet\");\n\t\t请求转发:rd.forward(request,response);//留头不留体\n\t\t请求包含:rd.include(request,response);//都留\n\t\t都是一个请求\n## request域\n\t\tvoid setAttribute(String name, Object value)\n\t\tObject getAttribute(String name)\n\t\t用这2个方法来传值\n# 编码问题\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fe65bqpxhvj30vp0digsl.jpg)","slug":"request-response学习笔记","published":1,"updated":"2018-01-20T06:44:37.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8zu004444wa94xsb9sl","content":"<p>request,response<br><a id=\"more\"></a></p>\n<h1 id=\"response\"><a href=\"#response\" class=\"headerlink\" title=\"response\"></a>response</h1><h2 id=\"状态码\"><a href=\"#状态码\" class=\"headerlink\" title=\"状态码\"></a>状态码</h2><pre><code>sendError(int sc)\nsendError(int sc, String msg)\nsetStatus(int sc)\n</code></pre><h2 id=\"响应头\"><a href=\"#响应头\" class=\"headerlink\" title=\"响应头\"></a>响应头</h2><pre><code>setHeader(String name, String value)//单值的响应头\naddHeader(String name, String value)//多值的响应头\nsetIntHeader(String name, int value)\naddIntHeader(String name, int value)\nsetDateHeader(String name, long value)\naddDateHeader(String name, long value)\n&lt;meta&gt;标签可以代替响应头\n禁用浏览器缓存\n    response.setHeader(&quot;Cache-Control&quot;, &quot;no-cache&quot;);\n    response.setHeader(&quot;pragma&quot;, &quot;no-cache&quot;);\n    response.setDateHeader(&quot;expires&quot;, -1);\n</code></pre><h2 id=\"响应体\"><a href=\"#响应体\" class=\"headerlink\" title=\"响应体\"></a>响应体</h2><pre><code>response的2个流\n    ServletOutputStream out = response.getOutputStream();//字节\n    PrintWriter writer = response.getWriter();//字符\n    2个流不能同时使用\n</code></pre><h2 id=\"快速重定向\"><a href=\"#快速重定向\" class=\"headerlink\" title=\"快速重定向\"></a>快速重定向</h2><pre><code>response.sendRedirect(url);\n</code></pre><h1 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h1><h2 id=\"获取常用信息\"><a href=\"#获取常用信息\" class=\"headerlink\" title=\"获取常用信息\"></a>获取常用信息</h2><pre><code>request.getRemoteAddr();//获取客户端IP\nrequest.getMethod();//获取请求方式\n</code></pre><h2 id=\"获取请求头\"><a href=\"#获取请求头\" class=\"headerlink\" title=\"获取请求头\"></a>获取请求头</h2><pre><code>String getHeader(String name)\nint getIntHeader(String name)\nlong getDateHeader(String name)\nEnumeration&lt;String&gt; getHeaders(String name)\n</code></pre><h2 id=\"获取请求URL\"><a href=\"#获取请求URL\" class=\"headerlink\" title=\"获取请求URL\"></a>获取请求URL</h2><pre><code>String getScheme();\nString getServerName();\nString getServerPort();\nString getContextPath();\nString getServletPath();\nString getQueryString();\nString getRequestURI();\nString getRequestURL();\n</code></pre><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fe65bpqpaxj30hb0593zi.jpg\" alt=\"\"></p>\n<h2 id=\"获取请求参数\"><a href=\"#获取请求参数\" class=\"headerlink\" title=\"获取请求参数\"></a>获取请求参数</h2><pre><code>String getParameter(String name);\nString[] getParameterValues(String name);\nEnumeration&lt;String&gt; getParameterNames();\nMap&lt;String, String[]&gt; getParameterMap();\n</code></pre><h2 id=\"请求转发和请求包含\"><a href=\"#请求转发和请求包含\" class=\"headerlink\" title=\"请求转发和请求包含\"></a>请求转发和请求包含</h2><pre><code>RequestDispatcher rd = request.getRequestDispatcher(&quot;/oneServlet&quot;);\n请求转发:rd.forward(request,response);//留头不留体\n请求包含:rd.include(request,response);//都留\n都是一个请求\n</code></pre><h2 id=\"request域\"><a href=\"#request域\" class=\"headerlink\" title=\"request域\"></a>request域</h2><pre><code>void setAttribute(String name, Object value)\nObject getAttribute(String name)\n用这2个方法来传值\n</code></pre><h1 id=\"编码问题\"><a href=\"#编码问题\" class=\"headerlink\" title=\"编码问题\"></a>编码问题</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fe65bqpxhvj30vp0digsl.jpg\" alt=\"\"></p>\n","excerpt":"<p>request,response<br>","more":"</p>\n<h1 id=\"response\"><a href=\"#response\" class=\"headerlink\" title=\"response\"></a>response</h1><h2 id=\"状态码\"><a href=\"#状态码\" class=\"headerlink\" title=\"状态码\"></a>状态码</h2><pre><code>sendError(int sc)\nsendError(int sc, String msg)\nsetStatus(int sc)\n</code></pre><h2 id=\"响应头\"><a href=\"#响应头\" class=\"headerlink\" title=\"响应头\"></a>响应头</h2><pre><code>setHeader(String name, String value)//单值的响应头\naddHeader(String name, String value)//多值的响应头\nsetIntHeader(String name, int value)\naddIntHeader(String name, int value)\nsetDateHeader(String name, long value)\naddDateHeader(String name, long value)\n&lt;meta&gt;标签可以代替响应头\n禁用浏览器缓存\n    response.setHeader(&quot;Cache-Control&quot;, &quot;no-cache&quot;);\n    response.setHeader(&quot;pragma&quot;, &quot;no-cache&quot;);\n    response.setDateHeader(&quot;expires&quot;, -1);\n</code></pre><h2 id=\"响应体\"><a href=\"#响应体\" class=\"headerlink\" title=\"响应体\"></a>响应体</h2><pre><code>response的2个流\n    ServletOutputStream out = response.getOutputStream();//字节\n    PrintWriter writer = response.getWriter();//字符\n    2个流不能同时使用\n</code></pre><h2 id=\"快速重定向\"><a href=\"#快速重定向\" class=\"headerlink\" title=\"快速重定向\"></a>快速重定向</h2><pre><code>response.sendRedirect(url);\n</code></pre><h1 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h1><h2 id=\"获取常用信息\"><a href=\"#获取常用信息\" class=\"headerlink\" title=\"获取常用信息\"></a>获取常用信息</h2><pre><code>request.getRemoteAddr();//获取客户端IP\nrequest.getMethod();//获取请求方式\n</code></pre><h2 id=\"获取请求头\"><a href=\"#获取请求头\" class=\"headerlink\" title=\"获取请求头\"></a>获取请求头</h2><pre><code>String getHeader(String name)\nint getIntHeader(String name)\nlong getDateHeader(String name)\nEnumeration&lt;String&gt; getHeaders(String name)\n</code></pre><h2 id=\"获取请求URL\"><a href=\"#获取请求URL\" class=\"headerlink\" title=\"获取请求URL\"></a>获取请求URL</h2><pre><code>String getScheme();\nString getServerName();\nString getServerPort();\nString getContextPath();\nString getServletPath();\nString getQueryString();\nString getRequestURI();\nString getRequestURL();\n</code></pre><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fe65bpqpaxj30hb0593zi.jpg\" alt=\"\"></p>\n<h2 id=\"获取请求参数\"><a href=\"#获取请求参数\" class=\"headerlink\" title=\"获取请求参数\"></a>获取请求参数</h2><pre><code>String getParameter(String name);\nString[] getParameterValues(String name);\nEnumeration&lt;String&gt; getParameterNames();\nMap&lt;String, String[]&gt; getParameterMap();\n</code></pre><h2 id=\"请求转发和请求包含\"><a href=\"#请求转发和请求包含\" class=\"headerlink\" title=\"请求转发和请求包含\"></a>请求转发和请求包含</h2><pre><code>RequestDispatcher rd = request.getRequestDispatcher(&quot;/oneServlet&quot;);\n请求转发:rd.forward(request,response);//留头不留体\n请求包含:rd.include(request,response);//都留\n都是一个请求\n</code></pre><h2 id=\"request域\"><a href=\"#request域\" class=\"headerlink\" title=\"request域\"></a>request域</h2><pre><code>void setAttribute(String name, Object value)\nObject getAttribute(String name)\n用这2个方法来传值\n</code></pre><h1 id=\"编码问题\"><a href=\"#编码问题\" class=\"headerlink\" title=\"编码问题\"></a>编码问题</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fe65bqpxhvj30vp0digsl.jpg\" alt=\"\"></p>"},{"title":"mybatis","toc":true,"date":"2017-09-04T06:17:02.000Z","_content":"# mybatis简介\n<!--more-->\nmybatis是一个持久层的框架，是apache下的顶级项目。\nmybatis托管到googlecode下，之后托管到github。\nmybatis让程序将主要精力放到sql上，通过mybatis提供的映射方式，半自动化生成sql语句。\nmybatis可以将向preparedStatement中的输入参数自动进行输入映射，将查询结果集映射成java对象(输出映射)。\n# 入门程序\n全局配置文件SqlMapConfig.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\nPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\t<!-- 和spring整合后environments配置将废除 -->\n\t<environments default=\"development\">\n\t\t<environment id=\"development\">\n\t\t\t<transactionManager type=\"JDBC\">\n\t\t\t</transactionManager>\n\t\t\t<!-- 数据库连接池 -->\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n\t\t\t\t<property name=\"url\" value=\"jdbc:mysql:///mybatis01\"/>\n\t\t\t\t<property name=\"username\" value=\"root\"/>\n\t\t\t\t<property name=\"password\" value=\"0000\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t<mappers>\n\t\t<mapper resource=\"sqlmap/User.xml\"/>\n\t</mappers>\n</configuration>\n```\nUser.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\nPUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<mapper namespace=\"test\">\n\t<!-- 通过ID查找 -->\n\t<select id=\"findUserById\" parameterType=\"int\" resultType=\"mybatis.po.User\">\n\t\tSELECT * FROM USER WHERE id=#{id}\n\t</select>\n\t<!-- 通过Name查找 -->\n\t<select id=\"findUserByName\" parameterType=\"String\" resultType=\"mybatis.po.User\">\n\t\tSELECT * FROM USER WHERE username Like '%${value}%'\n\t</select>\n\t<!-- 插入用户 -->\n\t<insert id=\"insertUser\" parameterType=\"mybatis.po.User\">\n\t\t<!-- 如果主键自增，用这个方法可以返回主键 -->\n\t\t<selectKey keyProperty=\"id\" order=\"AFTER\" resultType=\"int\">\n\t\t\tselect LAST_INSERT_ID()\n\t\t</selectKey>\n\t\tinsert into user(id,username,birthday,sex,address) value(#{id},#{username},#{birthday},#{sex},#{address})\n\t</insert>\n</mapper>\n```\nUser.java的PO省略\n测试类\n```\npublic class MybatisFirst {\n\t//根据ID查询用户信息\n\t@Test\t\n\tpublic void findUserByIdTest() throws IOException {\n\t\t//得到配置文件流\n\t\tString resource = \"SqlMapConfig.xml\";\n\t\tInputStream inputStream = Resources.getResourceAsStream(resource);\n\t\t//创建会话工厂，传入mybatis配置文件信息\n\t\tSqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n\t\t//通过工厂得到SqlSession\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\tUser user = sqlSession.selectOne(\"test.findUserById\", 1);\n\t\t\n\t\tSystem.out.println(user);\n\t\t\n\t\tsqlSession.close();\n\t}\n\t//根据NAME查询用户信息\n\t@Test\t\n\tpublic void findUserByNameTest() throws IOException {\n\t\t//得到配置文件流\n\t\tString resource = \"SqlMapConfig.xml\";\n\t\tInputStream inputStream = Resources.getResourceAsStream(resource);\n\t\t//创建会话工厂，传入mybatis配置文件信息\n\t\tSqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n\t\t//通过工厂得到SqlSession\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\tList<User> list = sqlSession.selectList(\"test.findUserByName\", \"小\");\n\t\t\n\t\tSystem.out.println(list);\n\t\t\n\t\tsqlSession.close();\n\t}\n\t//添加用户信息\n\t@Test\t\n\tpublic void insertUserTest() throws IOException {\n\t\t//得到配置文件流\n\t\tString resource = \"SqlMapConfig.xml\";\n\t\tInputStream inputStream = Resources.getResourceAsStream(resource);\n\t\t//创建会话工厂，传入mybatis配置文件信息\n\t\tSqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n\t\t//通过工厂得到SqlSession\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\tUser user = new User();\n\t\tuser.setUsername(\"王小军\");\n\t\tuser.setBirthday(new Date());\n\t\tuser.setSex(\"1\");\n\t\tuser.setAddress(\"河南\");\n\t\tuser.setId(2);\n\t\t\n\t\tsqlSession.selectOne(\"test.insertUser\", user);\n\t\t\n\t\tsqlSession.commit();\n\t\t\n\t\tsqlSession.close();\n\t}\n}\n```\n# mapper代理开发\n开发规范\n1.在mapper.xml中namespace等于mapper接口地址\n2.mapper.java接口中的方法名和mapper.xml中statement的id一致\n3.mapper.java接口中的方法输入参数类型和mapper.xml中statement的parameterType指定的类型一致\n4.mapper.java接口中的方法返回值类型和mapper.xml中statement的resultType指定的类型一致\nUserMapper.xml\n```\n<mapper namespace=\"mybatis.mapper.UserMapper\">\n\t<select id=\"findUserById\" parameterType=\"int\" resultType=\"mybatis.po.User\">\n\t\tSELECT * FROM USER WHERE id=#{id}\n\t</select>\n</mapper>\n```\nUserMapper.java接口\n```\npublic interface UserMapper {\n\t//根据id查询\n\tpublic User findUserById(int id) throws Exception;\n}\n```\n测试类\n```\npublic class UserMapperTest {\n\t\n\tprivate SqlSessionFactory sqlSessionFactory;\n\t\n\t@Before\n\tpublic void serUp() throws Exception {\n\t\t//得到配置文件流\n\t\tString resource = \"SqlMapConfig.xml\";\n\t\tInputStream inputStream = Resources.getResourceAsStream(resource);\n\t\t\n\t\t//创建会话工厂,传入mybatis的配置文件信息\n\t\tsqlSessionFactory = new SqlSessionFactoryBuilder()\n\t\t\t\t.build(inputStream);\n\t}\n\t\n\t@Test\n\tpublic void testFindUserById() throws Exception {\n\t\t\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建UserMapper对象\n\t\tUserMapper userMapper = sqlSession.getMapper(UserMapper.class);\n\t\t\n\t\t//调用userMapper的方法\n\t\tUser user = userMapper.findUserById(1);\n\t\tSystem.out.println(user);\n\t}\n}\n```\n# 别名\n```\n<!-- 别名定义 -->\n<typeAliases>\n\t<!-- 单个别名定义 -->\n\t<typeAlias type=\"mybatis.po.User\" alias=\"user\"/>\n\t<!-- 定义整个包，别名就是类名 -->\n\t<package name=\"mybatis.po\"/>\n</typeAliases>\n```\n# resultMap\n数据库查出的列名和pojo属性不一致的时候使用\n```\n<!-- resultMap的使用 -->\n<resultMap type=\"user\" id=\"userResultMap\">\n\t<!-- 表示结果集中的唯一标识 -->\n\t<id column=\"id_\" property=\"id\"/>\n\t<!-- 表示普通属性 -->\n\t<result column=\"username_\" property=\"username\"/>\n</resultMap>\n```\n# sql片段\nwhere和if标签的使用\n![](http://wx4.sinaimg.cn/mw690/005P8ayVly1fjb4obs6qkj30iu0a5abp.jpg)\nsql片段\n![](http://wx4.sinaimg.cn/mw690/005P8ayVly1fjb4oc7m2sj30ie06jdgu.jpg)\n引用sql片段\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjb4ocmi79j30ha014gls.jpg)\nforeach标签\n![](http://wx1.sinaimg.cn/mw690/005P8ayVly1fjb4od0hrwj30jw08djsl.jpg)\n# 一对一和一对多\nassociation标签,collection标签，分别是一对一，一对多的关系\n![](http://wx3.sinaimg.cn/mw690/005P8ayVly1fjkatqgcx7j30jd05bt92.jpg)\n![](http://wx1.sinaimg.cn/mw690/005P8ayVly1fjkatqueo7j30jj035t8w.jpg)\n# 延迟加载\nassociation和collection标签里的select属性来指定延迟加载的statement的id\n设置打开延迟加载\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjkb7fb3j8j30ik0aw0vc.jpg)\n# 一级缓存和二级缓存\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjnl3onkquj30jq0aumxv.jpg)\n![](http://wx1.sinaimg.cn/mw690/005P8ayVly1fjnl3p4z9xj30ki0bojsr.jpg)\n![](http://wx4.sinaimg.cn/mw690/005P8ayVly1fjnl3pn6muj30jk054mxn.jpg)\n![](http://wx3.sinaimg.cn/mw690/005P8ayVly1fjnl3qb8yxj30kh0auaav.jpg)\n二级缓存需要实体类实现序列化\n### mybatis和ehcache整合\nmybatis无法实现分布式缓存，需要和其它分布式缓存框架进行整合。\nmybatis提供了一个cache接口，如果要实现自己的缓存逻辑，实现cache接口开发即可。\n首先要加入ehcache相关的jar包\n在xml中配置\n![](http://wx1.sinaimg.cn/mw690/005P8ayVly1fjoyjogf1fj30e9038t98.jpg)\n引入ehcache的缓存配置文件\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoyjp5nuuj30fu07j406.jpg)\n# mybatis和spring整合\n![](http://wx3.sinaimg.cn/mw690/005P8ayVly1fjoz7dffthj30jh03zglu.jpg)\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7eabhmj30ii0a6410.jpg)\n![](http://wx4.sinaimg.cn/mw690/005P8ayVly1fjoz7dva56j30k404et9o.jpg)\nmapper代理开发的配置如下，dao开发省略\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7er86ij30jr04j0tr.jpg)\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7fuvudj30is06nq4b.jpg)\n# 逆向工程\n先不学\n\n\n\n\n","source":"_posts/mybatis.md","raw":"---\ntitle: mybatis\ntoc: true\ndate: 2017-09-04 14:17:02\ntags:\n- Java基础\n---\n# mybatis简介\n<!--more-->\nmybatis是一个持久层的框架，是apache下的顶级项目。\nmybatis托管到googlecode下，之后托管到github。\nmybatis让程序将主要精力放到sql上，通过mybatis提供的映射方式，半自动化生成sql语句。\nmybatis可以将向preparedStatement中的输入参数自动进行输入映射，将查询结果集映射成java对象(输出映射)。\n# 入门程序\n全局配置文件SqlMapConfig.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\nPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\t<!-- 和spring整合后environments配置将废除 -->\n\t<environments default=\"development\">\n\t\t<environment id=\"development\">\n\t\t\t<transactionManager type=\"JDBC\">\n\t\t\t</transactionManager>\n\t\t\t<!-- 数据库连接池 -->\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n\t\t\t\t<property name=\"url\" value=\"jdbc:mysql:///mybatis01\"/>\n\t\t\t\t<property name=\"username\" value=\"root\"/>\n\t\t\t\t<property name=\"password\" value=\"0000\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t<mappers>\n\t\t<mapper resource=\"sqlmap/User.xml\"/>\n\t</mappers>\n</configuration>\n```\nUser.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\nPUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<mapper namespace=\"test\">\n\t<!-- 通过ID查找 -->\n\t<select id=\"findUserById\" parameterType=\"int\" resultType=\"mybatis.po.User\">\n\t\tSELECT * FROM USER WHERE id=#{id}\n\t</select>\n\t<!-- 通过Name查找 -->\n\t<select id=\"findUserByName\" parameterType=\"String\" resultType=\"mybatis.po.User\">\n\t\tSELECT * FROM USER WHERE username Like '%${value}%'\n\t</select>\n\t<!-- 插入用户 -->\n\t<insert id=\"insertUser\" parameterType=\"mybatis.po.User\">\n\t\t<!-- 如果主键自增，用这个方法可以返回主键 -->\n\t\t<selectKey keyProperty=\"id\" order=\"AFTER\" resultType=\"int\">\n\t\t\tselect LAST_INSERT_ID()\n\t\t</selectKey>\n\t\tinsert into user(id,username,birthday,sex,address) value(#{id},#{username},#{birthday},#{sex},#{address})\n\t</insert>\n</mapper>\n```\nUser.java的PO省略\n测试类\n```\npublic class MybatisFirst {\n\t//根据ID查询用户信息\n\t@Test\t\n\tpublic void findUserByIdTest() throws IOException {\n\t\t//得到配置文件流\n\t\tString resource = \"SqlMapConfig.xml\";\n\t\tInputStream inputStream = Resources.getResourceAsStream(resource);\n\t\t//创建会话工厂，传入mybatis配置文件信息\n\t\tSqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n\t\t//通过工厂得到SqlSession\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\tUser user = sqlSession.selectOne(\"test.findUserById\", 1);\n\t\t\n\t\tSystem.out.println(user);\n\t\t\n\t\tsqlSession.close();\n\t}\n\t//根据NAME查询用户信息\n\t@Test\t\n\tpublic void findUserByNameTest() throws IOException {\n\t\t//得到配置文件流\n\t\tString resource = \"SqlMapConfig.xml\";\n\t\tInputStream inputStream = Resources.getResourceAsStream(resource);\n\t\t//创建会话工厂，传入mybatis配置文件信息\n\t\tSqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n\t\t//通过工厂得到SqlSession\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\tList<User> list = sqlSession.selectList(\"test.findUserByName\", \"小\");\n\t\t\n\t\tSystem.out.println(list);\n\t\t\n\t\tsqlSession.close();\n\t}\n\t//添加用户信息\n\t@Test\t\n\tpublic void insertUserTest() throws IOException {\n\t\t//得到配置文件流\n\t\tString resource = \"SqlMapConfig.xml\";\n\t\tInputStream inputStream = Resources.getResourceAsStream(resource);\n\t\t//创建会话工厂，传入mybatis配置文件信息\n\t\tSqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n\t\t//通过工厂得到SqlSession\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\tUser user = new User();\n\t\tuser.setUsername(\"王小军\");\n\t\tuser.setBirthday(new Date());\n\t\tuser.setSex(\"1\");\n\t\tuser.setAddress(\"河南\");\n\t\tuser.setId(2);\n\t\t\n\t\tsqlSession.selectOne(\"test.insertUser\", user);\n\t\t\n\t\tsqlSession.commit();\n\t\t\n\t\tsqlSession.close();\n\t}\n}\n```\n# mapper代理开发\n开发规范\n1.在mapper.xml中namespace等于mapper接口地址\n2.mapper.java接口中的方法名和mapper.xml中statement的id一致\n3.mapper.java接口中的方法输入参数类型和mapper.xml中statement的parameterType指定的类型一致\n4.mapper.java接口中的方法返回值类型和mapper.xml中statement的resultType指定的类型一致\nUserMapper.xml\n```\n<mapper namespace=\"mybatis.mapper.UserMapper\">\n\t<select id=\"findUserById\" parameterType=\"int\" resultType=\"mybatis.po.User\">\n\t\tSELECT * FROM USER WHERE id=#{id}\n\t</select>\n</mapper>\n```\nUserMapper.java接口\n```\npublic interface UserMapper {\n\t//根据id查询\n\tpublic User findUserById(int id) throws Exception;\n}\n```\n测试类\n```\npublic class UserMapperTest {\n\t\n\tprivate SqlSessionFactory sqlSessionFactory;\n\t\n\t@Before\n\tpublic void serUp() throws Exception {\n\t\t//得到配置文件流\n\t\tString resource = \"SqlMapConfig.xml\";\n\t\tInputStream inputStream = Resources.getResourceAsStream(resource);\n\t\t\n\t\t//创建会话工厂,传入mybatis的配置文件信息\n\t\tsqlSessionFactory = new SqlSessionFactoryBuilder()\n\t\t\t\t.build(inputStream);\n\t}\n\t\n\t@Test\n\tpublic void testFindUserById() throws Exception {\n\t\t\n\t\tSqlSession sqlSession = sqlSessionFactory.openSession();\n\t\t\n\t\t//创建UserMapper对象\n\t\tUserMapper userMapper = sqlSession.getMapper(UserMapper.class);\n\t\t\n\t\t//调用userMapper的方法\n\t\tUser user = userMapper.findUserById(1);\n\t\tSystem.out.println(user);\n\t}\n}\n```\n# 别名\n```\n<!-- 别名定义 -->\n<typeAliases>\n\t<!-- 单个别名定义 -->\n\t<typeAlias type=\"mybatis.po.User\" alias=\"user\"/>\n\t<!-- 定义整个包，别名就是类名 -->\n\t<package name=\"mybatis.po\"/>\n</typeAliases>\n```\n# resultMap\n数据库查出的列名和pojo属性不一致的时候使用\n```\n<!-- resultMap的使用 -->\n<resultMap type=\"user\" id=\"userResultMap\">\n\t<!-- 表示结果集中的唯一标识 -->\n\t<id column=\"id_\" property=\"id\"/>\n\t<!-- 表示普通属性 -->\n\t<result column=\"username_\" property=\"username\"/>\n</resultMap>\n```\n# sql片段\nwhere和if标签的使用\n![](http://wx4.sinaimg.cn/mw690/005P8ayVly1fjb4obs6qkj30iu0a5abp.jpg)\nsql片段\n![](http://wx4.sinaimg.cn/mw690/005P8ayVly1fjb4oc7m2sj30ie06jdgu.jpg)\n引用sql片段\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjb4ocmi79j30ha014gls.jpg)\nforeach标签\n![](http://wx1.sinaimg.cn/mw690/005P8ayVly1fjb4od0hrwj30jw08djsl.jpg)\n# 一对一和一对多\nassociation标签,collection标签，分别是一对一，一对多的关系\n![](http://wx3.sinaimg.cn/mw690/005P8ayVly1fjkatqgcx7j30jd05bt92.jpg)\n![](http://wx1.sinaimg.cn/mw690/005P8ayVly1fjkatqueo7j30jj035t8w.jpg)\n# 延迟加载\nassociation和collection标签里的select属性来指定延迟加载的statement的id\n设置打开延迟加载\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjkb7fb3j8j30ik0aw0vc.jpg)\n# 一级缓存和二级缓存\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjnl3onkquj30jq0aumxv.jpg)\n![](http://wx1.sinaimg.cn/mw690/005P8ayVly1fjnl3p4z9xj30ki0bojsr.jpg)\n![](http://wx4.sinaimg.cn/mw690/005P8ayVly1fjnl3pn6muj30jk054mxn.jpg)\n![](http://wx3.sinaimg.cn/mw690/005P8ayVly1fjnl3qb8yxj30kh0auaav.jpg)\n二级缓存需要实体类实现序列化\n### mybatis和ehcache整合\nmybatis无法实现分布式缓存，需要和其它分布式缓存框架进行整合。\nmybatis提供了一个cache接口，如果要实现自己的缓存逻辑，实现cache接口开发即可。\n首先要加入ehcache相关的jar包\n在xml中配置\n![](http://wx1.sinaimg.cn/mw690/005P8ayVly1fjoyjogf1fj30e9038t98.jpg)\n引入ehcache的缓存配置文件\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoyjp5nuuj30fu07j406.jpg)\n# mybatis和spring整合\n![](http://wx3.sinaimg.cn/mw690/005P8ayVly1fjoz7dffthj30jh03zglu.jpg)\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7eabhmj30ii0a6410.jpg)\n![](http://wx4.sinaimg.cn/mw690/005P8ayVly1fjoz7dva56j30k404et9o.jpg)\nmapper代理开发的配置如下，dao开发省略\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7er86ij30jr04j0tr.jpg)\n![](http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7fuvudj30is06nq4b.jpg)\n# 逆向工程\n先不学\n\n\n\n\n","slug":"mybatis","published":1,"updated":"2018-01-20T06:44:37.598Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8zx004644wam55w06ch","content":"<h1 id=\"mybatis简介\"><a href=\"#mybatis简介\" class=\"headerlink\" title=\"mybatis简介\"></a>mybatis简介</h1><a id=\"more\"></a>\n<p>mybatis是一个持久层的框架，是apache下的顶级项目。<br>mybatis托管到googlecode下，之后托管到github。<br>mybatis让程序将主要精力放到sql上，通过mybatis提供的映射方式，半自动化生成sql语句。<br>mybatis可以将向preparedStatement中的输入参数自动进行输入映射，将查询结果集映射成java对象(输出映射)。</p>\n<h1 id=\"入门程序\"><a href=\"#入门程序\" class=\"headerlink\" title=\"入门程序\"></a>入门程序</h1><p>全局配置文件SqlMapConfig.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration</span></div><div class=\"line\">PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 和spring整合后environments配置将废除 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">\"JDBC\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">transactionManager</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!-- 数据库连接池 --&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">\"POOLED\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driver\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql:///mybatis01\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0000\"</span>/&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"sqlmap/User.xml\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>User.xml<br><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper</span></div><div class=\"line\">PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"</div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"test\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 通过ID查找 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findUserById\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"mybatis.po.User\"</span>&gt;</span></div><div class=\"line\">  SELECT * FROM USER WHERE id=#<span class=\"template-variable\">&#123;id&#125;</span><span class=\"xml\"></span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 通过Name查找 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findUserByName\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"String\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"mybatis.po.User\"</span>&gt;</span></div><div class=\"line\">  SELECT * FROM USER WHERE username Like '%$<span class=\"template-variable\">&#123;value&#125;</span><span class=\"xml\">%'</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 插入用户 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertUser\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"mybatis.po.User\"</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 如果主键自增，用这个方法可以返回主键 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">order</span>=<span class=\"string\">\"AFTER\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"int\"</span>&gt;</span></div><div class=\"line\">   select LAST_INSERT_ID()</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\">  insert into user(id,username,birthday,sex,address) value(#<span class=\"template-variable\">&#123;id&#125;</span><span class=\"xml\">,#</span><span class=\"template-variable\">&#123;username&#125;</span><span class=\"xml\">,#</span><span class=\"template-variable\">&#123;birthday&#125;</span><span class=\"xml\">,#</span><span class=\"template-variable\">&#123;sex&#125;</span><span class=\"xml\">,#</span><span class=\"template-variable\">&#123;address&#125;</span><span class=\"xml\">)</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>User.java的PO省略<br>测试类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MybatisFirst</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//根据ID查询用户信息</span></div><div class=\"line\"> <span class=\"meta\">@Test</span>\t</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findUserByIdTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">  String resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">  InputStream inputStream = Resources.getResourceAsStream(resource);</div><div class=\"line\">  <span class=\"comment\">//创建会话工厂，传入mybatis配置文件信息</span></div><div class=\"line\">  SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</div><div class=\"line\">  <span class=\"comment\">//通过工厂得到SqlSession</span></div><div class=\"line\">  SqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">  </div><div class=\"line\">  User user = sqlSession.selectOne(<span class=\"string\">\"test.findUserById\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">  </div><div class=\"line\">  System.out.println(user);</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.close();</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//根据NAME查询用户信息</span></div><div class=\"line\"> <span class=\"meta\">@Test</span>\t</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findUserByNameTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">  String resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">  InputStream inputStream = Resources.getResourceAsStream(resource);</div><div class=\"line\">  <span class=\"comment\">//创建会话工厂，传入mybatis配置文件信息</span></div><div class=\"line\">  SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</div><div class=\"line\">  <span class=\"comment\">//通过工厂得到SqlSession</span></div><div class=\"line\">  SqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">  </div><div class=\"line\">  List&lt;User&gt; list = sqlSession.selectList(<span class=\"string\">\"test.findUserByName\"</span>, <span class=\"string\">\"小\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  System.out.println(list);</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.close();</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//添加用户信息</span></div><div class=\"line\"> <span class=\"meta\">@Test</span>\t</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertUserTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">  String resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">  InputStream inputStream = Resources.getResourceAsStream(resource);</div><div class=\"line\">  <span class=\"comment\">//创建会话工厂，传入mybatis配置文件信息</span></div><div class=\"line\">  SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</div><div class=\"line\">  <span class=\"comment\">//通过工厂得到SqlSession</span></div><div class=\"line\">  SqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">  </div><div class=\"line\">  User user = <span class=\"keyword\">new</span> User();</div><div class=\"line\">  user.setUsername(<span class=\"string\">\"王小军\"</span>);</div><div class=\"line\">  user.setBirthday(<span class=\"keyword\">new</span> Date());</div><div class=\"line\">  user.setSex(<span class=\"string\">\"1\"</span>);</div><div class=\"line\">  user.setAddress(<span class=\"string\">\"河南\"</span>);</div><div class=\"line\">  user.setId(<span class=\"number\">2</span>);</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.selectOne(<span class=\"string\">\"test.insertUser\"</span>, user);</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.commit();</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.close();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"mapper代理开发\"><a href=\"#mapper代理开发\" class=\"headerlink\" title=\"mapper代理开发\"></a>mapper代理开发</h1><p>开发规范<br>1.在mapper.xml中namespace等于mapper接口地址<br>2.mapper.java接口中的方法名和mapper.xml中statement的id一致<br>3.mapper.java接口中的方法输入参数类型和mapper.xml中statement的parameterType指定的类型一致<br>4.mapper.java接口中的方法返回值类型和mapper.xml中statement的resultType指定的类型一致<br>UserMapper.xml<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;mapper <span class=\"keyword\">namespace</span>=<span class=\"string\">\"mybatis.mapper.UserMapper\"</span>&gt;</div><div class=\"line\"> &lt;<span class=\"keyword\">select</span> id=<span class=\"string\">\"findUserById\"</span> parameterType=<span class=\"string\">\"int\"</span> resultType=<span class=\"string\">\"mybatis.po.User\"</span>&gt;</div><div class=\"line\">  <span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> USER <span class=\"keyword\">WHERE</span> id=<span class=\"meta\">#&#123;id&#125;</span></div><div class=\"line\"> &lt;/<span class=\"keyword\">select</span>&gt;</div><div class=\"line\">&lt;/mapper&gt;</div></pre></td></tr></table></figure></p>\n<p>UserMapper.java接口<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserMapper</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//根据id查询</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">findUserById</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> <span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>测试类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserMapperTest</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">private</span> SqlSessionFactory sqlSessionFactory;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Before</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">serUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">  String resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">  InputStream inputStream = Resources.getResourceAsStream(resource);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//创建会话工厂,传入mybatis的配置文件信息</span></div><div class=\"line\">  sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder()</div><div class=\"line\">    .build(inputStream);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Test</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testFindUserById</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  SqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//创建UserMapper对象</span></div><div class=\"line\">  UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//调用userMapper的方法</span></div><div class=\"line\">  User user = userMapper.findUserById(<span class=\"number\">1</span>);</div><div class=\"line\">  System.out.println(user);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"别名\"><a href=\"#别名\" class=\"headerlink\" title=\"别名\"></a>别名</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 别名定义 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 单个别名定义 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">typeAlias</span> <span class=\"attr\">type</span>=<span class=\"string\">\"mybatis.po.User\"</span> <span class=\"attr\">alias</span>=<span class=\"string\">\"user\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 定义整个包，别名就是类名 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mybatis.po\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"resultMap\"><a href=\"#resultMap\" class=\"headerlink\" title=\"resultMap\"></a>resultMap</h1><p>数据库查出的列名和pojo属性不一致的时候使用<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- resultMap的使用 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">type</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userResultMap\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 表示结果集中的唯一标识 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">\"id_\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"id\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 表示普通属性 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"username_\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"sql片段\"><a href=\"#sql片段\" class=\"headerlink\" title=\"sql片段\"></a>sql片段</h1><p>where和if标签的使用<br><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVly1fjb4obs6qkj30iu0a5abp.jpg\" alt=\"\"><br>sql片段<br><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVly1fjb4oc7m2sj30ie06jdgu.jpg\" alt=\"\"><br>引用sql片段<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjb4ocmi79j30ha014gls.jpg\" alt=\"\"><br>foreach标签<br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVly1fjb4od0hrwj30jw08djsl.jpg\" alt=\"\"></p>\n<h1 id=\"一对一和一对多\"><a href=\"#一对一和一对多\" class=\"headerlink\" title=\"一对一和一对多\"></a>一对一和一对多</h1><p>association标签,collection标签，分别是一对一，一对多的关系<br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVly1fjkatqgcx7j30jd05bt92.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVly1fjkatqueo7j30jj035t8w.jpg\" alt=\"\"></p>\n<h1 id=\"延迟加载\"><a href=\"#延迟加载\" class=\"headerlink\" title=\"延迟加载\"></a>延迟加载</h1><p>association和collection标签里的select属性来指定延迟加载的statement的id<br>设置打开延迟加载<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjkb7fb3j8j30ik0aw0vc.jpg\" alt=\"\"></p>\n<h1 id=\"一级缓存和二级缓存\"><a href=\"#一级缓存和二级缓存\" class=\"headerlink\" title=\"一级缓存和二级缓存\"></a>一级缓存和二级缓存</h1><p><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjnl3onkquj30jq0aumxv.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVly1fjnl3p4z9xj30ki0bojsr.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVly1fjnl3pn6muj30jk054mxn.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVly1fjnl3qb8yxj30kh0auaav.jpg\" alt=\"\"><br>二级缓存需要实体类实现序列化</p>\n<h3 id=\"mybatis和ehcache整合\"><a href=\"#mybatis和ehcache整合\" class=\"headerlink\" title=\"mybatis和ehcache整合\"></a>mybatis和ehcache整合</h3><p>mybatis无法实现分布式缓存，需要和其它分布式缓存框架进行整合。<br>mybatis提供了一个cache接口，如果要实现自己的缓存逻辑，实现cache接口开发即可。<br>首先要加入ehcache相关的jar包<br>在xml中配置<br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVly1fjoyjogf1fj30e9038t98.jpg\" alt=\"\"><br>引入ehcache的缓存配置文件<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoyjp5nuuj30fu07j406.jpg\" alt=\"\"></p>\n<h1 id=\"mybatis和spring整合\"><a href=\"#mybatis和spring整合\" class=\"headerlink\" title=\"mybatis和spring整合\"></a>mybatis和spring整合</h1><p><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVly1fjoz7dffthj30jh03zglu.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7eabhmj30ii0a6410.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVly1fjoz7dva56j30k404et9o.jpg\" alt=\"\"><br>mapper代理开发的配置如下，dao开发省略<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7er86ij30jr04j0tr.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7fuvudj30is06nq4b.jpg\" alt=\"\"></p>\n<h1 id=\"逆向工程\"><a href=\"#逆向工程\" class=\"headerlink\" title=\"逆向工程\"></a>逆向工程</h1><p>先不学</p>\n","excerpt":"<h1 id=\"mybatis简介\"><a href=\"#mybatis简介\" class=\"headerlink\" title=\"mybatis简介\"></a>mybatis简介</h1>","more":"<p>mybatis是一个持久层的框架，是apache下的顶级项目。<br>mybatis托管到googlecode下，之后托管到github。<br>mybatis让程序将主要精力放到sql上，通过mybatis提供的映射方式，半自动化生成sql语句。<br>mybatis可以将向preparedStatement中的输入参数自动进行输入映射，将查询结果集映射成java对象(输出映射)。</p>\n<h1 id=\"入门程序\"><a href=\"#入门程序\" class=\"headerlink\" title=\"入门程序\"></a>入门程序</h1><p>全局配置文件SqlMapConfig.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration</div><div class=\"line\">PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 和spring整合后environments配置将废除 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">\"development\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">\"JDBC\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">transactionManager</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!-- 数据库连接池 --&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">\"POOLED\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driver\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql:///mybatis01\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0000\"</span>/&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"sqlmap/User.xml\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>User.xml<br><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper</div><div class=\"line\">PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"</div><div class=\"line\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"test\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 通过ID查找 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findUserById\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"int\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"mybatis.po.User\"</span>&gt;</span></div><div class=\"line\">  SELECT * FROM USER WHERE id=#</span><span class=\"template-variable\">&#123;id&#125;</span><span class=\"xml\"></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 通过Name查找 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"findUserByName\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"String\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"mybatis.po.User\"</span>&gt;</span></div><div class=\"line\">  SELECT * FROM USER WHERE username Like '%$</span><span class=\"template-variable\">&#123;value&#125;</span><span class=\"xml\">%'</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 插入用户 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insertUser\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"mybatis.po.User\"</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 如果主键自增，用这个方法可以返回主键 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">order</span>=<span class=\"string\">\"AFTER\"</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"int\"</span>&gt;</span></div><div class=\"line\">   select LAST_INSERT_ID()</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\">  insert into user(id,username,birthday,sex,address) value(#</span><span class=\"template-variable\">&#123;id&#125;</span><span class=\"xml\">,#</span><span class=\"template-variable\">&#123;username&#125;</span><span class=\"xml\">,#</span><span class=\"template-variable\">&#123;birthday&#125;</span><span class=\"xml\">,#</span><span class=\"template-variable\">&#123;sex&#125;</span><span class=\"xml\">,#</span><span class=\"template-variable\">&#123;address&#125;</span><span class=\"xml\">)</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>User.java的PO省略<br>测试类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MybatisFirst</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//根据ID查询用户信息</span></div><div class=\"line\"> <span class=\"meta\">@Test</span>\t</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findUserByIdTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">  String resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">  InputStream inputStream = Resources.getResourceAsStream(resource);</div><div class=\"line\">  <span class=\"comment\">//创建会话工厂，传入mybatis配置文件信息</span></div><div class=\"line\">  SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</div><div class=\"line\">  <span class=\"comment\">//通过工厂得到SqlSession</span></div><div class=\"line\">  SqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">  </div><div class=\"line\">  User user = sqlSession.selectOne(<span class=\"string\">\"test.findUserById\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">  </div><div class=\"line\">  System.out.println(user);</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.close();</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//根据NAME查询用户信息</span></div><div class=\"line\"> <span class=\"meta\">@Test</span>\t</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findUserByNameTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">  String resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">  InputStream inputStream = Resources.getResourceAsStream(resource);</div><div class=\"line\">  <span class=\"comment\">//创建会话工厂，传入mybatis配置文件信息</span></div><div class=\"line\">  SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</div><div class=\"line\">  <span class=\"comment\">//通过工厂得到SqlSession</span></div><div class=\"line\">  SqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">  </div><div class=\"line\">  List&lt;User&gt; list = sqlSession.selectList(<span class=\"string\">\"test.findUserByName\"</span>, <span class=\"string\">\"小\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  System.out.println(list);</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.close();</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//添加用户信息</span></div><div class=\"line\"> <span class=\"meta\">@Test</span>\t</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertUserTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">  String resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">  InputStream inputStream = Resources.getResourceAsStream(resource);</div><div class=\"line\">  <span class=\"comment\">//创建会话工厂，传入mybatis配置文件信息</span></div><div class=\"line\">  SqlSessionFactory sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</div><div class=\"line\">  <span class=\"comment\">//通过工厂得到SqlSession</span></div><div class=\"line\">  SqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">  </div><div class=\"line\">  User user = <span class=\"keyword\">new</span> User();</div><div class=\"line\">  user.setUsername(<span class=\"string\">\"王小军\"</span>);</div><div class=\"line\">  user.setBirthday(<span class=\"keyword\">new</span> Date());</div><div class=\"line\">  user.setSex(<span class=\"string\">\"1\"</span>);</div><div class=\"line\">  user.setAddress(<span class=\"string\">\"河南\"</span>);</div><div class=\"line\">  user.setId(<span class=\"number\">2</span>);</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.selectOne(<span class=\"string\">\"test.insertUser\"</span>, user);</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.commit();</div><div class=\"line\">  </div><div class=\"line\">  sqlSession.close();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"mapper代理开发\"><a href=\"#mapper代理开发\" class=\"headerlink\" title=\"mapper代理开发\"></a>mapper代理开发</h1><p>开发规范<br>1.在mapper.xml中namespace等于mapper接口地址<br>2.mapper.java接口中的方法名和mapper.xml中statement的id一致<br>3.mapper.java接口中的方法输入参数类型和mapper.xml中statement的parameterType指定的类型一致<br>4.mapper.java接口中的方法返回值类型和mapper.xml中statement的resultType指定的类型一致<br>UserMapper.xml<br><figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;mapper <span class=\"keyword\">namespace</span>=<span class=\"string\">\"mybatis.mapper.UserMapper\"</span>&gt;</div><div class=\"line\"> &lt;<span class=\"keyword\">select</span> id=<span class=\"string\">\"findUserById\"</span> parameterType=<span class=\"string\">\"int\"</span> resultType=<span class=\"string\">\"mybatis.po.User\"</span>&gt;</div><div class=\"line\">  <span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> USER <span class=\"keyword\">WHERE</span> id=<span class=\"meta\">#&#123;id&#125;</span></div><div class=\"line\"> &lt;/<span class=\"keyword\">select</span>&gt;</div><div class=\"line\">&lt;/mapper&gt;</div></pre></td></tr></table></figure></p>\n<p>UserMapper.java接口<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserMapper</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//根据id查询</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">findUserById</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> <span class=\"keyword\">throws</span> Exception</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>测试类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserMapperTest</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">private</span> SqlSessionFactory sqlSessionFactory;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Before</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">serUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//得到配置文件流</span></div><div class=\"line\">  String resource = <span class=\"string\">\"SqlMapConfig.xml\"</span>;</div><div class=\"line\">  InputStream inputStream = Resources.getResourceAsStream(resource);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//创建会话工厂,传入mybatis的配置文件信息</span></div><div class=\"line\">  sqlSessionFactory = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder()</div><div class=\"line\">    .build(inputStream);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Test</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testFindUserById</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  SqlSession sqlSession = sqlSessionFactory.openSession();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//创建UserMapper对象</span></div><div class=\"line\">  UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//调用userMapper的方法</span></div><div class=\"line\">  User user = userMapper.findUserById(<span class=\"number\">1</span>);</div><div class=\"line\">  System.out.println(user);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"别名\"><a href=\"#别名\" class=\"headerlink\" title=\"别名\"></a>别名</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 别名定义 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 单个别名定义 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">typeAlias</span> <span class=\"attr\">type</span>=<span class=\"string\">\"mybatis.po.User\"</span> <span class=\"attr\">alias</span>=<span class=\"string\">\"user\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 定义整个包，别名就是类名 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mybatis.po\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"resultMap\"><a href=\"#resultMap\" class=\"headerlink\" title=\"resultMap\"></a>resultMap</h1><p>数据库查出的列名和pojo属性不一致的时候使用<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- resultMap的使用 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">type</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userResultMap\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 表示结果集中的唯一标识 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">\"id_\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"id\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 表示普通属性 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"username_\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"sql片段\"><a href=\"#sql片段\" class=\"headerlink\" title=\"sql片段\"></a>sql片段</h1><p>where和if标签的使用<br><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVly1fjb4obs6qkj30iu0a5abp.jpg\" alt=\"\"><br>sql片段<br><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVly1fjb4oc7m2sj30ie06jdgu.jpg\" alt=\"\"><br>引用sql片段<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjb4ocmi79j30ha014gls.jpg\" alt=\"\"><br>foreach标签<br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVly1fjb4od0hrwj30jw08djsl.jpg\" alt=\"\"></p>\n<h1 id=\"一对一和一对多\"><a href=\"#一对一和一对多\" class=\"headerlink\" title=\"一对一和一对多\"></a>一对一和一对多</h1><p>association标签,collection标签，分别是一对一，一对多的关系<br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVly1fjkatqgcx7j30jd05bt92.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVly1fjkatqueo7j30jj035t8w.jpg\" alt=\"\"></p>\n<h1 id=\"延迟加载\"><a href=\"#延迟加载\" class=\"headerlink\" title=\"延迟加载\"></a>延迟加载</h1><p>association和collection标签里的select属性来指定延迟加载的statement的id<br>设置打开延迟加载<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjkb7fb3j8j30ik0aw0vc.jpg\" alt=\"\"></p>\n<h1 id=\"一级缓存和二级缓存\"><a href=\"#一级缓存和二级缓存\" class=\"headerlink\" title=\"一级缓存和二级缓存\"></a>一级缓存和二级缓存</h1><p><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjnl3onkquj30jq0aumxv.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVly1fjnl3p4z9xj30ki0bojsr.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVly1fjnl3pn6muj30jk054mxn.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVly1fjnl3qb8yxj30kh0auaav.jpg\" alt=\"\"><br>二级缓存需要实体类实现序列化</p>\n<h3 id=\"mybatis和ehcache整合\"><a href=\"#mybatis和ehcache整合\" class=\"headerlink\" title=\"mybatis和ehcache整合\"></a>mybatis和ehcache整合</h3><p>mybatis无法实现分布式缓存，需要和其它分布式缓存框架进行整合。<br>mybatis提供了一个cache接口，如果要实现自己的缓存逻辑，实现cache接口开发即可。<br>首先要加入ehcache相关的jar包<br>在xml中配置<br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVly1fjoyjogf1fj30e9038t98.jpg\" alt=\"\"><br>引入ehcache的缓存配置文件<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoyjp5nuuj30fu07j406.jpg\" alt=\"\"></p>\n<h1 id=\"mybatis和spring整合\"><a href=\"#mybatis和spring整合\" class=\"headerlink\" title=\"mybatis和spring整合\"></a>mybatis和spring整合</h1><p><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVly1fjoz7dffthj30jh03zglu.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7eabhmj30ii0a6410.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVly1fjoz7dva56j30k404et9o.jpg\" alt=\"\"><br>mapper代理开发的配置如下，dao开发省略<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7er86ij30jr04j0tr.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVly1fjoz7fuvudj30is06nq4b.jpg\" alt=\"\"></p>\n<h1 id=\"逆向工程\"><a href=\"#逆向工程\" class=\"headerlink\" title=\"逆向工程\"></a>逆向工程</h1><p>先不学</p>"},{"title":"servlet学习笔记","date":"2017-03-24T07:28:23.000Z","toc":true,"_content":"\nServlet\n<!--more-->\n# 实现Servlet的三种方式\n![](http://wx3.sinaimg.cn/mw690/005P8ayVgy1fe15z3u24aj30ls0b3q7e.jpg)\n# Servlet的概述\n![](http://wx2.sinaimg.cn/mw690/005P8ayVgy1fe17yakmjqj30km08aaaw.jpg)\n# 在web.xml中对Servlet进行配置\n\t<servlet>\n  \t\t<servlet-name>xxx</servlet-name>\n  \t\t<servlet-class>servlet1.AServlet</servlet-class>\n  \t</servlet>\n  \n  \t<servlet-mapping>\n  \t\t<servlet-name>xxx</servlet-name>\n  \t\t<url-pattern>/AServlet</url-pattern>\n  \t</servlet-mapping>\n# ServletConfig\n![](http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe18houaowj30o50dv40k.jpg)\n# GenericServlet\n\t抽象类\n\t无参的init()方法\n\tprivate transient ServletConfig config;\n# HttpServlet\n\t继承了GenericServlet\n![](http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe2be7mon2j30ip0a075s.jpg)\n# Servlet细节\n\t不要在Servlet中创建成员!创建局部变量即可!\n\t可以创建无状态成员!\n\t可以创建有状态的成员,但状态必须为只读的!\n\t在服务器启动的时候就创建Servlet\n\t\t在web.xml的<servlet>\n\t\t\t\t<load-on-startup>0<load-on-startup>\t\n\t\t\t</servlet>\n\t\t中写0代表优先级最高\n\t可以写多个URL在servletmapping中多写几个<url-pattern></url-pattern>即可\n\t<url-pattern>/servlet/*</url-pattern>前缀匹配\n\t<url-pattern>*.do</url-pattern>后缀匹配\n\t<url-pattern>/*</url-pattern>匹配所有url\n# ServletContext\n\t一个项目只有一个ServletContext对象,负责给Servlet传递数据,和tomcat寿命一样\n\tServletConfig中的getServletContext()\n\tGenericServlet中的getServletContext()可以得到ServletContext对象\n![](http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe2c5lyj0ej30ni0azacd.jpg)\n![](http://wx1.sinaimg.cn/mw690/005P8ayVgy1fe2ccwsaihj30hz09m0u2.jpg)\n\n\tString realPath = servletContext.getRealPath(\"/a.txt\")//得到真实路径\n\tInputStream in = servletContext.getResourceAsStream(\"/a.txt\")//获取资源流\n\tSet set = context.getResourcePaths(\"/WEB-INF\");//得到目录下所有资源路径\n\t获取类路径下的资源\n\t\tClassLoader cl = this.getClass().getClassLoader();\n\t\tInputStream input = cl.getResourceAsStream(\"a.txt\");","source":"_posts/servlet学习笔记.md","raw":"---\ntitle: servlet学习笔记\ndate: 2017-03-24 15:28:23\n\ntags:\n- Servlet\n- Web\n\ntoc: true\n---\n\nServlet\n<!--more-->\n# 实现Servlet的三种方式\n![](http://wx3.sinaimg.cn/mw690/005P8ayVgy1fe15z3u24aj30ls0b3q7e.jpg)\n# Servlet的概述\n![](http://wx2.sinaimg.cn/mw690/005P8ayVgy1fe17yakmjqj30km08aaaw.jpg)\n# 在web.xml中对Servlet进行配置\n\t<servlet>\n  \t\t<servlet-name>xxx</servlet-name>\n  \t\t<servlet-class>servlet1.AServlet</servlet-class>\n  \t</servlet>\n  \n  \t<servlet-mapping>\n  \t\t<servlet-name>xxx</servlet-name>\n  \t\t<url-pattern>/AServlet</url-pattern>\n  \t</servlet-mapping>\n# ServletConfig\n![](http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe18houaowj30o50dv40k.jpg)\n# GenericServlet\n\t抽象类\n\t无参的init()方法\n\tprivate transient ServletConfig config;\n# HttpServlet\n\t继承了GenericServlet\n![](http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe2be7mon2j30ip0a075s.jpg)\n# Servlet细节\n\t不要在Servlet中创建成员!创建局部变量即可!\n\t可以创建无状态成员!\n\t可以创建有状态的成员,但状态必须为只读的!\n\t在服务器启动的时候就创建Servlet\n\t\t在web.xml的<servlet>\n\t\t\t\t<load-on-startup>0<load-on-startup>\t\n\t\t\t</servlet>\n\t\t中写0代表优先级最高\n\t可以写多个URL在servletmapping中多写几个<url-pattern></url-pattern>即可\n\t<url-pattern>/servlet/*</url-pattern>前缀匹配\n\t<url-pattern>*.do</url-pattern>后缀匹配\n\t<url-pattern>/*</url-pattern>匹配所有url\n# ServletContext\n\t一个项目只有一个ServletContext对象,负责给Servlet传递数据,和tomcat寿命一样\n\tServletConfig中的getServletContext()\n\tGenericServlet中的getServletContext()可以得到ServletContext对象\n![](http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe2c5lyj0ej30ni0azacd.jpg)\n![](http://wx1.sinaimg.cn/mw690/005P8ayVgy1fe2ccwsaihj30hz09m0u2.jpg)\n\n\tString realPath = servletContext.getRealPath(\"/a.txt\")//得到真实路径\n\tInputStream in = servletContext.getResourceAsStream(\"/a.txt\")//获取资源流\n\tSet set = context.getResourcePaths(\"/WEB-INF\");//得到目录下所有资源路径\n\t获取类路径下的资源\n\t\tClassLoader cl = this.getClass().getClassLoader();\n\t\tInputStream input = cl.getResourceAsStream(\"a.txt\");","slug":"servlet学习笔记","published":1,"updated":"2018-01-20T06:44:37.602Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m8zz004844wajyqg5tjc","content":"<p>Servlet<br><a id=\"more\"></a></p>\n<h1 id=\"实现Servlet的三种方式\"><a href=\"#实现Servlet的三种方式\" class=\"headerlink\" title=\"实现Servlet的三种方式\"></a>实现Servlet的三种方式</h1><p><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1fe15z3u24aj30ls0b3q7e.jpg\" alt=\"\"></p>\n<h1 id=\"Servlet的概述\"><a href=\"#Servlet的概述\" class=\"headerlink\" title=\"Servlet的概述\"></a>Servlet的概述</h1><p><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVgy1fe17yakmjqj30km08aaaw.jpg\" alt=\"\"></p>\n<h1 id=\"在web-xml中对Servlet进行配置\"><a href=\"#在web-xml中对Servlet进行配置\" class=\"headerlink\" title=\"在web.xml中对Servlet进行配置\"></a>在web.xml中对Servlet进行配置</h1><pre><code>&lt;servlet&gt;\n      &lt;servlet-name&gt;xxx&lt;/servlet-name&gt;\n      &lt;servlet-class&gt;servlet1.AServlet&lt;/servlet-class&gt;\n  &lt;/servlet&gt;\n\n  &lt;servlet-mapping&gt;\n      &lt;servlet-name&gt;xxx&lt;/servlet-name&gt;\n      &lt;url-pattern&gt;/AServlet&lt;/url-pattern&gt;\n  &lt;/servlet-mapping&gt;\n</code></pre><h1 id=\"ServletConfig\"><a href=\"#ServletConfig\" class=\"headerlink\" title=\"ServletConfig\"></a>ServletConfig</h1><p><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe18houaowj30o50dv40k.jpg\" alt=\"\"></p>\n<h1 id=\"GenericServlet\"><a href=\"#GenericServlet\" class=\"headerlink\" title=\"GenericServlet\"></a>GenericServlet</h1><pre><code>抽象类\n无参的init()方法\nprivate transient ServletConfig config;\n</code></pre><h1 id=\"HttpServlet\"><a href=\"#HttpServlet\" class=\"headerlink\" title=\"HttpServlet\"></a>HttpServlet</h1><pre><code>继承了GenericServlet\n</code></pre><p><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe2be7mon2j30ip0a075s.jpg\" alt=\"\"></p>\n<h1 id=\"Servlet细节\"><a href=\"#Servlet细节\" class=\"headerlink\" title=\"Servlet细节\"></a>Servlet细节</h1><pre><code>不要在Servlet中创建成员!创建局部变量即可!\n可以创建无状态成员!\n可以创建有状态的成员,但状态必须为只读的!\n在服务器启动的时候就创建Servlet\n    在web.xml的&lt;servlet&gt;\n            &lt;load-on-startup&gt;0&lt;load-on-startup&gt;    \n        &lt;/servlet&gt;\n    中写0代表优先级最高\n可以写多个URL在servletmapping中多写几个&lt;url-pattern&gt;&lt;/url-pattern&gt;即可\n&lt;url-pattern&gt;/servlet/*&lt;/url-pattern&gt;前缀匹配\n&lt;url-pattern&gt;*.do&lt;/url-pattern&gt;后缀匹配\n&lt;url-pattern&gt;/*&lt;/url-pattern&gt;匹配所有url\n</code></pre><h1 id=\"ServletContext\"><a href=\"#ServletContext\" class=\"headerlink\" title=\"ServletContext\"></a>ServletContext</h1><pre><code>一个项目只有一个ServletContext对象,负责给Servlet传递数据,和tomcat寿命一样\nServletConfig中的getServletContext()\nGenericServlet中的getServletContext()可以得到ServletContext对象\n</code></pre><p><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe2c5lyj0ej30ni0azacd.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVgy1fe2ccwsaihj30hz09m0u2.jpg\" alt=\"\"></p>\n<pre><code>String realPath = servletContext.getRealPath(&quot;/a.txt&quot;)//得到真实路径\nInputStream in = servletContext.getResourceAsStream(&quot;/a.txt&quot;)//获取资源流\nSet set = context.getResourcePaths(&quot;/WEB-INF&quot;);//得到目录下所有资源路径\n获取类路径下的资源\n    ClassLoader cl = this.getClass().getClassLoader();\n    InputStream input = cl.getResourceAsStream(&quot;a.txt&quot;);\n</code></pre>","excerpt":"<p>Servlet<br>","more":"</p>\n<h1 id=\"实现Servlet的三种方式\"><a href=\"#实现Servlet的三种方式\" class=\"headerlink\" title=\"实现Servlet的三种方式\"></a>实现Servlet的三种方式</h1><p><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1fe15z3u24aj30ls0b3q7e.jpg\" alt=\"\"></p>\n<h1 id=\"Servlet的概述\"><a href=\"#Servlet的概述\" class=\"headerlink\" title=\"Servlet的概述\"></a>Servlet的概述</h1><p><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVgy1fe17yakmjqj30km08aaaw.jpg\" alt=\"\"></p>\n<h1 id=\"在web-xml中对Servlet进行配置\"><a href=\"#在web-xml中对Servlet进行配置\" class=\"headerlink\" title=\"在web.xml中对Servlet进行配置\"></a>在web.xml中对Servlet进行配置</h1><pre><code>&lt;servlet&gt;\n      &lt;servlet-name&gt;xxx&lt;/servlet-name&gt;\n      &lt;servlet-class&gt;servlet1.AServlet&lt;/servlet-class&gt;\n  &lt;/servlet&gt;\n\n  &lt;servlet-mapping&gt;\n      &lt;servlet-name&gt;xxx&lt;/servlet-name&gt;\n      &lt;url-pattern&gt;/AServlet&lt;/url-pattern&gt;\n  &lt;/servlet-mapping&gt;\n</code></pre><h1 id=\"ServletConfig\"><a href=\"#ServletConfig\" class=\"headerlink\" title=\"ServletConfig\"></a>ServletConfig</h1><p><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe18houaowj30o50dv40k.jpg\" alt=\"\"></p>\n<h1 id=\"GenericServlet\"><a href=\"#GenericServlet\" class=\"headerlink\" title=\"GenericServlet\"></a>GenericServlet</h1><pre><code>抽象类\n无参的init()方法\nprivate transient ServletConfig config;\n</code></pre><h1 id=\"HttpServlet\"><a href=\"#HttpServlet\" class=\"headerlink\" title=\"HttpServlet\"></a>HttpServlet</h1><pre><code>继承了GenericServlet\n</code></pre><p><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe2be7mon2j30ip0a075s.jpg\" alt=\"\"></p>\n<h1 id=\"Servlet细节\"><a href=\"#Servlet细节\" class=\"headerlink\" title=\"Servlet细节\"></a>Servlet细节</h1><pre><code>不要在Servlet中创建成员!创建局部变量即可!\n可以创建无状态成员!\n可以创建有状态的成员,但状态必须为只读的!\n在服务器启动的时候就创建Servlet\n    在web.xml的&lt;servlet&gt;\n            &lt;load-on-startup&gt;0&lt;load-on-startup&gt;    \n        &lt;/servlet&gt;\n    中写0代表优先级最高\n可以写多个URL在servletmapping中多写几个&lt;url-pattern&gt;&lt;/url-pattern&gt;即可\n&lt;url-pattern&gt;/servlet/*&lt;/url-pattern&gt;前缀匹配\n&lt;url-pattern&gt;*.do&lt;/url-pattern&gt;后缀匹配\n&lt;url-pattern&gt;/*&lt;/url-pattern&gt;匹配所有url\n</code></pre><h1 id=\"ServletContext\"><a href=\"#ServletContext\" class=\"headerlink\" title=\"ServletContext\"></a>ServletContext</h1><pre><code>一个项目只有一个ServletContext对象,负责给Servlet传递数据,和tomcat寿命一样\nServletConfig中的getServletContext()\nGenericServlet中的getServletContext()可以得到ServletContext对象\n</code></pre><p><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVgy1fe2c5lyj0ej30ni0azacd.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVgy1fe2ccwsaihj30hz09m0u2.jpg\" alt=\"\"></p>\n<pre><code>String realPath = servletContext.getRealPath(&quot;/a.txt&quot;)//得到真实路径\nInputStream in = servletContext.getResourceAsStream(&quot;/a.txt&quot;)//获取资源流\nSet set = context.getResourcePaths(&quot;/WEB-INF&quot;);//得到目录下所有资源路径\n获取类路径下的资源\n    ClassLoader cl = this.getClass().getClassLoader();\n    InputStream input = cl.getResourceAsStream(&quot;a.txt&quot;);\n</code></pre>"},{"title":"spring01","toc":true,"date":"2017-06-26T02:20:47.000Z","_content":"spring入门\n<!--more-->\n# spring概述\n1.spring是开源轻量级框架\n2.spring是一站式框架\nweb：springMVC\nservice：ioc\ndao：jdbcTemplate\n3.原理\naop面向切面编程\nioc控制反转\n# IOC底层原理\n1.用到的技术\nxml配置文件\ndom4j解析xml\n工厂设计模式\n反射\n![IOC底层原理](http://wx4.sinaimg.cn/large/005P8ayVgy1fgyr6gao24j30mf0eatbj.jpg)\n# IOC入门\n### 1.导入jar包\n```\ncommons-logging-1.3.jar\njunit-4.3.1.jar\nlog4j-1.2.16.jar\nspring-beans-4.0.6.RELEASE.jar\nspring-context-4.0.6.RELEASE.jar\nspring-core-4.0.6.RELEASE.jar\nspring-expression-4.0.6.RELEASE.jar\n```\n### 2.创建类\n```\npublic class User {\n\tprivate String username;\n\t \n\tpublic User(String username) {\n\t\tthis.username = username;\n\t}\n\n\tpublic void add(){\n\t\t System.out.println(\"add.........\");\n\t } \n}\n```\n### 3.创建spring配置文件，配置创建类\nspring核心配置文件名称和位置不是固定的\n建议放到src下，名称为applicationContext.xml\n引入schema约束\n```\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n<!--  p名称空间  -->\n<!-- xmlns:p=\"http://www.springframework.org/schema/p\" -->\n    xsi:schemaLocation=\"\n        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n</beans>\n```\n核心配置文件\n```\n<!-- ioc入门 -->\n<bean id=\"user\" class=\"ioc.User\"></bean>\n```\n### 4.写测试类\n```\npublic class TestIoc {\n\n\t@Test\n\tpublic void testUser() {\n\t\t//1加载spring配置文件，根据创建对象\n\t\tApplicationContext context = new ClassPathXmlApplicationContext(\"bean1.xml\");\n\t\t//2得到配置创建的对象\n\t\tUser user = (User) context.getBean(\"user\");\n\t\tuser.add();\n\t}\n\t\n}\n```\n# bean实例化的三种方式\n### 1.使用无参构造创建\n```\n<!-- ioc入门 -->\n<bean id=\"user\" class=\"ioc.User\"></bean>\n```\n### 2.使用静态工厂创建\n```\npublic class bean2 {\n\tpublic void add(){\n\t\tSystem.out.println(\"bean2........\");\n\t}\n}\n```\n```\npublic class Bean2Factory {\n\t//静态的方法，返回Bean2对象\n\tpublic static bean2 getBean2(){\n\t\treturn new bean2();\n\t}\n}\n```\n```\n<!-- 使用静态工厂创建对象 -->\n<bean id=\"bean2\" class=\"bean.Bean2Factory\" factory-method=\"getBean2\"></bean>\n```\n### 3.使用实例工厂创建\n```\npublic class Bean3 {\n\tpublic void add(){\n\t\tSystem.out.println(\"bean3........\");\n\t}\n}\n```\n```\npublic class Bean3Factory {\n\t//普通的方法，返回Bean3对象\n\tpublic Bean3 getBean3() {\n\t\treturn new Bean3();\n\t}\n}\n```\n```\n<!-- 使用实例工厂创建对象 -->\n<bean id=\"bean3Factory\" class=\"bean.Bean3Factory\"></bean>\n<bean id=\"bean3\" factory-bean=\"bean3Factory\" factory-method=\"getBean3\"></bean> \n```\n# bean标签scope\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fgyr6h85ktj30nj0820uf.jpg)\n# 有参数构造注入属性\n```\npublic class PropertyDemo1 {\n\tprivate String username;\n\n\tpublic PropertyDemo1(String username) {\n\t\tthis.username = username;\n\t}\n\t\n\tpublic void test() {\n\t\tSystem.out.println(username);\n\t}\n}\n```\n```\n<!-- 使用有参数构造注入属性 -->\n<bean id=\"demo1\" class=\"property.PropertyDemo1\">\n\t<constructor-arg name=\"username\" value=\"哈赛\"></constructor-arg>\n</bean>\n```\n# set方法注入属性\n```\npublic class Book {\n\tprivate String bookname;\n\n\tpublic void setBookname(String bookname) {\n\t\tthis.bookname = bookname;\n\t}\n\t\n\tpublic void demobook() {\n\t\tSystem.out.println(bookname);\n\t}\n}\n```\n```\n<!-- 使用set方法注入属性 -->\n<bean id=\"book\" class=\"property.Book\">\n\t<property name=\"bookname\" value=\"Java虚拟机\"></property>\n</bean>\n```\n# 注入对象类型属性\n```\npublic class UserService {\n\t\n\tprivate UserDao userDao;\n\t\n\tpublic void setUserDao(UserDao userDao) {\n\t\tthis.userDao = userDao;\n\t}\n\t\n\tpublic void add() {\n\t\tSystem.out.println(\"service....\");\n\t\tuserDao.add();\n\t}\n}\n```\n```\npublic class UserDao {\n\tpublic void add() {\n\t\tSystem.out.println(\"dao....\");\n\t}\n}\n```\n```\n<!-- 注入对象类型属性 -->\n<bean id=\"userDao\" class=\"property.UserDao\"></bean>\n\n<bean id=\"userService\" class=\"property.UserService\">\n\t<property name=\"userDao\" ref=\"userDao\"></property>\n</bean>\n```\n# p名称空间注入和复杂类型属性注入\n约束文件添加\nxmlns:p=\"http://www.springframework.org/schema/p\"\n```\n<!-- p名称空间注入 -->\n<bean id=\"person\" class=\"property.Person\" p:pname=\"yasuo\">\n</bean>\n<!-- 注入复杂类型属性值 -->\n<bean id=\"person\" class=\"property.Person\">\n\t<!-- 数组 -->\n\t<property name=\"arrs\">\n\t\t<list>\n\t\t\t<value>1</value>\n\t\t\t<value>2</value>\n\t\t\t<value>3</value>\n\t\t</list>\n\t</property>\n\t<!-- list -->\n\t<property name=\"list\">\n\t\t<list>\n\t\t\t<value>4</value>\n\t\t\t<value>5</value>\n\t\t\t<value>6</value>\n\t\t</list>\n\t</property>\n\t<!-- map -->\n\t<property name=\"map\">\n\t\t<map>\n\t\t\t<entry key=\"a\" value=\"7\"></entry>\n\t\t\t<entry key=\"b\" value=\"8\"></entry>\n\t\t\t<entry key=\"c\" value=\"9\"></entry>\n\t\t</map>\n\t</property>\n\t<!-- properties -->\n\t<property name=\"properties\">\n\t\t<props>\n\t\t\t<prop key=\"driverclass\">com.mysql.jdbc.Driver</prop>\n\t\t\t<prop key=\"username\">root</prop>\n\t\t</props>\n\t</property>\n</bean>\n```\n```\npublic class Person {\n\tpublic String pname;\n\t\n\tpublic void setPname(String pname){\n\t\tthis.pname = pname;\n\t}\n\t\n\tprivate String[] arrs;\n\tprivate List<String> list;\n\tprivate Map<String, String> map;\n\tprivate Properties properties;\n\t\n\tpublic void setArrs(String[] arrs) {\n\t\tthis.arrs = arrs;\n\t}\n\tpublic void setList(List<String> list) {\n\t\tthis.list = list;\n\t}\n\tpublic void setMap(Map<String, String> map) {\n\t\tthis.map = map;\n\t}\n\tpublic void setProperties(Properties properties) {\n\t\tthis.properties = properties;\n\t}\n\n\tpublic void test1() {\n\t\tSystem.out.println(\"pname:\"+pname);\n\t\tSystem.out.println(\"arrs:\"+arrs);\n\t\tSystem.out.println(\"list:\"+list);\n\t\tSystem.out.println(\"map:\"+map);\n\t\tSystem.out.println(\"properties:\"+properties);\n\t}\n}\n```\n# spring将核心配置文件加载压力给服务器\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fgyrm09dq2j30kd0cwdjz.jpg)\n### 1.导入jar包\nspring-web-4.0.6.RELEASE.jar\n### 2.配置监听器\n在web.xml里面\n```\n<!-- 配置监听器 -->\n<listener>\n\t<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n</listener>\n```\n### 3.指定spring配置文件位置\n在web.xml里面\n```\n<!-- 指定spring配置文件位置 -->\n<context-param>\n\t<param-name>contextConfigLocation</param-name>\n\t<param-value>classpath:bean1.xml</param-value>\n</context-param>\n```","source":"_posts/spring01.md","raw":"---\ntitle: spring01\ntoc: true\ndate: 2017-06-26 10:20:47\ntags:\n- Java基础\n---\nspring入门\n<!--more-->\n# spring概述\n1.spring是开源轻量级框架\n2.spring是一站式框架\nweb：springMVC\nservice：ioc\ndao：jdbcTemplate\n3.原理\naop面向切面编程\nioc控制反转\n# IOC底层原理\n1.用到的技术\nxml配置文件\ndom4j解析xml\n工厂设计模式\n反射\n![IOC底层原理](http://wx4.sinaimg.cn/large/005P8ayVgy1fgyr6gao24j30mf0eatbj.jpg)\n# IOC入门\n### 1.导入jar包\n```\ncommons-logging-1.3.jar\njunit-4.3.1.jar\nlog4j-1.2.16.jar\nspring-beans-4.0.6.RELEASE.jar\nspring-context-4.0.6.RELEASE.jar\nspring-core-4.0.6.RELEASE.jar\nspring-expression-4.0.6.RELEASE.jar\n```\n### 2.创建类\n```\npublic class User {\n\tprivate String username;\n\t \n\tpublic User(String username) {\n\t\tthis.username = username;\n\t}\n\n\tpublic void add(){\n\t\t System.out.println(\"add.........\");\n\t } \n}\n```\n### 3.创建spring配置文件，配置创建类\nspring核心配置文件名称和位置不是固定的\n建议放到src下，名称为applicationContext.xml\n引入schema约束\n```\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n<!--  p名称空间  -->\n<!-- xmlns:p=\"http://www.springframework.org/schema/p\" -->\n    xsi:schemaLocation=\"\n        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n</beans>\n```\n核心配置文件\n```\n<!-- ioc入门 -->\n<bean id=\"user\" class=\"ioc.User\"></bean>\n```\n### 4.写测试类\n```\npublic class TestIoc {\n\n\t@Test\n\tpublic void testUser() {\n\t\t//1加载spring配置文件，根据创建对象\n\t\tApplicationContext context = new ClassPathXmlApplicationContext(\"bean1.xml\");\n\t\t//2得到配置创建的对象\n\t\tUser user = (User) context.getBean(\"user\");\n\t\tuser.add();\n\t}\n\t\n}\n```\n# bean实例化的三种方式\n### 1.使用无参构造创建\n```\n<!-- ioc入门 -->\n<bean id=\"user\" class=\"ioc.User\"></bean>\n```\n### 2.使用静态工厂创建\n```\npublic class bean2 {\n\tpublic void add(){\n\t\tSystem.out.println(\"bean2........\");\n\t}\n}\n```\n```\npublic class Bean2Factory {\n\t//静态的方法，返回Bean2对象\n\tpublic static bean2 getBean2(){\n\t\treturn new bean2();\n\t}\n}\n```\n```\n<!-- 使用静态工厂创建对象 -->\n<bean id=\"bean2\" class=\"bean.Bean2Factory\" factory-method=\"getBean2\"></bean>\n```\n### 3.使用实例工厂创建\n```\npublic class Bean3 {\n\tpublic void add(){\n\t\tSystem.out.println(\"bean3........\");\n\t}\n}\n```\n```\npublic class Bean3Factory {\n\t//普通的方法，返回Bean3对象\n\tpublic Bean3 getBean3() {\n\t\treturn new Bean3();\n\t}\n}\n```\n```\n<!-- 使用实例工厂创建对象 -->\n<bean id=\"bean3Factory\" class=\"bean.Bean3Factory\"></bean>\n<bean id=\"bean3\" factory-bean=\"bean3Factory\" factory-method=\"getBean3\"></bean> \n```\n# bean标签scope\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fgyr6h85ktj30nj0820uf.jpg)\n# 有参数构造注入属性\n```\npublic class PropertyDemo1 {\n\tprivate String username;\n\n\tpublic PropertyDemo1(String username) {\n\t\tthis.username = username;\n\t}\n\t\n\tpublic void test() {\n\t\tSystem.out.println(username);\n\t}\n}\n```\n```\n<!-- 使用有参数构造注入属性 -->\n<bean id=\"demo1\" class=\"property.PropertyDemo1\">\n\t<constructor-arg name=\"username\" value=\"哈赛\"></constructor-arg>\n</bean>\n```\n# set方法注入属性\n```\npublic class Book {\n\tprivate String bookname;\n\n\tpublic void setBookname(String bookname) {\n\t\tthis.bookname = bookname;\n\t}\n\t\n\tpublic void demobook() {\n\t\tSystem.out.println(bookname);\n\t}\n}\n```\n```\n<!-- 使用set方法注入属性 -->\n<bean id=\"book\" class=\"property.Book\">\n\t<property name=\"bookname\" value=\"Java虚拟机\"></property>\n</bean>\n```\n# 注入对象类型属性\n```\npublic class UserService {\n\t\n\tprivate UserDao userDao;\n\t\n\tpublic void setUserDao(UserDao userDao) {\n\t\tthis.userDao = userDao;\n\t}\n\t\n\tpublic void add() {\n\t\tSystem.out.println(\"service....\");\n\t\tuserDao.add();\n\t}\n}\n```\n```\npublic class UserDao {\n\tpublic void add() {\n\t\tSystem.out.println(\"dao....\");\n\t}\n}\n```\n```\n<!-- 注入对象类型属性 -->\n<bean id=\"userDao\" class=\"property.UserDao\"></bean>\n\n<bean id=\"userService\" class=\"property.UserService\">\n\t<property name=\"userDao\" ref=\"userDao\"></property>\n</bean>\n```\n# p名称空间注入和复杂类型属性注入\n约束文件添加\nxmlns:p=\"http://www.springframework.org/schema/p\"\n```\n<!-- p名称空间注入 -->\n<bean id=\"person\" class=\"property.Person\" p:pname=\"yasuo\">\n</bean>\n<!-- 注入复杂类型属性值 -->\n<bean id=\"person\" class=\"property.Person\">\n\t<!-- 数组 -->\n\t<property name=\"arrs\">\n\t\t<list>\n\t\t\t<value>1</value>\n\t\t\t<value>2</value>\n\t\t\t<value>3</value>\n\t\t</list>\n\t</property>\n\t<!-- list -->\n\t<property name=\"list\">\n\t\t<list>\n\t\t\t<value>4</value>\n\t\t\t<value>5</value>\n\t\t\t<value>6</value>\n\t\t</list>\n\t</property>\n\t<!-- map -->\n\t<property name=\"map\">\n\t\t<map>\n\t\t\t<entry key=\"a\" value=\"7\"></entry>\n\t\t\t<entry key=\"b\" value=\"8\"></entry>\n\t\t\t<entry key=\"c\" value=\"9\"></entry>\n\t\t</map>\n\t</property>\n\t<!-- properties -->\n\t<property name=\"properties\">\n\t\t<props>\n\t\t\t<prop key=\"driverclass\">com.mysql.jdbc.Driver</prop>\n\t\t\t<prop key=\"username\">root</prop>\n\t\t</props>\n\t</property>\n</bean>\n```\n```\npublic class Person {\n\tpublic String pname;\n\t\n\tpublic void setPname(String pname){\n\t\tthis.pname = pname;\n\t}\n\t\n\tprivate String[] arrs;\n\tprivate List<String> list;\n\tprivate Map<String, String> map;\n\tprivate Properties properties;\n\t\n\tpublic void setArrs(String[] arrs) {\n\t\tthis.arrs = arrs;\n\t}\n\tpublic void setList(List<String> list) {\n\t\tthis.list = list;\n\t}\n\tpublic void setMap(Map<String, String> map) {\n\t\tthis.map = map;\n\t}\n\tpublic void setProperties(Properties properties) {\n\t\tthis.properties = properties;\n\t}\n\n\tpublic void test1() {\n\t\tSystem.out.println(\"pname:\"+pname);\n\t\tSystem.out.println(\"arrs:\"+arrs);\n\t\tSystem.out.println(\"list:\"+list);\n\t\tSystem.out.println(\"map:\"+map);\n\t\tSystem.out.println(\"properties:\"+properties);\n\t}\n}\n```\n# spring将核心配置文件加载压力给服务器\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fgyrm09dq2j30kd0cwdjz.jpg)\n### 1.导入jar包\nspring-web-4.0.6.RELEASE.jar\n### 2.配置监听器\n在web.xml里面\n```\n<!-- 配置监听器 -->\n<listener>\n\t<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n</listener>\n```\n### 3.指定spring配置文件位置\n在web.xml里面\n```\n<!-- 指定spring配置文件位置 -->\n<context-param>\n\t<param-name>contextConfigLocation</param-name>\n\t<param-value>classpath:bean1.xml</param-value>\n</context-param>\n```","slug":"spring01","published":1,"updated":"2018-01-20T06:44:37.604Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m902004b44wa8blsz4qm","content":"<p>spring入门<br><a id=\"more\"></a></p>\n<h1 id=\"spring概述\"><a href=\"#spring概述\" class=\"headerlink\" title=\"spring概述\"></a>spring概述</h1><p>1.spring是开源轻量级框架<br>2.spring是一站式框架<br>web：springMVC<br>service：ioc<br>dao：jdbcTemplate<br>3.原理<br>aop面向切面编程<br>ioc控制反转</p>\n<h1 id=\"IOC底层原理\"><a href=\"#IOC底层原理\" class=\"headerlink\" title=\"IOC底层原理\"></a>IOC底层原理</h1><p>1.用到的技术<br>xml配置文件<br>dom4j解析xml<br>工厂设计模式<br>反射<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fgyr6gao24j30mf0eatbj.jpg\" alt=\"IOC底层原理\"></p>\n<h1 id=\"IOC入门\"><a href=\"#IOC入门\" class=\"headerlink\" title=\"IOC入门\"></a>IOC入门</h1><h3 id=\"1-导入jar包\"><a href=\"#1-导入jar包\" class=\"headerlink\" title=\"1.导入jar包\"></a>1.导入jar包</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">commons-logging-1</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">junit-4</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">log4j-1</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.16</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-beans-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-context-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-core-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-expression-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-创建类\"><a href=\"#2-创建类\" class=\"headerlink\" title=\"2.创建类\"></a>2.创建类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span> &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> String username;</div><div class=\"line\">  </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\">String username</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.username = username;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">   System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"add.........\"</span>);</div><div class=\"line\">  &#125; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3-创建spring配置文件，配置创建类\"><a href=\"#3-创建spring配置文件，配置创建类\" class=\"headerlink\" title=\"3.创建spring配置文件，配置创建类\"></a>3.创建spring配置文件，配置创建类</h3><p>spring核心配置文件名称和位置不是固定的<br>建议放到src下，名称为applicationContext.xml<br>引入schema约束<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span></div><div class=\"line\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">&lt;!<span class=\"attr\">--</span>  <span class=\"attr\">p</span>名称空间  <span class=\"attr\">--</span>&gt;</div><div class=\"line\"><span class=\"comment\">&lt;!-- xmlns:p=\"http://www.springframework.org/schema/p\" --&gt;</span></div><div class=\"line\">    xsi:schemaLocation=\"</div><div class=\"line\">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>核心配置文件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- ioc入门 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ioc.User\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"4-写测试类\"><a href=\"#4-写测试类\" class=\"headerlink\" title=\"4.写测试类\"></a>4.写测试类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">TestIoc</span> &#123;</div><div class=\"line\"></div><div class=\"line\"> @<span class=\"function\">Test</span></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUser</span>(<span class=\"params\"></span>) &#123;</div><div class=\"line\">  <span class=\"comment\">//1加载spring配置文件，根据创建对象</span></div><div class=\"line\">  ApplicationContext context = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"bean1.xml\"</span>);</div><div class=\"line\">  <span class=\"comment\">//2得到配置创建的对象</span></div><div class=\"line\">  User user = (User) context.getBean(<span class=\"string\">\"user\"</span>);</div><div class=\"line\">  user.<span class=\"keyword\">add</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"bean实例化的三种方式\"><a href=\"#bean实例化的三种方式\" class=\"headerlink\" title=\"bean实例化的三种方式\"></a>bean实例化的三种方式</h1><h3 id=\"1-使用无参构造创建\"><a href=\"#1-使用无参构造创建\" class=\"headerlink\" title=\"1.使用无参构造创建\"></a>1.使用无参构造创建</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- ioc入门 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ioc.User\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-使用静态工厂创建\"><a href=\"#2-使用静态工厂创建\" class=\"headerlink\" title=\"2.使用静态工厂创建\"></a>2.使用静态工厂创建</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">bean2</span> &#123;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"bean2........\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bean2Factory</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//静态的方法，返回Bean2对象</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> bean2 <span class=\"title\">getBean2</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> bean2();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 使用静态工厂创建对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bean2\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bean.Bean2Factory\"</span> <span class=\"attr\">factory-method</span>=<span class=\"string\">\"getBean2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-使用实例工厂创建\"><a href=\"#3-使用实例工厂创建\" class=\"headerlink\" title=\"3.使用实例工厂创建\"></a>3.使用实例工厂创建</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bean3</span> &#123;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"bean3........\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bean3Factory</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//普通的方法，返回Bean3对象</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> Bean3 <span class=\"title\">getBean3</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Bean3();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 使用实例工厂创建对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bean3Factory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bean.Bean3Factory\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bean3\"</span> <span class=\"attr\">factory-bean</span>=<span class=\"string\">\"bean3Factory\"</span> <span class=\"attr\">factory-method</span>=<span class=\"string\">\"getBean3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"bean标签scope\"><a href=\"#bean标签scope\" class=\"headerlink\" title=\"bean标签scope\"></a>bean标签scope</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fgyr6h85ktj30nj0820uf.jpg\" alt=\"\"></p>\n<h1 id=\"有参数构造注入属性\"><a href=\"#有参数构造注入属性\" class=\"headerlink\" title=\"有参数构造注入属性\"></a>有参数构造注入属性</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">PropertyDemo1</span> &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> String username;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PropertyDemo1</span>(<span class=\"params\">String username</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.username = username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(username);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 使用有参数构造注入属性 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"demo1\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.PropertyDemo1\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"哈赛\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constructor-arg</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"set方法注入属性\"><a href=\"#set方法注入属性\" class=\"headerlink\" title=\"set方法注入属性\"></a>set方法注入属性</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Book</span> &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> String bookname;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBookname</span>(<span class=\"params\">String bookname</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.bookname = bookname;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">demobook</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(bookname);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 使用set方法注入属性 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"book\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.Book\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"bookname\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Java虚拟机\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"注入对象类型属性\"><a href=\"#注入对象类型属性\" class=\"headerlink\" title=\"注入对象类型属性\"></a>注入对象类型属性</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserService</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">private</span> UserDao userDao;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserDao</span>(<span class=\"params\">UserDao userDao</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"service....\"</span>);</div><div class=\"line\">  userDao.<span class=\"keyword\">add</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserDao</span> &#123;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"dao....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 注入对象类型属性 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.UserDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.UserService\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"p名称空间注入和复杂类型属性注入\"><a href=\"#p名称空间注入和复杂类型属性注入\" class=\"headerlink\" title=\"p名称空间注入和复杂类型属性注入\"></a>p名称空间注入和复杂类型属性注入</h1><p>约束文件添加<br>xmlns:p=”<a href=\"http://www.springframework.org/schema/p\" target=\"_blank\" rel=\"external\">http://www.springframework.org/schema/p</a>“<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- p名称空间注入 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"person\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.Person\"</span> <span class=\"attr\">p:pname</span>=<span class=\"string\">\"yasuo\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 注入复杂类型属性值 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"person\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.Person\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 数组 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"arrs\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- list --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"list\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- map --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"map\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"7\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">entry</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">\"b\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"8\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">entry</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">\"c\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"9\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">entry</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- properties --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"properties\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">props</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">\"driverclass\"</span>&gt;</span>com.mysql.jdbc.Driver<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">\"username\"</span>&gt;</span>root<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">props</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Person &#123;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> pname;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setPname(<span class=\"keyword\">String</span> pname)&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.pname = pname;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">String</span>[] arrs;</div><div class=\"line\"> <span class=\"keyword\">private</span> List&lt;<span class=\"keyword\">String</span>&gt; list;</div><div class=\"line\"> <span class=\"keyword\">private</span> Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">String</span>&gt; <span class=\"built_in\">map</span>;</div><div class=\"line\"> <span class=\"keyword\">private</span> Properties properties;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setArrs(<span class=\"keyword\">String</span>[] arrs) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.arrs = arrs;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setList(List&lt;<span class=\"keyword\">String</span>&gt; list) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.list = list;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setMap(Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">String</span>&gt; <span class=\"built_in\">map</span>) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.<span class=\"built_in\">map</span> = <span class=\"built_in\">map</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setProperties(Properties properties) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.properties = properties;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> test1() &#123;</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"pname:\"</span>+pname);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"arrs:\"</span>+arrs);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"list:\"</span>+list);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"map:\"</span>+<span class=\"built_in\">map</span>);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"properties:\"</span>+properties);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"spring将核心配置文件加载压力给服务器\"><a href=\"#spring将核心配置文件加载压力给服务器\" class=\"headerlink\" title=\"spring将核心配置文件加载压力给服务器\"></a>spring将核心配置文件加载压力给服务器</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fgyrm09dq2j30kd0cwdjz.jpg\" alt=\"\"></p>\n<h3 id=\"1-导入jar包-1\"><a href=\"#1-导入jar包-1\" class=\"headerlink\" title=\"1.导入jar包\"></a>1.导入jar包</h3><p>spring-web-4.0.6.RELEASE.jar</p>\n<h3 id=\"2-配置监听器\"><a href=\"#2-配置监听器\" class=\"headerlink\" title=\"2.配置监听器\"></a>2.配置监听器</h3><p>在web.xml里面<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置监听器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"3-指定spring配置文件位置\"><a href=\"#3-指定spring配置文件位置\" class=\"headerlink\" title=\"3.指定spring配置文件位置\"></a>3.指定spring配置文件位置</h3><p>在web.xml里面<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 指定spring配置文件位置 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context-param</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:bean1.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">context-param</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","excerpt":"<p>spring入门<br>","more":"</p>\n<h1 id=\"spring概述\"><a href=\"#spring概述\" class=\"headerlink\" title=\"spring概述\"></a>spring概述</h1><p>1.spring是开源轻量级框架<br>2.spring是一站式框架<br>web：springMVC<br>service：ioc<br>dao：jdbcTemplate<br>3.原理<br>aop面向切面编程<br>ioc控制反转</p>\n<h1 id=\"IOC底层原理\"><a href=\"#IOC底层原理\" class=\"headerlink\" title=\"IOC底层原理\"></a>IOC底层原理</h1><p>1.用到的技术<br>xml配置文件<br>dom4j解析xml<br>工厂设计模式<br>反射<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fgyr6gao24j30mf0eatbj.jpg\" alt=\"IOC底层原理\"></p>\n<h1 id=\"IOC入门\"><a href=\"#IOC入门\" class=\"headerlink\" title=\"IOC入门\"></a>IOC入门</h1><h3 id=\"1-导入jar包\"><a href=\"#1-导入jar包\" class=\"headerlink\" title=\"1.导入jar包\"></a>1.导入jar包</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">commons-logging-1</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">junit-4</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">log4j-1</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.16</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-beans-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-context-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-core-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-expression-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-创建类\"><a href=\"#2-创建类\" class=\"headerlink\" title=\"2.创建类\"></a>2.创建类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span> &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> String username;</div><div class=\"line\">  </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\">String username</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.username = username;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">   System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"add.........\"</span>);</div><div class=\"line\">  &#125; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3-创建spring配置文件，配置创建类\"><a href=\"#3-创建spring配置文件，配置创建类\" class=\"headerlink\" title=\"3.创建spring配置文件，配置创建类\"></a>3.创建spring配置文件，配置创建类</h3><p>spring核心配置文件名称和位置不是固定的<br>建议放到src下，名称为applicationContext.xml<br>引入schema约束<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">&lt;!<span class=\"attr\">--</span>  <span class=\"attr\">p</span>名称空间  <span class=\"attr\">--</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- xmlns:p=\"http://www.springframework.org/schema/p\" --&gt;</span></div><div class=\"line\">    xsi:schemaLocation=\"</div><div class=\"line\">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>核心配置文件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- ioc入门 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ioc.User\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"4-写测试类\"><a href=\"#4-写测试类\" class=\"headerlink\" title=\"4.写测试类\"></a>4.写测试类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">TestIoc</span> &#123;</div><div class=\"line\"></div><div class=\"line\"> @<span class=\"function\">Test</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUser</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//1加载spring配置文件，根据创建对象</span></div><div class=\"line\">  ApplicationContext context = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"bean1.xml\"</span>);</div><div class=\"line\">  <span class=\"comment\">//2得到配置创建的对象</span></div><div class=\"line\">  User user = (User) context.getBean(<span class=\"string\">\"user\"</span>);</div><div class=\"line\">  user.<span class=\"keyword\">add</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"bean实例化的三种方式\"><a href=\"#bean实例化的三种方式\" class=\"headerlink\" title=\"bean实例化的三种方式\"></a>bean实例化的三种方式</h1><h3 id=\"1-使用无参构造创建\"><a href=\"#1-使用无参构造创建\" class=\"headerlink\" title=\"1.使用无参构造创建\"></a>1.使用无参构造创建</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- ioc入门 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ioc.User\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-使用静态工厂创建\"><a href=\"#2-使用静态工厂创建\" class=\"headerlink\" title=\"2.使用静态工厂创建\"></a>2.使用静态工厂创建</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">bean2</span> &#123;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"bean2........\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bean2Factory</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//静态的方法，返回Bean2对象</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> bean2 <span class=\"title\">getBean2</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> bean2();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 使用静态工厂创建对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bean2\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bean.Bean2Factory\"</span> <span class=\"attr\">factory-method</span>=<span class=\"string\">\"getBean2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-使用实例工厂创建\"><a href=\"#3-使用实例工厂创建\" class=\"headerlink\" title=\"3.使用实例工厂创建\"></a>3.使用实例工厂创建</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bean3</span> &#123;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"bean3........\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bean3Factory</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//普通的方法，返回Bean3对象</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> Bean3 <span class=\"title\">getBean3</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Bean3();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 使用实例工厂创建对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bean3Factory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bean.Bean3Factory\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bean3\"</span> <span class=\"attr\">factory-bean</span>=<span class=\"string\">\"bean3Factory\"</span> <span class=\"attr\">factory-method</span>=<span class=\"string\">\"getBean3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"bean标签scope\"><a href=\"#bean标签scope\" class=\"headerlink\" title=\"bean标签scope\"></a>bean标签scope</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fgyr6h85ktj30nj0820uf.jpg\" alt=\"\"></p>\n<h1 id=\"有参数构造注入属性\"><a href=\"#有参数构造注入属性\" class=\"headerlink\" title=\"有参数构造注入属性\"></a>有参数构造注入属性</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">PropertyDemo1</span> &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> String username;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PropertyDemo1</span>(<span class=\"params\">String username</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.username = username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(username);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 使用有参数构造注入属性 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"demo1\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.PropertyDemo1\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"哈赛\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constructor-arg</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"set方法注入属性\"><a href=\"#set方法注入属性\" class=\"headerlink\" title=\"set方法注入属性\"></a>set方法注入属性</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Book</span> &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> String bookname;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBookname</span>(<span class=\"params\">String bookname</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.bookname = bookname;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">demobook</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(bookname);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 使用set方法注入属性 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"book\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.Book\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"bookname\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Java虚拟机\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"注入对象类型属性\"><a href=\"#注入对象类型属性\" class=\"headerlink\" title=\"注入对象类型属性\"></a>注入对象类型属性</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserService</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">private</span> UserDao userDao;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserDao</span>(<span class=\"params\">UserDao userDao</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"service....\"</span>);</div><div class=\"line\">  userDao.<span class=\"keyword\">add</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserDao</span> &#123;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"dao....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 注入对象类型属性 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.UserDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.UserService\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"p名称空间注入和复杂类型属性注入\"><a href=\"#p名称空间注入和复杂类型属性注入\" class=\"headerlink\" title=\"p名称空间注入和复杂类型属性注入\"></a>p名称空间注入和复杂类型属性注入</h1><p>约束文件添加<br>xmlns:p=”<a href=\"http://www.springframework.org/schema/p\">http://www.springframework.org/schema/p</a>“<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- p名称空间注入 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"person\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.Person\"</span> <span class=\"attr\">p:pname</span>=<span class=\"string\">\"yasuo\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 注入复杂类型属性值 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"person\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"property.Person\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 数组 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"arrs\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- list --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"list\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- map --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"map\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"7\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">entry</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">\"b\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"8\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">entry</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">\"c\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"9\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">entry</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- properties --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"properties\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">props</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">\"driverclass\"</span>&gt;</span>com.mysql.jdbc.Driver<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">\"username\"</span>&gt;</span>root<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">props</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Person &#123;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> pname;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setPname(<span class=\"keyword\">String</span> pname)&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.pname = pname;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">String</span>[] arrs;</div><div class=\"line\"> <span class=\"keyword\">private</span> List&lt;<span class=\"keyword\">String</span>&gt; list;</div><div class=\"line\"> <span class=\"keyword\">private</span> Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">String</span>&gt; <span class=\"built_in\">map</span>;</div><div class=\"line\"> <span class=\"keyword\">private</span> Properties properties;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setArrs(<span class=\"keyword\">String</span>[] arrs) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.arrs = arrs;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setList(List&lt;<span class=\"keyword\">String</span>&gt; list) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.list = list;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setMap(Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">String</span>&gt; <span class=\"built_in\">map</span>) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.<span class=\"built_in\">map</span> = <span class=\"built_in\">map</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setProperties(Properties properties) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.properties = properties;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> test1() &#123;</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"pname:\"</span>+pname);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"arrs:\"</span>+arrs);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"list:\"</span>+list);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"map:\"</span>+<span class=\"built_in\">map</span>);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(<span class=\"string\">\"properties:\"</span>+properties);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"spring将核心配置文件加载压力给服务器\"><a href=\"#spring将核心配置文件加载压力给服务器\" class=\"headerlink\" title=\"spring将核心配置文件加载压力给服务器\"></a>spring将核心配置文件加载压力给服务器</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fgyrm09dq2j30kd0cwdjz.jpg\" alt=\"\"></p>\n<h3 id=\"1-导入jar包-1\"><a href=\"#1-导入jar包-1\" class=\"headerlink\" title=\"1.导入jar包\"></a>1.导入jar包</h3><p>spring-web-4.0.6.RELEASE.jar</p>\n<h3 id=\"2-配置监听器\"><a href=\"#2-配置监听器\" class=\"headerlink\" title=\"2.配置监听器\"></a>2.配置监听器</h3><p>在web.xml里面<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置监听器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"3-指定spring配置文件位置\"><a href=\"#3-指定spring配置文件位置\" class=\"headerlink\" title=\"3.指定spring配置文件位置\"></a>3.指定spring配置文件位置</h3><p>在web.xml里面<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 指定spring配置文件位置 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context-param</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:bean1.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">context-param</span>&gt;</span></div></pre></td></tr></table></figure></p>"},{"title":"spring03","toc":true,"date":"2017-06-30T02:25:48.000Z","_content":"# aspectj注解aop操作\n<!--more-->\n* 1.创建对象\n```\n<!-- 配置对象 -->\n<bean id=\"book\" class=\"aop.Book\"></bean>\n<bean id=\"myBook\" class=\"aop.MyBook\"></bean>\n```\n* 2.开启aop操作\n```\n<!-- 开启aop自动代理 -->\n<aop:aspectj-autoproxy></aop:aspectj-autoproxy>\n```\n* 3.在增强类上面使用注解完成aop操作\n```\n@Aspect\npublic class MyBook {\n\t//在方法上用注解进行增强配置\n\t@Before(\"execution(* aop.Book.*(..))\")\n\tpublic void before() {\n\t\tSystem.out.println(\"before....\");\n\t}\n}\n```\n* 不同通知类型的注解\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fh80voaasqj30e406l75u.jpg)\n# jdbcTemplate\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fh81w8xdpwj30g70bd0ug.jpg)\n### 准备工作\n导入jar包\n```\nspring-jdbc-4.0.6.RELEASE.jar\nspring-tx-4.0.6.RELEASE.jar\nmysql-connector-java-5.1.17-bin.jar\n```\n创建数据库和表\n### 添加操作(删除,修改类似)\n```\n@Test\npublic void add() {\n\t//设置数据库信息\n\tDriverManagerDataSource dataSource = new DriverManagerDataSource();\n\tdataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n\tdataSource.setUrl(\"jdbc:mysql:///spring_day03\");\n\tdataSource.setUsername(\"root\");\n\tdataSource.setPassword(\"0000\");\n\t\n\t//创建jdbcTemplate对象，设置数据源\n\tJdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n\t\n\t//调用jdbcTemplate对象里面的方法实现操作\n\tString sql = \"insert into user values(?,?)\";\n\tint rows = jdbcTemplate.update(sql,\"tom\",\"2501\");\n\tSystem.out.println(rows);\n}\n```\n### 查询操作\n* 1.和dbutils的比较\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fh81w9k3enj30j909b403.jpg)\n* 2.返回某个值\n```\n@Test\npublic void query() {\n\t//设置数据库信息\n\tDriverManagerDataSource dataSource = new DriverManagerDataSource();\n\tdataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n\tdataSource.setUrl(\"jdbc:mysql:///spring_day03\");\n\tdataSource.setUsername(\"root\");\n\tdataSource.setPassword(\"0000\");\n\t\n\t//创建jdbcTemplate对象\n\tJdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n\t\n\t//调用方法\n\tString sql = \"select count(*) from user\";\n\tint rows = jdbcTemplate.queryForObject(sql, Integer.class);\n\tSystem.out.println(rows);\n}\n```\n* 3.返回对象\n```\n@Test\npublic void testObject() {\n\t//设置数据库信息\n\tDriverManagerDataSource dataSource = new DriverManagerDataSource();\n\tdataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n\tdataSource.setUrl(\"jdbc:mysql:///spring_day03\");\n\tdataSource.setUsername(\"root\");\n\tdataSource.setPassword(\"0000\");\n\t\t\t\n\t//创建jdbcTemplate对象\n\tJdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n\t\n\t//写sql语句，根据username查询\n\tString sql = \"select * from user where username=?\";\n\t//返回如果是list<User>的话，MyRowMapper()里面不用写循环\n\tUser user = jdbcTemplate.queryForObject(sql, new MyRowMapper(), \"lucy\");\n\tSystem.out.println(user);\n}\nclass MyRowMapper implements RowMapper<User> {\n\t@Override\n\tpublic User mapRow(ResultSet rs, int num) throws SQLException {\n\t\t//1.从结果集合得到数据\n\t\tString username = rs.getString(\"username\");\n\t\tString password = rs.getString(\"password\");\n\t\t\n\t\t//2.把得到的数据封装到对象里面\n\t\tUser user = new User();\n\t\tuser.setUsername(username);\n\t\tuser.setPassword(password);\n\t\t\n\t\treturn user;\n\t}\n}\n```\n# spring配置c3p0连接池,dao使用jdbcTemplate\n* 1.导入jar包\n```\nc3p0-0.9.2-pre1.jar\nmchange-commons-java-0.2.7.jar\n```\n* 2.创建spring配置文件，配置连接池\n```\n<!-- 配置c3p0连接池 -->\n<bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n\t<!-- 注入属性值 -->\n\t<property name=\"driverClass\" value=\"com.mysql.jdbc.Driver\"></property>\n\t<property name=\"jdbcUrl\" value=\"jdbc:mysql:///spring_day03\"></property>\n\t<property name=\"user\" value=\"root\"></property>\n\t<property name=\"password\" value=\"0000\"></property>\n</bean>\n<!-- 创建service和dao对象，在service中注入dao对象 -->\n<bean id=\"userService\" class=\"c3p0.UserService\">\n\t<!-- 注入dao对象 -->\n\t<property name=\"userDao\" ref=\"userDao\"></property>\n</bean>\n<bean id=\"userDao\" class=\"c3p0.UserDao\">\n\t<!-- 注入jdbcTemplate对象 -->\n\t<property name=\"jdbcTemplate\" ref=\"jdbcTemplate\"></property>\n</bean>\n<!-- 创建jdbcTemplate对象 -->\n<bean id=\"jdbcTemplate\" class=\"org.springframework.jdbc.core.JdbcTemplate\">\n\t<!-- 把dataSource传递到模板对象 -->\n\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n</bean>\n```\n* 3.UserService类\n```\npublic class UserService {\n\t\n\tprivate UserDao userDao;\n\n\tpublic void setUserDao(UserDao userDao) {\n\t\tthis.userDao = userDao;\n\t}\n\t\n\tpublic void add() {\n\t\tuserDao.add();\n\t}\n}\n```\n* 4.UserDao类\n```\npublic class UserDao {\n\t//得到JdbcTemplate对象\n\tprivate JdbcTemplate jdbcTemplate;\n\tpublic void setJdbcTemplate(JdbcTemplate jdbcTemplate) {\n\t\tthis.jdbcTemplate = jdbcTemplate;\n\t}\n\n\tpublic void add() {\n\t\tString sql = \"insert into user value(?,?)\";\n\t\tjdbcTemplate.update(sql,\"yasuo\",\"4\");\n\t}\n}\n```\n# spring事务\n1.编程式事务管理（以后再学）\n2.声明式事务管理\nxml配置文件实现\n注解实现\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fh825xsiz5j30aq06f3ze.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fh825yneruj30j90cuad4.jpg)\n### xml配置文件实现\nOrdersDao类\n```\npublic class OrdersDao {\n\t//注入jdbcTemplate\n\tprivate JdbcTemplate jdbcTemplate;\n\tpublic void setJdbcTemplate(JdbcTemplate jdbcTemplate) {\n\t\tthis.jdbcTemplate = jdbcTemplate;\n\t}\n\t\n\tpublic void lessMoney() {\n\t\tString sql = \"update account set salary=salary-? where username=?\";\n\t\tjdbcTemplate.update(sql,1000,\"小王\");\n\t}\n\t\n\tpublic void moreMoney() {\n\t\tString sql = \"update account set salary=salary+? where username=?\";\n\t\tjdbcTemplate.update(sql,1000,\"小马\");\n\t}\n}\n```\nOrdersService类\n```\npublic class OrdersService {\n\t//注入dao\n\tprivate OrdersDao ordersDao;\n\tpublic void setOrdersDao(OrdersDao ordersDao) {\n\t\tthis.ordersDao = ordersDao;\n\t}\n\t\n\tpublic void accountMoney() {\n\t\tordersDao.lessMoney();\n\t\tordersDao.moreMoney();\n\t}\n}\n```\n配置文件\n```\n\t<!-- 配置c3p0连接池 -->\n\t<bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n\t\t<!-- 注入属性值 -->\n\t\t<property name=\"driverClass\" value=\"com.mysql.jdbc.Driver\"></property>\n\t\t<property name=\"jdbcUrl\" value=\"jdbc:mysql:///spring_day03\"></property>\n\t\t<property name=\"user\" value=\"root\"></property>\n\t\t<property name=\"password\" value=\"0000\"></property>\n\t</bean>\n\t\n\t<!-- 1.配置事务管理器 -->\n\t<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n\t\t<!-- 注入dataSource -->\n\t\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n\t</bean>\n\t<!-- 2.配置事务增强 -->\n\t<tx:advice id=\"txadvice\" transaction-manager=\"transactionManager\">\n\t\t<!-- 做事务操作 -->\n\t\t<tx:attributes>\n\t\t\t<!-- 设置进行事务操作的方法匹配规则 -->\n\t\t\t<tx:method name=\"account*\"/>\n\t\t</tx:attributes>\n\t</tx:advice>\n\t<!-- 3.配置切面 -->\n\t<aop:config>\n\t\t<!-- 切入点 -->\n\t\t<aop:pointcut expression=\"execution(* service.OrdersService.*(..))\" id=\"pointcut1\"/>\n\t\t<!-- 切面 -->\n\t\t<aop:advisor advice-ref=\"txadvice\" pointcut-ref=\"pointcut1\"/>\n\t</aop:config>\n\t\n\t<bean id=\"ordersService\" class=\"service.OrdersService\">\n\t\t<property name=\"ordersDao\" ref=\"ordersDao\"></property>\n\t</bean>\n\t<bean id=\"ordersDao\" class=\"dao.OrdersDao\">\n\t\t<property name=\"jdbcTemplate\" ref=\"jdbcTemplate\"></property>\n\t</bean>\n\t\n\t<bean id=\"jdbcTemplate\" class=\"org.springframework.jdbc.core.JdbcTemplate\">\n\t\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n\t</bean>\n```\n### 注解实现\n```\n<!-- 1.配置事务管理器 -->\n<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n\t<!-- 注入dataSource -->\n\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n</bean>\n<!-- 2.开始注解事务 -->\n<tx:annotation-driven transaction-manager=\"transactionManager\"/>\n```\n```\n@Transactional\npublic class OrdersService {\n\t//注入dao\n\tprivate OrdersDao ordersDao;\n\tpublic void setOrdersDao(OrdersDao ordersDao) {\n\t\tthis.ordersDao = ordersDao;\n\t}\n\t\n\tpublic void accountMoney() {\n\t\tordersDao.lessMoney();\n\t\tordersDao.moreMoney();\n\t}\n}\n```\n\n\n\n","source":"_posts/spring03.md","raw":"---\ntitle: spring03\ntoc: true\ndate: 2017-06-30 10:25:48\ntags: \n- Java基础\n---\n# aspectj注解aop操作\n<!--more-->\n* 1.创建对象\n```\n<!-- 配置对象 -->\n<bean id=\"book\" class=\"aop.Book\"></bean>\n<bean id=\"myBook\" class=\"aop.MyBook\"></bean>\n```\n* 2.开启aop操作\n```\n<!-- 开启aop自动代理 -->\n<aop:aspectj-autoproxy></aop:aspectj-autoproxy>\n```\n* 3.在增强类上面使用注解完成aop操作\n```\n@Aspect\npublic class MyBook {\n\t//在方法上用注解进行增强配置\n\t@Before(\"execution(* aop.Book.*(..))\")\n\tpublic void before() {\n\t\tSystem.out.println(\"before....\");\n\t}\n}\n```\n* 不同通知类型的注解\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fh80voaasqj30e406l75u.jpg)\n# jdbcTemplate\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fh81w8xdpwj30g70bd0ug.jpg)\n### 准备工作\n导入jar包\n```\nspring-jdbc-4.0.6.RELEASE.jar\nspring-tx-4.0.6.RELEASE.jar\nmysql-connector-java-5.1.17-bin.jar\n```\n创建数据库和表\n### 添加操作(删除,修改类似)\n```\n@Test\npublic void add() {\n\t//设置数据库信息\n\tDriverManagerDataSource dataSource = new DriverManagerDataSource();\n\tdataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n\tdataSource.setUrl(\"jdbc:mysql:///spring_day03\");\n\tdataSource.setUsername(\"root\");\n\tdataSource.setPassword(\"0000\");\n\t\n\t//创建jdbcTemplate对象，设置数据源\n\tJdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n\t\n\t//调用jdbcTemplate对象里面的方法实现操作\n\tString sql = \"insert into user values(?,?)\";\n\tint rows = jdbcTemplate.update(sql,\"tom\",\"2501\");\n\tSystem.out.println(rows);\n}\n```\n### 查询操作\n* 1.和dbutils的比较\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fh81w9k3enj30j909b403.jpg)\n* 2.返回某个值\n```\n@Test\npublic void query() {\n\t//设置数据库信息\n\tDriverManagerDataSource dataSource = new DriverManagerDataSource();\n\tdataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n\tdataSource.setUrl(\"jdbc:mysql:///spring_day03\");\n\tdataSource.setUsername(\"root\");\n\tdataSource.setPassword(\"0000\");\n\t\n\t//创建jdbcTemplate对象\n\tJdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n\t\n\t//调用方法\n\tString sql = \"select count(*) from user\";\n\tint rows = jdbcTemplate.queryForObject(sql, Integer.class);\n\tSystem.out.println(rows);\n}\n```\n* 3.返回对象\n```\n@Test\npublic void testObject() {\n\t//设置数据库信息\n\tDriverManagerDataSource dataSource = new DriverManagerDataSource();\n\tdataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n\tdataSource.setUrl(\"jdbc:mysql:///spring_day03\");\n\tdataSource.setUsername(\"root\");\n\tdataSource.setPassword(\"0000\");\n\t\t\t\n\t//创建jdbcTemplate对象\n\tJdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n\t\n\t//写sql语句，根据username查询\n\tString sql = \"select * from user where username=?\";\n\t//返回如果是list<User>的话，MyRowMapper()里面不用写循环\n\tUser user = jdbcTemplate.queryForObject(sql, new MyRowMapper(), \"lucy\");\n\tSystem.out.println(user);\n}\nclass MyRowMapper implements RowMapper<User> {\n\t@Override\n\tpublic User mapRow(ResultSet rs, int num) throws SQLException {\n\t\t//1.从结果集合得到数据\n\t\tString username = rs.getString(\"username\");\n\t\tString password = rs.getString(\"password\");\n\t\t\n\t\t//2.把得到的数据封装到对象里面\n\t\tUser user = new User();\n\t\tuser.setUsername(username);\n\t\tuser.setPassword(password);\n\t\t\n\t\treturn user;\n\t}\n}\n```\n# spring配置c3p0连接池,dao使用jdbcTemplate\n* 1.导入jar包\n```\nc3p0-0.9.2-pre1.jar\nmchange-commons-java-0.2.7.jar\n```\n* 2.创建spring配置文件，配置连接池\n```\n<!-- 配置c3p0连接池 -->\n<bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n\t<!-- 注入属性值 -->\n\t<property name=\"driverClass\" value=\"com.mysql.jdbc.Driver\"></property>\n\t<property name=\"jdbcUrl\" value=\"jdbc:mysql:///spring_day03\"></property>\n\t<property name=\"user\" value=\"root\"></property>\n\t<property name=\"password\" value=\"0000\"></property>\n</bean>\n<!-- 创建service和dao对象，在service中注入dao对象 -->\n<bean id=\"userService\" class=\"c3p0.UserService\">\n\t<!-- 注入dao对象 -->\n\t<property name=\"userDao\" ref=\"userDao\"></property>\n</bean>\n<bean id=\"userDao\" class=\"c3p0.UserDao\">\n\t<!-- 注入jdbcTemplate对象 -->\n\t<property name=\"jdbcTemplate\" ref=\"jdbcTemplate\"></property>\n</bean>\n<!-- 创建jdbcTemplate对象 -->\n<bean id=\"jdbcTemplate\" class=\"org.springframework.jdbc.core.JdbcTemplate\">\n\t<!-- 把dataSource传递到模板对象 -->\n\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n</bean>\n```\n* 3.UserService类\n```\npublic class UserService {\n\t\n\tprivate UserDao userDao;\n\n\tpublic void setUserDao(UserDao userDao) {\n\t\tthis.userDao = userDao;\n\t}\n\t\n\tpublic void add() {\n\t\tuserDao.add();\n\t}\n}\n```\n* 4.UserDao类\n```\npublic class UserDao {\n\t//得到JdbcTemplate对象\n\tprivate JdbcTemplate jdbcTemplate;\n\tpublic void setJdbcTemplate(JdbcTemplate jdbcTemplate) {\n\t\tthis.jdbcTemplate = jdbcTemplate;\n\t}\n\n\tpublic void add() {\n\t\tString sql = \"insert into user value(?,?)\";\n\t\tjdbcTemplate.update(sql,\"yasuo\",\"4\");\n\t}\n}\n```\n# spring事务\n1.编程式事务管理（以后再学）\n2.声明式事务管理\nxml配置文件实现\n注解实现\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1fh825xsiz5j30aq06f3ze.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fh825yneruj30j90cuad4.jpg)\n### xml配置文件实现\nOrdersDao类\n```\npublic class OrdersDao {\n\t//注入jdbcTemplate\n\tprivate JdbcTemplate jdbcTemplate;\n\tpublic void setJdbcTemplate(JdbcTemplate jdbcTemplate) {\n\t\tthis.jdbcTemplate = jdbcTemplate;\n\t}\n\t\n\tpublic void lessMoney() {\n\t\tString sql = \"update account set salary=salary-? where username=?\";\n\t\tjdbcTemplate.update(sql,1000,\"小王\");\n\t}\n\t\n\tpublic void moreMoney() {\n\t\tString sql = \"update account set salary=salary+? where username=?\";\n\t\tjdbcTemplate.update(sql,1000,\"小马\");\n\t}\n}\n```\nOrdersService类\n```\npublic class OrdersService {\n\t//注入dao\n\tprivate OrdersDao ordersDao;\n\tpublic void setOrdersDao(OrdersDao ordersDao) {\n\t\tthis.ordersDao = ordersDao;\n\t}\n\t\n\tpublic void accountMoney() {\n\t\tordersDao.lessMoney();\n\t\tordersDao.moreMoney();\n\t}\n}\n```\n配置文件\n```\n\t<!-- 配置c3p0连接池 -->\n\t<bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n\t\t<!-- 注入属性值 -->\n\t\t<property name=\"driverClass\" value=\"com.mysql.jdbc.Driver\"></property>\n\t\t<property name=\"jdbcUrl\" value=\"jdbc:mysql:///spring_day03\"></property>\n\t\t<property name=\"user\" value=\"root\"></property>\n\t\t<property name=\"password\" value=\"0000\"></property>\n\t</bean>\n\t\n\t<!-- 1.配置事务管理器 -->\n\t<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n\t\t<!-- 注入dataSource -->\n\t\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n\t</bean>\n\t<!-- 2.配置事务增强 -->\n\t<tx:advice id=\"txadvice\" transaction-manager=\"transactionManager\">\n\t\t<!-- 做事务操作 -->\n\t\t<tx:attributes>\n\t\t\t<!-- 设置进行事务操作的方法匹配规则 -->\n\t\t\t<tx:method name=\"account*\"/>\n\t\t</tx:attributes>\n\t</tx:advice>\n\t<!-- 3.配置切面 -->\n\t<aop:config>\n\t\t<!-- 切入点 -->\n\t\t<aop:pointcut expression=\"execution(* service.OrdersService.*(..))\" id=\"pointcut1\"/>\n\t\t<!-- 切面 -->\n\t\t<aop:advisor advice-ref=\"txadvice\" pointcut-ref=\"pointcut1\"/>\n\t</aop:config>\n\t\n\t<bean id=\"ordersService\" class=\"service.OrdersService\">\n\t\t<property name=\"ordersDao\" ref=\"ordersDao\"></property>\n\t</bean>\n\t<bean id=\"ordersDao\" class=\"dao.OrdersDao\">\n\t\t<property name=\"jdbcTemplate\" ref=\"jdbcTemplate\"></property>\n\t</bean>\n\t\n\t<bean id=\"jdbcTemplate\" class=\"org.springframework.jdbc.core.JdbcTemplate\">\n\t\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n\t</bean>\n```\n### 注解实现\n```\n<!-- 1.配置事务管理器 -->\n<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n\t<!-- 注入dataSource -->\n\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n</bean>\n<!-- 2.开始注解事务 -->\n<tx:annotation-driven transaction-manager=\"transactionManager\"/>\n```\n```\n@Transactional\npublic class OrdersService {\n\t//注入dao\n\tprivate OrdersDao ordersDao;\n\tpublic void setOrdersDao(OrdersDao ordersDao) {\n\t\tthis.ordersDao = ordersDao;\n\t}\n\t\n\tpublic void accountMoney() {\n\t\tordersDao.lessMoney();\n\t\tordersDao.moreMoney();\n\t}\n}\n```\n\n\n\n","slug":"spring03","published":1,"updated":"2018-01-20T06:44:37.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m907004d44wam79i8far","content":"<h1 id=\"aspectj注解aop操作\"><a href=\"#aspectj注解aop操作\" class=\"headerlink\" title=\"aspectj注解aop操作\"></a>aspectj注解aop操作</h1><a id=\"more\"></a>\n<ul>\n<li><p>1.创建对象</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"book\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aop.Book\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myBook\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aop.MyBook\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>2.开启aop操作</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 开启aop自动代理 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">aop:aspectj-autoproxy</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>3.在增强类上面使用注解完成aop操作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyBook</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//在方法上用注解进行增强配置</span></div><div class=\"line\"> <span class=\"meta\">@Before</span>(<span class=\"string\">\"execution(* aop.Book.*(..))\"</span>)</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">before</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  System.out.println(<span class=\"string\">\"before....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>不同通知类型的注解<br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fh80voaasqj30e406l75u.jpg\" alt=\"\"></p>\n<h1 id=\"jdbcTemplate\"><a href=\"#jdbcTemplate\" class=\"headerlink\" title=\"jdbcTemplate\"></a>jdbcTemplate</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fh81w8xdpwj30g70bd0ug.jpg\" alt=\"\"></p>\n<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>导入jar包</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">spring-jdbc-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-tx-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">mysql-connector-java-5</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.17-bin</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>创建数据库和表</p>\n<h3 id=\"添加操作-删除-修改类似\"><a href=\"#添加操作-删除-修改类似\" class=\"headerlink\" title=\"添加操作(删除,修改类似)\"></a>添加操作(删除,修改类似)</h3><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Test</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"built_in\">add</span>() &#123;</div><div class=\"line\"> <span class=\"comment\">//设置数据库信息</span></div><div class=\"line\"> DriverManagerDataSource dataSource = <span class=\"keyword\">new</span> DriverManagerDataSource();</div><div class=\"line\"> dataSource.setDriverClassName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\"> dataSource.setUrl(<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>);</div><div class=\"line\"> dataSource.setUsername(<span class=\"string\">\"root\"</span>);</div><div class=\"line\"> dataSource.setPassword(<span class=\"string\">\"0000\"</span>);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//创建jdbcTemplate对象，设置数据源</span></div><div class=\"line\"> JdbcTemplate jdbcTemplate = <span class=\"keyword\">new</span> JdbcTemplate(dataSource);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//调用jdbcTemplate对象里面的方法实现操作</span></div><div class=\"line\"> <span class=\"keyword\">String</span> sql = <span class=\"string\">\"insert into user values(?,?)\"</span>;</div><div class=\"line\"> <span class=\"built_in\">int</span> rows = jdbcTemplate.update(sql,<span class=\"string\">\"tom\"</span>,<span class=\"string\">\"2501\"</span>);</div><div class=\"line\"> System.out.<span class=\"built_in\">println</span>(rows);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"查询操作\"><a href=\"#查询操作\" class=\"headerlink\" title=\"查询操作\"></a>查询操作</h3><ul>\n<li>1.和dbutils的比较<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fh81w9k3enj30j909b403.jpg\" alt=\"\"></li>\n<li><p>2.返回某个值</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Test</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> query() &#123;</div><div class=\"line\"> <span class=\"comment\">//设置数据库信息</span></div><div class=\"line\"> DriverManagerDataSource dataSource = <span class=\"keyword\">new</span> DriverManagerDataSource();</div><div class=\"line\"> dataSource.setDriverClassName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\"> dataSource.setUrl(<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>);</div><div class=\"line\"> dataSource.setUsername(<span class=\"string\">\"root\"</span>);</div><div class=\"line\"> dataSource.setPassword(<span class=\"string\">\"0000\"</span>);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//创建jdbcTemplate对象</span></div><div class=\"line\"> JdbcTemplate jdbcTemplate = <span class=\"keyword\">new</span> JdbcTemplate(dataSource);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//调用方法</span></div><div class=\"line\"> <span class=\"keyword\">String</span> sql = <span class=\"string\">\"select count(*) from user\"</span>;</div><div class=\"line\"> <span class=\"keyword\">int</span> rows = jdbcTemplate.queryForObject(sql, Integer.<span class=\"keyword\">class</span>);</div><div class=\"line\"> System.out.<span class=\"built_in\">println</span>(rows);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>3.返回对象</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Test</div><div class=\"line\"><span class=\"keyword\">public</span> void testObject() &#123;</div><div class=\"line\"> <span class=\"comment\">//设置数据库信息</span></div><div class=\"line\"> DriverManagerDataSource dataSource = <span class=\"keyword\">new</span> <span class=\"type\">DriverManagerDataSource</span>();</div><div class=\"line\"> dataSource.setDriverClassName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\"> dataSource.setUrl(<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>);</div><div class=\"line\"> dataSource.setUsername(<span class=\"string\">\"root\"</span>);</div><div class=\"line\"> dataSource.setPassword(<span class=\"string\">\"0000\"</span>);</div><div class=\"line\">   </div><div class=\"line\"> <span class=\"comment\">//创建jdbcTemplate对象</span></div><div class=\"line\"> JdbcTemplate jdbcTemplate = <span class=\"keyword\">new</span> <span class=\"type\">JdbcTemplate</span>(dataSource);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//写sql语句，根据username查询</span></div><div class=\"line\"> <span class=\"keyword\">String</span> sql = <span class=\"string\">\"select * from user where username=?\"</span>;</div><div class=\"line\"> <span class=\"comment\">//返回如果是list&lt;User&gt;的话，MyRowMapper()里面不用写循环</span></div><div class=\"line\"> User user = jdbcTemplate.queryForObject(sql, <span class=\"keyword\">new</span> <span class=\"type\">MyRowMapper</span>(), <span class=\"string\">\"lucy\"</span>);</div><div class=\"line\"> System.out.println(user);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRowMapper</span> <span class=\"keyword\"><span class=\"keyword\">implements</span> <span class=\"type\">RowMapper</span></span>&lt;<span class=\"title\">User</span>&gt; </span>&#123;</div><div class=\"line\"> @Override</div><div class=\"line\"> <span class=\"keyword\">public</span> User mapRow(ResultSet rs, int num) throws SQLException &#123;</div><div class=\"line\">  <span class=\"comment\">//1.从结果集合得到数据</span></div><div class=\"line\">  <span class=\"keyword\">String</span> username = rs.getString(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">  <span class=\"keyword\">String</span> password = rs.getString(<span class=\"string\">\"password\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//2.把得到的数据封装到对象里面</span></div><div class=\"line\">  User user = <span class=\"keyword\">new</span> <span class=\"type\">User</span>();</div><div class=\"line\">  user.setUsername(username);</div><div class=\"line\">  user.setPassword(password);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">return</span> user;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"spring配置c3p0连接池-dao使用jdbcTemplate\"><a href=\"#spring配置c3p0连接池-dao使用jdbcTemplate\" class=\"headerlink\" title=\"spring配置c3p0连接池,dao使用jdbcTemplate\"></a>spring配置c3p0连接池,dao使用jdbcTemplate</h1><ul>\n<li><p>1.导入jar包</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">c3p0-0</span><span class=\"selector-class\">.9</span><span class=\"selector-class\">.2-pre1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">mchange-commons-java-0</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.7</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>2.创建spring配置文件，配置连接池</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置c3p0连接池 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mchange.v2.c3p0.ComboPooledDataSource\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入属性值 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcUrl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0000\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建service和dao对象，在service中注入dao对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"c3p0.UserService\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入dao对象 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"c3p0.UserDao\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入jdbcTemplate对象 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcTemplate\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jdbcTemplate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建jdbcTemplate对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jdbcTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.core.JdbcTemplate\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 把dataSource传递到模板对象 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>3.UserService类</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserService</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">private</span> UserDao userDao;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserDao</span>(<span class=\"params\">UserDao userDao</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  userDao.<span class=\"keyword\">add</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>4.UserDao类</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserDao</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//得到JdbcTemplate对象</span></div><div class=\"line\"> <span class=\"keyword\">private</span> JdbcTemplate jdbcTemplate;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJdbcTemplate</span>(<span class=\"params\">JdbcTemplate jdbcTemplate</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.jdbcTemplate = jdbcTemplate;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  String sql = <span class=\"string\">\"insert into user value(?,?)\"</span>;</div><div class=\"line\">  jdbcTemplate.update(sql,<span class=\"string\">\"yasuo\"</span>,<span class=\"string\">\"4\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"spring事务\"><a href=\"#spring事务\" class=\"headerlink\" title=\"spring事务\"></a>spring事务</h1><p>1.编程式事务管理（以后再学）<br>2.声明式事务管理<br>xml配置文件实现<br>注解实现<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fh825xsiz5j30aq06f3ze.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fh825yneruj30j90cuad4.jpg\" alt=\"\"></p>\n<h3 id=\"xml配置文件实现\"><a href=\"#xml配置文件实现\" class=\"headerlink\" title=\"xml配置文件实现\"></a>xml配置文件实现</h3><p>OrdersDao类<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OrdersDao</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//注入jdbcTemplate</span></div><div class=\"line\"> <span class=\"keyword\">private</span> JdbcTemplate jdbcTemplate;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJdbcTemplate</span>(<span class=\"params\">JdbcTemplate jdbcTemplate</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.jdbcTemplate = jdbcTemplate;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lessMoney</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  String sql = <span class=\"string\">\"update account set salary=salary-? where username=?\"</span>;</div><div class=\"line\">  jdbcTemplate.update(sql,<span class=\"number\">1000</span>,<span class=\"string\">\"小王\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">moreMoney</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  String sql = <span class=\"string\">\"update account set salary=salary+? where username=?\"</span>;</div><div class=\"line\">  jdbcTemplate.update(sql,<span class=\"number\">1000</span>,<span class=\"string\">\"小马\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>OrdersService类<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OrdersService</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//注入dao</span></div><div class=\"line\"> <span class=\"keyword\">private</span> OrdersDao ordersDao;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOrdersDao</span>(<span class=\"params\">OrdersDao ordersDao</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.ordersDao = ordersDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accountMoney</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  ordersDao.lessMoney();</div><div class=\"line\">  ordersDao.moreMoney();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>配置文件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置c3p0连接池 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mchange.v2.c3p0.ComboPooledDataSource\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入属性值 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcUrl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0000\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- 1.配置事务管理器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"transactionManager\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入dataSource --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 2.配置事务增强 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tx:advice</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txadvice\"</span> <span class=\"attr\">transaction-manager</span>=<span class=\"string\">\"transactionManager\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 做事务操作 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">tx:attributes</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 设置进行事务操作的方法匹配规则 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"account*\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">tx:attributes</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tx:advice</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 3.配置切面 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">aop:config</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 切入点 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">aop:pointcut</span> <span class=\"attr\">expression</span>=<span class=\"string\">\"execution(* service.OrdersService.*(..))\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 切面 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">aop:advisor</span> <span class=\"attr\">advice-ref</span>=<span class=\"string\">\"txadvice\"</span> <span class=\"attr\">pointcut-ref</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">aop:config</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ordersService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"service.OrdersService\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ordersDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"ordersDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ordersDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dao.OrdersDao\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcTemplate\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jdbcTemplate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jdbcTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.core.JdbcTemplate\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"注解实现\"><a href=\"#注解实现\" class=\"headerlink\" title=\"注解实现\"></a>注解实现</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 1.配置事务管理器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"transactionManager\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入dataSource --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 2.开始注解事务 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tx:annotation-driven</span> <span class=\"attr\">transaction-manager</span>=<span class=\"string\">\"transactionManager\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Transactional</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OrdersService</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//注入dao</span></div><div class=\"line\"> <span class=\"keyword\">private</span> OrdersDao ordersDao;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOrdersDao</span><span class=\"params\">(OrdersDao ordersDao)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.ordersDao = ordersDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accountMoney</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  ordersDao.lessMoney();</div><div class=\"line\">  ordersDao.moreMoney();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<h1 id=\"aspectj注解aop操作\"><a href=\"#aspectj注解aop操作\" class=\"headerlink\" title=\"aspectj注解aop操作\"></a>aspectj注解aop操作</h1>","more":"<ul>\n<li><p>1.创建对象</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"book\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aop.Book\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myBook\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aop.MyBook\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>2.开启aop操作</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 开启aop自动代理 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">aop:aspectj-autoproxy</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>3.在增强类上面使用注解完成aop操作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyBook</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//在方法上用注解进行增强配置</span></div><div class=\"line\"> <span class=\"meta\">@Before</span>(<span class=\"string\">\"execution(* aop.Book.*(..))\"</span>)</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">before</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  System.out.println(<span class=\"string\">\"before....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>不同通知类型的注解<br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fh80voaasqj30e406l75u.jpg\" alt=\"\"></p>\n<h1 id=\"jdbcTemplate\"><a href=\"#jdbcTemplate\" class=\"headerlink\" title=\"jdbcTemplate\"></a>jdbcTemplate</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fh81w8xdpwj30g70bd0ug.jpg\" alt=\"\"></p>\n<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>导入jar包</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">spring-jdbc-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-tx-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">mysql-connector-java-5</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.17-bin</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>创建数据库和表</p>\n<h3 id=\"添加操作-删除-修改类似\"><a href=\"#添加操作-删除-修改类似\" class=\"headerlink\" title=\"添加操作(删除,修改类似)\"></a>添加操作(删除,修改类似)</h3><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Test</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"built_in\">add</span>() &#123;</div><div class=\"line\"> <span class=\"comment\">//设置数据库信息</span></div><div class=\"line\"> DriverManagerDataSource dataSource = <span class=\"keyword\">new</span> DriverManagerDataSource();</div><div class=\"line\"> dataSource.setDriverClassName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\"> dataSource.setUrl(<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>);</div><div class=\"line\"> dataSource.setUsername(<span class=\"string\">\"root\"</span>);</div><div class=\"line\"> dataSource.setPassword(<span class=\"string\">\"0000\"</span>);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//创建jdbcTemplate对象，设置数据源</span></div><div class=\"line\"> JdbcTemplate jdbcTemplate = <span class=\"keyword\">new</span> JdbcTemplate(dataSource);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//调用jdbcTemplate对象里面的方法实现操作</span></div><div class=\"line\"> <span class=\"keyword\">String</span> sql = <span class=\"string\">\"insert into user values(?,?)\"</span>;</div><div class=\"line\"> <span class=\"built_in\">int</span> rows = jdbcTemplate.update(sql,<span class=\"string\">\"tom\"</span>,<span class=\"string\">\"2501\"</span>);</div><div class=\"line\"> System.out.<span class=\"built_in\">println</span>(rows);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"查询操作\"><a href=\"#查询操作\" class=\"headerlink\" title=\"查询操作\"></a>查询操作</h3><ul>\n<li>1.和dbutils的比较<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fh81w9k3enj30j909b403.jpg\" alt=\"\"></li>\n<li><p>2.返回某个值</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Test</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> query() &#123;</div><div class=\"line\"> <span class=\"comment\">//设置数据库信息</span></div><div class=\"line\"> DriverManagerDataSource dataSource = <span class=\"keyword\">new</span> DriverManagerDataSource();</div><div class=\"line\"> dataSource.setDriverClassName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\"> dataSource.setUrl(<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>);</div><div class=\"line\"> dataSource.setUsername(<span class=\"string\">\"root\"</span>);</div><div class=\"line\"> dataSource.setPassword(<span class=\"string\">\"0000\"</span>);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//创建jdbcTemplate对象</span></div><div class=\"line\"> JdbcTemplate jdbcTemplate = <span class=\"keyword\">new</span> JdbcTemplate(dataSource);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//调用方法</span></div><div class=\"line\"> <span class=\"keyword\">String</span> sql = <span class=\"string\">\"select count(*) from user\"</span>;</div><div class=\"line\"> <span class=\"keyword\">int</span> rows = jdbcTemplate.queryForObject(sql, Integer.<span class=\"keyword\">class</span>);</div><div class=\"line\"> System.out.<span class=\"built_in\">println</span>(rows);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>3.返回对象</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Test</div><div class=\"line\"><span class=\"keyword\">public</span> void testObject() &#123;</div><div class=\"line\"> <span class=\"comment\">//设置数据库信息</span></div><div class=\"line\"> DriverManagerDataSource dataSource = <span class=\"keyword\">new</span> <span class=\"type\">DriverManagerDataSource</span>();</div><div class=\"line\"> dataSource.setDriverClassName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\"> dataSource.setUrl(<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>);</div><div class=\"line\"> dataSource.setUsername(<span class=\"string\">\"root\"</span>);</div><div class=\"line\"> dataSource.setPassword(<span class=\"string\">\"0000\"</span>);</div><div class=\"line\">   </div><div class=\"line\"> <span class=\"comment\">//创建jdbcTemplate对象</span></div><div class=\"line\"> JdbcTemplate jdbcTemplate = <span class=\"keyword\">new</span> <span class=\"type\">JdbcTemplate</span>(dataSource);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//写sql语句，根据username查询</span></div><div class=\"line\"> <span class=\"keyword\">String</span> sql = <span class=\"string\">\"select * from user where username=?\"</span>;</div><div class=\"line\"> <span class=\"comment\">//返回如果是list&lt;User&gt;的话，MyRowMapper()里面不用写循环</span></div><div class=\"line\"> User user = jdbcTemplate.queryForObject(sql, <span class=\"keyword\">new</span> <span class=\"type\">MyRowMapper</span>(), <span class=\"string\">\"lucy\"</span>);</div><div class=\"line\"> System.out.println(user);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRowMapper</span> <span class=\"keyword\"><span class=\"keyword\">implements</span> <span class=\"type\">RowMapper</span></span>&lt;<span class=\"title\">User</span>&gt; </span>&#123;</div><div class=\"line\"> @Override</div><div class=\"line\"> <span class=\"keyword\">public</span> User mapRow(ResultSet rs, int num) throws SQLException &#123;</div><div class=\"line\">  <span class=\"comment\">//1.从结果集合得到数据</span></div><div class=\"line\">  <span class=\"keyword\">String</span> username = rs.getString(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">  <span class=\"keyword\">String</span> password = rs.getString(<span class=\"string\">\"password\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//2.把得到的数据封装到对象里面</span></div><div class=\"line\">  User user = <span class=\"keyword\">new</span> <span class=\"type\">User</span>();</div><div class=\"line\">  user.setUsername(username);</div><div class=\"line\">  user.setPassword(password);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">return</span> user;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"spring配置c3p0连接池-dao使用jdbcTemplate\"><a href=\"#spring配置c3p0连接池-dao使用jdbcTemplate\" class=\"headerlink\" title=\"spring配置c3p0连接池,dao使用jdbcTemplate\"></a>spring配置c3p0连接池,dao使用jdbcTemplate</h1><ul>\n<li><p>1.导入jar包</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">c3p0-0</span><span class=\"selector-class\">.9</span><span class=\"selector-class\">.2-pre1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">mchange-commons-java-0</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.7</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>2.创建spring配置文件，配置连接池</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置c3p0连接池 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mchange.v2.c3p0.ComboPooledDataSource\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入属性值 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcUrl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0000\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建service和dao对象，在service中注入dao对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"c3p0.UserService\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入dao对象 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"c3p0.UserDao\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入jdbcTemplate对象 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcTemplate\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jdbcTemplate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建jdbcTemplate对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jdbcTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.core.JdbcTemplate\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 把dataSource传递到模板对象 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>3.UserService类</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserService</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">private</span> UserDao userDao;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserDao</span>(<span class=\"params\">UserDao userDao</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  userDao.<span class=\"keyword\">add</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>4.UserDao类</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserDao</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//得到JdbcTemplate对象</span></div><div class=\"line\"> <span class=\"keyword\">private</span> JdbcTemplate jdbcTemplate;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJdbcTemplate</span>(<span class=\"params\">JdbcTemplate jdbcTemplate</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.jdbcTemplate = jdbcTemplate;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  String sql = <span class=\"string\">\"insert into user value(?,?)\"</span>;</div><div class=\"line\">  jdbcTemplate.update(sql,<span class=\"string\">\"yasuo\"</span>,<span class=\"string\">\"4\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"spring事务\"><a href=\"#spring事务\" class=\"headerlink\" title=\"spring事务\"></a>spring事务</h1><p>1.编程式事务管理（以后再学）<br>2.声明式事务管理<br>xml配置文件实现<br>注解实现<br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1fh825xsiz5j30aq06f3ze.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fh825yneruj30j90cuad4.jpg\" alt=\"\"></p>\n<h3 id=\"xml配置文件实现\"><a href=\"#xml配置文件实现\" class=\"headerlink\" title=\"xml配置文件实现\"></a>xml配置文件实现</h3><p>OrdersDao类<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OrdersDao</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//注入jdbcTemplate</span></div><div class=\"line\"> <span class=\"keyword\">private</span> JdbcTemplate jdbcTemplate;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJdbcTemplate</span>(<span class=\"params\">JdbcTemplate jdbcTemplate</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.jdbcTemplate = jdbcTemplate;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lessMoney</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  String sql = <span class=\"string\">\"update account set salary=salary-? where username=?\"</span>;</div><div class=\"line\">  jdbcTemplate.update(sql,<span class=\"number\">1000</span>,<span class=\"string\">\"小王\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">moreMoney</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  String sql = <span class=\"string\">\"update account set salary=salary+? where username=?\"</span>;</div><div class=\"line\">  jdbcTemplate.update(sql,<span class=\"number\">1000</span>,<span class=\"string\">\"小马\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>OrdersService类<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OrdersService</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//注入dao</span></div><div class=\"line\"> <span class=\"keyword\">private</span> OrdersDao ordersDao;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOrdersDao</span>(<span class=\"params\">OrdersDao ordersDao</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.ordersDao = ordersDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accountMoney</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  ordersDao.lessMoney();</div><div class=\"line\">  ordersDao.moreMoney();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>配置文件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置c3p0连接池 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mchange.v2.c3p0.ComboPooledDataSource\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入属性值 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcUrl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql:///spring_day03\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0000\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- 1.配置事务管理器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"transactionManager\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入dataSource --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 2.配置事务增强 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tx:advice</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txadvice\"</span> <span class=\"attr\">transaction-manager</span>=<span class=\"string\">\"transactionManager\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 做事务操作 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">tx:attributes</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 设置进行事务操作的方法匹配规则 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"account*\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">tx:attributes</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tx:advice</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 3.配置切面 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">aop:config</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 切入点 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">aop:pointcut</span> <span class=\"attr\">expression</span>=<span class=\"string\">\"execution(* service.OrdersService.*(..))\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 切面 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">aop:advisor</span> <span class=\"attr\">advice-ref</span>=<span class=\"string\">\"txadvice\"</span> <span class=\"attr\">pointcut-ref</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">aop:config</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ordersService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"service.OrdersService\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ordersDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"ordersDao\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ordersDao\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dao.OrdersDao\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcTemplate\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jdbcTemplate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jdbcTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.core.JdbcTemplate\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"注解实现\"><a href=\"#注解实现\" class=\"headerlink\" title=\"注解实现\"></a>注解实现</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 1.配置事务管理器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"transactionManager\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入dataSource --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 2.开始注解事务 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tx:annotation-driven</span> <span class=\"attr\">transaction-manager</span>=<span class=\"string\">\"transactionManager\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Transactional</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OrdersService</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//注入dao</span></div><div class=\"line\"> <span class=\"keyword\">private</span> OrdersDao ordersDao;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOrdersDao</span><span class=\"params\">(OrdersDao ordersDao)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.ordersDao = ordersDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accountMoney</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  ordersDao.lessMoney();</div><div class=\"line\">  ordersDao.moreMoney();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"spring02","toc":true,"date":"2017-06-29T03:01:05.000Z","_content":"# spring注解创建对象\n<!--more-->\n### 1.导入jar包\n```\ncommons-logging-1.3.jar\nlog4j-1.2.16.jar\nspring-beans-4.0.6.RELEASE.jar\nspring-context-4.0.6.RELEASE.jar\nspring-core-4.0.6.RELEASE.jar\nspring-expression-4.0.6.RELEASE.jar\nspring-aop-4.0.6.RELEASE.jar\n```\n### 2.创建类\n```\n@Component(value=\"user\")//代替xml配置user类\n@Scope(value=\"prototype\")//多实例配置\npublic class User {\n\tpublic void add() {\n\t\tSystem.out.println(\"add.....\");\n\t}\n}\n```\n\n### 3.spring配置文件\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:context=\"http://www.springframework.org/schema/context\" xsi:schemaLocation=\"\n\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"> <!-- bean definitions here -->\n\t<!-- 开启注解扫描 -->\n\t<context:component-scan base-package=\"anno\"></context:component-scan>\n\n\t<!-- 只扫描属性上的注解 -->\n\t<!-- \t<context:annotation-config></context:annotation-config>-->\n</beans>\n```\n### 4.测试类\n```\n@Test\npublic void testUser() {\n\tApplicationContext context = \n\t\t\tnew ClassPathXmlApplicationContext(\"bean1.xml\");\n\tUser user = (User) context.getBean(\"user\");\n\tuser.add();\n}\n```\n### NOTE:创建对象的注解\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fh1whkrrexj30fw06dt9z.jpg)\n# spring注解注入属性\n### userService类\n```\n@Service(\"userService\")\npublic class Userservice {\n\t\n//\t//得到dao对象\n//\t@Autowired\n//\tprivate UserDao userDao;\n//\t//使用注解不需要set方法\n\t\n\t//得到dao对象\n\t@Resource(name=\"userDao\")\n\tprivate UserDao userDao;\n\t//使用注解不需要set方法\n\t\n\tpublic void add() {\n\t\tSystem.out.println(\"service....\");\n\t\tuserDao.add();\n\t}\n}\n```\n### userDao类\n```\n@Component(\"userDao\")\npublic class UserDao {\n\tpublic void add() {\n\t\tSystem.out.println(\"dao....\");\n\t}\n}\n```\n# AOP\n采用横向抽取机制，取代了传统纵向继承体系重复性代码\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fh1wz2rfguj30l70bv40h.jpg)\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fh1wz3vtzqj30e009xt9l.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fh1x3egpzjj30ey09375s.jpg)\n# aspectj\nAspectJ是一个面向切面的框架，它扩展了Java语言。AspectJ定义了AOP语法，所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。\n1.在spring里面进行aop操作，使用aspectj实现\naspectj不是spring的一部分，和spring一起使用进行aop操作\nspring2.0以后新增了对aspectj的支持\n2.使用aspectj实现aop有2中方式\nxml配置和注解方式\n<hr>\n### 要导入的jar包\naopalliance-1.0-20100517.210215-13.jar\naspectjweaver-1.6.10.jar\nspring-aop-4.0.6.RELEASE.jar\nspring-aspects-4.0.6.RELEASE.jar\n核心配置文件导入aop约束\n### 使用表达式配置切入点\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fh1xl1upsrj30da05jwf6.jpg)\n### 被增强类\n```\npublic class Book {\n\t\n\tpublic void add() {\n\t\tSystem.out.println(\"add....\");\n\t}\n}\n```\n### 增强类\n```\npublic class MyBook {\n\t\n\tpublic void before1() {\n\t\tSystem.out.println(\"前置增强......\");\n\t}\n\t\n\tpublic void after1() {\n\t\tSystem.out.println(\"后置增强....\");\n\t}\n\t\n\t//环绕通知\n\tpublic void around1(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {\n\t\t//方法之前\n\t\tSystem.out.println(\"方法之前....\");\n\t\t\n\t\tproceedingJoinPoint.proceed();\n\t\t\n\t\t//方法之后\n\t\tSystem.out.println(\"方法之后....\");\n\t}\n}\n```\n### 配置文件\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:aop=\"http://www.springframework.org/schema/aop\" xsi:schemaLocation=\"\n        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\"> <!-- bean definitions here -->\n\t<!-- 配置对象 -->\n\t<bean id=\"book\" class=\"aop.Book\"></bean>\n\t<bean id=\"myBook\" class=\"aop.MyBook\"></bean>\n\n\t<!-- 配置aop操作 -->\n\t<aop:config>\n\t\t<!-- 配置切入点 -->\n\t\t<aop:pointcut expression=\"execution(* aop.Book.*(..))\" id=\"pointcut1\"/>\n\t\t<!-- 配置切面 -->\n\t\t<aop:aspect ref=\"myBook\">\n\t\t\t<!-- 配置增强类型 -->\n\t\t\t<aop:before method=\"before1\" pointcut-ref=\"pointcut1\"/>\n\t\t\t\n\t\t\t<aop:after-returning method=\"after1\" pointcut-ref=\"pointcut1\"/>\n\t\t\n\t\t\t<aop:around method=\"around1\" pointcut-ref=\"pointcut1\"/>\n\t\t</aop:aspect>\n\t</aop:config>\n\n</beans>\n```\n\n\n\n\n\n\n","source":"_posts/spring02.md","raw":"---\ntitle: spring02\ntoc: true\ndate: 2017-06-29 11:01:05\ntags:\n- Java基础\n---\n# spring注解创建对象\n<!--more-->\n### 1.导入jar包\n```\ncommons-logging-1.3.jar\nlog4j-1.2.16.jar\nspring-beans-4.0.6.RELEASE.jar\nspring-context-4.0.6.RELEASE.jar\nspring-core-4.0.6.RELEASE.jar\nspring-expression-4.0.6.RELEASE.jar\nspring-aop-4.0.6.RELEASE.jar\n```\n### 2.创建类\n```\n@Component(value=\"user\")//代替xml配置user类\n@Scope(value=\"prototype\")//多实例配置\npublic class User {\n\tpublic void add() {\n\t\tSystem.out.println(\"add.....\");\n\t}\n}\n```\n\n### 3.spring配置文件\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:context=\"http://www.springframework.org/schema/context\" xsi:schemaLocation=\"\n\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"> <!-- bean definitions here -->\n\t<!-- 开启注解扫描 -->\n\t<context:component-scan base-package=\"anno\"></context:component-scan>\n\n\t<!-- 只扫描属性上的注解 -->\n\t<!-- \t<context:annotation-config></context:annotation-config>-->\n</beans>\n```\n### 4.测试类\n```\n@Test\npublic void testUser() {\n\tApplicationContext context = \n\t\t\tnew ClassPathXmlApplicationContext(\"bean1.xml\");\n\tUser user = (User) context.getBean(\"user\");\n\tuser.add();\n}\n```\n### NOTE:创建对象的注解\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fh1whkrrexj30fw06dt9z.jpg)\n# spring注解注入属性\n### userService类\n```\n@Service(\"userService\")\npublic class Userservice {\n\t\n//\t//得到dao对象\n//\t@Autowired\n//\tprivate UserDao userDao;\n//\t//使用注解不需要set方法\n\t\n\t//得到dao对象\n\t@Resource(name=\"userDao\")\n\tprivate UserDao userDao;\n\t//使用注解不需要set方法\n\t\n\tpublic void add() {\n\t\tSystem.out.println(\"service....\");\n\t\tuserDao.add();\n\t}\n}\n```\n### userDao类\n```\n@Component(\"userDao\")\npublic class UserDao {\n\tpublic void add() {\n\t\tSystem.out.println(\"dao....\");\n\t}\n}\n```\n# AOP\n采用横向抽取机制，取代了传统纵向继承体系重复性代码\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fh1wz2rfguj30l70bv40h.jpg)\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fh1wz3vtzqj30e009xt9l.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fh1x3egpzjj30ey09375s.jpg)\n# aspectj\nAspectJ是一个面向切面的框架，它扩展了Java语言。AspectJ定义了AOP语法，所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。\n1.在spring里面进行aop操作，使用aspectj实现\naspectj不是spring的一部分，和spring一起使用进行aop操作\nspring2.0以后新增了对aspectj的支持\n2.使用aspectj实现aop有2中方式\nxml配置和注解方式\n<hr>\n### 要导入的jar包\naopalliance-1.0-20100517.210215-13.jar\naspectjweaver-1.6.10.jar\nspring-aop-4.0.6.RELEASE.jar\nspring-aspects-4.0.6.RELEASE.jar\n核心配置文件导入aop约束\n### 使用表达式配置切入点\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fh1xl1upsrj30da05jwf6.jpg)\n### 被增强类\n```\npublic class Book {\n\t\n\tpublic void add() {\n\t\tSystem.out.println(\"add....\");\n\t}\n}\n```\n### 增强类\n```\npublic class MyBook {\n\t\n\tpublic void before1() {\n\t\tSystem.out.println(\"前置增强......\");\n\t}\n\t\n\tpublic void after1() {\n\t\tSystem.out.println(\"后置增强....\");\n\t}\n\t\n\t//环绕通知\n\tpublic void around1(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {\n\t\t//方法之前\n\t\tSystem.out.println(\"方法之前....\");\n\t\t\n\t\tproceedingJoinPoint.proceed();\n\t\t\n\t\t//方法之后\n\t\tSystem.out.println(\"方法之后....\");\n\t}\n}\n```\n### 配置文件\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:aop=\"http://www.springframework.org/schema/aop\" xsi:schemaLocation=\"\n        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\"> <!-- bean definitions here -->\n\t<!-- 配置对象 -->\n\t<bean id=\"book\" class=\"aop.Book\"></bean>\n\t<bean id=\"myBook\" class=\"aop.MyBook\"></bean>\n\n\t<!-- 配置aop操作 -->\n\t<aop:config>\n\t\t<!-- 配置切入点 -->\n\t\t<aop:pointcut expression=\"execution(* aop.Book.*(..))\" id=\"pointcut1\"/>\n\t\t<!-- 配置切面 -->\n\t\t<aop:aspect ref=\"myBook\">\n\t\t\t<!-- 配置增强类型 -->\n\t\t\t<aop:before method=\"before1\" pointcut-ref=\"pointcut1\"/>\n\t\t\t\n\t\t\t<aop:after-returning method=\"after1\" pointcut-ref=\"pointcut1\"/>\n\t\t\n\t\t\t<aop:around method=\"around1\" pointcut-ref=\"pointcut1\"/>\n\t\t</aop:aspect>\n\t</aop:config>\n\n</beans>\n```\n\n\n\n\n\n\n","slug":"spring02","published":1,"updated":"2018-01-20T06:44:37.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m90g004g44wadhb5azs8","content":"<h1 id=\"spring注解创建对象\"><a href=\"#spring注解创建对象\" class=\"headerlink\" title=\"spring注解创建对象\"></a>spring注解创建对象</h1><a id=\"more\"></a>\n<h3 id=\"1-导入jar包\"><a href=\"#1-导入jar包\" class=\"headerlink\" title=\"1.导入jar包\"></a>1.导入jar包</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">commons-logging-1</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">log4j-1</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.16</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-beans-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-context-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-core-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-expression-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-aop-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-创建类\"><a href=\"#2-创建类\" class=\"headerlink\" title=\"2.创建类\"></a>2.创建类</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">@Component</span>(value=<span class=\"string\">\"user\"</span>)<span class=\"comment\">//代替xml配置user类</span></div><div class=\"line\"><span class=\"variable\">@Scope</span>(value=<span class=\"string\">\"prototype\"</span>)<span class=\"comment\">//多实例配置</span></div><div class=\"line\">public class User &#123;</div><div class=\"line\"> <span class=\"selector-tag\">public</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">add</span>() &#123;</div><div class=\"line\">  <span class=\"selector-tag\">System</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.println</span>(<span class=\"string\">\"add.....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3-spring配置文件\"><a href=\"#3-spring配置文件\" class=\"headerlink\" title=\"3.spring配置文件\"></a>3.spring配置文件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></div><div class=\"line\"> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\"> <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></div><div class=\"line\"> http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\"> http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"&gt; <span class=\"comment\">&lt;!-- bean definitions here --&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 开启注解扫描 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"anno\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">context:component-scan</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 只扫描属性上的注解 --&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- \t&lt;context:annotation-config&gt;&lt;/context:annotation-config&gt;--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"4-测试类\"><a href=\"#4-测试类\" class=\"headerlink\" title=\"4.测试类\"></a>4.测试类</h3><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">testUser</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"> ApplicationContext context = </div><div class=\"line\">   <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"bean1.xml\"</span>);</div><div class=\"line\"> User user = (User) context.getBean(<span class=\"string\">\"user\"</span>);</div><div class=\"line\"> user.add();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"NOTE-创建对象的注解\"><a href=\"#NOTE-创建对象的注解\" class=\"headerlink\" title=\"NOTE:创建对象的注解\"></a>NOTE:创建对象的注解</h3><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fh1whkrrexj30fw06dt9z.jpg\" alt=\"\"></p>\n<h1 id=\"spring注解注入属性\"><a href=\"#spring注解注入属性\" class=\"headerlink\" title=\"spring注解注入属性\"></a>spring注解注入属性</h1><h3 id=\"userService类\"><a href=\"#userService类\" class=\"headerlink\" title=\"userService类\"></a>userService类</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Service(<span class=\"meta-string\">\"userService\"</span>)</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Userservice</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\">//\t//得到dao对象</span></div><div class=\"line\"><span class=\"comment\">//\t@Autowired</span></div><div class=\"line\"><span class=\"comment\">//\tprivate UserDao userDao;</span></div><div class=\"line\"><span class=\"comment\">//\t//使用注解不需要set方法</span></div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//得到dao对象</span></div><div class=\"line\"> <span class=\"meta\">@Resource(name=<span class=\"meta-string\">\"userDao\"</span>)</span></div><div class=\"line\"> <span class=\"keyword\">private</span> UserDao userDao;</div><div class=\"line\"> <span class=\"comment\">//使用注解不需要set方法</span></div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> void add() &#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"service....\"</span>);</div><div class=\"line\">  userDao.add();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"userDao类\"><a href=\"#userDao类\" class=\"headerlink\" title=\"userDao类\"></a>userDao类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Component(<span class=\"string\">\"userDao\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserDao</span> &#123;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"dao....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h1><p>采用横向抽取机制，取代了传统纵向继承体系重复性代码<br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fh1wz2rfguj30l70bv40h.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fh1wz3vtzqj30e009xt9l.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fh1x3egpzjj30ey09375s.jpg\" alt=\"\"></p>\n<h1 id=\"aspectj\"><a href=\"#aspectj\" class=\"headerlink\" title=\"aspectj\"></a>aspectj</h1><p>AspectJ是一个面向切面的框架，它扩展了Java语言。AspectJ定义了AOP语法，所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。<br>1.在spring里面进行aop操作，使用aspectj实现<br>aspectj不是spring的一部分，和spring一起使用进行aop操作<br>spring2.0以后新增了对aspectj的支持<br>2.使用aspectj实现aop有2中方式<br>xml配置和注解方式</p>\n<p><hr></p>\n<h3 id=\"要导入的jar包\"><a href=\"#要导入的jar包\" class=\"headerlink\" title=\"要导入的jar包\"></a>要导入的jar包</h3><p>aopalliance-1.0-20100517.210215-13.jar<br>aspectjweaver-1.6.10.jar<br>spring-aop-4.0.6.RELEASE.jar<br>spring-aspects-4.0.6.RELEASE.jar<br>核心配置文件导入aop约束</p>\n<h3 id=\"使用表达式配置切入点\"><a href=\"#使用表达式配置切入点\" class=\"headerlink\" title=\"使用表达式配置切入点\"></a>使用表达式配置切入点</h3><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fh1xl1upsrj30da05jwf6.jpg\" alt=\"\"></p>\n<h3 id=\"被增强类\"><a href=\"#被增强类\" class=\"headerlink\" title=\"被增强类\"></a>被增强类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Book</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"add....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"增强类\"><a href=\"#增强类\" class=\"headerlink\" title=\"增强类\"></a>增强类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MyBook</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">before1</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"前置增强......\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">after1</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"后置增强....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//环绕通知</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">around1</span>(<span class=\"params\">ProceedingJoinPoint proceedingJoinPoint</span>) throws Throwable </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//方法之前</span></div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"方法之前....\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  proceedingJoinPoint.proceed();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//方法之后</span></div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"方法之后....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></div><div class=\"line\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></div><div class=\"line\">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\"&gt; <span class=\"comment\">&lt;!-- bean definitions here --&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 配置对象 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"book\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aop.Book\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myBook\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aop.MyBook\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 配置aop操作 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">aop:config</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 配置切入点 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">aop:pointcut</span> <span class=\"attr\">expression</span>=<span class=\"string\">\"execution(* aop.Book.*(..))\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 配置切面 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">aop:aspect</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"myBook\"</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!-- 配置增强类型 --&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">aop:before</span> <span class=\"attr\">method</span>=<span class=\"string\">\"before1\"</span> <span class=\"attr\">pointcut-ref</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\">   </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">aop:after-returning</span> <span class=\"attr\">method</span>=<span class=\"string\">\"after1\"</span> <span class=\"attr\">pointcut-ref</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\">  </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">aop:around</span> <span class=\"attr\">method</span>=<span class=\"string\">\"around1\"</span> <span class=\"attr\">pointcut-ref</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">aop:aspect</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">aop:config</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"<h1 id=\"spring注解创建对象\"><a href=\"#spring注解创建对象\" class=\"headerlink\" title=\"spring注解创建对象\"></a>spring注解创建对象</h1>","more":"<h3 id=\"1-导入jar包\"><a href=\"#1-导入jar包\" class=\"headerlink\" title=\"1.导入jar包\"></a>1.导入jar包</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">commons-logging-1</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">log4j-1</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.16</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-beans-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-context-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-core-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-expression-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">spring-aop-4</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.RELEASE</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-创建类\"><a href=\"#2-创建类\" class=\"headerlink\" title=\"2.创建类\"></a>2.创建类</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">@Component</span>(value=<span class=\"string\">\"user\"</span>)<span class=\"comment\">//代替xml配置user类</span></div><div class=\"line\"><span class=\"variable\">@Scope</span>(value=<span class=\"string\">\"prototype\"</span>)<span class=\"comment\">//多实例配置</span></div><div class=\"line\">public class User &#123;</div><div class=\"line\"> <span class=\"selector-tag\">public</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">add</span>() &#123;</div><div class=\"line\">  <span class=\"selector-tag\">System</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.println</span>(<span class=\"string\">\"add.....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3-spring配置文件\"><a href=\"#3-spring配置文件\" class=\"headerlink\" title=\"3.spring配置文件\"></a>3.spring配置文件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></div><div class=\"line\"> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\"> <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</div><div class=\"line\"> http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\"> http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"</span>&gt;</span> <span class=\"comment\">&lt;!-- bean definitions here --&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 开启注解扫描 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"anno\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">context:component-scan</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 只扫描属性上的注解 --&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- \t&lt;context:annotation-config&gt;&lt;/context:annotation-config&gt;--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"4-测试类\"><a href=\"#4-测试类\" class=\"headerlink\" title=\"4.测试类\"></a>4.测试类</h3><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Test</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">testUser</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"> ApplicationContext context = </div><div class=\"line\">   <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"bean1.xml\"</span>);</div><div class=\"line\"> User user = (User) context.getBean(<span class=\"string\">\"user\"</span>);</div><div class=\"line\"> user.add();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"NOTE-创建对象的注解\"><a href=\"#NOTE-创建对象的注解\" class=\"headerlink\" title=\"NOTE:创建对象的注解\"></a>NOTE:创建对象的注解</h3><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fh1whkrrexj30fw06dt9z.jpg\" alt=\"\"></p>\n<h1 id=\"spring注解注入属性\"><a href=\"#spring注解注入属性\" class=\"headerlink\" title=\"spring注解注入属性\"></a>spring注解注入属性</h1><h3 id=\"userService类\"><a href=\"#userService类\" class=\"headerlink\" title=\"userService类\"></a>userService类</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Service(<span class=\"meta-string\">\"userService\"</span>)</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Userservice</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\">//\t//得到dao对象</span></div><div class=\"line\"><span class=\"comment\">//\t@Autowired</span></div><div class=\"line\"><span class=\"comment\">//\tprivate UserDao userDao;</span></div><div class=\"line\"><span class=\"comment\">//\t//使用注解不需要set方法</span></div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//得到dao对象</span></div><div class=\"line\"> <span class=\"meta\">@Resource(name=<span class=\"meta-string\">\"userDao\"</span>)</span></div><div class=\"line\"> <span class=\"keyword\">private</span> UserDao userDao;</div><div class=\"line\"> <span class=\"comment\">//使用注解不需要set方法</span></div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> void add() &#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"service....\"</span>);</div><div class=\"line\">  userDao.add();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"userDao类\"><a href=\"#userDao类\" class=\"headerlink\" title=\"userDao类\"></a>userDao类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Component(<span class=\"string\">\"userDao\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserDao</span> &#123;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"dao....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h1><p>采用横向抽取机制，取代了传统纵向继承体系重复性代码<br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fh1wz2rfguj30l70bv40h.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fh1wz3vtzqj30e009xt9l.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fh1x3egpzjj30ey09375s.jpg\" alt=\"\"></p>\n<h1 id=\"aspectj\"><a href=\"#aspectj\" class=\"headerlink\" title=\"aspectj\"></a>aspectj</h1><p>AspectJ是一个面向切面的框架，它扩展了Java语言。AspectJ定义了AOP语法，所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。<br>1.在spring里面进行aop操作，使用aspectj实现<br>aspectj不是spring的一部分，和spring一起使用进行aop操作<br>spring2.0以后新增了对aspectj的支持<br>2.使用aspectj实现aop有2中方式<br>xml配置和注解方式</p>\n<p><hr></p>\n<h3 id=\"要导入的jar包\"><a href=\"#要导入的jar包\" class=\"headerlink\" title=\"要导入的jar包\"></a>要导入的jar包</h3><p>aopalliance-1.0-20100517.210215-13.jar<br>aspectjweaver-1.6.10.jar<br>spring-aop-4.0.6.RELEASE.jar<br>spring-aspects-4.0.6.RELEASE.jar<br>核心配置文件导入aop约束</p>\n<h3 id=\"使用表达式配置切入点\"><a href=\"#使用表达式配置切入点\" class=\"headerlink\" title=\"使用表达式配置切入点\"></a>使用表达式配置切入点</h3><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fh1xl1upsrj30da05jwf6.jpg\" alt=\"\"></p>\n<h3 id=\"被增强类\"><a href=\"#被增强类\" class=\"headerlink\" title=\"被增强类\"></a>被增强类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Book</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"add....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"增强类\"><a href=\"#增强类\" class=\"headerlink\" title=\"增强类\"></a>增强类</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MyBook</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">before1</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"前置增强......\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">after1</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"后置增强....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//环绕通知</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">around1</span>(<span class=\"params\">ProceedingJoinPoint proceedingJoinPoint</span>) throws Throwable </span>&#123;</div><div class=\"line\">  <span class=\"comment\">//方法之前</span></div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"方法之前....\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  proceedingJoinPoint.proceed();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//方法之后</span></div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"方法之后....\"</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</div><div class=\"line\">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\"</span>&gt;</span> <span class=\"comment\">&lt;!-- bean definitions here --&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 配置对象 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"book\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aop.Book\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myBook\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aop.MyBook\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 配置aop操作 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">aop:config</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 配置切入点 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">aop:pointcut</span> <span class=\"attr\">expression</span>=<span class=\"string\">\"execution(* aop.Book.*(..))\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 配置切面 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">aop:aspect</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"myBook\"</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!-- 配置增强类型 --&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">aop:before</span> <span class=\"attr\">method</span>=<span class=\"string\">\"before1\"</span> <span class=\"attr\">pointcut-ref</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\">   </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">aop:after-returning</span> <span class=\"attr\">method</span>=<span class=\"string\">\"after1\"</span> <span class=\"attr\">pointcut-ref</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\">  </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">aop:around</span> <span class=\"attr\">method</span>=<span class=\"string\">\"around1\"</span> <span class=\"attr\">pointcut-ref</span>=<span class=\"string\">\"pointcut1\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">aop:aspect</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">aop:config</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"spring04","toc":true,"date":"2017-07-07T05:34:59.000Z","_content":"ssh整合\n<!--more-->\n# struts和spring整合\n### 1.目的\n把action的创建交给spring\n### 2.导入jar包\nstruts2-spring-plugin-2.3.24.jar\nstruts2和spring的jar\n### 3.配置文件\nspring配置文件\n```\n<!-- 配置action对象(不要忘记多实例的配置) -->\n<bean id=\"userAction\" class=\"action.UserAction\" scope=\"prototype\"></bean>\n```\nstruts2配置文件\n```\n<package name=\"hellodemo\" extends=\"struts-default\" namespace=\"/\">\n\t<!-- class里面写spring里面配置的id -->\n\t<action name=\"userAction\" class=\"userAction\"></action>\n</package>\n```\n* 其他步骤这里省略\n# hibernate和spring整合\n### 1.目的\n把sessionFactory的创建交给spring，在服务器启动时创建\n### 2.导入jar包\nspring-orm-4.0.6.RELEASE.jar\nhibernate和spring的jar\n### 3.配置文件\nspring配置文件\n```\n<!-- 配置c3p0连接池 -->\n<bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n\t<!-- 注入属性值 -->\n\t<property name=\"driverClass\" value=\"com.mysql.jdbc.Driver\"></property>\n\t<property name=\"jdbcUrl\" value=\"jdbc:mysql:///spring_day04\"></property>\n\t<property name=\"user\" value=\"root\"></property>\n\t<property name=\"password\" value=\"0000\"></property>\n</bean>\n<!-- sessionFactory创建交给spring -->\n<bean id=\"sessionFactory\" class=\"org.springframework.orm.hibernate4.LocalSessionFactoryBean\">\n\t<!-- 注入DataSource -->\n\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n\t<!-- 指定hibernate配置文件 -->\n\t<property name=\"configLocations\" value=\"classpath:hibernate.cfg.xml\"></property>\n</bean>\n```\n* hibernate的配置文件省略\n# dao使用hibernateTemplate\nspring配置文件需要添加的配置\n```\n<!-- 第一步配置事务管理器 -->\n<bean id=\"transactionManager\" class=\"org.springframework.orm.hibernate4.HibernateTransactionManager\">\n\t<!-- 注入sessionFactory -->\n\t<property name=\"sessionFactory\" ref=\"sessionFactory\"></property>\n</bean>\n<!-- 第二步开启事务注解 -->\n<tx:annotation-driven transaction-manager=\"transactionManager\"/>\n \n<!-- 配置action对象 -->\n<bean id=\"userAction\" class=\"action.UserAction\" scope=\"prototype\">\n\t<!-- 注入service -->\n\t<property name=\"userService\" ref=\"userService\"></property>\n</bean>\n<!-- 创建service对象 -->\n<bean id=\"userService\" class=\"service.UserService\">\n\t<!-- 注入dao -->\n\t<property name=\"userDao\" ref=\"userDaoImpl\"></property>\n</bean>\n<!-- 创建实现类对象 -->\n<bean id=\"userDaoImpl\" class=\"dao.UserDaoImpl\">\n\t<!-- 注入hibernateTemplate -->\n\t<property name=\"hibernateTemplate\" ref=\"hibernateTemplate\"></property>\n</bean>\n<!-- 创建hibernateTemplate对象 -->\n<bean id=\"hibernateTemplate\" class=\"org.springframework.orm.hibernate4.HibernateTemplate\">\n\t<!-- 注入sessionFactory -->\n\t<property name=\"sessionFactory\" ref=\"sessionFactory\"></property>\n</bean>\n```\nservice\n```\n@Transactional\npublic class UserService {\n\t//注入dao对象\n\tprivate UserDao userDao;\n\tpublic void setUserDao(UserDao userDao) {\n\t\tthis.userDao = userDao;\n\t}\n\t\n\tpublic void add(){\n\t\tSystem.out.println(\"service....\");\n\t\tuserDao.add();\n\t}\n}\n```\ndao实现类\n```\npublic class UserDaoImpl implements UserDao {\n\t//得到hibernateTemplate对象\n\tprivate HibernateTemplate hibernateTemplate;\n\tpublic void setHibernateTemplate(HibernateTemplate hibernateTemplate) {\n\t\tthis.hibernateTemplate = hibernateTemplate;\n\t}\n\n\tpublic void add() {\n\t\tUser user = new User();\n\t\tuser.setUsername(\"yasuo\");\n\t\tuser.setAddress(\"zed\");\n\t\t//调用save方法添加\n\t\thibernateTemplate.save(user);\n\t}\n}\n```\n# hibernateTemplate方法\n添加\nsave(entity)\n根据id查询\nget(entity.class, id)\nfind方法查询所有记录\nfind(\"from User\")\nfind方法条件查询\nfind(\"from User where username=?\", \"yasuo\")\n# 把hibernate配置文件写到spring配置文件中\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fhemlp792bj30hj082dif.jpg)\n# spring分模块开发\n引入其他xml文件\n```\n<import resource=\"classpath:user.xml\"/>\n```\n","source":"_posts/spring04.md","raw":"---\ntitle: spring04\ntoc: true\ndate: 2017-07-07 13:34:59\ntags:\n- Java基础\n---\nssh整合\n<!--more-->\n# struts和spring整合\n### 1.目的\n把action的创建交给spring\n### 2.导入jar包\nstruts2-spring-plugin-2.3.24.jar\nstruts2和spring的jar\n### 3.配置文件\nspring配置文件\n```\n<!-- 配置action对象(不要忘记多实例的配置) -->\n<bean id=\"userAction\" class=\"action.UserAction\" scope=\"prototype\"></bean>\n```\nstruts2配置文件\n```\n<package name=\"hellodemo\" extends=\"struts-default\" namespace=\"/\">\n\t<!-- class里面写spring里面配置的id -->\n\t<action name=\"userAction\" class=\"userAction\"></action>\n</package>\n```\n* 其他步骤这里省略\n# hibernate和spring整合\n### 1.目的\n把sessionFactory的创建交给spring，在服务器启动时创建\n### 2.导入jar包\nspring-orm-4.0.6.RELEASE.jar\nhibernate和spring的jar\n### 3.配置文件\nspring配置文件\n```\n<!-- 配置c3p0连接池 -->\n<bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n\t<!-- 注入属性值 -->\n\t<property name=\"driverClass\" value=\"com.mysql.jdbc.Driver\"></property>\n\t<property name=\"jdbcUrl\" value=\"jdbc:mysql:///spring_day04\"></property>\n\t<property name=\"user\" value=\"root\"></property>\n\t<property name=\"password\" value=\"0000\"></property>\n</bean>\n<!-- sessionFactory创建交给spring -->\n<bean id=\"sessionFactory\" class=\"org.springframework.orm.hibernate4.LocalSessionFactoryBean\">\n\t<!-- 注入DataSource -->\n\t<property name=\"dataSource\" ref=\"dataSource\"></property>\n\t<!-- 指定hibernate配置文件 -->\n\t<property name=\"configLocations\" value=\"classpath:hibernate.cfg.xml\"></property>\n</bean>\n```\n* hibernate的配置文件省略\n# dao使用hibernateTemplate\nspring配置文件需要添加的配置\n```\n<!-- 第一步配置事务管理器 -->\n<bean id=\"transactionManager\" class=\"org.springframework.orm.hibernate4.HibernateTransactionManager\">\n\t<!-- 注入sessionFactory -->\n\t<property name=\"sessionFactory\" ref=\"sessionFactory\"></property>\n</bean>\n<!-- 第二步开启事务注解 -->\n<tx:annotation-driven transaction-manager=\"transactionManager\"/>\n \n<!-- 配置action对象 -->\n<bean id=\"userAction\" class=\"action.UserAction\" scope=\"prototype\">\n\t<!-- 注入service -->\n\t<property name=\"userService\" ref=\"userService\"></property>\n</bean>\n<!-- 创建service对象 -->\n<bean id=\"userService\" class=\"service.UserService\">\n\t<!-- 注入dao -->\n\t<property name=\"userDao\" ref=\"userDaoImpl\"></property>\n</bean>\n<!-- 创建实现类对象 -->\n<bean id=\"userDaoImpl\" class=\"dao.UserDaoImpl\">\n\t<!-- 注入hibernateTemplate -->\n\t<property name=\"hibernateTemplate\" ref=\"hibernateTemplate\"></property>\n</bean>\n<!-- 创建hibernateTemplate对象 -->\n<bean id=\"hibernateTemplate\" class=\"org.springframework.orm.hibernate4.HibernateTemplate\">\n\t<!-- 注入sessionFactory -->\n\t<property name=\"sessionFactory\" ref=\"sessionFactory\"></property>\n</bean>\n```\nservice\n```\n@Transactional\npublic class UserService {\n\t//注入dao对象\n\tprivate UserDao userDao;\n\tpublic void setUserDao(UserDao userDao) {\n\t\tthis.userDao = userDao;\n\t}\n\t\n\tpublic void add(){\n\t\tSystem.out.println(\"service....\");\n\t\tuserDao.add();\n\t}\n}\n```\ndao实现类\n```\npublic class UserDaoImpl implements UserDao {\n\t//得到hibernateTemplate对象\n\tprivate HibernateTemplate hibernateTemplate;\n\tpublic void setHibernateTemplate(HibernateTemplate hibernateTemplate) {\n\t\tthis.hibernateTemplate = hibernateTemplate;\n\t}\n\n\tpublic void add() {\n\t\tUser user = new User();\n\t\tuser.setUsername(\"yasuo\");\n\t\tuser.setAddress(\"zed\");\n\t\t//调用save方法添加\n\t\thibernateTemplate.save(user);\n\t}\n}\n```\n# hibernateTemplate方法\n添加\nsave(entity)\n根据id查询\nget(entity.class, id)\nfind方法查询所有记录\nfind(\"from User\")\nfind方法条件查询\nfind(\"from User where username=?\", \"yasuo\")\n# 把hibernate配置文件写到spring配置文件中\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fhemlp792bj30hj082dif.jpg)\n# spring分模块开发\n引入其他xml文件\n```\n<import resource=\"classpath:user.xml\"/>\n```\n","slug":"spring04","published":1,"updated":"2018-01-20T06:44:37.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m90j004i44wadmkhzs9i","content":"<p>ssh整合<br><a id=\"more\"></a></p>\n<h1 id=\"struts和spring整合\"><a href=\"#struts和spring整合\" class=\"headerlink\" title=\"struts和spring整合\"></a>struts和spring整合</h1><h3 id=\"1-目的\"><a href=\"#1-目的\" class=\"headerlink\" title=\"1.目的\"></a>1.目的</h3><p>把action的创建交给spring</p>\n<h3 id=\"2-导入jar包\"><a href=\"#2-导入jar包\" class=\"headerlink\" title=\"2.导入jar包\"></a>2.导入jar包</h3><p>struts2-spring-plugin-2.3.24.jar<br>struts2和spring的jar</p>\n<h3 id=\"3-配置文件\"><a href=\"#3-配置文件\" class=\"headerlink\" title=\"3.配置文件\"></a>3.配置文件</h3><p>spring配置文件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置action对象(不要忘记多实例的配置) --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userAction\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"action.UserAction\"</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"prototype\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>struts2配置文件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hellodemo\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- class里面写spring里面配置的id --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userAction\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"userAction\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>其他步骤这里省略</p>\n<h1 id=\"hibernate和spring整合\"><a href=\"#hibernate和spring整合\" class=\"headerlink\" title=\"hibernate和spring整合\"></a>hibernate和spring整合</h1><h3 id=\"1-目的-1\"><a href=\"#1-目的-1\" class=\"headerlink\" title=\"1.目的\"></a>1.目的</h3><p>把sessionFactory的创建交给spring，在服务器启动时创建</p>\n<h3 id=\"2-导入jar包-1\"><a href=\"#2-导入jar包-1\" class=\"headerlink\" title=\"2.导入jar包\"></a>2.导入jar包</h3><p>spring-orm-4.0.6.RELEASE.jar<br>hibernate和spring的jar</p>\n<h3 id=\"3-配置文件-1\"><a href=\"#3-配置文件-1\" class=\"headerlink\" title=\"3.配置文件\"></a>3.配置文件</h3><p>spring配置文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置c3p0连接池 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mchange.v2.c3p0.ComboPooledDataSource\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入属性值 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcUrl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql:///spring_day04\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0000\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- sessionFactory创建交给spring --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sessionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.orm.hibernate4.LocalSessionFactoryBean\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入DataSource --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 指定hibernate配置文件 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocations\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:hibernate.cfg.xml\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>hibernate的配置文件省略</p>\n<h1 id=\"dao使用hibernateTemplate\"><a href=\"#dao使用hibernateTemplate\" class=\"headerlink\" title=\"dao使用hibernateTemplate\"></a>dao使用hibernateTemplate</h1><p>spring配置文件需要添加的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 第一步配置事务管理器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"transactionManager\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.orm.hibernate4.HibernateTransactionManager\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入sessionFactory --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sessionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"sessionFactory\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 第二步开启事务注解 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tx:annotation-driven</span> <span class=\"attr\">transaction-manager</span>=<span class=\"string\">\"transactionManager\"</span>/&gt;</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\">&lt;!-- 配置action对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userAction\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"action.UserAction\"</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"prototype\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入service --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userService\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建service对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"service.UserService\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入dao --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDaoImpl\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建实现类对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDaoImpl\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dao.UserDaoImpl\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入hibernateTemplate --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernateTemplate\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"hibernateTemplate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建hibernateTemplate对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hibernateTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.orm.hibernate4.HibernateTemplate\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入sessionFactory --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sessionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"sessionFactory\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>service<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Transactional</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserService</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//注入dao对象</span></div><div class=\"line\"> <span class=\"keyword\">private</span> UserDao userDao;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserDao</span>(<span class=\"params\">UserDao userDao</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"service....\"</span>);</div><div class=\"line\">  userDao.<span class=\"keyword\">add</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>dao实现类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//得到hibernateTemplate对象</span></div><div class=\"line\"> <span class=\"keyword\">private</span> HibernateTemplate hibernateTemplate;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHibernateTemplate</span><span class=\"params\">(HibernateTemplate hibernateTemplate)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.hibernateTemplate = hibernateTemplate;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  User user = <span class=\"keyword\">new</span> User();</div><div class=\"line\">  user.setUsername(<span class=\"string\">\"yasuo\"</span>);</div><div class=\"line\">  user.setAddress(<span class=\"string\">\"zed\"</span>);</div><div class=\"line\">  <span class=\"comment\">//调用save方法添加</span></div><div class=\"line\">  hibernateTemplate.save(user);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"hibernateTemplate方法\"><a href=\"#hibernateTemplate方法\" class=\"headerlink\" title=\"hibernateTemplate方法\"></a>hibernateTemplate方法</h1><p>添加<br>save(entity)<br>根据id查询<br>get(entity.class, id)<br>find方法查询所有记录<br>find(“from User”)<br>find方法条件查询<br>find(“from User where username=?”, “yasuo”)</p>\n<h1 id=\"把hibernate配置文件写到spring配置文件中\"><a href=\"#把hibernate配置文件写到spring配置文件中\" class=\"headerlink\" title=\"把hibernate配置文件写到spring配置文件中\"></a>把hibernate配置文件写到spring配置文件中</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fhemlp792bj30hj082dif.jpg\" alt=\"\"></p>\n<h1 id=\"spring分模块开发\"><a href=\"#spring分模块开发\" class=\"headerlink\" title=\"spring分模块开发\"></a>spring分模块开发</h1><p>引入其他xml文件<br><figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"keyword\">import</span> resource=<span class=\"string\">\"classpath:user.xml\"</span>/&gt;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>ssh整合<br>","more":"</p>\n<h1 id=\"struts和spring整合\"><a href=\"#struts和spring整合\" class=\"headerlink\" title=\"struts和spring整合\"></a>struts和spring整合</h1><h3 id=\"1-目的\"><a href=\"#1-目的\" class=\"headerlink\" title=\"1.目的\"></a>1.目的</h3><p>把action的创建交给spring</p>\n<h3 id=\"2-导入jar包\"><a href=\"#2-导入jar包\" class=\"headerlink\" title=\"2.导入jar包\"></a>2.导入jar包</h3><p>struts2-spring-plugin-2.3.24.jar<br>struts2和spring的jar</p>\n<h3 id=\"3-配置文件\"><a href=\"#3-配置文件\" class=\"headerlink\" title=\"3.配置文件\"></a>3.配置文件</h3><p>spring配置文件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置action对象(不要忘记多实例的配置) --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userAction\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"action.UserAction\"</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"prototype\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>struts2配置文件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hellodemo\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- class里面写spring里面配置的id --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userAction\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"userAction\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>其他步骤这里省略</p>\n<h1 id=\"hibernate和spring整合\"><a href=\"#hibernate和spring整合\" class=\"headerlink\" title=\"hibernate和spring整合\"></a>hibernate和spring整合</h1><h3 id=\"1-目的-1\"><a href=\"#1-目的-1\" class=\"headerlink\" title=\"1.目的\"></a>1.目的</h3><p>把sessionFactory的创建交给spring，在服务器启动时创建</p>\n<h3 id=\"2-导入jar包-1\"><a href=\"#2-导入jar包-1\" class=\"headerlink\" title=\"2.导入jar包\"></a>2.导入jar包</h3><p>spring-orm-4.0.6.RELEASE.jar<br>hibernate和spring的jar</p>\n<h3 id=\"3-配置文件-1\"><a href=\"#3-配置文件-1\" class=\"headerlink\" title=\"3.配置文件\"></a>3.配置文件</h3><p>spring配置文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 配置c3p0连接池 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mchange.v2.c3p0.ComboPooledDataSource\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入属性值 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jdbcUrl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql:///spring_day04\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0000\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- sessionFactory创建交给spring --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sessionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.orm.hibernate4.LocalSessionFactoryBean\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入DataSource --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 指定hibernate配置文件 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocations\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:hibernate.cfg.xml\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>hibernate的配置文件省略</p>\n<h1 id=\"dao使用hibernateTemplate\"><a href=\"#dao使用hibernateTemplate\" class=\"headerlink\" title=\"dao使用hibernateTemplate\"></a>dao使用hibernateTemplate</h1><p>spring配置文件需要添加的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 第一步配置事务管理器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"transactionManager\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.orm.hibernate4.HibernateTransactionManager\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入sessionFactory --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sessionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"sessionFactory\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 第二步开启事务注解 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tx:annotation-driven</span> <span class=\"attr\">transaction-manager</span>=<span class=\"string\">\"transactionManager\"</span>/&gt;</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\">&lt;!-- 配置action对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userAction\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"action.UserAction\"</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"prototype\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入service --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userService\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建service对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"service.UserService\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入dao --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userDao\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"userDaoImpl\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建实现类对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userDaoImpl\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dao.UserDaoImpl\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入hibernateTemplate --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hibernateTemplate\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"hibernateTemplate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 创建hibernateTemplate对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hibernateTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.orm.hibernate4.HibernateTemplate\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 注入sessionFactory --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sessionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"sessionFactory\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>service<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Transactional</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserService</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//注入dao对象</span></div><div class=\"line\"> <span class=\"keyword\">private</span> UserDao userDao;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUserDao</span>(<span class=\"params\">UserDao userDao</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"service....\"</span>);</div><div class=\"line\">  userDao.<span class=\"keyword\">add</span>();</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>dao实现类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDao</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//得到hibernateTemplate对象</span></div><div class=\"line\"> <span class=\"keyword\">private</span> HibernateTemplate hibernateTemplate;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHibernateTemplate</span><span class=\"params\">(HibernateTemplate hibernateTemplate)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.hibernateTemplate = hibernateTemplate;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  User user = <span class=\"keyword\">new</span> User();</div><div class=\"line\">  user.setUsername(<span class=\"string\">\"yasuo\"</span>);</div><div class=\"line\">  user.setAddress(<span class=\"string\">\"zed\"</span>);</div><div class=\"line\">  <span class=\"comment\">//调用save方法添加</span></div><div class=\"line\">  hibernateTemplate.save(user);</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"hibernateTemplate方法\"><a href=\"#hibernateTemplate方法\" class=\"headerlink\" title=\"hibernateTemplate方法\"></a>hibernateTemplate方法</h1><p>添加<br>save(entity)<br>根据id查询<br>get(entity.class, id)<br>find方法查询所有记录<br>find(“from User”)<br>find方法条件查询<br>find(“from User where username=?”, “yasuo”)</p>\n<h1 id=\"把hibernate配置文件写到spring配置文件中\"><a href=\"#把hibernate配置文件写到spring配置文件中\" class=\"headerlink\" title=\"把hibernate配置文件写到spring配置文件中\"></a>把hibernate配置文件写到spring配置文件中</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fhemlp792bj30hj082dif.jpg\" alt=\"\"></p>\n<h1 id=\"spring分模块开发\"><a href=\"#spring分模块开发\" class=\"headerlink\" title=\"spring分模块开发\"></a>spring分模块开发</h1><p>引入其他xml文件<br><figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"keyword\">import</span> resource=<span class=\"string\">\"classpath:user.xml\"</span>/&gt;</div></pre></td></tr></table></figure></p>"},{"title":"struts2_01","date":"2017-06-08T02:19:37.000Z","toc":true,"_content":"struts2的一些简单笔记\n<!--more-->\n# struts2概述\n应用在web层的框架\nstruts2和struts1没有直接关系，内核为webwork2\nweb层的框架还有springMVC\n# struts2入门\n1.导入jar包\n```\nasm-3.3.jar\nasm-commons-3.3.jar\nasm-tree-3.3.jar\ncommons-fileupload-1.3.1.jar\ncommons-io-2.2.jar\ncommons-lang3-3.2.jar\nfreemarker-2.3.22.jar\njavassist-3.11.0.GA.jar\nlog4j-api-2.2.jar\nlog4j-core-2.2.jar\nognl-3.0.6.jar\nservlet-api.jar\nstruts2-core-2.3.24.jar\nxwork-core-2.3.24.jar\n```\n2.创建action\n访问action，默认执行里面的execute方法，类似于servlet的service方法。\n```\npublic class HelloAction {\n\t\n\tpublic String execute() {\n\t\treturn \"ok\";\n\t}\n}\n```\n3.配置action的类访问路径\nstruts2核心配置文件位置必须在src下，名称为struts.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts PUBLIC\n\t\"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN\"\n\t\"http://struts.apache.org/dtds/struts-2.3.dtd\">\n<struts>\n<constant name=\"struts.i18n.encoding\" value=\"utf-8\"></constant><!-- 常量配置（还可以在src下面创建struts.properties进行配置，web.xml也可以） -->\n\t<package name=\"hellodemo\" extends=\"struts-default\" namespace=\"/\">\n\t\t<action name=\"hello\" class=\"action.HelloAction\">\n\t\t\t<result name=\"ok\">/hello.jsp</result>\n\t\t</action>\n\t</package>\n</struts>\n```\n4.配合struts2的过滤器\nweb.xml加入\n```\n<filter>\n        <filter-name>struts2</filter-name>\n        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>\n    </filter>\n\n<filter-mapping>\n        <filter-name>struts2</filter-name>\n        <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n5.访问\n输入http://localhost:8080/项目名/hell.action\n# struts2分模块开发\n单独写配置文件，将配置文件引入到核心配置文件中。\n```\n<include file=\"\"></include>\n```\n# action的3种编写方式\n1.创建普通类\n2.创建类,实现接口Action\n3.创建类,继承类ActionSupport\n# 访问action的方法的3种方式\n1.使用action标签的method属性，在这个属性里面写执行的action方法\n```\n<action name=\"add\" class=\"action.HelloAction\" method=\"add\"></action>\n```\n2.使用通配符方式\n```\n<action name=\"*\" class=\"action.HelloAction\" method=\"{1}\"></action>\n```\n{1}代表第一个*号\n3.动态访问实现\n基本不用\n\n","source":"_posts/struts2-01.md","raw":"---\ntitle: struts2_01\ndate: 2017-06-08 10:19:37\ntags:\n- Java基础\ntoc: true\n---\nstruts2的一些简单笔记\n<!--more-->\n# struts2概述\n应用在web层的框架\nstruts2和struts1没有直接关系，内核为webwork2\nweb层的框架还有springMVC\n# struts2入门\n1.导入jar包\n```\nasm-3.3.jar\nasm-commons-3.3.jar\nasm-tree-3.3.jar\ncommons-fileupload-1.3.1.jar\ncommons-io-2.2.jar\ncommons-lang3-3.2.jar\nfreemarker-2.3.22.jar\njavassist-3.11.0.GA.jar\nlog4j-api-2.2.jar\nlog4j-core-2.2.jar\nognl-3.0.6.jar\nservlet-api.jar\nstruts2-core-2.3.24.jar\nxwork-core-2.3.24.jar\n```\n2.创建action\n访问action，默认执行里面的execute方法，类似于servlet的service方法。\n```\npublic class HelloAction {\n\t\n\tpublic String execute() {\n\t\treturn \"ok\";\n\t}\n}\n```\n3.配置action的类访问路径\nstruts2核心配置文件位置必须在src下，名称为struts.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts PUBLIC\n\t\"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN\"\n\t\"http://struts.apache.org/dtds/struts-2.3.dtd\">\n<struts>\n<constant name=\"struts.i18n.encoding\" value=\"utf-8\"></constant><!-- 常量配置（还可以在src下面创建struts.properties进行配置，web.xml也可以） -->\n\t<package name=\"hellodemo\" extends=\"struts-default\" namespace=\"/\">\n\t\t<action name=\"hello\" class=\"action.HelloAction\">\n\t\t\t<result name=\"ok\">/hello.jsp</result>\n\t\t</action>\n\t</package>\n</struts>\n```\n4.配合struts2的过滤器\nweb.xml加入\n```\n<filter>\n        <filter-name>struts2</filter-name>\n        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>\n    </filter>\n\n<filter-mapping>\n        <filter-name>struts2</filter-name>\n        <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n5.访问\n输入http://localhost:8080/项目名/hell.action\n# struts2分模块开发\n单独写配置文件，将配置文件引入到核心配置文件中。\n```\n<include file=\"\"></include>\n```\n# action的3种编写方式\n1.创建普通类\n2.创建类,实现接口Action\n3.创建类,继承类ActionSupport\n# 访问action的方法的3种方式\n1.使用action标签的method属性，在这个属性里面写执行的action方法\n```\n<action name=\"add\" class=\"action.HelloAction\" method=\"add\"></action>\n```\n2.使用通配符方式\n```\n<action name=\"*\" class=\"action.HelloAction\" method=\"{1}\"></action>\n```\n{1}代表第一个*号\n3.动态访问实现\n基本不用\n\n","slug":"struts2-01","published":1,"updated":"2018-01-20T06:44:37.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m90m004l44wafbfrxvmu","content":"<p>struts2的一些简单笔记<br><a id=\"more\"></a></p>\n<h1 id=\"struts2概述\"><a href=\"#struts2概述\" class=\"headerlink\" title=\"struts2概述\"></a>struts2概述</h1><p>应用在web层的框架<br>struts2和struts1没有直接关系，内核为webwork2<br>web层的框架还有springMVC</p>\n<h1 id=\"struts2入门\"><a href=\"#struts2入门\" class=\"headerlink\" title=\"struts2入门\"></a>struts2入门</h1><p>1.导入jar包<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">asm-3</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">asm-commons-3</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">asm-tree-3</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">commons-fileupload-1</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">commons-io-2</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">commons-lang3-3</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">freemarker-2</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.22</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">javassist-3</span><span class=\"selector-class\">.11</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.GA</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">log4j-api-2</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">log4j-core-2</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">ognl-3</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">servlet-api</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">struts2-core-2</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.24</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">xwork-core-2</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.24</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure></p>\n<p>2.创建action<br>访问action，默认执行里面的execute方法，类似于servlet的service方法。<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HelloAction</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">execute</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"ok\"</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.配置action的类访问路径<br>struts2核心配置文件位置必须在src下，名称为struts.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE struts PUBLIC</span></div><div class=\"line\"> \"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN\"</div><div class=\"line\"> \"http://struts.apache.org/dtds/struts-2.3.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">struts</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">constant</span> <span class=\"attr\">name</span>=<span class=\"string\">\"struts.i18n.encoding\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constant</span>&gt;</span><span class=\"comment\">&lt;!-- 常量配置（还可以在src下面创建struts.properties进行配置，web.xml也可以） --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hellodemo\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hello\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"action.HelloAction\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ok\"</span>&gt;</span>/hello.jsp<span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">struts</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>4.配合struts2的过滤器<br>web.xml加入<br><figure class=\"highlight vbscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">filter</span>&gt;</div><div class=\"line\">        &lt;<span class=\"built_in\">filter</span>-name&gt;struts2&lt;/<span class=\"built_in\">filter</span>-name&gt;</div><div class=\"line\">        &lt;<span class=\"built_in\">filter</span>-<span class=\"keyword\">class</span>&gt;org.apache.struts2.dispatcher.ng.<span class=\"built_in\">filter</span>.StrutsPrepareAndExecuteFilter&lt;/<span class=\"built_in\">filter</span>-<span class=\"keyword\">class</span>&gt;</div><div class=\"line\">    &lt;/<span class=\"built_in\">filter</span>&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;<span class=\"built_in\">filter</span>-mapping&gt;</div><div class=\"line\">        &lt;<span class=\"built_in\">filter</span>-name&gt;struts2&lt;/<span class=\"built_in\">filter</span>-name&gt;</div><div class=\"line\">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/<span class=\"built_in\">filter</span>-mapping&gt;</div></pre></td></tr></table></figure></p>\n<p>5.访问<br>输入<a href=\"http://localhost:8080/项目名/hell.action\" target=\"_blank\" rel=\"external\">http://localhost:8080/项目名/hell.action</a></p>\n<h1 id=\"struts2分模块开发\"><a href=\"#struts2分模块开发\" class=\"headerlink\" title=\"struts2分模块开发\"></a>struts2分模块开发</h1><p>单独写配置文件，将配置文件引入到核心配置文件中。<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">include</span> <span class=\"built_in\">file</span>=<span class=\"string\">\"\"</span>&gt;&lt;/<span class=\"built_in\">include</span>&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"action的3种编写方式\"><a href=\"#action的3种编写方式\" class=\"headerlink\" title=\"action的3种编写方式\"></a>action的3种编写方式</h1><p>1.创建普通类<br>2.创建类,实现接口Action<br>3.创建类,继承类ActionSupport</p>\n<h1 id=\"访问action的方法的3种方式\"><a href=\"#访问action的方法的3种方式\" class=\"headerlink\" title=\"访问action的方法的3种方式\"></a>访问action的方法的3种方式</h1><p>1.使用action标签的method属性，在这个属性里面写执行的action方法<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;action name=<span class=\"string\">\"add\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"action.HelloAction\"</span> method=<span class=\"string\">\"add\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>2.使用通配符方式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;action name=<span class=\"string\">\"*\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"action.HelloAction\"</span> method=<span class=\"string\">\"&#123;1&#125;\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>{1}代表第一个*号<br>3.动态访问实现<br>基本不用</p>\n","excerpt":"<p>struts2的一些简单笔记<br>","more":"</p>\n<h1 id=\"struts2概述\"><a href=\"#struts2概述\" class=\"headerlink\" title=\"struts2概述\"></a>struts2概述</h1><p>应用在web层的框架<br>struts2和struts1没有直接关系，内核为webwork2<br>web层的框架还有springMVC</p>\n<h1 id=\"struts2入门\"><a href=\"#struts2入门\" class=\"headerlink\" title=\"struts2入门\"></a>struts2入门</h1><p>1.导入jar包<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">asm-3</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">asm-commons-3</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">asm-tree-3</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">commons-fileupload-1</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.1</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">commons-io-2</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">commons-lang3-3</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">freemarker-2</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.22</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">javassist-3</span><span class=\"selector-class\">.11</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.GA</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">log4j-api-2</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">log4j-core-2</span><span class=\"selector-class\">.2</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">ognl-3</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">servlet-api</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">struts2-core-2</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.24</span><span class=\"selector-class\">.jar</span></div><div class=\"line\"><span class=\"selector-tag\">xwork-core-2</span><span class=\"selector-class\">.3</span><span class=\"selector-class\">.24</span><span class=\"selector-class\">.jar</span></div></pre></td></tr></table></figure></p>\n<p>2.创建action<br>访问action，默认执行里面的execute方法，类似于servlet的service方法。<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HelloAction</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">execute</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"ok\"</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.配置action的类访问路径<br>struts2核心配置文件位置必须在src下，名称为struts.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\"> \"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN\"</div><div class=\"line\"> \"http://struts.apache.org/dtds/struts-2.3.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">struts</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">constant</span> <span class=\"attr\">name</span>=<span class=\"string\">\"struts.i18n.encoding\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constant</span>&gt;</span><span class=\"comment\">&lt;!-- 常量配置（还可以在src下面创建struts.properties进行配置，web.xml也可以） --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hellodemo\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hello\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"action.HelloAction\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ok\"</span>&gt;</span>/hello.jsp<span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">struts</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>4.配合struts2的过滤器<br>web.xml加入<br><figure class=\"highlight vbscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">filter</span>&gt;</div><div class=\"line\">        &lt;<span class=\"built_in\">filter</span>-name&gt;struts2&lt;/<span class=\"built_in\">filter</span>-name&gt;</div><div class=\"line\">        &lt;<span class=\"built_in\">filter</span>-<span class=\"keyword\">class</span>&gt;org.apache.struts2.dispatcher.ng.<span class=\"built_in\">filter</span>.StrutsPrepareAndExecuteFilter&lt;/<span class=\"built_in\">filter</span>-<span class=\"keyword\">class</span>&gt;</div><div class=\"line\">    &lt;/<span class=\"built_in\">filter</span>&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;<span class=\"built_in\">filter</span>-mapping&gt;</div><div class=\"line\">        &lt;<span class=\"built_in\">filter</span>-name&gt;struts2&lt;/<span class=\"built_in\">filter</span>-name&gt;</div><div class=\"line\">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/<span class=\"built_in\">filter</span>-mapping&gt;</div></pre></td></tr></table></figure></p>\n<p>5.访问<br>输入<a href=\"http://localhost:8080/项目名/hell.action\">http://localhost:8080/项目名/hell.action</a></p>\n<h1 id=\"struts2分模块开发\"><a href=\"#struts2分模块开发\" class=\"headerlink\" title=\"struts2分模块开发\"></a>struts2分模块开发</h1><p>单独写配置文件，将配置文件引入到核心配置文件中。<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">include</span> <span class=\"built_in\">file</span>=<span class=\"string\">\"\"</span>&gt;&lt;/<span class=\"built_in\">include</span>&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"action的3种编写方式\"><a href=\"#action的3种编写方式\" class=\"headerlink\" title=\"action的3种编写方式\"></a>action的3种编写方式</h1><p>1.创建普通类<br>2.创建类,实现接口Action<br>3.创建类,继承类ActionSupport</p>\n<h1 id=\"访问action的方法的3种方式\"><a href=\"#访问action的方法的3种方式\" class=\"headerlink\" title=\"访问action的方法的3种方式\"></a>访问action的方法的3种方式</h1><p>1.使用action标签的method属性，在这个属性里面写执行的action方法<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;action name=<span class=\"string\">\"add\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"action.HelloAction\"</span> method=<span class=\"string\">\"add\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>2.使用通配符方式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;action name=<span class=\"string\">\"*\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"action.HelloAction\"</span> method=<span class=\"string\">\"&#123;1&#125;\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>{1}代表第一个*号<br>3.动态访问实现<br>基本不用</p>"},{"title":"struts2_03","toc":true,"date":"2017-06-15T07:17:16.000Z","_content":"值栈\n<!--more-->\n# ognl\nognl是一种表达式，用来在struts2里面操作值栈数据\n一般和struts2标签一起使用\nognl不是struts2的一部分\n# 值栈\n### 什么是值栈\n值栈是action里面的存储空间\n每个action对象只有1个值栈对象\n### 如何获取值栈\n```\n//获取值栈\nActionContext context = ActionContext.getContext();\nValueStack stack = context.getValueStack();\n```\n### 值栈内部结构\nroot：结构为list结婚\ncontext：结构为map集合\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fglxadhseqj310l0e6jv8.jpg)\n### 向值栈放数据的3种方式\n```\n//set方法\nActionContext context = ActionContext.getContext();\nValueStack stack = context.getValueStack();\nstack.set(\"username\", \"yasuo\");\n//push方法\nstack.push(\"abcd\");\n//声明变量，生成get方法\nprivate String name;\npublic String getName() {\n\t\treturn name;\n\t}\n```\n### 从值栈获取数据\n```\n引用struts2的标签\n<%@ taglib prefix=\"s\" uri=\"/struts-tags\" %>\n<!-- 获取字符串 -->\n<s:property value=\"username\"/>\n<!-- 获取对象 -->\n<s:property value=\"user.username\"/>\n<s:property value=\"user.password\"/>\n<s:property value=\"user.address\"/>\n<!-- 获取list集合1 -->\n<s:property value=\"list[0].username\"/>\n<s:property value=\"list[0].password\"/>\n<s:property value=\"list[0].address\"/>\n<br>\n<s:property value=\"list[1].username\"/>\n<s:property value=\"list[1].password\"/>\n<s:property value=\"list[1].address\"/>\n<br>\n<!-- 获取list集合2 -->\n<s:iterator value=\"list\">\n\t<s:property value=\"username\"/>\n\t<s:property value=\"password\"/>\n\t<s:property value=\"address\"/>\n</s:iterator>\n<br>\n<!-- 获取list集合3 -->\n<s:iterator value=\"list\" var=\"user\"> \n\t<!-- 遍历值栈list集合，得到每个user对象，放进context里面\n\t\t获取context里面的数据要加# -->\n\t<s:property value=\"#user.username\"/>\n\t<s:property value=\"#user.password\"/>\n\t<s:property value=\"#user.address\"/>\n</s:iterator>\n<br>\n<!-- 获取push方法设置的值,push的值会放到1个top数组里面 -->\n<s:property value=\"[0].top\"/>\n```\n# EL表达式获取值栈的值？\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fglxkc6708j30hl04uq3k.jpg)\n# %使用\n直接在struts2表单标签里面使用ognl表达式不识别，只有加上%才会识别。\n```\n<s:textfield name=\"username\" value=\"%{#request.req}\"></s:textfield>\n```","source":"_posts/struts2-03.md","raw":"---\ntitle: struts2_03\ntoc: true\ndate: 2017-06-15 15:17:16\ntags:\n- Java基础\n---\n值栈\n<!--more-->\n# ognl\nognl是一种表达式，用来在struts2里面操作值栈数据\n一般和struts2标签一起使用\nognl不是struts2的一部分\n# 值栈\n### 什么是值栈\n值栈是action里面的存储空间\n每个action对象只有1个值栈对象\n### 如何获取值栈\n```\n//获取值栈\nActionContext context = ActionContext.getContext();\nValueStack stack = context.getValueStack();\n```\n### 值栈内部结构\nroot：结构为list结婚\ncontext：结构为map集合\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fglxadhseqj310l0e6jv8.jpg)\n### 向值栈放数据的3种方式\n```\n//set方法\nActionContext context = ActionContext.getContext();\nValueStack stack = context.getValueStack();\nstack.set(\"username\", \"yasuo\");\n//push方法\nstack.push(\"abcd\");\n//声明变量，生成get方法\nprivate String name;\npublic String getName() {\n\t\treturn name;\n\t}\n```\n### 从值栈获取数据\n```\n引用struts2的标签\n<%@ taglib prefix=\"s\" uri=\"/struts-tags\" %>\n<!-- 获取字符串 -->\n<s:property value=\"username\"/>\n<!-- 获取对象 -->\n<s:property value=\"user.username\"/>\n<s:property value=\"user.password\"/>\n<s:property value=\"user.address\"/>\n<!-- 获取list集合1 -->\n<s:property value=\"list[0].username\"/>\n<s:property value=\"list[0].password\"/>\n<s:property value=\"list[0].address\"/>\n<br>\n<s:property value=\"list[1].username\"/>\n<s:property value=\"list[1].password\"/>\n<s:property value=\"list[1].address\"/>\n<br>\n<!-- 获取list集合2 -->\n<s:iterator value=\"list\">\n\t<s:property value=\"username\"/>\n\t<s:property value=\"password\"/>\n\t<s:property value=\"address\"/>\n</s:iterator>\n<br>\n<!-- 获取list集合3 -->\n<s:iterator value=\"list\" var=\"user\"> \n\t<!-- 遍历值栈list集合，得到每个user对象，放进context里面\n\t\t获取context里面的数据要加# -->\n\t<s:property value=\"#user.username\"/>\n\t<s:property value=\"#user.password\"/>\n\t<s:property value=\"#user.address\"/>\n</s:iterator>\n<br>\n<!-- 获取push方法设置的值,push的值会放到1个top数组里面 -->\n<s:property value=\"[0].top\"/>\n```\n# EL表达式获取值栈的值？\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fglxkc6708j30hl04uq3k.jpg)\n# %使用\n直接在struts2表单标签里面使用ognl表达式不识别，只有加上%才会识别。\n```\n<s:textfield name=\"username\" value=\"%{#request.req}\"></s:textfield>\n```","slug":"struts2-03","published":1,"updated":"2018-01-20T06:44:37.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m90q004n44wa2rdq8t4j","content":"<p>值栈<br><a id=\"more\"></a></p>\n<h1 id=\"ognl\"><a href=\"#ognl\" class=\"headerlink\" title=\"ognl\"></a>ognl</h1><p>ognl是一种表达式，用来在struts2里面操作值栈数据<br>一般和struts2标签一起使用<br>ognl不是struts2的一部分</p>\n<h1 id=\"值栈\"><a href=\"#值栈\" class=\"headerlink\" title=\"值栈\"></a>值栈</h1><h3 id=\"什么是值栈\"><a href=\"#什么是值栈\" class=\"headerlink\" title=\"什么是值栈\"></a>什么是值栈</h3><p>值栈是action里面的存储空间<br>每个action对象只有1个值栈对象</p>\n<h3 id=\"如何获取值栈\"><a href=\"#如何获取值栈\" class=\"headerlink\" title=\"如何获取值栈\"></a>如何获取值栈</h3><figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//获取值栈</span></div><div class=\"line\">ActionContext context = ActionContext.getContext();</div><div class=\"line\">ValueStack stack = context.getValueStack();</div></pre></td></tr></table></figure>\n<h3 id=\"值栈内部结构\"><a href=\"#值栈内部结构\" class=\"headerlink\" title=\"值栈内部结构\"></a>值栈内部结构</h3><p>root：结构为list结婚<br>context：结构为map集合<br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fglxadhseqj310l0e6jv8.jpg\" alt=\"\"></p>\n<h3 id=\"向值栈放数据的3种方式\"><a href=\"#向值栈放数据的3种方式\" class=\"headerlink\" title=\"向值栈放数据的3种方式\"></a>向值栈放数据的3种方式</h3><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//set方法</span></div><div class=\"line\">ActionContext context = ActionContext.getContext();</div><div class=\"line\">ValueStack <span class=\"built_in\">stack</span> = context.getValueStack();</div><div class=\"line\"><span class=\"built_in\">stack</span>.<span class=\"built_in\">set</span>(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"yasuo\"</span>);</div><div class=\"line\"><span class=\"comment\">//push方法</span></div><div class=\"line\"><span class=\"built_in\">stack</span>.push(<span class=\"string\">\"abcd\"</span>);</div><div class=\"line\"><span class=\"comment\">//声明变量，生成get方法</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"built_in\">String</span> name;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">String</span> getName() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> name;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"从值栈获取数据\"><a href=\"#从值栈获取数据\" class=\"headerlink\" title=\"从值栈获取数据\"></a>从值栈获取数据</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\">引用struts2的标签</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\">@ taglib prefix=<span class=\"string\">\"s\"</span> uri=<span class=\"string\">\"/struts-tags\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取字符串 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"user.username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"user.password\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"user.address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取list集合1 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[0].username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[0].password\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[0].address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[1].username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[1].password\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[1].address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取list集合2 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:iterator</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"username\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"password\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">s:iterator</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取list集合3 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:iterator</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list\"</span> <span class=\"attr\">var</span>=<span class=\"string\">\"user\"</span>&gt;</span> </div><div class=\"line\"> <span class=\"comment\">&lt;!-- 遍历值栈list集合，得到每个user对象，放进context里面</span></div><div class=\"line\">  获取context里面的数据要加# --&gt;</div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"#user.username\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"#user.password\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"#user.address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">s:iterator</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取push方法设置的值,push的值会放到1个top数组里面 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"[0].top\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"EL表达式获取值栈的值？\"><a href=\"#EL表达式获取值栈的值？\" class=\"headerlink\" title=\"EL表达式获取值栈的值？\"></a>EL表达式获取值栈的值？</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fglxkc6708j30hl04uq3k.jpg\" alt=\"\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"%使用\"></a>%使用</h1><p>直接在struts2表单标签里面使用ognl表达式不识别，只有加上%才会识别。<br><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">s:textfield</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"%</span></span></span><span class=\"template-tag\">&#123;#<span class=\"name\">request.req</span>&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">s:textfield</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n","excerpt":"<p>值栈<br>","more":"</p>\n<h1 id=\"ognl\"><a href=\"#ognl\" class=\"headerlink\" title=\"ognl\"></a>ognl</h1><p>ognl是一种表达式，用来在struts2里面操作值栈数据<br>一般和struts2标签一起使用<br>ognl不是struts2的一部分</p>\n<h1 id=\"值栈\"><a href=\"#值栈\" class=\"headerlink\" title=\"值栈\"></a>值栈</h1><h3 id=\"什么是值栈\"><a href=\"#什么是值栈\" class=\"headerlink\" title=\"什么是值栈\"></a>什么是值栈</h3><p>值栈是action里面的存储空间<br>每个action对象只有1个值栈对象</p>\n<h3 id=\"如何获取值栈\"><a href=\"#如何获取值栈\" class=\"headerlink\" title=\"如何获取值栈\"></a>如何获取值栈</h3><figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//获取值栈</span></div><div class=\"line\">ActionContext context = ActionContext.getContext();</div><div class=\"line\">ValueStack stack = context.getValueStack();</div></pre></td></tr></table></figure>\n<h3 id=\"值栈内部结构\"><a href=\"#值栈内部结构\" class=\"headerlink\" title=\"值栈内部结构\"></a>值栈内部结构</h3><p>root：结构为list结婚<br>context：结构为map集合<br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fglxadhseqj310l0e6jv8.jpg\" alt=\"\"></p>\n<h3 id=\"向值栈放数据的3种方式\"><a href=\"#向值栈放数据的3种方式\" class=\"headerlink\" title=\"向值栈放数据的3种方式\"></a>向值栈放数据的3种方式</h3><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//set方法</span></div><div class=\"line\">ActionContext context = ActionContext.getContext();</div><div class=\"line\">ValueStack <span class=\"built_in\">stack</span> = context.getValueStack();</div><div class=\"line\"><span class=\"built_in\">stack</span>.<span class=\"built_in\">set</span>(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"yasuo\"</span>);</div><div class=\"line\"><span class=\"comment\">//push方法</span></div><div class=\"line\"><span class=\"built_in\">stack</span>.push(<span class=\"string\">\"abcd\"</span>);</div><div class=\"line\"><span class=\"comment\">//声明变量，生成get方法</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"built_in\">String</span> name;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">String</span> getName() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> name;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"从值栈获取数据\"><a href=\"#从值栈获取数据\" class=\"headerlink\" title=\"从值栈获取数据\"></a>从值栈获取数据</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\">引用struts2的标签</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ taglib prefix=<span class=\"string\">\"s\"</span> uri=<span class=\"string\">\"/struts-tags\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取字符串 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取对象 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"user.username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"user.password\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"user.address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取list集合1 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[0].username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[0].password\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[0].address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[1].username\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[1].password\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list[1].address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取list集合2 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:iterator</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"username\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"password\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">s:iterator</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取list集合3 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:iterator</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list\"</span> <span class=\"attr\">var</span>=<span class=\"string\">\"user\"</span>&gt;</span> </div><div class=\"line\"> <span class=\"comment\">&lt;!-- 遍历值栈list集合，得到每个user对象，放进context里面</div><div class=\"line\">  获取context里面的数据要加# --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"#user.username\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"#user.password\"</span>/&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"#user.address\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">s:iterator</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 获取push方法设置的值,push的值会放到1个top数组里面 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:property</span> <span class=\"attr\">value</span>=<span class=\"string\">\"[0].top\"</span>/&gt;</span></span></div></pre></td></tr></table></figure>\n<h1 id=\"EL表达式获取值栈的值？\"><a href=\"#EL表达式获取值栈的值？\" class=\"headerlink\" title=\"EL表达式获取值栈的值？\"></a>EL表达式获取值栈的值？</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fglxkc6708j30hl04uq3k.jpg\" alt=\"\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"%使用\"></a>%使用</h1><p>直接在struts2表单标签里面使用ognl表达式不识别，只有加上%才会识别。<br><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">s:textfield</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"%</span></span></span><span class=\"template-tag\">&#123;#<span class=\"name\">request.req</span>&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">s:textfield</span>&gt;</span></span></div></pre></td></tr></table></figure></p>"},{"title":"struts2_02","toc":true,"date":"2017-06-12T03:11:49.000Z","_content":"数据操作\n<!--more-->\n```\n<!-- 全局结果页面配置 -->\n<global-results>\n\t<result name=\"success\">/hello.jsp</result>\n</global-results>\n```\n# result标签里的type属性\n默认为转发dispatcher\n其它还有\n重定向redirect\nchain:重定向到action(因为缓存一般不用)\nredirectAction:重定向到action\n# 获取表单数据\n使用ActionContext获取\n```\n//获取ActionContext对象\nActionContext context = ActionContext.getContext();\n\t\t\nMap<String, Object> map = context.getParameters();\n\t\t\nSet<String> keys = map.keySet();\nfor (String key : keys) {\n\t\tObject[] obj = (Object[]) map.get(key);\n\t\tSystem.out.println(Arrays.toString(obj));\n\t}\n```\n使用ServletActionContext获取\n```\n//使用ServletActionContext获取表单数据\nHttpServletRequest request = ServletActionContext.getRequest();\n\t\t\nString username = request.getParameter(\"username\");\nString password = request.getParameter(\"password\");\nString address = request.getParameter(\"address\");\n\t\t\nSystem.out.println(username+\":\"+password+\":\"+address);\n```\n使用接口注入获取\n```\npublic class Form3DemoAction extends ActionSupport implements ServletRequestAware{\n\t//接口注入获取表单数据\n\tprivate HttpServletRequest request;\n\t@Override\n\tpublic void setServletRequest(HttpServletRequest request) {\n\t\tthis.request = request;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tString username = request.getParameter(\"username\");\n\t\tString password = request.getParameter(\"password\");\n\t\tString address = request.getParameter(\"address\");\n\t\tSystem.out.println(username+\":\"+password+\":\"+address);\n\t\t\n\t\treturn NONE;\n\t}\n}\n```\n# action操作域对象\n```\n//action操作三个域对象\n//1 request域\nHttpServletRequest request = ServletActionContext.getRequest();\nrequest.setAttribute(\"req\", \"reqValue\");\n\n//2 session域\nHttpSession session = request.getSession();\nsession.setAttribute(\"sess\", \"sessValue\");\n\n//3 ServletContext域\nServletContext context = ServletActionContext.getServletContext();\ncontext.setAttribute(\"contextname\", \"contextValue\");\n```\n# 属性封装\n```\npublic class DataDemo1Action extends ActionSupport{\n\t//属性封装\n\tprivate String username;\n\tprivate String password;\n\tprivate String address;\n\tpublic String getUsername() {\n\t\treturn username;\n\t}\n\tpublic void setUsername(String username) {\n\t\tthis.username = username;\n\t}\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\tpublic String getAddress() {\n\t\treturn address;\n\t}\n\tpublic void setAddress(String address) {\n\t\tthis.address = address;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(username+\":\"+password+\":\"+address);\n\t\treturn NONE;\n\t}\n}\n```\n# 模型驱动封装\n```\npublic class DataDemo2Action extends ActionSupport implements ModelDriven<User> {\n\t//模型驱动封装\n\tprivate User user = new User();\n\t@Override\n\tpublic User getModel() {\n\t\treturn user;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(user);\n\t\treturn NONE;\n\t}\n}\n```\n# 表达式封装\n```\npublic class DataDemo3Action extends ActionSupport {\n\t//表达式封装\n\tprivate User user;\n\n\tpublic User getUser() {\n\t\treturn user;\n\t}\n\n\tpublic void setUser(User user) {\n\t\tthis.user = user;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(user);\n\t\treturn NONE;\n\t}\n}\n```\n表单name属性写法\n```\nname=\"user.username\"\nname=\"user.password\"\nname=\"user.address\"\n```\n# 封装到list，map\nlist\n```\npublic class ListAction extends ActionSupport {\n\tprivate List<User> list;\n\n\tpublic List<User> getList() {\n\t\treturn list;\n\t}\n\n\tpublic void setList(List<User> list) {\n\t\tthis.list = list;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(list);\n\t\treturn NONE;\n\t}\n}\n```\n```\nusername:<input type=\"text\" name=\"list[0].username\"/>\n<br/>\npassword:<input type=\"text\" name=\"list[0].password\" />\n<br/>\naddress:<input type=\"text\" name=\"list[0].address\" />\n```\nMap\n```\npublic class MapAction extends ActionSupport{\n\tprivate Map<String, User> map;\n\t\n\tpublic Map<String, User> getMap() {\n\t\treturn map;\n\t}\n\t\n\tpublic void setMap(Map<String, User> map) {\n\t\tthis.map = map;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(map);\t\t\n\t\treturn NONE;\n\t}\n}\n```\n```\nusername:<input type=\"text\" name=\"map['one'].username\"/>\n<br/>\npassword:<input type=\"text\" name=\"map['one'].password\" />\n<br/>\naddress:<input type=\"text\" name=\"map['one'].address\" />\n```\n","source":"_posts/struts2-02.md","raw":"---\ntitle: struts2_02\ntoc: true\ndate: 2017-06-12 11:11:49\ntags:\n- Java基础\n---\n数据操作\n<!--more-->\n```\n<!-- 全局结果页面配置 -->\n<global-results>\n\t<result name=\"success\">/hello.jsp</result>\n</global-results>\n```\n# result标签里的type属性\n默认为转发dispatcher\n其它还有\n重定向redirect\nchain:重定向到action(因为缓存一般不用)\nredirectAction:重定向到action\n# 获取表单数据\n使用ActionContext获取\n```\n//获取ActionContext对象\nActionContext context = ActionContext.getContext();\n\t\t\nMap<String, Object> map = context.getParameters();\n\t\t\nSet<String> keys = map.keySet();\nfor (String key : keys) {\n\t\tObject[] obj = (Object[]) map.get(key);\n\t\tSystem.out.println(Arrays.toString(obj));\n\t}\n```\n使用ServletActionContext获取\n```\n//使用ServletActionContext获取表单数据\nHttpServletRequest request = ServletActionContext.getRequest();\n\t\t\nString username = request.getParameter(\"username\");\nString password = request.getParameter(\"password\");\nString address = request.getParameter(\"address\");\n\t\t\nSystem.out.println(username+\":\"+password+\":\"+address);\n```\n使用接口注入获取\n```\npublic class Form3DemoAction extends ActionSupport implements ServletRequestAware{\n\t//接口注入获取表单数据\n\tprivate HttpServletRequest request;\n\t@Override\n\tpublic void setServletRequest(HttpServletRequest request) {\n\t\tthis.request = request;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tString username = request.getParameter(\"username\");\n\t\tString password = request.getParameter(\"password\");\n\t\tString address = request.getParameter(\"address\");\n\t\tSystem.out.println(username+\":\"+password+\":\"+address);\n\t\t\n\t\treturn NONE;\n\t}\n}\n```\n# action操作域对象\n```\n//action操作三个域对象\n//1 request域\nHttpServletRequest request = ServletActionContext.getRequest();\nrequest.setAttribute(\"req\", \"reqValue\");\n\n//2 session域\nHttpSession session = request.getSession();\nsession.setAttribute(\"sess\", \"sessValue\");\n\n//3 ServletContext域\nServletContext context = ServletActionContext.getServletContext();\ncontext.setAttribute(\"contextname\", \"contextValue\");\n```\n# 属性封装\n```\npublic class DataDemo1Action extends ActionSupport{\n\t//属性封装\n\tprivate String username;\n\tprivate String password;\n\tprivate String address;\n\tpublic String getUsername() {\n\t\treturn username;\n\t}\n\tpublic void setUsername(String username) {\n\t\tthis.username = username;\n\t}\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\tpublic String getAddress() {\n\t\treturn address;\n\t}\n\tpublic void setAddress(String address) {\n\t\tthis.address = address;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(username+\":\"+password+\":\"+address);\n\t\treturn NONE;\n\t}\n}\n```\n# 模型驱动封装\n```\npublic class DataDemo2Action extends ActionSupport implements ModelDriven<User> {\n\t//模型驱动封装\n\tprivate User user = new User();\n\t@Override\n\tpublic User getModel() {\n\t\treturn user;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(user);\n\t\treturn NONE;\n\t}\n}\n```\n# 表达式封装\n```\npublic class DataDemo3Action extends ActionSupport {\n\t//表达式封装\n\tprivate User user;\n\n\tpublic User getUser() {\n\t\treturn user;\n\t}\n\n\tpublic void setUser(User user) {\n\t\tthis.user = user;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(user);\n\t\treturn NONE;\n\t}\n}\n```\n表单name属性写法\n```\nname=\"user.username\"\nname=\"user.password\"\nname=\"user.address\"\n```\n# 封装到list，map\nlist\n```\npublic class ListAction extends ActionSupport {\n\tprivate List<User> list;\n\n\tpublic List<User> getList() {\n\t\treturn list;\n\t}\n\n\tpublic void setList(List<User> list) {\n\t\tthis.list = list;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(list);\n\t\treturn NONE;\n\t}\n}\n```\n```\nusername:<input type=\"text\" name=\"list[0].username\"/>\n<br/>\npassword:<input type=\"text\" name=\"list[0].password\" />\n<br/>\naddress:<input type=\"text\" name=\"list[0].address\" />\n```\nMap\n```\npublic class MapAction extends ActionSupport{\n\tprivate Map<String, User> map;\n\t\n\tpublic Map<String, User> getMap() {\n\t\treturn map;\n\t}\n\t\n\tpublic void setMap(Map<String, User> map) {\n\t\tthis.map = map;\n\t}\n\t\n\t@Override\n\tpublic String execute() throws Exception {\n\t\tSystem.out.println(map);\t\t\n\t\treturn NONE;\n\t}\n}\n```\n```\nusername:<input type=\"text\" name=\"map['one'].username\"/>\n<br/>\npassword:<input type=\"text\" name=\"map['one'].password\" />\n<br/>\naddress:<input type=\"text\" name=\"map['one'].address\" />\n```\n","slug":"struts2-02","published":1,"updated":"2018-01-20T06:44:37.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m90u004q44walcrjzu22","content":"<p>数据操作<br><a id=\"more\"></a><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 全局结果页面配置 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">global-results</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">name</span>=<span class=\"string\">\"success\"</span>&gt;</span>/hello.jsp<span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">global-results</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"result标签里的type属性\"><a href=\"#result标签里的type属性\" class=\"headerlink\" title=\"result标签里的type属性\"></a>result标签里的type属性</h1><p>默认为转发dispatcher<br>其它还有<br>重定向redirect<br>chain:重定向到action(因为缓存一般不用)<br>redirectAction:重定向到action</p>\n<h1 id=\"获取表单数据\"><a href=\"#获取表单数据\" class=\"headerlink\" title=\"获取表单数据\"></a>获取表单数据</h1><p>使用ActionContext获取<br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//获取ActionContext对象</span></div><div class=\"line\">ActionContext context = ActionContext.getContext();</div><div class=\"line\">  </div><div class=\"line\">Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">Object</span>&gt; <span class=\"built_in\">map</span> = context.getParameters();</div><div class=\"line\">  </div><div class=\"line\">Set&lt;<span class=\"keyword\">String</span>&gt; keys = <span class=\"built_in\">map</span>.keySet();</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">String</span> <span class=\"built_in\">key</span> : keys) &#123;</div><div class=\"line\">  <span class=\"keyword\">Object</span>[] obj = (<span class=\"keyword\">Object</span>[]) <span class=\"built_in\">map</span>.<span class=\"built_in\">get</span>(<span class=\"built_in\">key</span>);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(Arrays.toString(obj));</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure></p>\n<p>使用ServletActionContext获取<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//使用ServletActionContext获取表单数据</span></div><div class=\"line\">HttpServletRequest request = ServletActionContext.getRequest();</div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">String</span> username = request.getParameter(<span class=\"string\">\"username\"</span>);</div><div class=\"line\"><span class=\"keyword\">String</span> password = request.getParameter(<span class=\"string\">\"password\"</span>);</div><div class=\"line\"><span class=\"keyword\">String</span> address = request.getParameter(<span class=\"string\">\"address\"</span>);</div><div class=\"line\">  </div><div class=\"line\">System.out.<span class=\"built_in\">println</span>(username+<span class=\"string\">\":\"</span>+password+<span class=\"string\">\":\"</span>+address);</div></pre></td></tr></table></figure></p>\n<p>使用接口注入获取<br><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Form3DemoAction</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> <span class=\"title\">implements</span> <span class=\"title\">ServletRequestAware</span></span>&#123;</div><div class=\"line\"> <span class=\"comment\">//接口注入获取表单数据</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"type\">HttpServletRequest</span> request;</div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public void setServletRequest(<span class=\"type\">HttpServletRequest</span> request) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.request = request;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public <span class=\"type\">String</span> execute() <span class=\"keyword\">throws</span> <span class=\"type\">Exception</span> &#123;</div><div class=\"line\">  <span class=\"type\">String</span> username = request.getParameter(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">  <span class=\"type\">String</span> password = request.getParameter(<span class=\"string\">\"password\"</span>);</div><div class=\"line\">  <span class=\"type\">String</span> address = request.getParameter(<span class=\"string\">\"address\"</span>);</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(username+<span class=\"string\">\":\"</span>+password+<span class=\"string\">\":\"</span>+address);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">NONE</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"action操作域对象\"><a href=\"#action操作域对象\" class=\"headerlink\" title=\"action操作域对象\"></a>action操作域对象</h1><figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//action操作三个域对象</span></div><div class=\"line\"><span class=\"comment\">//1 request域</span></div><div class=\"line\">HttpServletRequest request = ServletActionContext.getRequest();</div><div class=\"line\">request.setAttribute(<span class=\"string\">\"req\"</span>, <span class=\"string\">\"reqValue\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//2 session域</span></div><div class=\"line\">HttpSession session = request.getSession();</div><div class=\"line\">session.setAttribute(<span class=\"string\">\"sess\"</span>, <span class=\"string\">\"sessValue\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//3 ServletContext域</span></div><div class=\"line\">ServletContext context = ServletActionContext.getServletContext();</div><div class=\"line\">context.setAttribute(<span class=\"string\">\"contextname\"</span>, <span class=\"string\">\"contextValue\"</span>);</div></pre></td></tr></table></figure>\n<h1 id=\"属性封装\"><a href=\"#属性封装\" class=\"headerlink\" title=\"属性封装\"></a>属性封装</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataDemo1Action</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span></span>&#123;</div><div class=\"line\"> <span class=\"comment\">//属性封装</span></div><div class=\"line\"> <span class=\"keyword\">private</span> String username;</div><div class=\"line\"> <span class=\"keyword\">private</span> String password;</div><div class=\"line\"> <span class=\"keyword\">private</span> String address;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUsername</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUsername</span><span class=\"params\">(String username)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.username = username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPassword</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> password;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPassword</span><span class=\"params\">(String password)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.password = password;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getAddress</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> address;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAddress</span><span class=\"params\">(String address)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.address = address;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">execute</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">  System.out.println(username+<span class=\"string\">\":\"</span>+password+<span class=\"string\">\":\"</span>+address);</div><div class=\"line\">  <span class=\"keyword\">return</span> NONE;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"模型驱动封装\"><a href=\"#模型驱动封装\" class=\"headerlink\" title=\"模型驱动封装\"></a>模型驱动封装</h1><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataDemo2Action</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> <span class=\"title\">implements</span> <span class=\"title\">ModelDriven&lt;User&gt;</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//模型驱动封装</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"type\">User</span> user = <span class=\"keyword\">new</span> <span class=\"type\">User</span>();</div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public <span class=\"type\">User</span> getModel() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> user;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public <span class=\"type\">String</span> execute() <span class=\"keyword\">throws</span> <span class=\"type\">Exception</span> &#123;</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(user);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">NONE</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"表达式封装\"><a href=\"#表达式封装\" class=\"headerlink\" title=\"表达式封装\"></a>表达式封装</h1><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataDemo3Action</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//表达式封装</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"type\">User</span> user;</div><div class=\"line\"></div><div class=\"line\"> public <span class=\"type\">User</span> getUser() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> user;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> public void setUser(<span class=\"type\">User</span> user) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.user = user;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public <span class=\"type\">String</span> execute() <span class=\"keyword\">throws</span> <span class=\"type\">Exception</span> &#123;</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(user);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">NONE</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>表单name属性写法<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">name</span>=<span class=\"string\">\"user.username\"</span></div><div class=\"line\"><span class=\"attr\">name</span>=<span class=\"string\">\"user.password\"</span></div><div class=\"line\"><span class=\"attr\">name</span>=<span class=\"string\">\"user.address\"</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"封装到list，map\"><a href=\"#封装到list，map\" class=\"headerlink\" title=\"封装到list，map\"></a>封装到list，map</h1><p>list<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListAction</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span>;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">List</span>&lt;User&gt; getList() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">list</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">public</span> void setList(<span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span>) &#123;</div><div class=\"line\">  this.<span class=\"keyword\">list</span> = <span class=\"keyword\">list</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> @Override</div><div class=\"line\"> <span class=\"keyword\">public</span> String execute() throws <span class=\"keyword\">Exception</span> &#123;</div><div class=\"line\">  System.out.println(<span class=\"keyword\">list</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> NONE;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">username:&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"list[0].username\"</span>/&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">password:&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"list[0].password\"</span> /&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">addres<span class=\"variable\">s:</span>&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"list[0].address\"</span> /&gt;</div></pre></td></tr></table></figure>\n<p>Map<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> class MapAction extends ActionSupport&#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, User&gt; <span class=\"built_in\">map</span>;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, User&gt; getMap() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">map</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"literal\">void</span> setMap(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, User&gt; <span class=\"built_in\">map</span>) &#123;</div><div class=\"line\">  this.<span class=\"built_in\">map</span> = <span class=\"built_in\">map</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> @Override</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> execute() throws Exception &#123;</div><div class=\"line\">  System.out.println(<span class=\"built_in\">map</span>);\t\t</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">NONE</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">username:&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"map['one'].username\"</span>/&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">password:&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"map['one'].password\"</span> /&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">addres<span class=\"variable\">s:</span>&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"map['one'].address\"</span> /&gt;</div></pre></td></tr></table></figure>\n","excerpt":"<p>数据操作<br>","more":"<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 全局结果页面配置 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">global-results</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">name</span>=<span class=\"string\">\"success\"</span>&gt;</span>/hello.jsp<span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">global-results</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"result标签里的type属性\"><a href=\"#result标签里的type属性\" class=\"headerlink\" title=\"result标签里的type属性\"></a>result标签里的type属性</h1><p>默认为转发dispatcher<br>其它还有<br>重定向redirect<br>chain:重定向到action(因为缓存一般不用)<br>redirectAction:重定向到action</p>\n<h1 id=\"获取表单数据\"><a href=\"#获取表单数据\" class=\"headerlink\" title=\"获取表单数据\"></a>获取表单数据</h1><p>使用ActionContext获取<br><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//获取ActionContext对象</span></div><div class=\"line\">ActionContext context = ActionContext.getContext();</div><div class=\"line\">  </div><div class=\"line\">Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">Object</span>&gt; <span class=\"built_in\">map</span> = context.getParameters();</div><div class=\"line\">  </div><div class=\"line\">Set&lt;<span class=\"keyword\">String</span>&gt; keys = <span class=\"built_in\">map</span>.keySet();</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">String</span> <span class=\"built_in\">key</span> : keys) &#123;</div><div class=\"line\">  <span class=\"keyword\">Object</span>[] obj = (<span class=\"keyword\">Object</span>[]) <span class=\"built_in\">map</span>.<span class=\"built_in\">get</span>(<span class=\"built_in\">key</span>);</div><div class=\"line\">  System.out.<span class=\"built_in\">println</span>(Arrays.toString(obj));</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure></p>\n<p>使用ServletActionContext获取<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//使用ServletActionContext获取表单数据</span></div><div class=\"line\">HttpServletRequest request = ServletActionContext.getRequest();</div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">String</span> username = request.getParameter(<span class=\"string\">\"username\"</span>);</div><div class=\"line\"><span class=\"keyword\">String</span> password = request.getParameter(<span class=\"string\">\"password\"</span>);</div><div class=\"line\"><span class=\"keyword\">String</span> address = request.getParameter(<span class=\"string\">\"address\"</span>);</div><div class=\"line\">  </div><div class=\"line\">System.out.<span class=\"built_in\">println</span>(username+<span class=\"string\">\":\"</span>+password+<span class=\"string\">\":\"</span>+address);</div></pre></td></tr></table></figure></p>\n<p>使用接口注入获取<br><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Form3DemoAction</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> <span class=\"title\">implements</span> <span class=\"title\">ServletRequestAware</span></span>&#123;</div><div class=\"line\"> <span class=\"comment\">//接口注入获取表单数据</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"type\">HttpServletRequest</span> request;</div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public void setServletRequest(<span class=\"type\">HttpServletRequest</span> request) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.request = request;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public <span class=\"type\">String</span> execute() <span class=\"keyword\">throws</span> <span class=\"type\">Exception</span> &#123;</div><div class=\"line\">  <span class=\"type\">String</span> username = request.getParameter(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">  <span class=\"type\">String</span> password = request.getParameter(<span class=\"string\">\"password\"</span>);</div><div class=\"line\">  <span class=\"type\">String</span> address = request.getParameter(<span class=\"string\">\"address\"</span>);</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(username+<span class=\"string\">\":\"</span>+password+<span class=\"string\">\":\"</span>+address);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">NONE</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"action操作域对象\"><a href=\"#action操作域对象\" class=\"headerlink\" title=\"action操作域对象\"></a>action操作域对象</h1><figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//action操作三个域对象</span></div><div class=\"line\"><span class=\"comment\">//1 request域</span></div><div class=\"line\">HttpServletRequest request = ServletActionContext.getRequest();</div><div class=\"line\">request.setAttribute(<span class=\"string\">\"req\"</span>, <span class=\"string\">\"reqValue\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//2 session域</span></div><div class=\"line\">HttpSession session = request.getSession();</div><div class=\"line\">session.setAttribute(<span class=\"string\">\"sess\"</span>, <span class=\"string\">\"sessValue\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//3 ServletContext域</span></div><div class=\"line\">ServletContext context = ServletActionContext.getServletContext();</div><div class=\"line\">context.setAttribute(<span class=\"string\">\"contextname\"</span>, <span class=\"string\">\"contextValue\"</span>);</div></pre></td></tr></table></figure>\n<h1 id=\"属性封装\"><a href=\"#属性封装\" class=\"headerlink\" title=\"属性封装\"></a>属性封装</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataDemo1Action</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span></span>&#123;</div><div class=\"line\"> <span class=\"comment\">//属性封装</span></div><div class=\"line\"> <span class=\"keyword\">private</span> String username;</div><div class=\"line\"> <span class=\"keyword\">private</span> String password;</div><div class=\"line\"> <span class=\"keyword\">private</span> String address;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUsername</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUsername</span><span class=\"params\">(String username)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.username = username;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPassword</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> password;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPassword</span><span class=\"params\">(String password)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.password = password;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getAddress</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> address;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAddress</span><span class=\"params\">(String address)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.address = address;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">execute</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">  System.out.println(username+<span class=\"string\">\":\"</span>+password+<span class=\"string\">\":\"</span>+address);</div><div class=\"line\">  <span class=\"keyword\">return</span> NONE;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"模型驱动封装\"><a href=\"#模型驱动封装\" class=\"headerlink\" title=\"模型驱动封装\"></a>模型驱动封装</h1><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataDemo2Action</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> <span class=\"title\">implements</span> <span class=\"title\">ModelDriven&lt;User&gt;</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//模型驱动封装</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"type\">User</span> user = <span class=\"keyword\">new</span> <span class=\"type\">User</span>();</div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public <span class=\"type\">User</span> getModel() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> user;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public <span class=\"type\">String</span> execute() <span class=\"keyword\">throws</span> <span class=\"type\">Exception</span> &#123;</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(user);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">NONE</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"表达式封装\"><a href=\"#表达式封装\" class=\"headerlink\" title=\"表达式封装\"></a>表达式封装</h1><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataDemo3Action</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> </span>&#123;</div><div class=\"line\"> <span class=\"comment\">//表达式封装</span></div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"type\">User</span> user;</div><div class=\"line\"></div><div class=\"line\"> public <span class=\"type\">User</span> getUser() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> user;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> public void setUser(<span class=\"type\">User</span> user) &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.user = user;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\"> public <span class=\"type\">String</span> execute() <span class=\"keyword\">throws</span> <span class=\"type\">Exception</span> &#123;</div><div class=\"line\">  <span class=\"type\">System</span>.out.println(user);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">NONE</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>表单name属性写法<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">name</span>=<span class=\"string\">\"user.username\"</span></div><div class=\"line\"><span class=\"attr\">name</span>=<span class=\"string\">\"user.password\"</span></div><div class=\"line\"><span class=\"attr\">name</span>=<span class=\"string\">\"user.address\"</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"封装到list，map\"><a href=\"#封装到list，map\" class=\"headerlink\" title=\"封装到list，map\"></a>封装到list，map</h1><p>list<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListAction</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span>;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">List</span>&lt;User&gt; getList() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">list</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">public</span> void setList(<span class=\"keyword\">List</span>&lt;User&gt; <span class=\"keyword\">list</span>) &#123;</div><div class=\"line\">  this.<span class=\"keyword\">list</span> = <span class=\"keyword\">list</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> @Override</div><div class=\"line\"> <span class=\"keyword\">public</span> String execute() throws <span class=\"keyword\">Exception</span> &#123;</div><div class=\"line\">  System.out.println(<span class=\"keyword\">list</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> NONE;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">username:&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"list[0].username\"</span>/&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">password:&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"list[0].password\"</span> /&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">addres<span class=\"variable\">s:</span>&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"list[0].address\"</span> /&gt;</div></pre></td></tr></table></figure>\n<p>Map<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> class MapAction extends ActionSupport&#123;</div><div class=\"line\"> <span class=\"keyword\">private</span> <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, User&gt; <span class=\"built_in\">map</span>;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, User&gt; getMap() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">map</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"literal\">void</span> setMap(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, User&gt; <span class=\"built_in\">map</span>) &#123;</div><div class=\"line\">  this.<span class=\"built_in\">map</span> = <span class=\"built_in\">map</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> @Override</div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> execute() throws Exception &#123;</div><div class=\"line\">  System.out.println(<span class=\"built_in\">map</span>);\t\t</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">NONE</span>;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">username:&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"map['one'].username\"</span>/&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">password:&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"map['one'].password\"</span> /&gt;</div><div class=\"line\">&lt;<span class=\"keyword\">br</span>/&gt;</div><div class=\"line\">addres<span class=\"variable\">s:</span>&lt;<span class=\"built_in\">input</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"map['one'].address\"</span> /&gt;</div></pre></td></tr></table></figure>"},{"title":"不负红尘","date":"2017-05-10T06:35:18.000Z","toc":true,"_content":"\n天下之大 悲欢一渺\n<!--more-->\n归时恰逢故城阳春三月天\n傍晚小城悄悄细雨\n树叶在风中摇曳\n恍惚的我一路负笈\n伞下的你却好美丽\n即使物换星移、物是人非，即使生死轮回、世道轮转，我亦不负红尘。\n\n","source":"_posts/不负红尘.md","raw":"---\ntitle: 不负红尘\ndate: 2017-05-10 14:35:18\ntags:\n- 文学\ntoc: true\n---\n\n天下之大 悲欢一渺\n<!--more-->\n归时恰逢故城阳春三月天\n傍晚小城悄悄细雨\n树叶在风中摇曳\n恍惚的我一路负笈\n伞下的你却好美丽\n即使物换星移、物是人非，即使生死轮回、世道轮转，我亦不负红尘。\n\n","slug":"不负红尘","published":1,"updated":"2018-01-20T06:44:37.634Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m90y004s44wagaxwdltf","content":"<p>天下之大 悲欢一渺<br><a id=\"more\"></a><br>归时恰逢故城阳春三月天<br>傍晚小城悄悄细雨<br>树叶在风中摇曳<br>恍惚的我一路负笈<br>伞下的你却好美丽<br>即使物换星移、物是人非，即使生死轮回、世道轮转，我亦不负红尘。</p>\n","excerpt":"<p>天下之大 悲欢一渺<br>","more":"<br>归时恰逢故城阳春三月天<br>傍晚小城悄悄细雨<br>树叶在风中摇曳<br>恍惚的我一路负笈<br>伞下的你却好美丽<br>即使物换星移、物是人非，即使生死轮回、世道轮转，我亦不负红尘。</p>"},{"title":"struts2_04","toc":true,"date":"2017-06-16T06:21:54.000Z","_content":"拦截器和struts2标签\n<!--more-->\n# 拦截器概述\n1.struts2封装的功能都在拦截器里面\n2.struts2默认拦截器位置在struts2-core-2.3.24.jar下面的struts-default.xml里面\n3.拦截器在action对象创建之后，action的方法执行之前执行\n# 拦截器底层原理\n1.aop思想\n2.责任链模式\n和过滤链很相似，一个过滤器放行后才能到下一个过滤器\n一个拦截器放行后才能到下一个拦截器\n# 自定义拦截器\n1.继承MethodFilterInterceptor类\n2.重写doIntercept()方法里面的逻辑，放行操作为return invocation.invoke();\n3.注册拦截器\n在要拦截的action标签所在的package标签里面声明拦截器\n```\n<!-- 声明拦截器 -->\n<interceptors>\n\t<interceptor name=\"随便起\" class=\"拦截器全路径\">\n</interceptors>\n```\n在action标签里使用声明的拦截器\n```\n<interceptor-ref name=\"随便起\">\n\t<!-- 自定义拦截器会拦截所有方法，所以需要将不需要拦截的方法写在下面 -->\n\t<param name=\"excludeMethods\">方法名1，方法名2</param>\n</interceptor-ref>\n```\n默认拦截器会因为自定义拦截器不执行，所以需要手动使用\n```\n<interceptor-ref name=\"defaultStack\"></interceptor-ref>\n```\n# struts2表单标签\n对应html表单标签\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgn3dwlhstj30tu0e2go0.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgn3dxbry8j30nr09qmya.jpg)\n","source":"_posts/struts2-04.md","raw":"---\ntitle: struts2_04\ntoc: true\ndate: 2017-06-16 14:21:54\ntags:\n- Java基础\n---\n拦截器和struts2标签\n<!--more-->\n# 拦截器概述\n1.struts2封装的功能都在拦截器里面\n2.struts2默认拦截器位置在struts2-core-2.3.24.jar下面的struts-default.xml里面\n3.拦截器在action对象创建之后，action的方法执行之前执行\n# 拦截器底层原理\n1.aop思想\n2.责任链模式\n和过滤链很相似，一个过滤器放行后才能到下一个过滤器\n一个拦截器放行后才能到下一个拦截器\n# 自定义拦截器\n1.继承MethodFilterInterceptor类\n2.重写doIntercept()方法里面的逻辑，放行操作为return invocation.invoke();\n3.注册拦截器\n在要拦截的action标签所在的package标签里面声明拦截器\n```\n<!-- 声明拦截器 -->\n<interceptors>\n\t<interceptor name=\"随便起\" class=\"拦截器全路径\">\n</interceptors>\n```\n在action标签里使用声明的拦截器\n```\n<interceptor-ref name=\"随便起\">\n\t<!-- 自定义拦截器会拦截所有方法，所以需要将不需要拦截的方法写在下面 -->\n\t<param name=\"excludeMethods\">方法名1，方法名2</param>\n</interceptor-ref>\n```\n默认拦截器会因为自定义拦截器不执行，所以需要手动使用\n```\n<interceptor-ref name=\"defaultStack\"></interceptor-ref>\n```\n# struts2表单标签\n对应html表单标签\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgn3dwlhstj30tu0e2go0.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fgn3dxbry8j30nr09qmya.jpg)\n","slug":"struts2-04","published":1,"updated":"2018-01-20T06:44:37.623Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m915004v44wahronx3b5","content":"<p>拦截器和struts2标签<br><a id=\"more\"></a></p>\n<h1 id=\"拦截器概述\"><a href=\"#拦截器概述\" class=\"headerlink\" title=\"拦截器概述\"></a>拦截器概述</h1><p>1.struts2封装的功能都在拦截器里面<br>2.struts2默认拦截器位置在struts2-core-2.3.24.jar下面的struts-default.xml里面<br>3.拦截器在action对象创建之后，action的方法执行之前执行</p>\n<h1 id=\"拦截器底层原理\"><a href=\"#拦截器底层原理\" class=\"headerlink\" title=\"拦截器底层原理\"></a>拦截器底层原理</h1><p>1.aop思想<br>2.责任链模式<br>和过滤链很相似，一个过滤器放行后才能到下一个过滤器<br>一个拦截器放行后才能到下一个拦截器</p>\n<h1 id=\"自定义拦截器\"><a href=\"#自定义拦截器\" class=\"headerlink\" title=\"自定义拦截器\"></a>自定义拦截器</h1><p>1.继承MethodFilterInterceptor类<br>2.重写doIntercept()方法里面的逻辑，放行操作为return invocation.invoke();<br>3.注册拦截器<br>在要拦截的action标签所在的package标签里面声明拦截器<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 声明拦截器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">interceptors</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">interceptor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"随便起\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"拦截器全路径\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">interceptors</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在action标签里使用声明的拦截器<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">interceptor-ref</span> <span class=\"attr\">name</span>=<span class=\"string\">\"随便起\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 自定义拦截器会拦截所有方法，所以需要将不需要拦截的方法写在下面 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"excludeMethods\"</span>&gt;</span>方法名1，方法名2<span class=\"tag\">&lt;/<span class=\"name\">param</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">interceptor-ref</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>默认拦截器会因为自定义拦截器不执行，所以需要手动使用<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;interceptor-<span class=\"keyword\">ref</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"defaultStack\"</span>&gt;&lt;/interceptor-<span class=\"keyword\">ref</span>&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"struts2表单标签\"><a href=\"#struts2表单标签\" class=\"headerlink\" title=\"struts2表单标签\"></a>struts2表单标签</h1><p>对应html表单标签<br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgn3dwlhstj30tu0e2go0.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgn3dxbry8j30nr09qmya.jpg\" alt=\"\"></p>\n","excerpt":"<p>拦截器和struts2标签<br>","more":"</p>\n<h1 id=\"拦截器概述\"><a href=\"#拦截器概述\" class=\"headerlink\" title=\"拦截器概述\"></a>拦截器概述</h1><p>1.struts2封装的功能都在拦截器里面<br>2.struts2默认拦截器位置在struts2-core-2.3.24.jar下面的struts-default.xml里面<br>3.拦截器在action对象创建之后，action的方法执行之前执行</p>\n<h1 id=\"拦截器底层原理\"><a href=\"#拦截器底层原理\" class=\"headerlink\" title=\"拦截器底层原理\"></a>拦截器底层原理</h1><p>1.aop思想<br>2.责任链模式<br>和过滤链很相似，一个过滤器放行后才能到下一个过滤器<br>一个拦截器放行后才能到下一个拦截器</p>\n<h1 id=\"自定义拦截器\"><a href=\"#自定义拦截器\" class=\"headerlink\" title=\"自定义拦截器\"></a>自定义拦截器</h1><p>1.继承MethodFilterInterceptor类<br>2.重写doIntercept()方法里面的逻辑，放行操作为return invocation.invoke();<br>3.注册拦截器<br>在要拦截的action标签所在的package标签里面声明拦截器<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 声明拦截器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">interceptors</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">interceptor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"随便起\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"拦截器全路径\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">interceptors</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在action标签里使用声明的拦截器<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">interceptor-ref</span> <span class=\"attr\">name</span>=<span class=\"string\">\"随便起\"</span>&gt;</span></div><div class=\"line\"> <span class=\"comment\">&lt;!-- 自定义拦截器会拦截所有方法，所以需要将不需要拦截的方法写在下面 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"excludeMethods\"</span>&gt;</span>方法名1，方法名2<span class=\"tag\">&lt;/<span class=\"name\">param</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">interceptor-ref</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>默认拦截器会因为自定义拦截器不执行，所以需要手动使用<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;interceptor-<span class=\"keyword\">ref</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"defaultStack\"</span>&gt;&lt;/interceptor-<span class=\"keyword\">ref</span>&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"struts2表单标签\"><a href=\"#struts2表单标签\" class=\"headerlink\" title=\"struts2表单标签\"></a>struts2表单标签</h1><p>对应html表单标签<br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgn3dwlhstj30tu0e2go0.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fgn3dxbry8j30nr09qmya.jpg\" alt=\"\"></p>"},{"title":"《深入理解Java虚拟机》阅读笔记","toc":true,"date":"2017-06-11T12:44:24.000Z","_content":"# 第1章 走近Java\n世界上并没有完美的程序，但我们并不因此而沮丧，因为写程序本来就是一个不断追求完美的过程。\n### 1.2 Java技术体系\nSun官方所定义的Java技术体系：\n\n\tJava程序设计语言\n\t各种硬件平台上的Java虚拟机\n\tClass文件格式\n\tJava API类库\n\t来自商业机构和开源社区的第三方Java类库\n\nJDK：Java程序设计语言，Java虚拟机，Java API类库\nJDK是支持Java程序开发的最小环境\n\nJRE：Java API类库中的Java SE API子集，Java虚拟机\nJRE是支持Java程序运行的标准环境\n### 1.3 Java发展史\n1991年4月，由James Gosling博士领导的绿色计划创造了Oak(橡树)。\n1995年5月23日，Oak语言改名为Java。\n1996年1月23日，JDK1.0发布，提供了一个纯解释执行的Java虚拟机(Sun Classic VM)。\n1998年12月4日，JDK1.2发布。\n1999年4月27日，HotSpot虚拟机发布，成为1.3之后Sun JDK的默认虚拟机。\n2000年5月8日，JDK1.3发布。\n2002年2月13日，JDK1.4发布。\n2004年9月30日，JDK1.5发布。\n2006年12月11日，JDK1.6发布。\n2006年11月13日，JavaOne大会上Sun公司宣布Java开源。\n2009年2月19日，JDK1.7发布。\n2009年4月20日，Oracle公司收购Sun公司。\n2013年9月，JDK1.8发布。\n### 1.4 Java虚拟机发展史\n# 第2章 Java内存区域与内存溢出异常\nJava与C++之间有一堵由内存动态分配和垃圾收集技术所围成的“高墙”，墙外面的人想进去，墙里面的人却想出来。\n### 2.2运行时数据区域\n#### 2.2.1程序计数器\n程序计数器是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。\n每条线程都有一个独立的程序计数器，所以程序计数器为线程私有的内存。\n#### 2.2.2Java虚拟机栈\n与程序计数器一样，Java虚拟机栈也是线程私有的，它的生命周期与线程相同。\n每个方法执行的同时都会创建一个栈帧，用于存储局部变量表、操作数栈、动态链接、方法出口等信息。\n每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。\n#### 2.2.3本地方法栈\n本地方法栈和虚拟机栈相似，虚拟机栈为虚拟机执行java方法服务，而本地方法栈则为虚拟机使用到的Native方法服务。\n#### 2.2.4Java堆\nJava堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。\n此内存区域的唯一目的就是存放对象实例。\nJava堆是垃圾收集器管理的主要区域。\n#### 2.2.5方法区\n方法区与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编辑器编译后的代码等数据。\n#### 2.2.6运行时常量池\n运行时常量池是方法区的一部分。\nClass文件中有一项信息是常量池，用于存放编译器生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。\n运行时常量池相对于Class文件常量池的重要特征是具备动态性。\n#### 2.2.7直接内存\n直接内存并不是虚拟机运行时数据区的一部分。\nJDK1.4中加入了NIO，它可以使用Native函数库直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用来进行操作。\n### 2.3HotSpot虚拟机对象探秘\n#### 2.3.1对象的创建\n虚拟机遇到一条new指令时，首先将去检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析、和初始化过。如果没有，那必须先执行相应的类加载过程。\n在类加载通过后，接下来虚拟机将为新生对象分配内存。分配内存有“指针碰撞”和“空闲列表”2种方式，取决于GC是否带有压缩整理功能。内存分配的2种同步方法，一种是对分配内存空间的动作进行同步处理————实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性；另一种是把内存分配的动作按照线程划分在不同的空间之中进行，即每个线程在Java堆中预先分配一小块内存，称为本地线程分配缓冲。\n内存分配完成后，虚拟机要对对象进行必要的设置，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。这些信息存放在对象的对象头中。\n在上面工作完成后，从虚拟机的角度看就，一个新的对象已经诞生了，但从Java程序来看，对象创建才刚刚开始————<init>方法还没有执行，所有字段都为0.当<init>方法执行后，一个真正可用的对象才算产生出来。\n#### 2.3.2对象的内存布局\n在HotSpot虚拟机中，对象在内存中存储的布局分为3个区域：对象头、实例数据和对齐填充。\n对象头包括2部分，第一部分用于存储对象自身的运行时数据，官方称它为“Mark Word”，另一部分是类型指针。\n实例数据是对象真正存储的有效信息。\n对齐填充没有特别的含义，仅仅起着占位符的作用。\n#### 2.3.3对象的访问定位\nJava程序需要通过栈上的reference数据来操作堆上的具体对象。\n目前主流的访问方式有句柄和直接指针。2种方式的图示这里就省略了。\n# 第3章 垃圾收集器与内存分配策略\n### 3.2对象已死吗\n#### 3.2.1引用计数算法\n给对象中添加一个引用计数器，每当有一个地方引用它时，计数器就加1；当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。\n缺点是无法解决对象之间相互循环引用的问题。\n#### 3.2.2可达性分析算法\n通过一系列称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链，当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的。\nJava语言中可以作为GC Roots的对象有4种，这里也省略。\n#### 3.2.3再谈引用\nJDK1.2后，将引用分为强引用，软引用，弱引用，虚引用。4种引用概念这里省略。\n#### 3.2.4生存还是死亡\n要宣告一个对象的死亡，至少要经历两次标记过程。\n如果对象在进行可达性分析后发现没有与GC Roots相连接的引用链，那它会被第一次标记并且进行一次筛选，筛选的条件是此对象是否有必要执行finalize()方法。当对象没有覆盖finalize()方法，或者finalize()方法已经被虚拟机调用过，虚拟机将这2种情况都视为“没有必要执行”。\n如果这个对象被判定为有必要执行finalize()方法，那么这个对象将会放置在一个叫做F-Queue的队列之中，并在稍后由一个由虚拟机自动建立的、低优先级的Finalizer线程去执行它。finalize()方法是对象逃脱死亡命运的最后一次机会，稍后GC将对F-Queue中的对象进行第二次小规模标记。\n#### 3.2.5回收方法区\n永久代的垃圾收集主要回收两部分内容：废弃常量和无用的类。\n### 3.3垃圾收集算法\n#### 3.3.1标记-清除算法\n#### 3.3.2复制算法\n#### 3.3.3标记-整理算法\n#### 3.3.4分代收集算法\n\n\n\n\n# 第4章 虚拟机性能监控与故障处理工具\n# 第5章\t调优案例分析与实战\n# 第6章 类文件结构\n代码编译的结果从本地机器码转变为字节码，是存储格式发展的一小步，却是编程语言发展的一大步。\n### 6.3Class类文件的结构\nClass文件格式采用一种类似于C语言结构体的伪结构来存储数据，这种伪结构中只有两种数据类型：无符号数和表。\n无符号数属于基本的数据类型。\n表是由多个无符号数或者其他表作为数据项构成的复合数据类型。\n#### 6.3.1魔数与Class文件的版本\n每个Class文件的头4个字节称为魔数，它的唯一作用是确定这个文件是否为一个能被虚拟机接受的Class文件。\n紧接着魔数的4个字节存储的是Class文件的版本号：第5,6个字节是次版本号，第7,8个字节是主版本号。\n#### 6.3.2常量池\n\n\n# 第7章 虚拟机类加载机制\n# 第8章\t虚拟机字节码执行引擎\n# 第9章\t类加载及执行子系统的案例与实战\n# 第10章 早期(编译期)优化\n从计算机程序出现的第一天起，对效率的追求就是程序天生的坚定信仰，这个过程犹如一场没有终点、永不停歇的F1方程式竞赛，程序员是车手，技术平台则是在赛道上飞驰的赛车。\n# 第11章\t 晚期(运行期)优化\n# 第12章 Java内存模型与线程\n并发处理的广泛应用是使得Amdahl定律代替摩尔定律成为计算机性能发展源动力的根本原因，也是人类“压榨”计算机运算能力的最有力武器。\n# 第13章 线程安全与锁优化","source":"_posts/《深入理解Java虚拟机》阅读笔记.md","raw":"---\ntitle: 《深入理解Java虚拟机》阅读笔记\ntoc: true\ndate: 2017-06-11 20:44:24\ntags:\n- JVM\n---\n# 第1章 走近Java\n世界上并没有完美的程序，但我们并不因此而沮丧，因为写程序本来就是一个不断追求完美的过程。\n### 1.2 Java技术体系\nSun官方所定义的Java技术体系：\n\n\tJava程序设计语言\n\t各种硬件平台上的Java虚拟机\n\tClass文件格式\n\tJava API类库\n\t来自商业机构和开源社区的第三方Java类库\n\nJDK：Java程序设计语言，Java虚拟机，Java API类库\nJDK是支持Java程序开发的最小环境\n\nJRE：Java API类库中的Java SE API子集，Java虚拟机\nJRE是支持Java程序运行的标准环境\n### 1.3 Java发展史\n1991年4月，由James Gosling博士领导的绿色计划创造了Oak(橡树)。\n1995年5月23日，Oak语言改名为Java。\n1996年1月23日，JDK1.0发布，提供了一个纯解释执行的Java虚拟机(Sun Classic VM)。\n1998年12月4日，JDK1.2发布。\n1999年4月27日，HotSpot虚拟机发布，成为1.3之后Sun JDK的默认虚拟机。\n2000年5月8日，JDK1.3发布。\n2002年2月13日，JDK1.4发布。\n2004年9月30日，JDK1.5发布。\n2006年12月11日，JDK1.6发布。\n2006年11月13日，JavaOne大会上Sun公司宣布Java开源。\n2009年2月19日，JDK1.7发布。\n2009年4月20日，Oracle公司收购Sun公司。\n2013年9月，JDK1.8发布。\n### 1.4 Java虚拟机发展史\n# 第2章 Java内存区域与内存溢出异常\nJava与C++之间有一堵由内存动态分配和垃圾收集技术所围成的“高墙”，墙外面的人想进去，墙里面的人却想出来。\n### 2.2运行时数据区域\n#### 2.2.1程序计数器\n程序计数器是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。\n每条线程都有一个独立的程序计数器，所以程序计数器为线程私有的内存。\n#### 2.2.2Java虚拟机栈\n与程序计数器一样，Java虚拟机栈也是线程私有的，它的生命周期与线程相同。\n每个方法执行的同时都会创建一个栈帧，用于存储局部变量表、操作数栈、动态链接、方法出口等信息。\n每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。\n#### 2.2.3本地方法栈\n本地方法栈和虚拟机栈相似，虚拟机栈为虚拟机执行java方法服务，而本地方法栈则为虚拟机使用到的Native方法服务。\n#### 2.2.4Java堆\nJava堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。\n此内存区域的唯一目的就是存放对象实例。\nJava堆是垃圾收集器管理的主要区域。\n#### 2.2.5方法区\n方法区与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编辑器编译后的代码等数据。\n#### 2.2.6运行时常量池\n运行时常量池是方法区的一部分。\nClass文件中有一项信息是常量池，用于存放编译器生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。\n运行时常量池相对于Class文件常量池的重要特征是具备动态性。\n#### 2.2.7直接内存\n直接内存并不是虚拟机运行时数据区的一部分。\nJDK1.4中加入了NIO，它可以使用Native函数库直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用来进行操作。\n### 2.3HotSpot虚拟机对象探秘\n#### 2.3.1对象的创建\n虚拟机遇到一条new指令时，首先将去检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析、和初始化过。如果没有，那必须先执行相应的类加载过程。\n在类加载通过后，接下来虚拟机将为新生对象分配内存。分配内存有“指针碰撞”和“空闲列表”2种方式，取决于GC是否带有压缩整理功能。内存分配的2种同步方法，一种是对分配内存空间的动作进行同步处理————实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性；另一种是把内存分配的动作按照线程划分在不同的空间之中进行，即每个线程在Java堆中预先分配一小块内存，称为本地线程分配缓冲。\n内存分配完成后，虚拟机要对对象进行必要的设置，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。这些信息存放在对象的对象头中。\n在上面工作完成后，从虚拟机的角度看就，一个新的对象已经诞生了，但从Java程序来看，对象创建才刚刚开始————<init>方法还没有执行，所有字段都为0.当<init>方法执行后，一个真正可用的对象才算产生出来。\n#### 2.3.2对象的内存布局\n在HotSpot虚拟机中，对象在内存中存储的布局分为3个区域：对象头、实例数据和对齐填充。\n对象头包括2部分，第一部分用于存储对象自身的运行时数据，官方称它为“Mark Word”，另一部分是类型指针。\n实例数据是对象真正存储的有效信息。\n对齐填充没有特别的含义，仅仅起着占位符的作用。\n#### 2.3.3对象的访问定位\nJava程序需要通过栈上的reference数据来操作堆上的具体对象。\n目前主流的访问方式有句柄和直接指针。2种方式的图示这里就省略了。\n# 第3章 垃圾收集器与内存分配策略\n### 3.2对象已死吗\n#### 3.2.1引用计数算法\n给对象中添加一个引用计数器，每当有一个地方引用它时，计数器就加1；当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。\n缺点是无法解决对象之间相互循环引用的问题。\n#### 3.2.2可达性分析算法\n通过一系列称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链，当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的。\nJava语言中可以作为GC Roots的对象有4种，这里也省略。\n#### 3.2.3再谈引用\nJDK1.2后，将引用分为强引用，软引用，弱引用，虚引用。4种引用概念这里省略。\n#### 3.2.4生存还是死亡\n要宣告一个对象的死亡，至少要经历两次标记过程。\n如果对象在进行可达性分析后发现没有与GC Roots相连接的引用链，那它会被第一次标记并且进行一次筛选，筛选的条件是此对象是否有必要执行finalize()方法。当对象没有覆盖finalize()方法，或者finalize()方法已经被虚拟机调用过，虚拟机将这2种情况都视为“没有必要执行”。\n如果这个对象被判定为有必要执行finalize()方法，那么这个对象将会放置在一个叫做F-Queue的队列之中，并在稍后由一个由虚拟机自动建立的、低优先级的Finalizer线程去执行它。finalize()方法是对象逃脱死亡命运的最后一次机会，稍后GC将对F-Queue中的对象进行第二次小规模标记。\n#### 3.2.5回收方法区\n永久代的垃圾收集主要回收两部分内容：废弃常量和无用的类。\n### 3.3垃圾收集算法\n#### 3.3.1标记-清除算法\n#### 3.3.2复制算法\n#### 3.3.3标记-整理算法\n#### 3.3.4分代收集算法\n\n\n\n\n# 第4章 虚拟机性能监控与故障处理工具\n# 第5章\t调优案例分析与实战\n# 第6章 类文件结构\n代码编译的结果从本地机器码转变为字节码，是存储格式发展的一小步，却是编程语言发展的一大步。\n### 6.3Class类文件的结构\nClass文件格式采用一种类似于C语言结构体的伪结构来存储数据，这种伪结构中只有两种数据类型：无符号数和表。\n无符号数属于基本的数据类型。\n表是由多个无符号数或者其他表作为数据项构成的复合数据类型。\n#### 6.3.1魔数与Class文件的版本\n每个Class文件的头4个字节称为魔数，它的唯一作用是确定这个文件是否为一个能被虚拟机接受的Class文件。\n紧接着魔数的4个字节存储的是Class文件的版本号：第5,6个字节是次版本号，第7,8个字节是主版本号。\n#### 6.3.2常量池\n\n\n# 第7章 虚拟机类加载机制\n# 第8章\t虚拟机字节码执行引擎\n# 第9章\t类加载及执行子系统的案例与实战\n# 第10章 早期(编译期)优化\n从计算机程序出现的第一天起，对效率的追求就是程序天生的坚定信仰，这个过程犹如一场没有终点、永不停歇的F1方程式竞赛，程序员是车手，技术平台则是在赛道上飞驰的赛车。\n# 第11章\t 晚期(运行期)优化\n# 第12章 Java内存模型与线程\n并发处理的广泛应用是使得Amdahl定律代替摩尔定律成为计算机性能发展源动力的根本原因，也是人类“压榨”计算机运算能力的最有力武器。\n# 第13章 线程安全与锁优化","slug":"《深入理解Java虚拟机》阅读笔记","published":1,"updated":"2018-01-20T06:44:37.625Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m918004x44wacpt3gy7g","content":"<h1 id=\"第1章-走近Java\"><a href=\"#第1章-走近Java\" class=\"headerlink\" title=\"第1章 走近Java\"></a>第1章 走近Java</h1><p>世界上并没有完美的程序，但我们并不因此而沮丧，因为写程序本来就是一个不断追求完美的过程。</p>\n<h3 id=\"1-2-Java技术体系\"><a href=\"#1-2-Java技术体系\" class=\"headerlink\" title=\"1.2 Java技术体系\"></a>1.2 Java技术体系</h3><p>Sun官方所定义的Java技术体系：</p>\n<pre><code>Java程序设计语言\n各种硬件平台上的Java虚拟机\nClass文件格式\nJava API类库\n来自商业机构和开源社区的第三方Java类库\n</code></pre><p>JDK：Java程序设计语言，Java虚拟机，Java API类库<br>JDK是支持Java程序开发的最小环境</p>\n<p>JRE：Java API类库中的Java SE API子集，Java虚拟机<br>JRE是支持Java程序运行的标准环境</p>\n<h3 id=\"1-3-Java发展史\"><a href=\"#1-3-Java发展史\" class=\"headerlink\" title=\"1.3 Java发展史\"></a>1.3 Java发展史</h3><p>1991年4月，由James Gosling博士领导的绿色计划创造了Oak(橡树)。<br>1995年5月23日，Oak语言改名为Java。<br>1996年1月23日，JDK1.0发布，提供了一个纯解释执行的Java虚拟机(Sun Classic VM)。<br>1998年12月4日，JDK1.2发布。<br>1999年4月27日，HotSpot虚拟机发布，成为1.3之后Sun JDK的默认虚拟机。<br>2000年5月8日，JDK1.3发布。<br>2002年2月13日，JDK1.4发布。<br>2004年9月30日，JDK1.5发布。<br>2006年12月11日，JDK1.6发布。<br>2006年11月13日，JavaOne大会上Sun公司宣布Java开源。<br>2009年2月19日，JDK1.7发布。<br>2009年4月20日，Oracle公司收购Sun公司。<br>2013年9月，JDK1.8发布。</p>\n<h3 id=\"1-4-Java虚拟机发展史\"><a href=\"#1-4-Java虚拟机发展史\" class=\"headerlink\" title=\"1.4 Java虚拟机发展史\"></a>1.4 Java虚拟机发展史</h3><h1 id=\"第2章-Java内存区域与内存溢出异常\"><a href=\"#第2章-Java内存区域与内存溢出异常\" class=\"headerlink\" title=\"第2章 Java内存区域与内存溢出异常\"></a>第2章 Java内存区域与内存溢出异常</h1><p>Java与C++之间有一堵由内存动态分配和垃圾收集技术所围成的“高墙”，墙外面的人想进去，墙里面的人却想出来。</p>\n<h3 id=\"2-2运行时数据区域\"><a href=\"#2-2运行时数据区域\" class=\"headerlink\" title=\"2.2运行时数据区域\"></a>2.2运行时数据区域</h3><h4 id=\"2-2-1程序计数器\"><a href=\"#2-2-1程序计数器\" class=\"headerlink\" title=\"2.2.1程序计数器\"></a>2.2.1程序计数器</h4><p>程序计数器是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。<br>每条线程都有一个独立的程序计数器，所以程序计数器为线程私有的内存。</p>\n<h4 id=\"2-2-2Java虚拟机栈\"><a href=\"#2-2-2Java虚拟机栈\" class=\"headerlink\" title=\"2.2.2Java虚拟机栈\"></a>2.2.2Java虚拟机栈</h4><p>与程序计数器一样，Java虚拟机栈也是线程私有的，它的生命周期与线程相同。<br>每个方法执行的同时都会创建一个栈帧，用于存储局部变量表、操作数栈、动态链接、方法出口等信息。<br>每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。</p>\n<h4 id=\"2-2-3本地方法栈\"><a href=\"#2-2-3本地方法栈\" class=\"headerlink\" title=\"2.2.3本地方法栈\"></a>2.2.3本地方法栈</h4><p>本地方法栈和虚拟机栈相似，虚拟机栈为虚拟机执行java方法服务，而本地方法栈则为虚拟机使用到的Native方法服务。</p>\n<h4 id=\"2-2-4Java堆\"><a href=\"#2-2-4Java堆\" class=\"headerlink\" title=\"2.2.4Java堆\"></a>2.2.4Java堆</h4><p>Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。<br>此内存区域的唯一目的就是存放对象实例。<br>Java堆是垃圾收集器管理的主要区域。</p>\n<h4 id=\"2-2-5方法区\"><a href=\"#2-2-5方法区\" class=\"headerlink\" title=\"2.2.5方法区\"></a>2.2.5方法区</h4><p>方法区与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编辑器编译后的代码等数据。</p>\n<h4 id=\"2-2-6运行时常量池\"><a href=\"#2-2-6运行时常量池\" class=\"headerlink\" title=\"2.2.6运行时常量池\"></a>2.2.6运行时常量池</h4><p>运行时常量池是方法区的一部分。<br>Class文件中有一项信息是常量池，用于存放编译器生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。<br>运行时常量池相对于Class文件常量池的重要特征是具备动态性。</p>\n<h4 id=\"2-2-7直接内存\"><a href=\"#2-2-7直接内存\" class=\"headerlink\" title=\"2.2.7直接内存\"></a>2.2.7直接内存</h4><p>直接内存并不是虚拟机运行时数据区的一部分。<br>JDK1.4中加入了NIO，它可以使用Native函数库直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用来进行操作。</p>\n<h3 id=\"2-3HotSpot虚拟机对象探秘\"><a href=\"#2-3HotSpot虚拟机对象探秘\" class=\"headerlink\" title=\"2.3HotSpot虚拟机对象探秘\"></a>2.3HotSpot虚拟机对象探秘</h3><h4 id=\"2-3-1对象的创建\"><a href=\"#2-3-1对象的创建\" class=\"headerlink\" title=\"2.3.1对象的创建\"></a>2.3.1对象的创建</h4><p>虚拟机遇到一条new指令时，首先将去检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析、和初始化过。如果没有，那必须先执行相应的类加载过程。<br>在类加载通过后，接下来虚拟机将为新生对象分配内存。分配内存有“指针碰撞”和“空闲列表”2种方式，取决于GC是否带有压缩整理功能。内存分配的2种同步方法，一种是对分配内存空间的动作进行同步处理————实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性；另一种是把内存分配的动作按照线程划分在不同的空间之中进行，即每个线程在Java堆中预先分配一小块内存，称为本地线程分配缓冲。<br>内存分配完成后，虚拟机要对对象进行必要的设置，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。这些信息存放在对象的对象头中。<br>在上面工作完成后，从虚拟机的角度看就，一个新的对象已经诞生了，但从Java程序来看，对象创建才刚刚开始————<init>方法还没有执行，所有字段都为0.当<init>方法执行后，一个真正可用的对象才算产生出来。</init></init></p>\n<h4 id=\"2-3-2对象的内存布局\"><a href=\"#2-3-2对象的内存布局\" class=\"headerlink\" title=\"2.3.2对象的内存布局\"></a>2.3.2对象的内存布局</h4><p>在HotSpot虚拟机中，对象在内存中存储的布局分为3个区域：对象头、实例数据和对齐填充。<br>对象头包括2部分，第一部分用于存储对象自身的运行时数据，官方称它为“Mark Word”，另一部分是类型指针。<br>实例数据是对象真正存储的有效信息。<br>对齐填充没有特别的含义，仅仅起着占位符的作用。</p>\n<h4 id=\"2-3-3对象的访问定位\"><a href=\"#2-3-3对象的访问定位\" class=\"headerlink\" title=\"2.3.3对象的访问定位\"></a>2.3.3对象的访问定位</h4><p>Java程序需要通过栈上的reference数据来操作堆上的具体对象。<br>目前主流的访问方式有句柄和直接指针。2种方式的图示这里就省略了。</p>\n<h1 id=\"第3章-垃圾收集器与内存分配策略\"><a href=\"#第3章-垃圾收集器与内存分配策略\" class=\"headerlink\" title=\"第3章 垃圾收集器与内存分配策略\"></a>第3章 垃圾收集器与内存分配策略</h1><h3 id=\"3-2对象已死吗\"><a href=\"#3-2对象已死吗\" class=\"headerlink\" title=\"3.2对象已死吗\"></a>3.2对象已死吗</h3><h4 id=\"3-2-1引用计数算法\"><a href=\"#3-2-1引用计数算法\" class=\"headerlink\" title=\"3.2.1引用计数算法\"></a>3.2.1引用计数算法</h4><p>给对象中添加一个引用计数器，每当有一个地方引用它时，计数器就加1；当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。<br>缺点是无法解决对象之间相互循环引用的问题。</p>\n<h4 id=\"3-2-2可达性分析算法\"><a href=\"#3-2-2可达性分析算法\" class=\"headerlink\" title=\"3.2.2可达性分析算法\"></a>3.2.2可达性分析算法</h4><p>通过一系列称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链，当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的。<br>Java语言中可以作为GC Roots的对象有4种，这里也省略。</p>\n<h4 id=\"3-2-3再谈引用\"><a href=\"#3-2-3再谈引用\" class=\"headerlink\" title=\"3.2.3再谈引用\"></a>3.2.3再谈引用</h4><p>JDK1.2后，将引用分为强引用，软引用，弱引用，虚引用。4种引用概念这里省略。</p>\n<h4 id=\"3-2-4生存还是死亡\"><a href=\"#3-2-4生存还是死亡\" class=\"headerlink\" title=\"3.2.4生存还是死亡\"></a>3.2.4生存还是死亡</h4><p>要宣告一个对象的死亡，至少要经历两次标记过程。<br>如果对象在进行可达性分析后发现没有与GC Roots相连接的引用链，那它会被第一次标记并且进行一次筛选，筛选的条件是此对象是否有必要执行finalize()方法。当对象没有覆盖finalize()方法，或者finalize()方法已经被虚拟机调用过，虚拟机将这2种情况都视为“没有必要执行”。<br>如果这个对象被判定为有必要执行finalize()方法，那么这个对象将会放置在一个叫做F-Queue的队列之中，并在稍后由一个由虚拟机自动建立的、低优先级的Finalizer线程去执行它。finalize()方法是对象逃脱死亡命运的最后一次机会，稍后GC将对F-Queue中的对象进行第二次小规模标记。</p>\n<h4 id=\"3-2-5回收方法区\"><a href=\"#3-2-5回收方法区\" class=\"headerlink\" title=\"3.2.5回收方法区\"></a>3.2.5回收方法区</h4><p>永久代的垃圾收集主要回收两部分内容：废弃常量和无用的类。</p>\n<h3 id=\"3-3垃圾收集算法\"><a href=\"#3-3垃圾收集算法\" class=\"headerlink\" title=\"3.3垃圾收集算法\"></a>3.3垃圾收集算法</h3><h4 id=\"3-3-1标记-清除算法\"><a href=\"#3-3-1标记-清除算法\" class=\"headerlink\" title=\"3.3.1标记-清除算法\"></a>3.3.1标记-清除算法</h4><h4 id=\"3-3-2复制算法\"><a href=\"#3-3-2复制算法\" class=\"headerlink\" title=\"3.3.2复制算法\"></a>3.3.2复制算法</h4><h4 id=\"3-3-3标记-整理算法\"><a href=\"#3-3-3标记-整理算法\" class=\"headerlink\" title=\"3.3.3标记-整理算法\"></a>3.3.3标记-整理算法</h4><h4 id=\"3-3-4分代收集算法\"><a href=\"#3-3-4分代收集算法\" class=\"headerlink\" title=\"3.3.4分代收集算法\"></a>3.3.4分代收集算法</h4><h1 id=\"第4章-虚拟机性能监控与故障处理工具\"><a href=\"#第4章-虚拟机性能监控与故障处理工具\" class=\"headerlink\" title=\"第4章 虚拟机性能监控与故障处理工具\"></a>第4章 虚拟机性能监控与故障处理工具</h1><h1 id=\"第5章-调优案例分析与实战\"><a href=\"#第5章-调优案例分析与实战\" class=\"headerlink\" title=\"第5章    调优案例分析与实战\"></a>第5章    调优案例分析与实战</h1><h1 id=\"第6章-类文件结构\"><a href=\"#第6章-类文件结构\" class=\"headerlink\" title=\"第6章 类文件结构\"></a>第6章 类文件结构</h1><p>代码编译的结果从本地机器码转变为字节码，是存储格式发展的一小步，却是编程语言发展的一大步。</p>\n<h3 id=\"6-3Class类文件的结构\"><a href=\"#6-3Class类文件的结构\" class=\"headerlink\" title=\"6.3Class类文件的结构\"></a>6.3Class类文件的结构</h3><p>Class文件格式采用一种类似于C语言结构体的伪结构来存储数据，这种伪结构中只有两种数据类型：无符号数和表。<br>无符号数属于基本的数据类型。<br>表是由多个无符号数或者其他表作为数据项构成的复合数据类型。</p>\n<h4 id=\"6-3-1魔数与Class文件的版本\"><a href=\"#6-3-1魔数与Class文件的版本\" class=\"headerlink\" title=\"6.3.1魔数与Class文件的版本\"></a>6.3.1魔数与Class文件的版本</h4><p>每个Class文件的头4个字节称为魔数，它的唯一作用是确定这个文件是否为一个能被虚拟机接受的Class文件。<br>紧接着魔数的4个字节存储的是Class文件的版本号：第5,6个字节是次版本号，第7,8个字节是主版本号。</p>\n<h4 id=\"6-3-2常量池\"><a href=\"#6-3-2常量池\" class=\"headerlink\" title=\"6.3.2常量池\"></a>6.3.2常量池</h4><h1 id=\"第7章-虚拟机类加载机制\"><a href=\"#第7章-虚拟机类加载机制\" class=\"headerlink\" title=\"第7章 虚拟机类加载机制\"></a>第7章 虚拟机类加载机制</h1><h1 id=\"第8章-虚拟机字节码执行引擎\"><a href=\"#第8章-虚拟机字节码执行引擎\" class=\"headerlink\" title=\"第8章    虚拟机字节码执行引擎\"></a>第8章    虚拟机字节码执行引擎</h1><h1 id=\"第9章-类加载及执行子系统的案例与实战\"><a href=\"#第9章-类加载及执行子系统的案例与实战\" class=\"headerlink\" title=\"第9章    类加载及执行子系统的案例与实战\"></a>第9章    类加载及执行子系统的案例与实战</h1><h1 id=\"第10章-早期-编译期-优化\"><a href=\"#第10章-早期-编译期-优化\" class=\"headerlink\" title=\"第10章 早期(编译期)优化\"></a>第10章 早期(编译期)优化</h1><p>从计算机程序出现的第一天起，对效率的追求就是程序天生的坚定信仰，这个过程犹如一场没有终点、永不停歇的F1方程式竞赛，程序员是车手，技术平台则是在赛道上飞驰的赛车。</p>\n<h1 id=\"第11章-晚期-运行期-优化\"><a href=\"#第11章-晚期-运行期-优化\" class=\"headerlink\" title=\"第11章     晚期(运行期)优化\"></a>第11章     晚期(运行期)优化</h1><h1 id=\"第12章-Java内存模型与线程\"><a href=\"#第12章-Java内存模型与线程\" class=\"headerlink\" title=\"第12章 Java内存模型与线程\"></a>第12章 Java内存模型与线程</h1><p>并发处理的广泛应用是使得Amdahl定律代替摩尔定律成为计算机性能发展源动力的根本原因，也是人类“压榨”计算机运算能力的最有力武器。</p>\n<h1 id=\"第13章-线程安全与锁优化\"><a href=\"#第13章-线程安全与锁优化\" class=\"headerlink\" title=\"第13章 线程安全与锁优化\"></a>第13章 线程安全与锁优化</h1>","excerpt":"","more":"<h1 id=\"第1章-走近Java\"><a href=\"#第1章-走近Java\" class=\"headerlink\" title=\"第1章 走近Java\"></a>第1章 走近Java</h1><p>世界上并没有完美的程序，但我们并不因此而沮丧，因为写程序本来就是一个不断追求完美的过程。</p>\n<h3 id=\"1-2-Java技术体系\"><a href=\"#1-2-Java技术体系\" class=\"headerlink\" title=\"1.2 Java技术体系\"></a>1.2 Java技术体系</h3><p>Sun官方所定义的Java技术体系：</p>\n<pre><code>Java程序设计语言\n各种硬件平台上的Java虚拟机\nClass文件格式\nJava API类库\n来自商业机构和开源社区的第三方Java类库\n</code></pre><p>JDK：Java程序设计语言，Java虚拟机，Java API类库<br>JDK是支持Java程序开发的最小环境</p>\n<p>JRE：Java API类库中的Java SE API子集，Java虚拟机<br>JRE是支持Java程序运行的标准环境</p>\n<h3 id=\"1-3-Java发展史\"><a href=\"#1-3-Java发展史\" class=\"headerlink\" title=\"1.3 Java发展史\"></a>1.3 Java发展史</h3><p>1991年4月，由James Gosling博士领导的绿色计划创造了Oak(橡树)。<br>1995年5月23日，Oak语言改名为Java。<br>1996年1月23日，JDK1.0发布，提供了一个纯解释执行的Java虚拟机(Sun Classic VM)。<br>1998年12月4日，JDK1.2发布。<br>1999年4月27日，HotSpot虚拟机发布，成为1.3之后Sun JDK的默认虚拟机。<br>2000年5月8日，JDK1.3发布。<br>2002年2月13日，JDK1.4发布。<br>2004年9月30日，JDK1.5发布。<br>2006年12月11日，JDK1.6发布。<br>2006年11月13日，JavaOne大会上Sun公司宣布Java开源。<br>2009年2月19日，JDK1.7发布。<br>2009年4月20日，Oracle公司收购Sun公司。<br>2013年9月，JDK1.8发布。</p>\n<h3 id=\"1-4-Java虚拟机发展史\"><a href=\"#1-4-Java虚拟机发展史\" class=\"headerlink\" title=\"1.4 Java虚拟机发展史\"></a>1.4 Java虚拟机发展史</h3><h1 id=\"第2章-Java内存区域与内存溢出异常\"><a href=\"#第2章-Java内存区域与内存溢出异常\" class=\"headerlink\" title=\"第2章 Java内存区域与内存溢出异常\"></a>第2章 Java内存区域与内存溢出异常</h1><p>Java与C++之间有一堵由内存动态分配和垃圾收集技术所围成的“高墙”，墙外面的人想进去，墙里面的人却想出来。</p>\n<h3 id=\"2-2运行时数据区域\"><a href=\"#2-2运行时数据区域\" class=\"headerlink\" title=\"2.2运行时数据区域\"></a>2.2运行时数据区域</h3><h4 id=\"2-2-1程序计数器\"><a href=\"#2-2-1程序计数器\" class=\"headerlink\" title=\"2.2.1程序计数器\"></a>2.2.1程序计数器</h4><p>程序计数器是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。<br>每条线程都有一个独立的程序计数器，所以程序计数器为线程私有的内存。</p>\n<h4 id=\"2-2-2Java虚拟机栈\"><a href=\"#2-2-2Java虚拟机栈\" class=\"headerlink\" title=\"2.2.2Java虚拟机栈\"></a>2.2.2Java虚拟机栈</h4><p>与程序计数器一样，Java虚拟机栈也是线程私有的，它的生命周期与线程相同。<br>每个方法执行的同时都会创建一个栈帧，用于存储局部变量表、操作数栈、动态链接、方法出口等信息。<br>每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。</p>\n<h4 id=\"2-2-3本地方法栈\"><a href=\"#2-2-3本地方法栈\" class=\"headerlink\" title=\"2.2.3本地方法栈\"></a>2.2.3本地方法栈</h4><p>本地方法栈和虚拟机栈相似，虚拟机栈为虚拟机执行java方法服务，而本地方法栈则为虚拟机使用到的Native方法服务。</p>\n<h4 id=\"2-2-4Java堆\"><a href=\"#2-2-4Java堆\" class=\"headerlink\" title=\"2.2.4Java堆\"></a>2.2.4Java堆</h4><p>Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。<br>此内存区域的唯一目的就是存放对象实例。<br>Java堆是垃圾收集器管理的主要区域。</p>\n<h4 id=\"2-2-5方法区\"><a href=\"#2-2-5方法区\" class=\"headerlink\" title=\"2.2.5方法区\"></a>2.2.5方法区</h4><p>方法区与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编辑器编译后的代码等数据。</p>\n<h4 id=\"2-2-6运行时常量池\"><a href=\"#2-2-6运行时常量池\" class=\"headerlink\" title=\"2.2.6运行时常量池\"></a>2.2.6运行时常量池</h4><p>运行时常量池是方法区的一部分。<br>Class文件中有一项信息是常量池，用于存放编译器生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。<br>运行时常量池相对于Class文件常量池的重要特征是具备动态性。</p>\n<h4 id=\"2-2-7直接内存\"><a href=\"#2-2-7直接内存\" class=\"headerlink\" title=\"2.2.7直接内存\"></a>2.2.7直接内存</h4><p>直接内存并不是虚拟机运行时数据区的一部分。<br>JDK1.4中加入了NIO，它可以使用Native函数库直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用来进行操作。</p>\n<h3 id=\"2-3HotSpot虚拟机对象探秘\"><a href=\"#2-3HotSpot虚拟机对象探秘\" class=\"headerlink\" title=\"2.3HotSpot虚拟机对象探秘\"></a>2.3HotSpot虚拟机对象探秘</h3><h4 id=\"2-3-1对象的创建\"><a href=\"#2-3-1对象的创建\" class=\"headerlink\" title=\"2.3.1对象的创建\"></a>2.3.1对象的创建</h4><p>虚拟机遇到一条new指令时，首先将去检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析、和初始化过。如果没有，那必须先执行相应的类加载过程。<br>在类加载通过后，接下来虚拟机将为新生对象分配内存。分配内存有“指针碰撞”和“空闲列表”2种方式，取决于GC是否带有压缩整理功能。内存分配的2种同步方法，一种是对分配内存空间的动作进行同步处理————实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性；另一种是把内存分配的动作按照线程划分在不同的空间之中进行，即每个线程在Java堆中预先分配一小块内存，称为本地线程分配缓冲。<br>内存分配完成后，虚拟机要对对象进行必要的设置，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。这些信息存放在对象的对象头中。<br>在上面工作完成后，从虚拟机的角度看就，一个新的对象已经诞生了，但从Java程序来看，对象创建才刚刚开始————<init>方法还没有执行，所有字段都为0.当<init>方法执行后，一个真正可用的对象才算产生出来。</p>\n<h4 id=\"2-3-2对象的内存布局\"><a href=\"#2-3-2对象的内存布局\" class=\"headerlink\" title=\"2.3.2对象的内存布局\"></a>2.3.2对象的内存布局</h4><p>在HotSpot虚拟机中，对象在内存中存储的布局分为3个区域：对象头、实例数据和对齐填充。<br>对象头包括2部分，第一部分用于存储对象自身的运行时数据，官方称它为“Mark Word”，另一部分是类型指针。<br>实例数据是对象真正存储的有效信息。<br>对齐填充没有特别的含义，仅仅起着占位符的作用。</p>\n<h4 id=\"2-3-3对象的访问定位\"><a href=\"#2-3-3对象的访问定位\" class=\"headerlink\" title=\"2.3.3对象的访问定位\"></a>2.3.3对象的访问定位</h4><p>Java程序需要通过栈上的reference数据来操作堆上的具体对象。<br>目前主流的访问方式有句柄和直接指针。2种方式的图示这里就省略了。</p>\n<h1 id=\"第3章-垃圾收集器与内存分配策略\"><a href=\"#第3章-垃圾收集器与内存分配策略\" class=\"headerlink\" title=\"第3章 垃圾收集器与内存分配策略\"></a>第3章 垃圾收集器与内存分配策略</h1><h3 id=\"3-2对象已死吗\"><a href=\"#3-2对象已死吗\" class=\"headerlink\" title=\"3.2对象已死吗\"></a>3.2对象已死吗</h3><h4 id=\"3-2-1引用计数算法\"><a href=\"#3-2-1引用计数算法\" class=\"headerlink\" title=\"3.2.1引用计数算法\"></a>3.2.1引用计数算法</h4><p>给对象中添加一个引用计数器，每当有一个地方引用它时，计数器就加1；当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。<br>缺点是无法解决对象之间相互循环引用的问题。</p>\n<h4 id=\"3-2-2可达性分析算法\"><a href=\"#3-2-2可达性分析算法\" class=\"headerlink\" title=\"3.2.2可达性分析算法\"></a>3.2.2可达性分析算法</h4><p>通过一系列称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链，当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的。<br>Java语言中可以作为GC Roots的对象有4种，这里也省略。</p>\n<h4 id=\"3-2-3再谈引用\"><a href=\"#3-2-3再谈引用\" class=\"headerlink\" title=\"3.2.3再谈引用\"></a>3.2.3再谈引用</h4><p>JDK1.2后，将引用分为强引用，软引用，弱引用，虚引用。4种引用概念这里省略。</p>\n<h4 id=\"3-2-4生存还是死亡\"><a href=\"#3-2-4生存还是死亡\" class=\"headerlink\" title=\"3.2.4生存还是死亡\"></a>3.2.4生存还是死亡</h4><p>要宣告一个对象的死亡，至少要经历两次标记过程。<br>如果对象在进行可达性分析后发现没有与GC Roots相连接的引用链，那它会被第一次标记并且进行一次筛选，筛选的条件是此对象是否有必要执行finalize()方法。当对象没有覆盖finalize()方法，或者finalize()方法已经被虚拟机调用过，虚拟机将这2种情况都视为“没有必要执行”。<br>如果这个对象被判定为有必要执行finalize()方法，那么这个对象将会放置在一个叫做F-Queue的队列之中，并在稍后由一个由虚拟机自动建立的、低优先级的Finalizer线程去执行它。finalize()方法是对象逃脱死亡命运的最后一次机会，稍后GC将对F-Queue中的对象进行第二次小规模标记。</p>\n<h4 id=\"3-2-5回收方法区\"><a href=\"#3-2-5回收方法区\" class=\"headerlink\" title=\"3.2.5回收方法区\"></a>3.2.5回收方法区</h4><p>永久代的垃圾收集主要回收两部分内容：废弃常量和无用的类。</p>\n<h3 id=\"3-3垃圾收集算法\"><a href=\"#3-3垃圾收集算法\" class=\"headerlink\" title=\"3.3垃圾收集算法\"></a>3.3垃圾收集算法</h3><h4 id=\"3-3-1标记-清除算法\"><a href=\"#3-3-1标记-清除算法\" class=\"headerlink\" title=\"3.3.1标记-清除算法\"></a>3.3.1标记-清除算法</h4><h4 id=\"3-3-2复制算法\"><a href=\"#3-3-2复制算法\" class=\"headerlink\" title=\"3.3.2复制算法\"></a>3.3.2复制算法</h4><h4 id=\"3-3-3标记-整理算法\"><a href=\"#3-3-3标记-整理算法\" class=\"headerlink\" title=\"3.3.3标记-整理算法\"></a>3.3.3标记-整理算法</h4><h4 id=\"3-3-4分代收集算法\"><a href=\"#3-3-4分代收集算法\" class=\"headerlink\" title=\"3.3.4分代收集算法\"></a>3.3.4分代收集算法</h4><h1 id=\"第4章-虚拟机性能监控与故障处理工具\"><a href=\"#第4章-虚拟机性能监控与故障处理工具\" class=\"headerlink\" title=\"第4章 虚拟机性能监控与故障处理工具\"></a>第4章 虚拟机性能监控与故障处理工具</h1><h1 id=\"第5章-调优案例分析与实战\"><a href=\"#第5章-调优案例分析与实战\" class=\"headerlink\" title=\"第5章    调优案例分析与实战\"></a>第5章    调优案例分析与实战</h1><h1 id=\"第6章-类文件结构\"><a href=\"#第6章-类文件结构\" class=\"headerlink\" title=\"第6章 类文件结构\"></a>第6章 类文件结构</h1><p>代码编译的结果从本地机器码转变为字节码，是存储格式发展的一小步，却是编程语言发展的一大步。</p>\n<h3 id=\"6-3Class类文件的结构\"><a href=\"#6-3Class类文件的结构\" class=\"headerlink\" title=\"6.3Class类文件的结构\"></a>6.3Class类文件的结构</h3><p>Class文件格式采用一种类似于C语言结构体的伪结构来存储数据，这种伪结构中只有两种数据类型：无符号数和表。<br>无符号数属于基本的数据类型。<br>表是由多个无符号数或者其他表作为数据项构成的复合数据类型。</p>\n<h4 id=\"6-3-1魔数与Class文件的版本\"><a href=\"#6-3-1魔数与Class文件的版本\" class=\"headerlink\" title=\"6.3.1魔数与Class文件的版本\"></a>6.3.1魔数与Class文件的版本</h4><p>每个Class文件的头4个字节称为魔数，它的唯一作用是确定这个文件是否为一个能被虚拟机接受的Class文件。<br>紧接着魔数的4个字节存储的是Class文件的版本号：第5,6个字节是次版本号，第7,8个字节是主版本号。</p>\n<h4 id=\"6-3-2常量池\"><a href=\"#6-3-2常量池\" class=\"headerlink\" title=\"6.3.2常量池\"></a>6.3.2常量池</h4><h1 id=\"第7章-虚拟机类加载机制\"><a href=\"#第7章-虚拟机类加载机制\" class=\"headerlink\" title=\"第7章 虚拟机类加载机制\"></a>第7章 虚拟机类加载机制</h1><h1 id=\"第8章-虚拟机字节码执行引擎\"><a href=\"#第8章-虚拟机字节码执行引擎\" class=\"headerlink\" title=\"第8章    虚拟机字节码执行引擎\"></a>第8章    虚拟机字节码执行引擎</h1><h1 id=\"第9章-类加载及执行子系统的案例与实战\"><a href=\"#第9章-类加载及执行子系统的案例与实战\" class=\"headerlink\" title=\"第9章    类加载及执行子系统的案例与实战\"></a>第9章    类加载及执行子系统的案例与实战</h1><h1 id=\"第10章-早期-编译期-优化\"><a href=\"#第10章-早期-编译期-优化\" class=\"headerlink\" title=\"第10章 早期(编译期)优化\"></a>第10章 早期(编译期)优化</h1><p>从计算机程序出现的第一天起，对效率的追求就是程序天生的坚定信仰，这个过程犹如一场没有终点、永不停歇的F1方程式竞赛，程序员是车手，技术平台则是在赛道上飞驰的赛车。</p>\n<h1 id=\"第11章-晚期-运行期-优化\"><a href=\"#第11章-晚期-运行期-优化\" class=\"headerlink\" title=\"第11章     晚期(运行期)优化\"></a>第11章     晚期(运行期)优化</h1><h1 id=\"第12章-Java内存模型与线程\"><a href=\"#第12章-Java内存模型与线程\" class=\"headerlink\" title=\"第12章 Java内存模型与线程\"></a>第12章 Java内存模型与线程</h1><p>并发处理的广泛应用是使得Amdahl定律代替摩尔定律成为计算机性能发展源动力的根本原因，也是人类“压榨”计算机运算能力的最有力武器。</p>\n<h1 id=\"第13章-线程安全与锁优化\"><a href=\"#第13章-线程安全与锁优化\" class=\"headerlink\" title=\"第13章 线程安全与锁优化\"></a>第13章 线程安全与锁优化</h1>"},{"title":"不顾一切的走下去","date":"2017-04-21T03:23:35.000Z","toc":true,"_content":"转自片刻\n易青和\n<!--more-->\n<hr>\n我总在独自寻找一些东西\n仿佛从未有人见过\n却又那样清透而深刻\n像三月的烟风\n四月的细雨\n又像某天夜里突然醒来时\n困倦的眼和深深的泪\n<hr>\n我总会慢慢陷入同一个梦境没有人告诉我答案\n一条幽径林间的小路\n前方是深邃的白光\n花飞鸟去人影空徘徊\n回首静看只刹那间的黯然神伤\n<hr>\n我总爱固执的想起一些回忆\n那些迷惘的天空\n和清朗的白夜\n你对我说\n从此以后不再写那些孤独的文字\n认真生活\n倔强得很明显\n然后不顾一切的\n走下去\n<hr>\n沿着当初来时的轨迹\n却再也找不回\n那些撕碎的记忆\n如果说\n还有什么失落\n唯独那场雨\n我愿孤独的死去也不要沉溺在你温柔的怀里","source":"_posts/不顾一切的走下去.md","raw":"---\ntitle: 不顾一切的走下去\ndate: 2017-04-21 11:23:35\ntags:\n- essay\n- 文学\ntoc: true\n---\n转自片刻\n易青和\n<!--more-->\n<hr>\n我总在独自寻找一些东西\n仿佛从未有人见过\n却又那样清透而深刻\n像三月的烟风\n四月的细雨\n又像某天夜里突然醒来时\n困倦的眼和深深的泪\n<hr>\n我总会慢慢陷入同一个梦境没有人告诉我答案\n一条幽径林间的小路\n前方是深邃的白光\n花飞鸟去人影空徘徊\n回首静看只刹那间的黯然神伤\n<hr>\n我总爱固执的想起一些回忆\n那些迷惘的天空\n和清朗的白夜\n你对我说\n从此以后不再写那些孤独的文字\n认真生活\n倔强得很明显\n然后不顾一切的\n走下去\n<hr>\n沿着当初来时的轨迹\n却再也找不回\n那些撕碎的记忆\n如果说\n还有什么失落\n唯独那场雨\n我愿孤独的死去也不要沉溺在你温柔的怀里","slug":"不顾一切的走下去","published":1,"updated":"2018-01-20T06:44:37.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m91a005044wa1ezur3v7","content":"<p>转自片刻<br>易青和<br><a id=\"more\"></a></p>\n<p><hr><br>我总在独自寻找一些东西<br>仿佛从未有人见过<br>却又那样清透而深刻<br>像三月的烟风<br>四月的细雨<br>又像某天夜里突然醒来时<br>困倦的眼和深深的泪</p>\n<p><hr><br>我总会慢慢陷入同一个梦境没有人告诉我答案<br>一条幽径林间的小路<br>前方是深邃的白光<br>花飞鸟去人影空徘徊<br>回首静看只刹那间的黯然神伤</p>\n<p><hr><br>我总爱固执的想起一些回忆<br>那些迷惘的天空<br>和清朗的白夜<br>你对我说<br>从此以后不再写那些孤独的文字<br>认真生活<br>倔强得很明显<br>然后不顾一切的<br>走下去</p>\n<p><hr><br>沿着当初来时的轨迹<br>却再也找不回<br>那些撕碎的记忆<br>如果说<br>还有什么失落<br>唯独那场雨<br>我愿孤独的死去也不要沉溺在你温柔的怀里</p>\n","excerpt":"<p>转自片刻<br>易青和<br>","more":"</p>\n<p><hr><br>我总在独自寻找一些东西<br>仿佛从未有人见过<br>却又那样清透而深刻<br>像三月的烟风<br>四月的细雨<br>又像某天夜里突然醒来时<br>困倦的眼和深深的泪</p>\n<p><hr><br>我总会慢慢陷入同一个梦境没有人告诉我答案<br>一条幽径林间的小路<br>前方是深邃的白光<br>花飞鸟去人影空徘徊<br>回首静看只刹那间的黯然神伤</p>\n<p><hr><br>我总爱固执的想起一些回忆<br>那些迷惘的天空<br>和清朗的白夜<br>你对我说<br>从此以后不再写那些孤独的文字<br>认真生活<br>倔强得很明显<br>然后不顾一切的<br>走下去</p>\n<p><hr><br>沿着当初来时的轨迹<br>却再也找不回<br>那些撕碎的记忆<br>如果说<br>还有什么失落<br>唯独那场雨<br>我愿孤独的死去也不要沉溺在你温柔的怀里</p>"},{"title":"写给自己","date":"2017-03-13T09:50:07.000Z","toc":true,"_content":"我\n<!--more-->\n希望你坚持下来的几件事\n1、学习英语\n2、学习日语\n3、举手之劳\n4、早起吃饭\n5、锻炼\n\n\n\n我的愿望\n1、学会木吉他\n2、滑板\n3、去日本\n4、学手语\n5、相机","source":"_posts/写给自己.md","raw":"---\ntitle: 写给自己\ndate: 2017-03-13 17:50:07\ntags:\n- essay\n- 生活\ntoc: true\n---\n我\n<!--more-->\n希望你坚持下来的几件事\n1、学习英语\n2、学习日语\n3、举手之劳\n4、早起吃饭\n5、锻炼\n\n\n\n我的愿望\n1、学会木吉他\n2、滑板\n3、去日本\n4、学手语\n5、相机","slug":"写给自己","published":1,"updated":"2018-01-20T06:44:37.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m91d005244wa4k0jyb4z","content":"<p>我<br><a id=\"more\"></a><br>希望你坚持下来的几件事<br>1、学习英语<br>2、学习日语<br>3、举手之劳<br>4、早起吃饭<br>5、锻炼</p>\n<p>我的愿望<br>1、学会木吉他<br>2、滑板<br>3、去日本<br>4、学手语<br>5、相机</p>\n","excerpt":"<p>我<br>","more":"<br>希望你坚持下来的几件事<br>1、学习英语<br>2、学习日语<br>3、举手之劳<br>4、早起吃饭<br>5、锻炼</p>\n<p>我的愿望<br>1、学会木吉他<br>2、滑板<br>3、去日本<br>4、学手语<br>5、相机</p>"},{"title":"上传下载","date":"2017-04-20T08:54:52.000Z","toc":true,"_content":"上传下载实现\n<!--more-->\n# 上传的概述\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xlp2zzj30o90e0n0l.jpg)\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xn3678j30u80bz41p.jpg)\n# 上传的细节\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feu3xpl9hrj30sn0bdae6.jpg)\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xnw10nj30px06f772.jpg)\n# 下载\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feu3xqs50qj30la06dmz9.jpg)\n# 代码实现和需要注意的细节\n```\npublic class DownloadServlet extends HttpServlet {\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) \n\tthrows ServletException, IOException {\n\t\t\n\t\tString filename = \"d:/1.jpg\";\n\t\tString framename = filenameEncoding(\"萤火之森.jpg\", request);\n\t\t\n\t\t//设置2个头部\n\t\tString contentType = this.getServletContext().getMimeType(filename);\n\t\tString contentDisposition = \"attachment;filename=\" + framename;\n\t\t\n\t\tFileInputStream inputStream = new FileInputStream(filename);\n\t\t\n\t\tresponse.setHeader(\"Content-Type\", contentType);\n\t\tresponse.setHeader(\"Content-Disposition\", contentDisposition);\n\t\t\n\t\t//构造输出流\n\t\tServletOutputStream outputStream = response.getOutputStream();\n\t\tIOUtils.copy(inputStream, outputStream);\n\t\t\n\t\tinputStream.close();\n\t\t}\n\t\n\t//解决中文乱码\n\tpublic static String filenameEncoding(String filename, HttpServletRequest request) throws UnsupportedEncodingException{\n\t\tString agent = request.getHeader(\"User-Agent\");\n\t\tif (agent.contains(\"Firefox\")) {\n\t\t\t//BASE64Encoder需要将jre/lib下的rt.jar导入\n\t\t\tBASE64Encoder base64Encoder = new BASE64Encoder();\n\t\t\tfilename = \"=?utf-8?b?\"\n\t\t\t\t\t+ base64Encoder.encode(filename.getBytes(\"utf-8\"))\n\t\t\t\t\t+ \"?=\";\n\t\t}else if(agent.contains(\"MSIE\")) {\n\t\t\tfilename = URLEncoder.encode(filename, \"utf-8\");\n\t\t}else{\n\t\t\tfilename = URLEncoder.encode(filename, \"utf-8\");\n\t\t}\n\t\treturn filename;\n\t\t}\n}\n```\nBASE64Encoder需要将jre/lib下的rt.jar导入才能使用","source":"_posts/上传下载.md","raw":"---\ntitle: 上传下载\ndate: 2017-04-20 16:54:52\ntags:\n- Web\ntoc: true\n---\n上传下载实现\n<!--more-->\n# 上传的概述\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xlp2zzj30o90e0n0l.jpg)\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xn3678j30u80bz41p.jpg)\n# 上传的细节\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feu3xpl9hrj30sn0bdae6.jpg)\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xnw10nj30px06f772.jpg)\n# 下载\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feu3xqs50qj30la06dmz9.jpg)\n# 代码实现和需要注意的细节\n```\npublic class DownloadServlet extends HttpServlet {\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) \n\tthrows ServletException, IOException {\n\t\t\n\t\tString filename = \"d:/1.jpg\";\n\t\tString framename = filenameEncoding(\"萤火之森.jpg\", request);\n\t\t\n\t\t//设置2个头部\n\t\tString contentType = this.getServletContext().getMimeType(filename);\n\t\tString contentDisposition = \"attachment;filename=\" + framename;\n\t\t\n\t\tFileInputStream inputStream = new FileInputStream(filename);\n\t\t\n\t\tresponse.setHeader(\"Content-Type\", contentType);\n\t\tresponse.setHeader(\"Content-Disposition\", contentDisposition);\n\t\t\n\t\t//构造输出流\n\t\tServletOutputStream outputStream = response.getOutputStream();\n\t\tIOUtils.copy(inputStream, outputStream);\n\t\t\n\t\tinputStream.close();\n\t\t}\n\t\n\t//解决中文乱码\n\tpublic static String filenameEncoding(String filename, HttpServletRequest request) throws UnsupportedEncodingException{\n\t\tString agent = request.getHeader(\"User-Agent\");\n\t\tif (agent.contains(\"Firefox\")) {\n\t\t\t//BASE64Encoder需要将jre/lib下的rt.jar导入\n\t\t\tBASE64Encoder base64Encoder = new BASE64Encoder();\n\t\t\tfilename = \"=?utf-8?b?\"\n\t\t\t\t\t+ base64Encoder.encode(filename.getBytes(\"utf-8\"))\n\t\t\t\t\t+ \"?=\";\n\t\t}else if(agent.contains(\"MSIE\")) {\n\t\t\tfilename = URLEncoder.encode(filename, \"utf-8\");\n\t\t}else{\n\t\t\tfilename = URLEncoder.encode(filename, \"utf-8\");\n\t\t}\n\t\treturn filename;\n\t\t}\n}\n```\nBASE64Encoder需要将jre/lib下的rt.jar导入才能使用","slug":"上传下载","published":1,"updated":"2018-01-20T06:44:37.632Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m91k005544wagu6kscna","content":"<p>上传下载实现<br><a id=\"more\"></a></p>\n<h1 id=\"上传的概述\"><a href=\"#上传的概述\" class=\"headerlink\" title=\"上传的概述\"></a>上传的概述</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xlp2zzj30o90e0n0l.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xn3678j30u80bz41p.jpg\" alt=\"\"></p>\n<h1 id=\"上传的细节\"><a href=\"#上传的细节\" class=\"headerlink\" title=\"上传的细节\"></a>上传的细节</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feu3xpl9hrj30sn0bdae6.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xnw10nj30px06f772.jpg\" alt=\"\"></p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feu3xqs50qj30la06dmz9.jpg\" alt=\"\"></p>\n<h1 id=\"代码实现和需要注意的细节\"><a href=\"#代码实现和需要注意的细节\" class=\"headerlink\" title=\"代码实现和需要注意的细节\"></a>代码实现和需要注意的细节</h1><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DownloadServlet</span> <span class=\"keyword\"><span class=\"keyword\">extends</span> <span class=\"type\">HttpServlet</span></span> </span>&#123;</div><div class=\"line\"> protected void doGet(HttpServletRequest request, HttpServletResponse response) </div><div class=\"line\"> throws ServletException, IOException &#123;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">String</span> filename = <span class=\"string\">\"d:/1.jpg\"</span>;</div><div class=\"line\">  <span class=\"keyword\">String</span> framename = filenameEncoding(<span class=\"string\">\"萤火之森.jpg\"</span>, request);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//设置2个头部</span></div><div class=\"line\">  <span class=\"keyword\">String</span> contentType = <span class=\"built_in\">this</span>.getServletContext().getMimeType(filename);</div><div class=\"line\">  <span class=\"keyword\">String</span> contentDisposition = <span class=\"string\">\"attachment;filename=\"</span> + framename;</div><div class=\"line\">  </div><div class=\"line\">  FileInputStream inputStream = <span class=\"keyword\">new</span> <span class=\"type\">FileInputStream</span>(filename);</div><div class=\"line\">  </div><div class=\"line\">  response.setHeader(<span class=\"string\">\"Content-Type\"</span>, contentType);</div><div class=\"line\">  response.setHeader(<span class=\"string\">\"Content-Disposition\"</span>, contentDisposition);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//构造输出流</span></div><div class=\"line\">  ServletOutputStream outputStream = response.getOutputStream();</div><div class=\"line\">  IOUtils.copy(inputStream, outputStream);</div><div class=\"line\">  </div><div class=\"line\">  inputStream.close();</div><div class=\"line\">  &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//解决中文乱码</span></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">String</span> filenameEncoding(<span class=\"keyword\">String</span> filename, HttpServletRequest request) throws UnsupportedEncodingException&#123;</div><div class=\"line\">  <span class=\"keyword\">String</span> agent = request.getHeader(<span class=\"string\">\"User-Agent\"</span>);</div><div class=\"line\">  <span class=\"keyword\">if</span> (agent.contains(<span class=\"string\">\"Firefox\"</span>)) &#123;</div><div class=\"line\">   <span class=\"comment\">//BASE64Encoder需要将jre/lib下的rt.jar导入</span></div><div class=\"line\">   BASE64Encoder base64Encoder = <span class=\"keyword\">new</span> <span class=\"type\">BASE64Encoder</span>();</div><div class=\"line\">   filename = <span class=\"string\">\"=?utf-8?b?\"</span></div><div class=\"line\">     + base64Encoder.encode(filename.getBytes(<span class=\"string\">\"utf-8\"</span>))</div><div class=\"line\">     + <span class=\"string\">\"?=\"</span>;</div><div class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(agent.contains(<span class=\"string\">\"MSIE\"</span>)) &#123;</div><div class=\"line\">   filename = URLEncoder.encode(filename, <span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">   filename = URLEncoder.encode(filename, <span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> filename;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>BASE64Encoder需要将jre/lib下的rt.jar导入才能使用</p>\n","excerpt":"<p>上传下载实现<br>","more":"</p>\n<h1 id=\"上传的概述\"><a href=\"#上传的概述\" class=\"headerlink\" title=\"上传的概述\"></a>上传的概述</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xlp2zzj30o90e0n0l.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xn3678j30u80bz41p.jpg\" alt=\"\"></p>\n<h1 id=\"上传的细节\"><a href=\"#上传的细节\" class=\"headerlink\" title=\"上传的细节\"></a>上传的细节</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feu3xpl9hrj30sn0bdae6.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feu3xnw10nj30px06f772.jpg\" alt=\"\"></p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feu3xqs50qj30la06dmz9.jpg\" alt=\"\"></p>\n<h1 id=\"代码实现和需要注意的细节\"><a href=\"#代码实现和需要注意的细节\" class=\"headerlink\" title=\"代码实现和需要注意的细节\"></a>代码实现和需要注意的细节</h1><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DownloadServlet</span> <span class=\"keyword\"><span class=\"keyword\">extends</span> <span class=\"type\">HttpServlet</span></span> </span>&#123;</div><div class=\"line\"> protected void doGet(HttpServletRequest request, HttpServletResponse response) </div><div class=\"line\"> throws ServletException, IOException &#123;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">String</span> filename = <span class=\"string\">\"d:/1.jpg\"</span>;</div><div class=\"line\">  <span class=\"keyword\">String</span> framename = filenameEncoding(<span class=\"string\">\"萤火之森.jpg\"</span>, request);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//设置2个头部</span></div><div class=\"line\">  <span class=\"keyword\">String</span> contentType = <span class=\"built_in\">this</span>.getServletContext().getMimeType(filename);</div><div class=\"line\">  <span class=\"keyword\">String</span> contentDisposition = <span class=\"string\">\"attachment;filename=\"</span> + framename;</div><div class=\"line\">  </div><div class=\"line\">  FileInputStream inputStream = <span class=\"keyword\">new</span> <span class=\"type\">FileInputStream</span>(filename);</div><div class=\"line\">  </div><div class=\"line\">  response.setHeader(<span class=\"string\">\"Content-Type\"</span>, contentType);</div><div class=\"line\">  response.setHeader(<span class=\"string\">\"Content-Disposition\"</span>, contentDisposition);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//构造输出流</span></div><div class=\"line\">  ServletOutputStream outputStream = response.getOutputStream();</div><div class=\"line\">  IOUtils.copy(inputStream, outputStream);</div><div class=\"line\">  </div><div class=\"line\">  inputStream.close();</div><div class=\"line\">  &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"comment\">//解决中文乱码</span></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">String</span> filenameEncoding(<span class=\"keyword\">String</span> filename, HttpServletRequest request) throws UnsupportedEncodingException&#123;</div><div class=\"line\">  <span class=\"keyword\">String</span> agent = request.getHeader(<span class=\"string\">\"User-Agent\"</span>);</div><div class=\"line\">  <span class=\"keyword\">if</span> (agent.contains(<span class=\"string\">\"Firefox\"</span>)) &#123;</div><div class=\"line\">   <span class=\"comment\">//BASE64Encoder需要将jre/lib下的rt.jar导入</span></div><div class=\"line\">   BASE64Encoder base64Encoder = <span class=\"keyword\">new</span> <span class=\"type\">BASE64Encoder</span>();</div><div class=\"line\">   filename = <span class=\"string\">\"=?utf-8?b?\"</span></div><div class=\"line\">     + base64Encoder.encode(filename.getBytes(<span class=\"string\">\"utf-8\"</span>))</div><div class=\"line\">     + <span class=\"string\">\"?=\"</span>;</div><div class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(agent.contains(<span class=\"string\">\"MSIE\"</span>)) &#123;</div><div class=\"line\">   filename = URLEncoder.encode(filename, <span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">   filename = URLEncoder.encode(filename, <span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> filename;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>BASE64Encoder需要将jre/lib下的rt.jar导入才能使用</p>"},{"title":"刀剑乱舞","date":"2017-04-14T09:22:02.000Z","toc":true,"_content":"冲田君有我来守护!\n<!--more-->\n不知道是谁说的\n要是见到了从未见过的树\n那有可能就是万叶樱\n是一万年只开一次的神奇樱花树\n看见它开花的人，不管什么样的愿望都能实现。\n<hr>\n如果这是能够实现愿望的樱花树\n希望能实现大家的愿望\n还有我的\n冲田君有我来守护\n在愿望实现之前，我要变得更强大。\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1femc6oypysj31hc0u01ky.jpg)","source":"_posts/刀剑乱舞.md","raw":"---\ntitle: 刀剑乱舞\ndate: 2017-04-14 17:22:02\ntags:\n- essay\n- 文学\ntoc: true\n---\n冲田君有我来守护!\n<!--more-->\n不知道是谁说的\n要是见到了从未见过的树\n那有可能就是万叶樱\n是一万年只开一次的神奇樱花树\n看见它开花的人，不管什么样的愿望都能实现。\n<hr>\n如果这是能够实现愿望的樱花树\n希望能实现大家的愿望\n还有我的\n冲田君有我来守护\n在愿望实现之前，我要变得更强大。\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1femc6oypysj31hc0u01ky.jpg)","slug":"刀剑乱舞","published":1,"updated":"2018-01-20T06:44:37.641Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m91n005744wa88nk6yrj","content":"<p>冲田君有我来守护!<br><a id=\"more\"></a><br>不知道是谁说的<br>要是见到了从未见过的树<br>那有可能就是万叶樱<br>是一万年只开一次的神奇樱花树<br>看见它开花的人，不管什么样的愿望都能实现。</p>\n<p><hr><br>如果这是能够实现愿望的樱花树<br>希望能实现大家的愿望<br>还有我的<br>冲田君有我来守护<br>在愿望实现之前，我要变得更强大。<br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1femc6oypysj31hc0u01ky.jpg\" alt=\"\"></p>\n","excerpt":"<p>冲田君有我来守护!<br>","more":"<br>不知道是谁说的<br>要是见到了从未见过的树<br>那有可能就是万叶樱<br>是一万年只开一次的神奇樱花树<br>看见它开花的人，不管什么样的愿望都能实现。</p>\n<p><hr><br>如果这是能够实现愿望的樱花树<br>希望能实现大家的愿望<br>还有我的<br>冲田君有我来守护<br>在愿望实现之前，我要变得更强大。<br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1femc6oypysj31hc0u01ky.jpg\" alt=\"\"></p>"},{"title":"分页功能实现","date":"2017-04-17T03:55:54.000Z","toc":true,"_content":"// TODO","source":"_posts/分页功能实现.md","raw":"---\ntitle: 分页功能实现\ndate: 2017-04-17 11:55:54\ntags:\n- Web\ntoc: true\n---\n// TODO","slug":"分页功能实现","published":1,"updated":"2018-01-20T06:44:37.648Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m91q005944wa0goahnln","content":"<p>// TODO</p>\n","excerpt":"","more":"<p>// TODO</p>\n"},{"title":"卒業旅行","toc":true,"date":"2017-10-29T14:23:10.000Z","_content":"以下记录一些可能选择的旅行地点\n<!--more-->\n\n* 济南(李清照纪念堂)\n\n* 南浔\n\n* 黄山\n\n* 青海湖\n\n* 千户苗寨\n\n### 本次毕业旅行打算\n* 出发时间\n\n毕业答辩结束后和公司入职前\n\n* 参与人员\n\n独自一人\n\n","source":"_posts/卒業旅行.md","raw":"---\ntitle: 卒業旅行\ntoc: true\ndate: 2017-10-29 22:23:10\ntags:\n- 生活\n---\n以下记录一些可能选择的旅行地点\n<!--more-->\n\n* 济南(李清照纪念堂)\n\n* 南浔\n\n* 黄山\n\n* 青海湖\n\n* 千户苗寨\n\n### 本次毕业旅行打算\n* 出发时间\n\n毕业答辩结束后和公司入职前\n\n* 参与人员\n\n独自一人\n\n","slug":"卒業旅行","published":1,"updated":"2018-01-20T06:44:37.655Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m91t005c44wa5ybajeeg","content":"<p>以下记录一些可能选择的旅行地点<br><a id=\"more\"></a></p>\n<ul>\n<li><p>济南(李清照纪念堂)</p>\n</li>\n<li><p>南浔</p>\n</li>\n<li><p>黄山</p>\n</li>\n<li><p>青海湖</p>\n</li>\n<li><p>千户苗寨</p>\n</li>\n</ul>\n<h3 id=\"本次毕业旅行打算\"><a href=\"#本次毕业旅行打算\" class=\"headerlink\" title=\"本次毕业旅行打算\"></a>本次毕业旅行打算</h3><ul>\n<li>出发时间</li>\n</ul>\n<p>毕业答辩结束后和公司入职前</p>\n<ul>\n<li>参与人员</li>\n</ul>\n<p>独自一人</p>\n","excerpt":"<p>以下记录一些可能选择的旅行地点<br>","more":"</p>\n<ul>\n<li><p>济南(李清照纪念堂)</p>\n</li>\n<li><p>南浔</p>\n</li>\n<li><p>黄山</p>\n</li>\n<li><p>青海湖</p>\n</li>\n<li><p>千户苗寨</p>\n</li>\n</ul>\n<h3 id=\"本次毕业旅行打算\"><a href=\"#本次毕业旅行打算\" class=\"headerlink\" title=\"本次毕业旅行打算\"></a>本次毕业旅行打算</h3><ul>\n<li>出发时间</li>\n</ul>\n<p>毕业答辩结束后和公司入职前</p>\n<ul>\n<li>参与人员</li>\n</ul>\n<p>独自一人</p>"},{"title":"动态代理和类加载器简介","date":"2017-05-08T10:21:09.000Z","toc":true,"_content":"动态代理和类加载器\n<!--more-->\n# 动态代理\n![动态代理](http://wx2.sinaimg.cn/large/005P8ayVgy1ffe4m2sknlj30oi03bgmv.jpg)\n![动态代理](http://wx1.sinaimg.cn/large/005P8ayVgy1ffe4m44eblj30i40b276h.jpg)\n# 类加载器\n![类加载器](http://wx2.sinaimg.cn/large/005P8ayVgy1ffe4m4ceulj30n60fc78y.jpg)","source":"_posts/动态代理和类加载器简介.md","raw":"---\ntitle: 动态代理和类加载器简介\ndate: 2017-05-08 18:21:09\ntags:\n- Java基础\ntoc: true\n---\n动态代理和类加载器\n<!--more-->\n# 动态代理\n![动态代理](http://wx2.sinaimg.cn/large/005P8ayVgy1ffe4m2sknlj30oi03bgmv.jpg)\n![动态代理](http://wx1.sinaimg.cn/large/005P8ayVgy1ffe4m44eblj30i40b276h.jpg)\n# 类加载器\n![类加载器](http://wx2.sinaimg.cn/large/005P8ayVgy1ffe4m4ceulj30n60fc78y.jpg)","slug":"动态代理和类加载器简介","published":1,"updated":"2018-01-20T06:44:37.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m91y005e44wa9vwkzbeq","content":"<p>动态代理和类加载器<br><a id=\"more\"></a></p>\n<h1 id=\"动态代理\"><a href=\"#动态代理\" class=\"headerlink\" title=\"动态代理\"></a>动态代理</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1ffe4m2sknlj30oi03bgmv.jpg\" alt=\"动态代理\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1ffe4m44eblj30i40b276h.jpg\" alt=\"动态代理\"></p>\n<h1 id=\"类加载器\"><a href=\"#类加载器\" class=\"headerlink\" title=\"类加载器\"></a>类加载器</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1ffe4m4ceulj30n60fc78y.jpg\" alt=\"类加载器\"></p>\n","excerpt":"<p>动态代理和类加载器<br>","more":"</p>\n<h1 id=\"动态代理\"><a href=\"#动态代理\" class=\"headerlink\" title=\"动态代理\"></a>动态代理</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1ffe4m2sknlj30oi03bgmv.jpg\" alt=\"动态代理\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1ffe4m44eblj30i40b276h.jpg\" alt=\"动态代理\"></p>\n<h1 id=\"类加载器\"><a href=\"#类加载器\" class=\"headerlink\" title=\"类加载器\"></a>类加载器</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1ffe4m4ceulj30n60fc78y.jpg\" alt=\"类加载器\"></p>"},{"title":"分IP统计访问次数案例","date":"2017-04-19T08:26:07.000Z","toc":true,"_content":"# 原理\n通过过滤器检查全站信息，将IP和访问次数放进一个Map中，这个Map在Listener的初始化方法中创建并放入ServletContext域中。\n<!--more-->\n# Listener\n```\n@WebListener(\"/*\")\npublic class Alistener implements ServletContextListener {\n\n    public void contextDestroyed(ServletContextEvent arg0)  { \n   \n    }\n\n    public void contextInitialized(ServletContextEvent arg0)  { \n     \t//创建Map放进ServletContext域\n     \tMap<String, Integer> map = new LinkedHashMap<String, Integer>();\n    \tServletContext application = arg0.getServletContext();\n    \tapplication.setAttribute(\"map\", map);\n    }\n}\n```\n# Filter\n```\n@WebFilter(\"/*\")\npublic class AFilter implements Filter {\n\tprivate  FilterConfig config;\n\t\n\tpublic void destroy() {\n\t\t\n\t}\n\t\n\tpublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n\t\tServletContext app = config.getServletContext();\n\t\tMap<String, Integer> map = (Map<String, Integer>) app.getAttribute(\"map\");\n\t\t\n\t\tString ip = request.getRemoteAddr();\n\t\t\n\t\tif(map.containsKey(ip)){//ip存在\n\t\t\tint cnt = map.get(ip);\n\t\t\tmap.put(ip, cnt+1);\n\t\t}else{//ip不存在\n\t\t\tmap.put(ip, 1);\n\t\t}\n\t\tapp.setAttribute(\"map\", map);\n\t\tchain.doFilter(request, response);\n\t}\n\n\tpublic void init(FilterConfig fConfig) throws ServletException {\n\t\tthis.config = fConfig;\n\t}\n}\n```\n# 结果输出页面\n```\n<table align=\"center\" width=\"60%\" border=\"1\">\n\t<tr>\n\t\t<th>IP</th>\n\t\t<th>count</th>\n\t</tr>\n<s:forEach items=\"${applicationScope.map }\" var=\"entry\">\n\t<tr>\n\t\t<td>${entry.key }</td>\n\t\t<td>${entry.value }</td>\n\t</tr>\n</s:forEach>\n</table>\n```","source":"_posts/分IP统计访问次数案例.md","raw":"---\ntitle: 分IP统计访问次数案例\ndate: 2017-04-19 16:26:07\ntags:\n- Web\n- demo\ntoc: true\n---\n# 原理\n通过过滤器检查全站信息，将IP和访问次数放进一个Map中，这个Map在Listener的初始化方法中创建并放入ServletContext域中。\n<!--more-->\n# Listener\n```\n@WebListener(\"/*\")\npublic class Alistener implements ServletContextListener {\n\n    public void contextDestroyed(ServletContextEvent arg0)  { \n   \n    }\n\n    public void contextInitialized(ServletContextEvent arg0)  { \n     \t//创建Map放进ServletContext域\n     \tMap<String, Integer> map = new LinkedHashMap<String, Integer>();\n    \tServletContext application = arg0.getServletContext();\n    \tapplication.setAttribute(\"map\", map);\n    }\n}\n```\n# Filter\n```\n@WebFilter(\"/*\")\npublic class AFilter implements Filter {\n\tprivate  FilterConfig config;\n\t\n\tpublic void destroy() {\n\t\t\n\t}\n\t\n\tpublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n\t\tServletContext app = config.getServletContext();\n\t\tMap<String, Integer> map = (Map<String, Integer>) app.getAttribute(\"map\");\n\t\t\n\t\tString ip = request.getRemoteAddr();\n\t\t\n\t\tif(map.containsKey(ip)){//ip存在\n\t\t\tint cnt = map.get(ip);\n\t\t\tmap.put(ip, cnt+1);\n\t\t}else{//ip不存在\n\t\t\tmap.put(ip, 1);\n\t\t}\n\t\tapp.setAttribute(\"map\", map);\n\t\tchain.doFilter(request, response);\n\t}\n\n\tpublic void init(FilterConfig fConfig) throws ServletException {\n\t\tthis.config = fConfig;\n\t}\n}\n```\n# 结果输出页面\n```\n<table align=\"center\" width=\"60%\" border=\"1\">\n\t<tr>\n\t\t<th>IP</th>\n\t\t<th>count</th>\n\t</tr>\n<s:forEach items=\"${applicationScope.map }\" var=\"entry\">\n\t<tr>\n\t\t<td>${entry.key }</td>\n\t\t<td>${entry.value }</td>\n\t</tr>\n</s:forEach>\n</table>\n```","slug":"分IP统计访问次数案例","published":1,"updated":"2018-01-20T06:44:37.646Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m921005g44waraxyutgw","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>通过过滤器检查全站信息，将IP和访问次数放进一个Map中，这个Map在Listener的初始化方法中创建并放入ServletContext域中。<br><a id=\"more\"></a></p>\n<h1 id=\"Listener\"><a href=\"#Listener\" class=\"headerlink\" title=\"Listener\"></a>Listener</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@WebListener</span>(<span class=\"string\">\"/*\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Alistener</span> <span class=\"keyword\">implements</span> <span class=\"title\">ServletContextListener</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextDestroyed</span><span class=\"params\">(ServletContextEvent arg0)</span>  </span>&#123; </div><div class=\"line\">   </div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextInitialized</span><span class=\"params\">(ServletContextEvent arg0)</span>  </span>&#123; </div><div class=\"line\">     \t<span class=\"comment\">//创建Map放进ServletContext域</span></div><div class=\"line\">     \tMap&lt;String, Integer&gt; map = <span class=\"keyword\">new</span> LinkedHashMap&lt;String, Integer&gt;();</div><div class=\"line\">    \tServletContext application = arg0.getServletContext();</div><div class=\"line\">    \tapplication.setAttribute(<span class=\"string\">\"map\"</span>, map);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Filter\"><a href=\"#Filter\" class=\"headerlink\" title=\"Filter\"></a>Filter</h1><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">@WebFilter(<span class=\"string\">\"/*\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> AFilter implements Filter &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span>  FilterConfig <span class=\"built_in\">config</span>;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> destroy() &#123;</div><div class=\"line\">  </div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException &#123;</div><div class=\"line\">  ServletContext app = <span class=\"built_in\">config</span>.getServletContext();</div><div class=\"line\">  Map&lt;<span class=\"keyword\">String</span>, Integer&gt; <span class=\"built_in\">map</span> = (Map&lt;<span class=\"keyword\">String</span>, Integer&gt;) app.getAttribute(<span class=\"string\">\"map\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">String</span> ip = request.getRemoteAddr();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"built_in\">if</span>(<span class=\"built_in\">map</span>.containsKey(ip))&#123;<span class=\"comment\">//ip存在</span></div><div class=\"line\">   <span class=\"keyword\">int</span> cnt = <span class=\"built_in\">map</span>.<span class=\"built_in\">get</span>(ip);</div><div class=\"line\">   <span class=\"built_in\">map</span>.<span class=\"built_in\">put</span>(ip, cnt+<span class=\"number\">1</span>);</div><div class=\"line\">  &#125;<span class=\"built_in\">else</span>&#123;<span class=\"comment\">//ip不存在</span></div><div class=\"line\">   <span class=\"built_in\">map</span>.<span class=\"built_in\">put</span>(ip, <span class=\"number\">1</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  app.setAttribute(<span class=\"string\">\"map\"</span>, <span class=\"built_in\">map</span>);</div><div class=\"line\">  chain.doFilter(request, response);</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> init(FilterConfig fConfig) throws ServletException &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.<span class=\"built_in\">config</span> = fConfig;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"结果输出页面\"><a href=\"#结果输出页面\" class=\"headerlink\" title=\"结果输出页面\"></a>结果输出页面</h1><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"60%\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>IP<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>count<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:forEach</span> <span class=\"attr\">items</span>=<span class=\"string\">\"$</span></span><span class=\"template-variable\">&#123;applicationScope.map &#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span> <span class=\"attr\">var</span>=<span class=\"string\">\"entry\"</span>&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$<span class=\"template-variable\">&#123;entry.key &#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$<span class=\"template-variable\">&#123;entry.value &#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">s:forEach</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>","excerpt":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>通过过滤器检查全站信息，将IP和访问次数放进一个Map中，这个Map在Listener的初始化方法中创建并放入ServletContext域中。<br>","more":"</p>\n<h1 id=\"Listener\"><a href=\"#Listener\" class=\"headerlink\" title=\"Listener\"></a>Listener</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@WebListener</span>(<span class=\"string\">\"/*\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Alistener</span> <span class=\"keyword\">implements</span> <span class=\"title\">ServletContextListener</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextDestroyed</span><span class=\"params\">(ServletContextEvent arg0)</span>  </span>&#123; </div><div class=\"line\">   </div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextInitialized</span><span class=\"params\">(ServletContextEvent arg0)</span>  </span>&#123; </div><div class=\"line\">     \t<span class=\"comment\">//创建Map放进ServletContext域</span></div><div class=\"line\">     \tMap&lt;String, Integer&gt; map = <span class=\"keyword\">new</span> LinkedHashMap&lt;String, Integer&gt;();</div><div class=\"line\">    \tServletContext application = arg0.getServletContext();</div><div class=\"line\">    \tapplication.setAttribute(<span class=\"string\">\"map\"</span>, map);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Filter\"><a href=\"#Filter\" class=\"headerlink\" title=\"Filter\"></a>Filter</h1><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">@WebFilter(<span class=\"string\">\"/*\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> AFilter implements Filter &#123;</div><div class=\"line\"> <span class=\"keyword\">private</span>  FilterConfig <span class=\"built_in\">config</span>;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> destroy() &#123;</div><div class=\"line\">  </div><div class=\"line\"> &#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException &#123;</div><div class=\"line\">  ServletContext app = <span class=\"built_in\">config</span>.getServletContext();</div><div class=\"line\">  Map&lt;<span class=\"keyword\">String</span>, Integer&gt; <span class=\"built_in\">map</span> = (Map&lt;<span class=\"keyword\">String</span>, Integer&gt;) app.getAttribute(<span class=\"string\">\"map\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">String</span> ip = request.getRemoteAddr();</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"built_in\">if</span>(<span class=\"built_in\">map</span>.containsKey(ip))&#123;<span class=\"comment\">//ip存在</span></div><div class=\"line\">   <span class=\"keyword\">int</span> cnt = <span class=\"built_in\">map</span>.<span class=\"built_in\">get</span>(ip);</div><div class=\"line\">   <span class=\"built_in\">map</span>.<span class=\"built_in\">put</span>(ip, cnt+<span class=\"number\">1</span>);</div><div class=\"line\">  &#125;<span class=\"built_in\">else</span>&#123;<span class=\"comment\">//ip不存在</span></div><div class=\"line\">   <span class=\"built_in\">map</span>.<span class=\"built_in\">put</span>(ip, <span class=\"number\">1</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  app.setAttribute(<span class=\"string\">\"map\"</span>, <span class=\"built_in\">map</span>);</div><div class=\"line\">  chain.doFilter(request, response);</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> init(FilterConfig fConfig) throws ServletException &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.<span class=\"built_in\">config</span> = fConfig;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"结果输出页面\"><a href=\"#结果输出页面\" class=\"headerlink\" title=\"结果输出页面\"></a>结果输出页面</h1><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"60%\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>IP<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>count<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">s:forEach</span> <span class=\"attr\">items</span>=<span class=\"string\">\"$</span></span></span><span class=\"template-variable\">&#123;applicationScope.map &#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span> <span class=\"attr\">var</span>=<span class=\"string\">\"entry\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$</span><span class=\"template-variable\">&#123;entry.key &#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$</span><span class=\"template-variable\">&#123;entry.value &#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">s:forEach</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span></div></pre></td></tr></table></figure>"},{"title":"人物","date":"2017-04-27T08:52:04.000Z","toc":true,"_content":"这里将介绍我所喜欢的一些动漫角色。\n<!--more-->\n# 东京嗜种\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=405377203&auto=0&height=66\"></iframe>\n\n<hr>\n<style>\n    @keyframes rotate-frame {\n        0% {\n            transform: rotateX(0deg) rotateY(0deg);\n        }\n        10% {\n            transform: rotateX(0deg) rotateY(180deg);\n        }\n        20% {\n            transform: rotateX(-180deg) rotateY(180deg);\n        }\n        30% {\n            transform: rotateX(-360deg) rotateY(180deg);\n        }\n        40% {\n            transform: rotateX(-360deg) rotateY(360deg);\n        }\n        50% {\n            transform: rotateX(-180deg) rotateY(360deg);\n        }\n        60% {\n            transform: rotateX(90deg) rotateY(180deg);\n        }\n        70% {\n            transform: rotateX(0) rotateY(180deg);\n        }\n        80% {\n            transform: rotateX(90deg) rotateY(90deg);\n        }\n        90% {\n            transform: rotateX(90deg) rotateY(0);\n        }\n        100% {\n            transform: rotateX(0) rotateY(0);\n        }\n    }\n\n    .my-container {\n        width: 62.5rem;\n        height: 31.25rem;\n        margin: 0 auto;\n        transform: scale(0.6) translateY(-10rem);\n    }\n\n    .rect-wrap {\n        position: relative;\n        perspective: 100rem;\n    }\n\n    .container {\n        width: 50rem;\n        height: 50rem;\n        transform-style: preserve-3d;\n        transform-origin: 50% 50% 12.5rem;\n        animation: rotate-frame 30s linear infinite;\n    }\n\n    .slide {\n        width: 25rem;\n        height: 25rem;\n        position: absolute;\n        box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.9) inset;\n    }\n\n    .top {\n        left: 12.5rem;\n        top: -12.5rem;\n        transform: rotateX(-90deg);\n        transform-origin: bottom;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f35j601j30rs0fnab7.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .bottom {\n        left: 12.5rem;\n        bottom: -12.5rem;\n        transform: rotateX(90deg);\n        transform-origin: top;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f353w22j30rs0fn0un.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .left {\n        left: -12.5rem;\n        top: 12.5rem;\n        transform: rotateY(90deg);\n        transform-origin: right;\n        background: url(http://wx1.sinaimg.cn/mw690/005P8ayVgy1ff2f3a0dm8j30rs0nu76d.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .right {\n        left: 37.5rem;\n        top: 12.5rem;\n        transform: rotateY(-90deg);\n        transform-origin: left;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f37m27lj311s0lan5n.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .front {\n        left: 12.5rem;\n        top: 12.5rem;\n        transform: translateZ(25rem);\n        background: url(http://wx2.sinaimg.cn/mw690/005P8ayVgy1ff2f386gqtj30rs0fn411.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .back {\n        left: 12.5rem;\n        top: 12.5rem;\n        transform: translateZ(0);\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f39g721j311s0laqbp.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n</style>\n\n<div class=\"my-container\"><div class=\"rect-wrap\"><div class=\"container\"><br>    <div class=\"top slide\"></div><br>    <div class=\"bottom slide\"></div><br>    <div class=\"left slide\"></div><br>    <div class=\"right slide\"></div><br>    <div class=\"front slide\"></div><br>    <div class=\"back slide\"></div><br></div></div></div>\n我们只能一边失去，一边生存。\n<h2>金木研</h2> \n<font color=\"red\">彼岸花开季，与研共守时</font>\n![](http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff1ehgr9s7j30g40be47y.jpg)\n金木研的故事真的是非常的悲伤，我不清楚作者创作这一主角的目的在于什么,但我们知道的是这部动漫向我们揭露了许多东西。\n\n金木研（黑发）\n原本是就读于上井大学的普通文学青年，有着并不高大的身材与一头乌黑整齐的头发，经常穿着白色打底衬衫和水蓝色外套，在咖啡店工作时则穿着工作服，因为缺乏锻炼的身体显得十分柔弱，为了不被侦查管认出，对抗侦查管时会带着镶有牙齿的黑色面罩，以及黑色眼罩。在20区被卷入“钢筋掉落事件”，从此之后就被改造成了独眼喰种。由于独眼缘故，相较普通食尸鬼拥有混血优势，实力的提升空间更大。\n非常重视自己的朋友，第一次展现出赫子的契机便是为了保护被西尾锦击晕的好友永近英良。\n\n金木研（白发）\n“青桐树”事件后发生较大的外貌变化，被壁虎虐待时换了一件黑色高领短袖和白色中裤，因为受尽一番虐待又因内心中神代利世的蛊惑头发由乌黑变为苍白。加入青铜树后（漫画中是去寻找自己变成喰种的真相）换了一身黑色紧身白条纹连体衣，外面套着布满反光的条纹的短袖外套和一条黑色中裤（漫画为一件黑色短袖连帽衫），在执行任务时为了不暴露身份会带着面罩，同时锻炼出了肌肉并拥有极快的行动速度。\n\n佐佐木琲世\n在失忆成为“佐佐木琲世”后，外貌再次发生了较大的变化，发型变为蘑菇头，头发顶部为黑色，而刘海和鬓角两侧则为白色，身着CCG的队服，黑色打底衬衫和白色中长风衣。并学会使用了库因克，而且能同时使用赫子和库因克进行战斗。\n但也随着时间的推移，偶尔会记起身为金木时的记忆片段，不禁怀疑自己存在的意义。但好在现在的他不是一个人承担着一切，被他视为“母亲”的真户晓会在他痛苦的时候为他分担为他解忧，尽自己最大的努力不让他迷失。\n\n黑色死神\n作为佐佐木琲世三年之久的梦终究还是醒了，被高槻泉所唤醒的金木最初的姿态。头发变回黑色，发型也变回黑发时期的发型，通常身着黑色衬衫，和黑色西装裤。面对敌人如同死神一般残酷；但却不失去理智，依然能够清晰的辨析一切。\n逐渐变得沉稳，但偶尔也会有情绪的失控，思绪与手段变得复杂，没有人真正知道他到底在想些什么。\n\n独眼之王\n金木研意识到了生命真正的目标，他摆脱了所有的虚伪，头发变回白色，“杀死”了有马贵将（实为有马贵将自杀），登上了王座。在对抗小丑时再次戴上面罩，将头发梳成大背头，身穿黑色打底衬衫和白色西装。双手变为血红色。\n![](http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff1ehg473dj30g40dr754.jpg)\n人物性格\n总体属于温柔内敛型，让人感觉亲切容易接近。处事圆润且有分寸，在朋友遇到危机时会毫不犹豫地伸出援手相助。战斗时思维清晰，颇具策略。但以“青铜树”事件以及“失忆”为转折点，人物的某些性格特征发生巨大改变。\n金木研（黑发）\n刚成为喰种的金木研由于巨大的生活改变所带来的冲击，导致他的内心充满着纠结，不清楚自己的定义与存在的目的，甚至不敢想象自己的未来，曾自暴自弃不去面对现实。\n逐步走入“喰种”的世界后，想法渐渐改变，开始学着“适应”这个世界。\n金木研（白发）\n由于在“青铜树”事件中遭遇了毫无人性的拷问，同伴在自己眼前被虐杀等事件，使得金木的精神状态一度陷入崩溃的边缘。他认为这些事情的发生都是因为自己的“无能为力”，并因此接受了自己作为“喰种”的事实，变得极度要强。\n如万丈数一所说“就像切换开关一样”。此事件后，金木在敌人面前会经常展现出残酷无情的一面。抛弃了自己曾经的那份“软弱”，战斗时变得狂气好斗，认为强者就是自己。对于恶意妨碍自己的人，会毫不犹豫的将其“抹去”。\n但即便面对敌人时凶残至极，他也并没有忘记自己的“信念”。面对朋友回到日常生活时，金木仍然是那个温柔稳健的金木。\n佐佐木琲世\n在20区的讨伐“枭”作战中败于有马贵将之手，自此失去了过去20年所有的记忆，成为搜查官被有马带入CCG。\n思想发生转变，有些倾向黑发时期，但同时也会考虑喰种的感受。渴望同伴之间如同家庭一般温暖的感情，视有马贵将与真户晓为“父母”。\n黑色死神\n思想开始变得复杂，很难知道他到底在想些什么，立场也变得暧昧；带上眼镜后，是和CCG的另一个死神——有马贵将截然相反的形象（前者全白，后者全黑）。\n独眼之王\n金木研意识到了生命真正的目标，他摆脱了所有的虚伪，性格开始变得稳重，拥有了要和大家一起活下去的感情。\n\n\n\n<div id=\"div2\">![](http://wx4.sinaimg.cn/mw690/005P8ayVgy1ff1ehhbi9gj30f30jgwp6.jpg)</div>\n<div id=\"div1\"><font color=\"red\">被人如此怀念的金木，一定是个很棒的人吧.\n——佐佐木绯世</font></div>\n## 永近英良\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493300683521&di=06aaa8bc555f795528ebb2b3ec320bf2&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201601%2F01%2F20160101172058_PWFrx.thumb.700_0.jpeg)\n初识金木\n小学时永近与金木初识。那时金木的父亲已经去世，金木总是一个人在读书，永近担心金木无法融入班级，称自己是刚搬到附近，于是和金木结为朋友。\n\n悲剧开始\n永进和金木在安定区讨论喰种的事，在金木说到一半的时候，永进声称：“话说你也该察觉到了吧，‘近在咫尺’的喰种。”并露出了一个诡异的微笑。在知晓金木喜欢神代利世的时候，表示认为金木没戏，不如放弃吧。\n\n遭遇袭击\n永近和金木一起去拜访西尾学长，西尾谎称让永近和他到他家里去拿资料，金木担心西尾会对永近不利而一同前往。西尾将二人带入一个死胡同，打晕永近后，问金木打算什么时候吃掉永近，金木则回答“英不是食物”。 \n之后金木不敌西尾，就在西尾即将给金木最后一击时，永近却突然伸手拉住了西尾的裤脚。金木想起与永近的种种回忆，为了保护永近，金木使用出了赫子。\n打败西尾后，极度饥饿的金木想要吃掉永近，被雾岛董香阻止，后被董香带回“古董”。金木醒来后，在店长带领下看到了平安无事的永近感到十分欣慰。这时永近悄悄睁开了眼睛，听到二人的对话。事后永近得到的事件解释是三人遭遇了车祸，西尾重伤，而自己与金木只受到轻伤。\n\n推理\nCCG发布的通缉令上说“兔子”（雾岛董香）是“为被杀的母亲报仇而袭击人类”，永近却觉得如果“兔子”和“女儿”是同一食尸鬼，那么在遭遇“白鸠”时“女儿”可以与母亲一同战胜“白鸠”，而如果“兔子”是“女儿”的协力者，是复仇的代行人的话，就能够说得通，因而猜测“兔子”与“女儿”是不同的食尸鬼。金木对永近的这一推理表示“令我感到害怕”。\n\n寻找金木\n为了寻找下落不明的金木，永近以CCG公开招募助理职员为契机，加入CCG并在二十支部担任局员助理。找到了“青桐树”的秘密据点之后，将这一信息匿名报告给CCG。后来因而受到丸手赏识，被指名为搜查官助理。\n在“黑兔”（雾岛绚都）出现后，晓问永近“黑兔”与“兔子”是否为同一食尸鬼，永近回答不是，并且说出了自己之前关于“兔子”和“女儿”的推理，引起了真户晓极大的兴趣。 后来永近又参与了对嘉纳明博医生的调查。\n永近抱着一线希望而来到高槻泉的签售会，却偏偏正好错过了金木。为了帮金木要到高槻的签名，被问到名字时，永近谎称自己是“金木”，但在高槻的试探下被识破了。 \n丸手认可永近的能力，想让他参加驱逐“独眼之枭”的战斗，于是永近写下了“遗书”。在这一战中，赶来救芳村功善店长的金木在战斗中负伤，躲进下水道。金木因被亚门钢太郎重伤体力不支的时候，永近突然出现，向金木坦白自己已经知道了他是食尸鬼的事，表示想帮助金木，让金木吃了他并且“全力一战”。金木醒来时永近已经不见了，CCG统计的名单里永近是“下落不明”，他到底去了哪里，没有人知道。\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493300793447&di=8ced7a856b9114b56db5922766c20042&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201503%2F28%2F20150328104327_EPGcP.jpeg)\n“呦，金木。”，\n寻找这么久终于找到了自己的朋友。\n人物特点\n外表看上去大大咧咧，热情开朗，还有点呆萌，内在却是敏锐细心，愿意为朋友赴汤蹈火，即使那个朋友变得其他人无法接受。\n\n未完待续......\n# fate\n## \n# 冰果\n# 某科学的超电磁炮\n# 魁拔\n幽弥狂\n《魁拔Ⅰ》中首次短暂出场，《魁拔Ⅱ》中正式登场。魁拔十二妖之一，雾妖族。原神圣联军讨伐魁拔夜战小分队队长，夜国将纹耀候选者。他的五人小队——白落提、丰和、英宋、桓泽金、广秀，都是无纹耀的白身。在暗杀魁拔的战斗中其他人全部遇难，五人战功显赫却因没有纹耀被拒绝承认士兵身份，他只能自己将他们安葬，在木板上写下他们的姓名，挂上自己的纹耀，并在墓碑前站了五天五夜，这对生性畏光的雾妖来说是致命的。第五天，一个人——第四代魁拔迷麟，给他递了一把木伞。他的故事、触动了魁拔，魁拔杀了拒绝承认五人小队的联军军官。他依旧对魁拔不服，将其视为死敌，却又追随左右。他苦练的战技，都是死去五人的招式。同时，幽弥狂成了灵山军夜袭小队的首领，每次战斗他都为双方阵亡的将士守灵，记载阵亡名单。魁拔之书中对十二妖的介绍里，唯独他是以对魁拔不服结尾的。\n\n幽弥狂居然敢碰奇衡三的东西\n因为他是个疯子\n\n魁拔魁拔魁拔魁拔魁拔 啊哈哈哈","source":"_posts/人物.md","raw":"---\ntitle: 人物\ndate: 2017-04-27 16:52:04\ntags:\n- 生活\ntoc: true\n---\n这里将介绍我所喜欢的一些动漫角色。\n<!--more-->\n# 东京嗜种\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=405377203&auto=0&height=66\"></iframe>\n\n<hr>\n<style>\n    @keyframes rotate-frame {\n        0% {\n            transform: rotateX(0deg) rotateY(0deg);\n        }\n        10% {\n            transform: rotateX(0deg) rotateY(180deg);\n        }\n        20% {\n            transform: rotateX(-180deg) rotateY(180deg);\n        }\n        30% {\n            transform: rotateX(-360deg) rotateY(180deg);\n        }\n        40% {\n            transform: rotateX(-360deg) rotateY(360deg);\n        }\n        50% {\n            transform: rotateX(-180deg) rotateY(360deg);\n        }\n        60% {\n            transform: rotateX(90deg) rotateY(180deg);\n        }\n        70% {\n            transform: rotateX(0) rotateY(180deg);\n        }\n        80% {\n            transform: rotateX(90deg) rotateY(90deg);\n        }\n        90% {\n            transform: rotateX(90deg) rotateY(0);\n        }\n        100% {\n            transform: rotateX(0) rotateY(0);\n        }\n    }\n\n    .my-container {\n        width: 62.5rem;\n        height: 31.25rem;\n        margin: 0 auto;\n        transform: scale(0.6) translateY(-10rem);\n    }\n\n    .rect-wrap {\n        position: relative;\n        perspective: 100rem;\n    }\n\n    .container {\n        width: 50rem;\n        height: 50rem;\n        transform-style: preserve-3d;\n        transform-origin: 50% 50% 12.5rem;\n        animation: rotate-frame 30s linear infinite;\n    }\n\n    .slide {\n        width: 25rem;\n        height: 25rem;\n        position: absolute;\n        box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.9) inset;\n    }\n\n    .top {\n        left: 12.5rem;\n        top: -12.5rem;\n        transform: rotateX(-90deg);\n        transform-origin: bottom;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f35j601j30rs0fnab7.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .bottom {\n        left: 12.5rem;\n        bottom: -12.5rem;\n        transform: rotateX(90deg);\n        transform-origin: top;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f353w22j30rs0fn0un.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .left {\n        left: -12.5rem;\n        top: 12.5rem;\n        transform: rotateY(90deg);\n        transform-origin: right;\n        background: url(http://wx1.sinaimg.cn/mw690/005P8ayVgy1ff2f3a0dm8j30rs0nu76d.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .right {\n        left: 37.5rem;\n        top: 12.5rem;\n        transform: rotateY(-90deg);\n        transform-origin: left;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f37m27lj311s0lan5n.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .front {\n        left: 12.5rem;\n        top: 12.5rem;\n        transform: translateZ(25rem);\n        background: url(http://wx2.sinaimg.cn/mw690/005P8ayVgy1ff2f386gqtj30rs0fn411.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .back {\n        left: 12.5rem;\n        top: 12.5rem;\n        transform: translateZ(0);\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f39g721j311s0laqbp.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n</style>\n\n<div class=\"my-container\"><div class=\"rect-wrap\"><div class=\"container\"><br>    <div class=\"top slide\"></div><br>    <div class=\"bottom slide\"></div><br>    <div class=\"left slide\"></div><br>    <div class=\"right slide\"></div><br>    <div class=\"front slide\"></div><br>    <div class=\"back slide\"></div><br></div></div></div>\n我们只能一边失去，一边生存。\n<h2>金木研</h2> \n<font color=\"red\">彼岸花开季，与研共守时</font>\n![](http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff1ehgr9s7j30g40be47y.jpg)\n金木研的故事真的是非常的悲伤，我不清楚作者创作这一主角的目的在于什么,但我们知道的是这部动漫向我们揭露了许多东西。\n\n金木研（黑发）\n原本是就读于上井大学的普通文学青年，有着并不高大的身材与一头乌黑整齐的头发，经常穿着白色打底衬衫和水蓝色外套，在咖啡店工作时则穿着工作服，因为缺乏锻炼的身体显得十分柔弱，为了不被侦查管认出，对抗侦查管时会带着镶有牙齿的黑色面罩，以及黑色眼罩。在20区被卷入“钢筋掉落事件”，从此之后就被改造成了独眼喰种。由于独眼缘故，相较普通食尸鬼拥有混血优势，实力的提升空间更大。\n非常重视自己的朋友，第一次展现出赫子的契机便是为了保护被西尾锦击晕的好友永近英良。\n\n金木研（白发）\n“青桐树”事件后发生较大的外貌变化，被壁虎虐待时换了一件黑色高领短袖和白色中裤，因为受尽一番虐待又因内心中神代利世的蛊惑头发由乌黑变为苍白。加入青铜树后（漫画中是去寻找自己变成喰种的真相）换了一身黑色紧身白条纹连体衣，外面套着布满反光的条纹的短袖外套和一条黑色中裤（漫画为一件黑色短袖连帽衫），在执行任务时为了不暴露身份会带着面罩，同时锻炼出了肌肉并拥有极快的行动速度。\n\n佐佐木琲世\n在失忆成为“佐佐木琲世”后，外貌再次发生了较大的变化，发型变为蘑菇头，头发顶部为黑色，而刘海和鬓角两侧则为白色，身着CCG的队服，黑色打底衬衫和白色中长风衣。并学会使用了库因克，而且能同时使用赫子和库因克进行战斗。\n但也随着时间的推移，偶尔会记起身为金木时的记忆片段，不禁怀疑自己存在的意义。但好在现在的他不是一个人承担着一切，被他视为“母亲”的真户晓会在他痛苦的时候为他分担为他解忧，尽自己最大的努力不让他迷失。\n\n黑色死神\n作为佐佐木琲世三年之久的梦终究还是醒了，被高槻泉所唤醒的金木最初的姿态。头发变回黑色，发型也变回黑发时期的发型，通常身着黑色衬衫，和黑色西装裤。面对敌人如同死神一般残酷；但却不失去理智，依然能够清晰的辨析一切。\n逐渐变得沉稳，但偶尔也会有情绪的失控，思绪与手段变得复杂，没有人真正知道他到底在想些什么。\n\n独眼之王\n金木研意识到了生命真正的目标，他摆脱了所有的虚伪，头发变回白色，“杀死”了有马贵将（实为有马贵将自杀），登上了王座。在对抗小丑时再次戴上面罩，将头发梳成大背头，身穿黑色打底衬衫和白色西装。双手变为血红色。\n![](http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff1ehg473dj30g40dr754.jpg)\n人物性格\n总体属于温柔内敛型，让人感觉亲切容易接近。处事圆润且有分寸，在朋友遇到危机时会毫不犹豫地伸出援手相助。战斗时思维清晰，颇具策略。但以“青铜树”事件以及“失忆”为转折点，人物的某些性格特征发生巨大改变。\n金木研（黑发）\n刚成为喰种的金木研由于巨大的生活改变所带来的冲击，导致他的内心充满着纠结，不清楚自己的定义与存在的目的，甚至不敢想象自己的未来，曾自暴自弃不去面对现实。\n逐步走入“喰种”的世界后，想法渐渐改变，开始学着“适应”这个世界。\n金木研（白发）\n由于在“青铜树”事件中遭遇了毫无人性的拷问，同伴在自己眼前被虐杀等事件，使得金木的精神状态一度陷入崩溃的边缘。他认为这些事情的发生都是因为自己的“无能为力”，并因此接受了自己作为“喰种”的事实，变得极度要强。\n如万丈数一所说“就像切换开关一样”。此事件后，金木在敌人面前会经常展现出残酷无情的一面。抛弃了自己曾经的那份“软弱”，战斗时变得狂气好斗，认为强者就是自己。对于恶意妨碍自己的人，会毫不犹豫的将其“抹去”。\n但即便面对敌人时凶残至极，他也并没有忘记自己的“信念”。面对朋友回到日常生活时，金木仍然是那个温柔稳健的金木。\n佐佐木琲世\n在20区的讨伐“枭”作战中败于有马贵将之手，自此失去了过去20年所有的记忆，成为搜查官被有马带入CCG。\n思想发生转变，有些倾向黑发时期，但同时也会考虑喰种的感受。渴望同伴之间如同家庭一般温暖的感情，视有马贵将与真户晓为“父母”。\n黑色死神\n思想开始变得复杂，很难知道他到底在想些什么，立场也变得暧昧；带上眼镜后，是和CCG的另一个死神——有马贵将截然相反的形象（前者全白，后者全黑）。\n独眼之王\n金木研意识到了生命真正的目标，他摆脱了所有的虚伪，性格开始变得稳重，拥有了要和大家一起活下去的感情。\n\n\n\n<div id=\"div2\">![](http://wx4.sinaimg.cn/mw690/005P8ayVgy1ff1ehhbi9gj30f30jgwp6.jpg)</div>\n<div id=\"div1\"><font color=\"red\">被人如此怀念的金木，一定是个很棒的人吧.\n——佐佐木绯世</font></div>\n## 永近英良\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493300683521&di=06aaa8bc555f795528ebb2b3ec320bf2&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201601%2F01%2F20160101172058_PWFrx.thumb.700_0.jpeg)\n初识金木\n小学时永近与金木初识。那时金木的父亲已经去世，金木总是一个人在读书，永近担心金木无法融入班级，称自己是刚搬到附近，于是和金木结为朋友。\n\n悲剧开始\n永进和金木在安定区讨论喰种的事，在金木说到一半的时候，永进声称：“话说你也该察觉到了吧，‘近在咫尺’的喰种。”并露出了一个诡异的微笑。在知晓金木喜欢神代利世的时候，表示认为金木没戏，不如放弃吧。\n\n遭遇袭击\n永近和金木一起去拜访西尾学长，西尾谎称让永近和他到他家里去拿资料，金木担心西尾会对永近不利而一同前往。西尾将二人带入一个死胡同，打晕永近后，问金木打算什么时候吃掉永近，金木则回答“英不是食物”。 \n之后金木不敌西尾，就在西尾即将给金木最后一击时，永近却突然伸手拉住了西尾的裤脚。金木想起与永近的种种回忆，为了保护永近，金木使用出了赫子。\n打败西尾后，极度饥饿的金木想要吃掉永近，被雾岛董香阻止，后被董香带回“古董”。金木醒来后，在店长带领下看到了平安无事的永近感到十分欣慰。这时永近悄悄睁开了眼睛，听到二人的对话。事后永近得到的事件解释是三人遭遇了车祸，西尾重伤，而自己与金木只受到轻伤。\n\n推理\nCCG发布的通缉令上说“兔子”（雾岛董香）是“为被杀的母亲报仇而袭击人类”，永近却觉得如果“兔子”和“女儿”是同一食尸鬼，那么在遭遇“白鸠”时“女儿”可以与母亲一同战胜“白鸠”，而如果“兔子”是“女儿”的协力者，是复仇的代行人的话，就能够说得通，因而猜测“兔子”与“女儿”是不同的食尸鬼。金木对永近的这一推理表示“令我感到害怕”。\n\n寻找金木\n为了寻找下落不明的金木，永近以CCG公开招募助理职员为契机，加入CCG并在二十支部担任局员助理。找到了“青桐树”的秘密据点之后，将这一信息匿名报告给CCG。后来因而受到丸手赏识，被指名为搜查官助理。\n在“黑兔”（雾岛绚都）出现后，晓问永近“黑兔”与“兔子”是否为同一食尸鬼，永近回答不是，并且说出了自己之前关于“兔子”和“女儿”的推理，引起了真户晓极大的兴趣。 后来永近又参与了对嘉纳明博医生的调查。\n永近抱着一线希望而来到高槻泉的签售会，却偏偏正好错过了金木。为了帮金木要到高槻的签名，被问到名字时，永近谎称自己是“金木”，但在高槻的试探下被识破了。 \n丸手认可永近的能力，想让他参加驱逐“独眼之枭”的战斗，于是永近写下了“遗书”。在这一战中，赶来救芳村功善店长的金木在战斗中负伤，躲进下水道。金木因被亚门钢太郎重伤体力不支的时候，永近突然出现，向金木坦白自己已经知道了他是食尸鬼的事，表示想帮助金木，让金木吃了他并且“全力一战”。金木醒来时永近已经不见了，CCG统计的名单里永近是“下落不明”，他到底去了哪里，没有人知道。\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1493300793447&di=8ced7a856b9114b56db5922766c20042&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201503%2F28%2F20150328104327_EPGcP.jpeg)\n“呦，金木。”，\n寻找这么久终于找到了自己的朋友。\n人物特点\n外表看上去大大咧咧，热情开朗，还有点呆萌，内在却是敏锐细心，愿意为朋友赴汤蹈火，即使那个朋友变得其他人无法接受。\n\n未完待续......\n# fate\n## \n# 冰果\n# 某科学的超电磁炮\n# 魁拔\n幽弥狂\n《魁拔Ⅰ》中首次短暂出场，《魁拔Ⅱ》中正式登场。魁拔十二妖之一，雾妖族。原神圣联军讨伐魁拔夜战小分队队长，夜国将纹耀候选者。他的五人小队——白落提、丰和、英宋、桓泽金、广秀，都是无纹耀的白身。在暗杀魁拔的战斗中其他人全部遇难，五人战功显赫却因没有纹耀被拒绝承认士兵身份，他只能自己将他们安葬，在木板上写下他们的姓名，挂上自己的纹耀，并在墓碑前站了五天五夜，这对生性畏光的雾妖来说是致命的。第五天，一个人——第四代魁拔迷麟，给他递了一把木伞。他的故事、触动了魁拔，魁拔杀了拒绝承认五人小队的联军军官。他依旧对魁拔不服，将其视为死敌，却又追随左右。他苦练的战技，都是死去五人的招式。同时，幽弥狂成了灵山军夜袭小队的首领，每次战斗他都为双方阵亡的将士守灵，记载阵亡名单。魁拔之书中对十二妖的介绍里，唯独他是以对魁拔不服结尾的。\n\n幽弥狂居然敢碰奇衡三的东西\n因为他是个疯子\n\n魁拔魁拔魁拔魁拔魁拔 啊哈哈哈","slug":"人物","published":1,"updated":"2018-01-20T06:44:37.637Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m926005i44wabj3kmmzq","content":"<p>这里将介绍我所喜欢的一些动漫角色。<br><a id=\"more\"></a></p>\n<h1 id=\"东京嗜种\"><a href=\"#东京嗜种\" class=\"headerlink\" title=\"东京嗜种\"></a>东京嗜种</h1><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=405377203&auto=0&height=66\"></iframe>\n\n<p><hr></p>\n<style>\n    @keyframes rotate-frame {\n        0% {\n            transform: rotateX(0deg) rotateY(0deg);\n        }\n        10% {\n            transform: rotateX(0deg) rotateY(180deg);\n        }\n        20% {\n            transform: rotateX(-180deg) rotateY(180deg);\n        }\n        30% {\n            transform: rotateX(-360deg) rotateY(180deg);\n        }\n        40% {\n            transform: rotateX(-360deg) rotateY(360deg);\n        }\n        50% {\n            transform: rotateX(-180deg) rotateY(360deg);\n        }\n        60% {\n            transform: rotateX(90deg) rotateY(180deg);\n        }\n        70% {\n            transform: rotateX(0) rotateY(180deg);\n        }\n        80% {\n            transform: rotateX(90deg) rotateY(90deg);\n        }\n        90% {\n            transform: rotateX(90deg) rotateY(0);\n        }\n        100% {\n            transform: rotateX(0) rotateY(0);\n        }\n    }\n\n    .my-container {\n        width: 62.5rem;\n        height: 31.25rem;\n        margin: 0 auto;\n        transform: scale(0.6) translateY(-10rem);\n    }\n\n    .rect-wrap {\n        position: relative;\n        perspective: 100rem;\n    }\n\n    .container {\n        width: 50rem;\n        height: 50rem;\n        transform-style: preserve-3d;\n        transform-origin: 50% 50% 12.5rem;\n        animation: rotate-frame 30s linear infinite;\n    }\n\n    .slide {\n        width: 25rem;\n        height: 25rem;\n        position: absolute;\n        box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.9) inset;\n    }\n\n    .top {\n        left: 12.5rem;\n        top: -12.5rem;\n        transform: rotateX(-90deg);\n        transform-origin: bottom;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f35j601j30rs0fnab7.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .bottom {\n        left: 12.5rem;\n        bottom: -12.5rem;\n        transform: rotateX(90deg);\n        transform-origin: top;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f353w22j30rs0fn0un.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .left {\n        left: -12.5rem;\n        top: 12.5rem;\n        transform: rotateY(90deg);\n        transform-origin: right;\n        background: url(http://wx1.sinaimg.cn/mw690/005P8ayVgy1ff2f3a0dm8j30rs0nu76d.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .right {\n        left: 37.5rem;\n        top: 12.5rem;\n        transform: rotateY(-90deg);\n        transform-origin: left;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f37m27lj311s0lan5n.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .front {\n        left: 12.5rem;\n        top: 12.5rem;\n        transform: translateZ(25rem);\n        background: url(http://wx2.sinaimg.cn/mw690/005P8ayVgy1ff2f386gqtj30rs0fn411.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .back {\n        left: 12.5rem;\n        top: 12.5rem;\n        transform: translateZ(0);\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f39g721j311s0laqbp.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n</style>\n\n<p><div class=\"my-container\"><div class=\"rect-wrap\"><div class=\"container\"><br>    <div class=\"top slide\"></div><br>    <div class=\"bottom slide\"></div><br>    <div class=\"left slide\"></div><br>    <div class=\"right slide\"></div><br>    <div class=\"front slide\"></div><br>    <div class=\"back slide\"></div><br></div></div></div><br>我们只能一边失去，一边生存。</p>\n<p></p><h2>金木研</h2> <p></p>\n<p><font color=\"red\">彼岸花开季，与研共守时</font><br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff1ehgr9s7j30g40be47y.jpg\" alt=\"\"><br>金木研的故事真的是非常的悲伤，我不清楚作者创作这一主角的目的在于什么,但我们知道的是这部动漫向我们揭露了许多东西。</p>\n<p>金木研（黑发）<br>原本是就读于上井大学的普通文学青年，有着并不高大的身材与一头乌黑整齐的头发，经常穿着白色打底衬衫和水蓝色外套，在咖啡店工作时则穿着工作服，因为缺乏锻炼的身体显得十分柔弱，为了不被侦查管认出，对抗侦查管时会带着镶有牙齿的黑色面罩，以及黑色眼罩。在20区被卷入“钢筋掉落事件”，从此之后就被改造成了独眼喰种。由于独眼缘故，相较普通食尸鬼拥有混血优势，实力的提升空间更大。<br>非常重视自己的朋友，第一次展现出赫子的契机便是为了保护被西尾锦击晕的好友永近英良。</p>\n<p>金木研（白发）<br>“青桐树”事件后发生较大的外貌变化，被壁虎虐待时换了一件黑色高领短袖和白色中裤，因为受尽一番虐待又因内心中神代利世的蛊惑头发由乌黑变为苍白。加入青铜树后（漫画中是去寻找自己变成喰种的真相）换了一身黑色紧身白条纹连体衣，外面套着布满反光的条纹的短袖外套和一条黑色中裤（漫画为一件黑色短袖连帽衫），在执行任务时为了不暴露身份会带着面罩，同时锻炼出了肌肉并拥有极快的行动速度。</p>\n<p>佐佐木琲世<br>在失忆成为“佐佐木琲世”后，外貌再次发生了较大的变化，发型变为蘑菇头，头发顶部为黑色，而刘海和鬓角两侧则为白色，身着CCG的队服，黑色打底衬衫和白色中长风衣。并学会使用了库因克，而且能同时使用赫子和库因克进行战斗。<br>但也随着时间的推移，偶尔会记起身为金木时的记忆片段，不禁怀疑自己存在的意义。但好在现在的他不是一个人承担着一切，被他视为“母亲”的真户晓会在他痛苦的时候为他分担为他解忧，尽自己最大的努力不让他迷失。</p>\n<p>黑色死神<br>作为佐佐木琲世三年之久的梦终究还是醒了，被高槻泉所唤醒的金木最初的姿态。头发变回黑色，发型也变回黑发时期的发型，通常身着黑色衬衫，和黑色西装裤。面对敌人如同死神一般残酷；但却不失去理智，依然能够清晰的辨析一切。<br>逐渐变得沉稳，但偶尔也会有情绪的失控，思绪与手段变得复杂，没有人真正知道他到底在想些什么。</p>\n<p>独眼之王<br>金木研意识到了生命真正的目标，他摆脱了所有的虚伪，头发变回白色，“杀死”了有马贵将（实为有马贵将自杀），登上了王座。在对抗小丑时再次戴上面罩，将头发梳成大背头，身穿黑色打底衬衫和白色西装。双手变为血红色。<br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff1ehg473dj30g40dr754.jpg\" alt=\"\"><br>人物性格<br>总体属于温柔内敛型，让人感觉亲切容易接近。处事圆润且有分寸，在朋友遇到危机时会毫不犹豫地伸出援手相助。战斗时思维清晰，颇具策略。但以“青铜树”事件以及“失忆”为转折点，人物的某些性格特征发生巨大改变。<br>金木研（黑发）<br>刚成为喰种的金木研由于巨大的生活改变所带来的冲击，导致他的内心充满着纠结，不清楚自己的定义与存在的目的，甚至不敢想象自己的未来，曾自暴自弃不去面对现实。<br>逐步走入“喰种”的世界后，想法渐渐改变，开始学着“适应”这个世界。<br>金木研（白发）<br>由于在“青铜树”事件中遭遇了毫无人性的拷问，同伴在自己眼前被虐杀等事件，使得金木的精神状态一度陷入崩溃的边缘。他认为这些事情的发生都是因为自己的“无能为力”，并因此接受了自己作为“喰种”的事实，变得极度要强。<br>如万丈数一所说“就像切换开关一样”。此事件后，金木在敌人面前会经常展现出残酷无情的一面。抛弃了自己曾经的那份“软弱”，战斗时变得狂气好斗，认为强者就是自己。对于恶意妨碍自己的人，会毫不犹豫的将其“抹去”。<br>但即便面对敌人时凶残至极，他也并没有忘记自己的“信念”。面对朋友回到日常生活时，金木仍然是那个温柔稳健的金木。<br>佐佐木琲世<br>在20区的讨伐“枭”作战中败于有马贵将之手，自此失去了过去20年所有的记忆，成为搜查官被有马带入CCG。<br>思想发生转变，有些倾向黑发时期，但同时也会考虑喰种的感受。渴望同伴之间如同家庭一般温暖的感情，视有马贵将与真户晓为“父母”。<br>黑色死神<br>思想开始变得复杂，很难知道他到底在想些什么，立场也变得暧昧；带上眼镜后，是和CCG的另一个死神——有马贵将截然相反的形象（前者全白，后者全黑）。<br>独眼之王<br>金木研意识到了生命真正的目标，他摆脱了所有的虚伪，性格开始变得稳重，拥有了要和大家一起活下去的感情。</p>\n<p><div id=\"div2\"><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVgy1ff1ehhbi9gj30f30jgwp6.jpg\" alt=\"\"></div></p>\n<p><div id=\"div1\"><font color=\"red\">被人如此怀念的金木，一定是个很棒的人吧.<br>——佐佐木绯世</font></div></p>\n<h2 id=\"永近英良\"><a href=\"#永近英良\" class=\"headerlink\" title=\"永近英良\"></a>永近英良</h2><p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1493300683521&amp;di=06aaa8bc555f795528ebb2b3ec320bf2&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201601%2F01%2F20160101172058_PWFrx.thumb.700_0.jpeg\" alt=\"\"><br>初识金木<br>小学时永近与金木初识。那时金木的父亲已经去世，金木总是一个人在读书，永近担心金木无法融入班级，称自己是刚搬到附近，于是和金木结为朋友。</p>\n<p>悲剧开始<br>永进和金木在安定区讨论喰种的事，在金木说到一半的时候，永进声称：“话说你也该察觉到了吧，‘近在咫尺’的喰种。”并露出了一个诡异的微笑。在知晓金木喜欢神代利世的时候，表示认为金木没戏，不如放弃吧。</p>\n<p>遭遇袭击<br>永近和金木一起去拜访西尾学长，西尾谎称让永近和他到他家里去拿资料，金木担心西尾会对永近不利而一同前往。西尾将二人带入一个死胡同，打晕永近后，问金木打算什么时候吃掉永近，金木则回答“英不是食物”。<br>之后金木不敌西尾，就在西尾即将给金木最后一击时，永近却突然伸手拉住了西尾的裤脚。金木想起与永近的种种回忆，为了保护永近，金木使用出了赫子。<br>打败西尾后，极度饥饿的金木想要吃掉永近，被雾岛董香阻止，后被董香带回“古董”。金木醒来后，在店长带领下看到了平安无事的永近感到十分欣慰。这时永近悄悄睁开了眼睛，听到二人的对话。事后永近得到的事件解释是三人遭遇了车祸，西尾重伤，而自己与金木只受到轻伤。</p>\n<p>推理<br>CCG发布的通缉令上说“兔子”（雾岛董香）是“为被杀的母亲报仇而袭击人类”，永近却觉得如果“兔子”和“女儿”是同一食尸鬼，那么在遭遇“白鸠”时“女儿”可以与母亲一同战胜“白鸠”，而如果“兔子”是“女儿”的协力者，是复仇的代行人的话，就能够说得通，因而猜测“兔子”与“女儿”是不同的食尸鬼。金木对永近的这一推理表示“令我感到害怕”。</p>\n<p>寻找金木<br>为了寻找下落不明的金木，永近以CCG公开招募助理职员为契机，加入CCG并在二十支部担任局员助理。找到了“青桐树”的秘密据点之后，将这一信息匿名报告给CCG。后来因而受到丸手赏识，被指名为搜查官助理。<br>在“黑兔”（雾岛绚都）出现后，晓问永近“黑兔”与“兔子”是否为同一食尸鬼，永近回答不是，并且说出了自己之前关于“兔子”和“女儿”的推理，引起了真户晓极大的兴趣。 后来永近又参与了对嘉纳明博医生的调查。<br>永近抱着一线希望而来到高槻泉的签售会，却偏偏正好错过了金木。为了帮金木要到高槻的签名，被问到名字时，永近谎称自己是“金木”，但在高槻的试探下被识破了。<br>丸手认可永近的能力，想让他参加驱逐“独眼之枭”的战斗，于是永近写下了“遗书”。在这一战中，赶来救芳村功善店长的金木在战斗中负伤，躲进下水道。金木因被亚门钢太郎重伤体力不支的时候，永近突然出现，向金木坦白自己已经知道了他是食尸鬼的事，表示想帮助金木，让金木吃了他并且“全力一战”。金木醒来时永近已经不见了，CCG统计的名单里永近是“下落不明”，他到底去了哪里，没有人知道。<br><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1493300793447&amp;di=8ced7a856b9114b56db5922766c20042&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201503%2F28%2F20150328104327_EPGcP.jpeg\" alt=\"\"><br>“呦，金木。”，<br>寻找这么久终于找到了自己的朋友。<br>人物特点<br>外表看上去大大咧咧，热情开朗，还有点呆萌，内在却是敏锐细心，愿意为朋友赴汤蹈火，即使那个朋友变得其他人无法接受。</p>\n<p>未完待续……</p>\n<h1 id=\"fate\"><a href=\"#fate\" class=\"headerlink\" title=\"fate\"></a>fate</h1><p>## </p>\n<h1 id=\"冰果\"><a href=\"#冰果\" class=\"headerlink\" title=\"冰果\"></a>冰果</h1><h1 id=\"某科学的超电磁炮\"><a href=\"#某科学的超电磁炮\" class=\"headerlink\" title=\"某科学的超电磁炮\"></a>某科学的超电磁炮</h1><h1 id=\"魁拔\"><a href=\"#魁拔\" class=\"headerlink\" title=\"魁拔\"></a>魁拔</h1><p>幽弥狂<br>《魁拔Ⅰ》中首次短暂出场，《魁拔Ⅱ》中正式登场。魁拔十二妖之一，雾妖族。原神圣联军讨伐魁拔夜战小分队队长，夜国将纹耀候选者。他的五人小队——白落提、丰和、英宋、桓泽金、广秀，都是无纹耀的白身。在暗杀魁拔的战斗中其他人全部遇难，五人战功显赫却因没有纹耀被拒绝承认士兵身份，他只能自己将他们安葬，在木板上写下他们的姓名，挂上自己的纹耀，并在墓碑前站了五天五夜，这对生性畏光的雾妖来说是致命的。第五天，一个人——第四代魁拔迷麟，给他递了一把木伞。他的故事、触动了魁拔，魁拔杀了拒绝承认五人小队的联军军官。他依旧对魁拔不服，将其视为死敌，却又追随左右。他苦练的战技，都是死去五人的招式。同时，幽弥狂成了灵山军夜袭小队的首领，每次战斗他都为双方阵亡的将士守灵，记载阵亡名单。魁拔之书中对十二妖的介绍里，唯独他是以对魁拔不服结尾的。</p>\n<p>幽弥狂居然敢碰奇衡三的东西<br>因为他是个疯子</p>\n<p>魁拔魁拔魁拔魁拔魁拔 啊哈哈哈</p>\n","excerpt":"<p>这里将介绍我所喜欢的一些动漫角色。<br>","more":"</p>\n<h1 id=\"东京嗜种\"><a href=\"#东京嗜种\" class=\"headerlink\" title=\"东京嗜种\"></a>东京嗜种</h1><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=405377203&auto=0&height=66\"></iframe>\n\n<p><hr></p>\n<style>\n    @keyframes rotate-frame {\n        0% {\n            transform: rotateX(0deg) rotateY(0deg);\n        }\n        10% {\n            transform: rotateX(0deg) rotateY(180deg);\n        }\n        20% {\n            transform: rotateX(-180deg) rotateY(180deg);\n        }\n        30% {\n            transform: rotateX(-360deg) rotateY(180deg);\n        }\n        40% {\n            transform: rotateX(-360deg) rotateY(360deg);\n        }\n        50% {\n            transform: rotateX(-180deg) rotateY(360deg);\n        }\n        60% {\n            transform: rotateX(90deg) rotateY(180deg);\n        }\n        70% {\n            transform: rotateX(0) rotateY(180deg);\n        }\n        80% {\n            transform: rotateX(90deg) rotateY(90deg);\n        }\n        90% {\n            transform: rotateX(90deg) rotateY(0);\n        }\n        100% {\n            transform: rotateX(0) rotateY(0);\n        }\n    }\n\n    .my-container {\n        width: 62.5rem;\n        height: 31.25rem;\n        margin: 0 auto;\n        transform: scale(0.6) translateY(-10rem);\n    }\n\n    .rect-wrap {\n        position: relative;\n        perspective: 100rem;\n    }\n\n    .container {\n        width: 50rem;\n        height: 50rem;\n        transform-style: preserve-3d;\n        transform-origin: 50% 50% 12.5rem;\n        animation: rotate-frame 30s linear infinite;\n    }\n\n    .slide {\n        width: 25rem;\n        height: 25rem;\n        position: absolute;\n        box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.9) inset;\n    }\n\n    .top {\n        left: 12.5rem;\n        top: -12.5rem;\n        transform: rotateX(-90deg);\n        transform-origin: bottom;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f35j601j30rs0fnab7.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .bottom {\n        left: 12.5rem;\n        bottom: -12.5rem;\n        transform: rotateX(90deg);\n        transform-origin: top;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f353w22j30rs0fn0un.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .left {\n        left: -12.5rem;\n        top: 12.5rem;\n        transform: rotateY(90deg);\n        transform-origin: right;\n        background: url(http://wx1.sinaimg.cn/mw690/005P8ayVgy1ff2f3a0dm8j30rs0nu76d.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .right {\n        left: 37.5rem;\n        top: 12.5rem;\n        transform: rotateY(-90deg);\n        transform-origin: left;\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f37m27lj311s0lan5n.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .front {\n        left: 12.5rem;\n        top: 12.5rem;\n        transform: translateZ(25rem);\n        background: url(http://wx2.sinaimg.cn/mw690/005P8ayVgy1ff2f386gqtj30rs0fn411.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .back {\n        left: 12.5rem;\n        top: 12.5rem;\n        transform: translateZ(0);\n        background: url(http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff2f39g721j311s0laqbp.jpg) no-repeat;\n        background-size: 100% 100%;\n    }\n</style>\n\n<p><div class=\"my-container\"><div class=\"rect-wrap\"><div class=\"container\"><br>    <div class=\"top slide\"></div><br>    <div class=\"bottom slide\"></div><br>    <div class=\"left slide\"></div><br>    <div class=\"right slide\"></div><br>    <div class=\"front slide\"></div><br>    <div class=\"back slide\"></div><br></div></div></div><br>我们只能一边失去，一边生存。</p>\n<p><h2>金木研</h2> </p>\n<p><font color=\"red\">彼岸花开季，与研共守时</font><br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff1ehgr9s7j30g40be47y.jpg\" alt=\"\"><br>金木研的故事真的是非常的悲伤，我不清楚作者创作这一主角的目的在于什么,但我们知道的是这部动漫向我们揭露了许多东西。</p>\n<p>金木研（黑发）<br>原本是就读于上井大学的普通文学青年，有着并不高大的身材与一头乌黑整齐的头发，经常穿着白色打底衬衫和水蓝色外套，在咖啡店工作时则穿着工作服，因为缺乏锻炼的身体显得十分柔弱，为了不被侦查管认出，对抗侦查管时会带着镶有牙齿的黑色面罩，以及黑色眼罩。在20区被卷入“钢筋掉落事件”，从此之后就被改造成了独眼喰种。由于独眼缘故，相较普通食尸鬼拥有混血优势，实力的提升空间更大。<br>非常重视自己的朋友，第一次展现出赫子的契机便是为了保护被西尾锦击晕的好友永近英良。</p>\n<p>金木研（白发）<br>“青桐树”事件后发生较大的外貌变化，被壁虎虐待时换了一件黑色高领短袖和白色中裤，因为受尽一番虐待又因内心中神代利世的蛊惑头发由乌黑变为苍白。加入青铜树后（漫画中是去寻找自己变成喰种的真相）换了一身黑色紧身白条纹连体衣，外面套着布满反光的条纹的短袖外套和一条黑色中裤（漫画为一件黑色短袖连帽衫），在执行任务时为了不暴露身份会带着面罩，同时锻炼出了肌肉并拥有极快的行动速度。</p>\n<p>佐佐木琲世<br>在失忆成为“佐佐木琲世”后，外貌再次发生了较大的变化，发型变为蘑菇头，头发顶部为黑色，而刘海和鬓角两侧则为白色，身着CCG的队服，黑色打底衬衫和白色中长风衣。并学会使用了库因克，而且能同时使用赫子和库因克进行战斗。<br>但也随着时间的推移，偶尔会记起身为金木时的记忆片段，不禁怀疑自己存在的意义。但好在现在的他不是一个人承担着一切，被他视为“母亲”的真户晓会在他痛苦的时候为他分担为他解忧，尽自己最大的努力不让他迷失。</p>\n<p>黑色死神<br>作为佐佐木琲世三年之久的梦终究还是醒了，被高槻泉所唤醒的金木最初的姿态。头发变回黑色，发型也变回黑发时期的发型，通常身着黑色衬衫，和黑色西装裤。面对敌人如同死神一般残酷；但却不失去理智，依然能够清晰的辨析一切。<br>逐渐变得沉稳，但偶尔也会有情绪的失控，思绪与手段变得复杂，没有人真正知道他到底在想些什么。</p>\n<p>独眼之王<br>金木研意识到了生命真正的目标，他摆脱了所有的虚伪，头发变回白色，“杀死”了有马贵将（实为有马贵将自杀），登上了王座。在对抗小丑时再次戴上面罩，将头发梳成大背头，身穿黑色打底衬衫和白色西装。双手变为血红色。<br><img src=\"http://wx3.sinaimg.cn/mw690/005P8ayVgy1ff1ehg473dj30g40dr754.jpg\" alt=\"\"><br>人物性格<br>总体属于温柔内敛型，让人感觉亲切容易接近。处事圆润且有分寸，在朋友遇到危机时会毫不犹豫地伸出援手相助。战斗时思维清晰，颇具策略。但以“青铜树”事件以及“失忆”为转折点，人物的某些性格特征发生巨大改变。<br>金木研（黑发）<br>刚成为喰种的金木研由于巨大的生活改变所带来的冲击，导致他的内心充满着纠结，不清楚自己的定义与存在的目的，甚至不敢想象自己的未来，曾自暴自弃不去面对现实。<br>逐步走入“喰种”的世界后，想法渐渐改变，开始学着“适应”这个世界。<br>金木研（白发）<br>由于在“青铜树”事件中遭遇了毫无人性的拷问，同伴在自己眼前被虐杀等事件，使得金木的精神状态一度陷入崩溃的边缘。他认为这些事情的发生都是因为自己的“无能为力”，并因此接受了自己作为“喰种”的事实，变得极度要强。<br>如万丈数一所说“就像切换开关一样”。此事件后，金木在敌人面前会经常展现出残酷无情的一面。抛弃了自己曾经的那份“软弱”，战斗时变得狂气好斗，认为强者就是自己。对于恶意妨碍自己的人，会毫不犹豫的将其“抹去”。<br>但即便面对敌人时凶残至极，他也并没有忘记自己的“信念”。面对朋友回到日常生活时，金木仍然是那个温柔稳健的金木。<br>佐佐木琲世<br>在20区的讨伐“枭”作战中败于有马贵将之手，自此失去了过去20年所有的记忆，成为搜查官被有马带入CCG。<br>思想发生转变，有些倾向黑发时期，但同时也会考虑喰种的感受。渴望同伴之间如同家庭一般温暖的感情，视有马贵将与真户晓为“父母”。<br>黑色死神<br>思想开始变得复杂，很难知道他到底在想些什么，立场也变得暧昧；带上眼镜后，是和CCG的另一个死神——有马贵将截然相反的形象（前者全白，后者全黑）。<br>独眼之王<br>金木研意识到了生命真正的目标，他摆脱了所有的虚伪，性格开始变得稳重，拥有了要和大家一起活下去的感情。</p>\n<p><div id=\"div2\"><img src=\"http://wx4.sinaimg.cn/mw690/005P8ayVgy1ff1ehhbi9gj30f30jgwp6.jpg\" alt=\"\"></div></p>\n<p><div id=\"div1\"><font color=\"red\">被人如此怀念的金木，一定是个很棒的人吧.<br>——佐佐木绯世</font></div></p>\n<h2 id=\"永近英良\"><a href=\"#永近英良\" class=\"headerlink\" title=\"永近英良\"></a>永近英良</h2><p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1493300683521&amp;di=06aaa8bc555f795528ebb2b3ec320bf2&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201601%2F01%2F20160101172058_PWFrx.thumb.700_0.jpeg\" alt=\"\"><br>初识金木<br>小学时永近与金木初识。那时金木的父亲已经去世，金木总是一个人在读书，永近担心金木无法融入班级，称自己是刚搬到附近，于是和金木结为朋友。</p>\n<p>悲剧开始<br>永进和金木在安定区讨论喰种的事，在金木说到一半的时候，永进声称：“话说你也该察觉到了吧，‘近在咫尺’的喰种。”并露出了一个诡异的微笑。在知晓金木喜欢神代利世的时候，表示认为金木没戏，不如放弃吧。</p>\n<p>遭遇袭击<br>永近和金木一起去拜访西尾学长，西尾谎称让永近和他到他家里去拿资料，金木担心西尾会对永近不利而一同前往。西尾将二人带入一个死胡同，打晕永近后，问金木打算什么时候吃掉永近，金木则回答“英不是食物”。<br>之后金木不敌西尾，就在西尾即将给金木最后一击时，永近却突然伸手拉住了西尾的裤脚。金木想起与永近的种种回忆，为了保护永近，金木使用出了赫子。<br>打败西尾后，极度饥饿的金木想要吃掉永近，被雾岛董香阻止，后被董香带回“古董”。金木醒来后，在店长带领下看到了平安无事的永近感到十分欣慰。这时永近悄悄睁开了眼睛，听到二人的对话。事后永近得到的事件解释是三人遭遇了车祸，西尾重伤，而自己与金木只受到轻伤。</p>\n<p>推理<br>CCG发布的通缉令上说“兔子”（雾岛董香）是“为被杀的母亲报仇而袭击人类”，永近却觉得如果“兔子”和“女儿”是同一食尸鬼，那么在遭遇“白鸠”时“女儿”可以与母亲一同战胜“白鸠”，而如果“兔子”是“女儿”的协力者，是复仇的代行人的话，就能够说得通，因而猜测“兔子”与“女儿”是不同的食尸鬼。金木对永近的这一推理表示“令我感到害怕”。</p>\n<p>寻找金木<br>为了寻找下落不明的金木，永近以CCG公开招募助理职员为契机，加入CCG并在二十支部担任局员助理。找到了“青桐树”的秘密据点之后，将这一信息匿名报告给CCG。后来因而受到丸手赏识，被指名为搜查官助理。<br>在“黑兔”（雾岛绚都）出现后，晓问永近“黑兔”与“兔子”是否为同一食尸鬼，永近回答不是，并且说出了自己之前关于“兔子”和“女儿”的推理，引起了真户晓极大的兴趣。 后来永近又参与了对嘉纳明博医生的调查。<br>永近抱着一线希望而来到高槻泉的签售会，却偏偏正好错过了金木。为了帮金木要到高槻的签名，被问到名字时，永近谎称自己是“金木”，但在高槻的试探下被识破了。<br>丸手认可永近的能力，想让他参加驱逐“独眼之枭”的战斗，于是永近写下了“遗书”。在这一战中，赶来救芳村功善店长的金木在战斗中负伤，躲进下水道。金木因被亚门钢太郎重伤体力不支的时候，永近突然出现，向金木坦白自己已经知道了他是食尸鬼的事，表示想帮助金木，让金木吃了他并且“全力一战”。金木醒来时永近已经不见了，CCG统计的名单里永近是“下落不明”，他到底去了哪里，没有人知道。<br><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1493300793447&amp;di=8ced7a856b9114b56db5922766c20042&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201503%2F28%2F20150328104327_EPGcP.jpeg\" alt=\"\"><br>“呦，金木。”，<br>寻找这么久终于找到了自己的朋友。<br>人物特点<br>外表看上去大大咧咧，热情开朗，还有点呆萌，内在却是敏锐细心，愿意为朋友赴汤蹈火，即使那个朋友变得其他人无法接受。</p>\n<p>未完待续……</p>\n<h1 id=\"fate\"><a href=\"#fate\" class=\"headerlink\" title=\"fate\"></a>fate</h1><p>## </p>\n<h1 id=\"冰果\"><a href=\"#冰果\" class=\"headerlink\" title=\"冰果\"></a>冰果</h1><h1 id=\"某科学的超电磁炮\"><a href=\"#某科学的超电磁炮\" class=\"headerlink\" title=\"某科学的超电磁炮\"></a>某科学的超电磁炮</h1><h1 id=\"魁拔\"><a href=\"#魁拔\" class=\"headerlink\" title=\"魁拔\"></a>魁拔</h1><p>幽弥狂<br>《魁拔Ⅰ》中首次短暂出场，《魁拔Ⅱ》中正式登场。魁拔十二妖之一，雾妖族。原神圣联军讨伐魁拔夜战小分队队长，夜国将纹耀候选者。他的五人小队——白落提、丰和、英宋、桓泽金、广秀，都是无纹耀的白身。在暗杀魁拔的战斗中其他人全部遇难，五人战功显赫却因没有纹耀被拒绝承认士兵身份，他只能自己将他们安葬，在木板上写下他们的姓名，挂上自己的纹耀，并在墓碑前站了五天五夜，这对生性畏光的雾妖来说是致命的。第五天，一个人——第四代魁拔迷麟，给他递了一把木伞。他的故事、触动了魁拔，魁拔杀了拒绝承认五人小队的联军军官。他依旧对魁拔不服，将其视为死敌，却又追随左右。他苦练的战技，都是死去五人的招式。同时，幽弥狂成了灵山军夜袭小队的首领，每次战斗他都为双方阵亡的将士守灵，记载阵亡名单。魁拔之书中对十二妖的介绍里，唯独他是以对魁拔不服结尾的。</p>\n<p>幽弥狂居然敢碰奇衡三的东西<br>因为他是个疯子</p>\n<p>魁拔魁拔魁拔魁拔魁拔 啊哈哈哈</p>"},{"title":"司庆日总结","date":"2017-05-26T07:24:31.000Z","toc":true,"_content":"来冰鉴实习快3个月了，时间过得真的是快啊，实习期过去一半了都。\n最近在帮公司写司庆日的界面，就想把这几天学到的东西总结一下。\n<!--more-->\n# CSS实现时间轴功能\n### HTML\n```\n<div id=\"time1\" class=\"timezone\">\n    <div id=\"time2\" class=\"time\">\n        <h2>2015-06</h2>\n            <div>\n                <p>123</p>\n                    <ul>\n                   \t 456\n                    </ul>\n            </div>\n    </div>\n    <div id=\"time3\" class=\"timeLeft\" style=\"top: 150px;\">\n        <h2>2015-09</h2>\n            <div>\n                    <p>789</p>\n            </div>\n\t</div>\n</div>\n```\n### CSS\n```\n//定义一条轴\n.timezone{\n    width:6px;\n    height: 1000px;\n    background: rgba(0,32,70,1);\n    margin: 0 auto;\n    margin-top:250px;\n    border-radius: 3px;\n    position: relative;\n    -webkit-transform: scale(1.3);\n}\n//定义轴的动画\n@-webkit-keyframes heightSlide{\n    0%{\n        height: 0;\n    }\n    100%{\n        height: 1000px;\n    }\n}\n//轴的末端的内容\n.timezone:after{\n    content: '';\n    width: 100px;\n    color:#fff;\n    position: absolute;\n    margin-left: -35px;\n    bottom: -30px;\n    -webkit-animation: showIn 6s ease;\n}\n//左边模块和右边模块的样式\n.timezone .time,.timezone .timeLeft{\n    position: absolute;\n    margin-left: -10px;\n    margin-top:-10px;\n    width:20px;\n    height:20px;\n    border-radius: 50%;\n    border:4px solid rgba(255,255,255,0.5);\n    background: rgba(0,32,70,1);\n    -webkit-transition: all 0.5s;\n    -webkit-animation: showIn ease;\n    animation-play-state: paused;\n}\n//timezone的第1个子元素\n.timezone .time:nth-child(1){\n    -webkit-animation-duration:1s;//1s后播放\n}\n//timezone的第2个子元素\n.timezone .timeLeft:nth-child(2){\n    -webkit-animation-duration:2s;//2s后播放\n}\n//透明度动画\n@-webkit-keyframes showIn{\n    0%,70%{\n        opacity: 0;\n    }\n    100%{\n        opacity: 1;\n    }\n}\n//以下样式不一一注释\n.timezone .time h2,.timezone .timeLeft h2{\n    position: absolute;\n    margin-left: -240px;\n    margin-top: 3px;\n    color:#eee;\n    font-size: 50px;\n    cursor:pointer;\n    -webkit-animation: showIn 3s ease;\n}\n.timezone .timeLeft h2{\n    margin-left: 60px;\n    width:200px;\n}\n.timezone .time:hover,.timezone .timeLeft:hover{\n    border:4px solid lightblue;\n    background: lemonchiffon;\n    box-shadow: 0 0 2px 2px rgba(255,255,255,0.4);\n}\n.timezone .time div,.timezone .timeLeft div{\n    position: absolute;\n    top:50%;\n    margin-top: -25px;\n    left:50px;\n    width: 300px;\n    height: 150px;\n    background: rgba(0,32,70,1);\n    border:3px solid #eee;\n    border-radius: 10px;\n    z-index: 2;\n    overflow: hidden;\n    cursor:pointer;\n    -webkit-animation: showIn 3s ease;\n    -webkit-transition: all 0.5s;\n    font-size: 34px;\n}\n.timezone .timeLeft div{\n    left:-337px;\n}\n.timezone .time div:hover,.timezone .timeLeft div:hover{\n    height: 280px;\n}\n.timezone .time div p,.timezone .timeLeft div p{\n    color: #fff;\n    font-weight: bold;\n    text-align: center;\n}\n.timezone .time:before,.timezone .timeLeft:before{\n    content: '';\n    position: absolute;\n    top:0px;\n    left: 32px;\n    width: 0px;\n    height: 0px;\n    border:10px solid transparent;\n    border-right:10px solid #eee;\n    z-index:-1;\n    -webkit-animation: showIn 3s ease;\n}\n.timezone .timeLeft:before{\n    left:-33px;\n    border:10px solid transparent;\n    border-left:10px solid #eee;\n}\n.timezone .time div ul,.timezone .timeLeft div ul{\n    list-style: none;\n    width:300px;\n    padding:5px 0 0;\n    border-top:2px solid #eee;\n    color:#fff;\n    text-align: center;\n}\n.timezone .time div li,.timezone .timeLeft div li{\n    display: inline-block;\n    height: 25px;\n    line-height: 25px;\n}\n```\n效果如图\n![](http://wx2.sinaimg.cn/mw690/005P8ayVgy1fg4ayrr3xej30ib0njwux.jpg)\n# CSS实现弹幕功能\n### HTML\n```\n<div id=\"wutai\" class=\"wutai\">\n\t//为每条弹幕设置不同的高度和时间\n\t<div class=\"danmu\">开始</div>\n\t<div class=\"danmu\" style=\"margin-top:150px;animation-delay: 2.5s;\">1</div>\n\t<div class=\"danmu\" style=\"margin-top:300px;animation-delay: 3s;\">2</div>\n\t<div class=\"danmu\" style=\"margin-top:450px;animation-delay: 1s;\">3</div>\n\t<div class=\"danmu\" style=\"margin-top:600px;animation-delay: 2s;\">4</div>\n\t<div class=\"danmu\" style=\"margin-top:750px;animation-delay: 1.5s;\">5</div>\n\t<div class=\"danmu\" style=\"margin-top:900px;animation-delay: 0s;\">6</div>\n\t<div class=\"danmu\" style=\"animation-delay: 8s;\">7</div>\n\t<div class=\"danmu\" style=\"margin-top:150px;animation-delay: 6.5s;\">8</div>\n\t<div class=\"danmu\" style=\"margin-top:300px;animation-delay: 10s;\">9</div>\n\t<div class=\"danmu\" style=\"margin-top:450px;animation-delay: 6s;\">10</div>\n</div>\n```\n### CSS\n```\n.wutai{\n\tposition: absolute;\n\theight: 100%;\n\twidth: 100%\n}\n.danmu{\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\ttop: 200px;\n\tfont-size: 70px;\n\tleft:100%;\n\twhite-space:nowrap;/* 不换行 */ \n\tanimation: barrage 10s linear 1;\n}\n@-webkit-keyframes barrage {\n  from {\n    left:100%;\n    transform:translate3d(0,0,0);  \n  }\n\n  to {\n    left:0;\n    transform:translate3d(-100%,0,0);  \n  }\n}\n@keyframes barrage {\n  from {\n    left:100%;\n    transform:translate3d(0,0,0);    \n  }\n\n  to {\n    left:0;\n    transform:translate3d(-100%,0,0);\n  }\n}\n```\n# 抽奖程序的后端\njsp加servlet的一个练手，开发过程遵循敏捷开发的TDD。最后测出的servlet的线程安全问题总结在另一篇文章。\n","source":"_posts/司庆日总结.md","raw":"---\ntitle: 司庆日总结\ndate: 2017-05-26 15:24:31\ntags:\n- Web\n- CSS\ntoc: true\n---\n来冰鉴实习快3个月了，时间过得真的是快啊，实习期过去一半了都。\n最近在帮公司写司庆日的界面，就想把这几天学到的东西总结一下。\n<!--more-->\n# CSS实现时间轴功能\n### HTML\n```\n<div id=\"time1\" class=\"timezone\">\n    <div id=\"time2\" class=\"time\">\n        <h2>2015-06</h2>\n            <div>\n                <p>123</p>\n                    <ul>\n                   \t 456\n                    </ul>\n            </div>\n    </div>\n    <div id=\"time3\" class=\"timeLeft\" style=\"top: 150px;\">\n        <h2>2015-09</h2>\n            <div>\n                    <p>789</p>\n            </div>\n\t</div>\n</div>\n```\n### CSS\n```\n//定义一条轴\n.timezone{\n    width:6px;\n    height: 1000px;\n    background: rgba(0,32,70,1);\n    margin: 0 auto;\n    margin-top:250px;\n    border-radius: 3px;\n    position: relative;\n    -webkit-transform: scale(1.3);\n}\n//定义轴的动画\n@-webkit-keyframes heightSlide{\n    0%{\n        height: 0;\n    }\n    100%{\n        height: 1000px;\n    }\n}\n//轴的末端的内容\n.timezone:after{\n    content: '';\n    width: 100px;\n    color:#fff;\n    position: absolute;\n    margin-left: -35px;\n    bottom: -30px;\n    -webkit-animation: showIn 6s ease;\n}\n//左边模块和右边模块的样式\n.timezone .time,.timezone .timeLeft{\n    position: absolute;\n    margin-left: -10px;\n    margin-top:-10px;\n    width:20px;\n    height:20px;\n    border-radius: 50%;\n    border:4px solid rgba(255,255,255,0.5);\n    background: rgba(0,32,70,1);\n    -webkit-transition: all 0.5s;\n    -webkit-animation: showIn ease;\n    animation-play-state: paused;\n}\n//timezone的第1个子元素\n.timezone .time:nth-child(1){\n    -webkit-animation-duration:1s;//1s后播放\n}\n//timezone的第2个子元素\n.timezone .timeLeft:nth-child(2){\n    -webkit-animation-duration:2s;//2s后播放\n}\n//透明度动画\n@-webkit-keyframes showIn{\n    0%,70%{\n        opacity: 0;\n    }\n    100%{\n        opacity: 1;\n    }\n}\n//以下样式不一一注释\n.timezone .time h2,.timezone .timeLeft h2{\n    position: absolute;\n    margin-left: -240px;\n    margin-top: 3px;\n    color:#eee;\n    font-size: 50px;\n    cursor:pointer;\n    -webkit-animation: showIn 3s ease;\n}\n.timezone .timeLeft h2{\n    margin-left: 60px;\n    width:200px;\n}\n.timezone .time:hover,.timezone .timeLeft:hover{\n    border:4px solid lightblue;\n    background: lemonchiffon;\n    box-shadow: 0 0 2px 2px rgba(255,255,255,0.4);\n}\n.timezone .time div,.timezone .timeLeft div{\n    position: absolute;\n    top:50%;\n    margin-top: -25px;\n    left:50px;\n    width: 300px;\n    height: 150px;\n    background: rgba(0,32,70,1);\n    border:3px solid #eee;\n    border-radius: 10px;\n    z-index: 2;\n    overflow: hidden;\n    cursor:pointer;\n    -webkit-animation: showIn 3s ease;\n    -webkit-transition: all 0.5s;\n    font-size: 34px;\n}\n.timezone .timeLeft div{\n    left:-337px;\n}\n.timezone .time div:hover,.timezone .timeLeft div:hover{\n    height: 280px;\n}\n.timezone .time div p,.timezone .timeLeft div p{\n    color: #fff;\n    font-weight: bold;\n    text-align: center;\n}\n.timezone .time:before,.timezone .timeLeft:before{\n    content: '';\n    position: absolute;\n    top:0px;\n    left: 32px;\n    width: 0px;\n    height: 0px;\n    border:10px solid transparent;\n    border-right:10px solid #eee;\n    z-index:-1;\n    -webkit-animation: showIn 3s ease;\n}\n.timezone .timeLeft:before{\n    left:-33px;\n    border:10px solid transparent;\n    border-left:10px solid #eee;\n}\n.timezone .time div ul,.timezone .timeLeft div ul{\n    list-style: none;\n    width:300px;\n    padding:5px 0 0;\n    border-top:2px solid #eee;\n    color:#fff;\n    text-align: center;\n}\n.timezone .time div li,.timezone .timeLeft div li{\n    display: inline-block;\n    height: 25px;\n    line-height: 25px;\n}\n```\n效果如图\n![](http://wx2.sinaimg.cn/mw690/005P8ayVgy1fg4ayrr3xej30ib0njwux.jpg)\n# CSS实现弹幕功能\n### HTML\n```\n<div id=\"wutai\" class=\"wutai\">\n\t//为每条弹幕设置不同的高度和时间\n\t<div class=\"danmu\">开始</div>\n\t<div class=\"danmu\" style=\"margin-top:150px;animation-delay: 2.5s;\">1</div>\n\t<div class=\"danmu\" style=\"margin-top:300px;animation-delay: 3s;\">2</div>\n\t<div class=\"danmu\" style=\"margin-top:450px;animation-delay: 1s;\">3</div>\n\t<div class=\"danmu\" style=\"margin-top:600px;animation-delay: 2s;\">4</div>\n\t<div class=\"danmu\" style=\"margin-top:750px;animation-delay: 1.5s;\">5</div>\n\t<div class=\"danmu\" style=\"margin-top:900px;animation-delay: 0s;\">6</div>\n\t<div class=\"danmu\" style=\"animation-delay: 8s;\">7</div>\n\t<div class=\"danmu\" style=\"margin-top:150px;animation-delay: 6.5s;\">8</div>\n\t<div class=\"danmu\" style=\"margin-top:300px;animation-delay: 10s;\">9</div>\n\t<div class=\"danmu\" style=\"margin-top:450px;animation-delay: 6s;\">10</div>\n</div>\n```\n### CSS\n```\n.wutai{\n\tposition: absolute;\n\theight: 100%;\n\twidth: 100%\n}\n.danmu{\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\ttop: 200px;\n\tfont-size: 70px;\n\tleft:100%;\n\twhite-space:nowrap;/* 不换行 */ \n\tanimation: barrage 10s linear 1;\n}\n@-webkit-keyframes barrage {\n  from {\n    left:100%;\n    transform:translate3d(0,0,0);  \n  }\n\n  to {\n    left:0;\n    transform:translate3d(-100%,0,0);  \n  }\n}\n@keyframes barrage {\n  from {\n    left:100%;\n    transform:translate3d(0,0,0);    \n  }\n\n  to {\n    left:0;\n    transform:translate3d(-100%,0,0);\n  }\n}\n```\n# 抽奖程序的后端\njsp加servlet的一个练手，开发过程遵循敏捷开发的TDD。最后测出的servlet的线程安全问题总结在另一篇文章。\n","slug":"司庆日总结","published":1,"updated":"2018-01-20T06:44:37.661Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m929005k44wavr0kjm1t","content":"<p>来冰鉴实习快3个月了，时间过得真的是快啊，实习期过去一半了都。<br>最近在帮公司写司庆日的界面，就想把这几天学到的东西总结一下。<br><a id=\"more\"></a></p>\n<h1 id=\"CSS实现时间轴功能\"><a href=\"#CSS实现时间轴功能\" class=\"headerlink\" title=\"CSS实现时间轴功能\"></a>CSS实现时间轴功能</h1><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"time1\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timezone\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"time2\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"time\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>2015-06<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">                   \t 456</div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"time3\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timeLeft\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"top: 150px;\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>2015-09<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>789<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//定义一条轴</span></div><div class=\"line\">.timezone&#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">6px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">1000px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>: rgba(<span class=\"number\">0</span>,<span class=\"number\">32</span>,<span class=\"number\">70</span>,<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>:<span class=\"number\">250px</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">    -webkit-<span class=\"attribute\">transform</span>: scale(<span class=\"number\">1.3</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//定义轴的动画</span></div><div class=\"line\">@-webkit-keyframes heightSlide&#123;</div><div class=\"line\">    <span class=\"number\">0%</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"number\">100%</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">1000px</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//轴的末端的内容</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span>:after&#123;</div><div class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#fff</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">35px</span>;</div><div class=\"line\">    <span class=\"attribute\">bottom</span>: -<span class=\"number\">30px</span>;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn <span class=\"number\">6s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//左边模块和右边模块的样式</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span>,<span class=\"selector-class\">.timezone</span> .timeLeft&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">10px</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>:-<span class=\"number\">10px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">20px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">20px</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">4px</span> solid rgba(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">0.5</span>);</div><div class=\"line\">    <span class=\"attribute\">background</span>: rgba(<span class=\"number\">0</span>,<span class=\"number\">32</span>,<span class=\"number\">70</span>,<span class=\"number\">1</span>);</div><div class=\"line\">    -webkit-<span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn ease;</div><div class=\"line\">    <span class=\"attribute\">animation-play-state</span>: paused;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//timezone的第1个子元素</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span>:nth-child(<span class=\"number\">1</span>)&#123;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation-duration</span>:<span class=\"number\">1s</span>;<span class=\"comment\">//1s后播放</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//timezone的第2个子元素</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span>:nth-child(<span class=\"number\">2</span>)&#123;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation-duration</span>:<span class=\"number\">2s</span>;<span class=\"comment\">//2s后播放</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//透明度动画</span></div><div class=\"line\">@-webkit-keyframes showIn&#123;</div><div class=\"line\">    <span class=\"number\">0%</span>,<span class=\"number\">70%</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"number\">100%</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//以下样式不一一注释</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">h2</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> h2&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">240px</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">3px</span>;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#eee</span>;</div><div class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">50px</span>;</div><div class=\"line\">    <span class=\"attribute\">cursor</span>:pointer;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn <span class=\"number\">3s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> h2&#123;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">60px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span>:hover,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span>:hover&#123;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">4px</span> solid lightblue;</div><div class=\"line\">    <span class=\"attribute\">background</span>: lemonchiffon;</div><div class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"number\">2px</span> rgba(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">0.4</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> div&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">25px</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">50px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>: rgba(<span class=\"number\">0</span>,<span class=\"number\">32</span>,<span class=\"number\">70</span>,<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">3px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</div><div class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">    <span class=\"attribute\">cursor</span>:pointer;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn <span class=\"number\">3s</span> ease;</div><div class=\"line\">    -webkit-<span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</div><div class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">34px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> div&#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:-<span class=\"number\">337px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span>:hover,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> <span class=\"selector-tag\">div</span>:hover&#123;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">280px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span> <span class=\"selector-tag\">p</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> <span class=\"selector-tag\">div</span> p&#123;</div><div class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</div><div class=\"line\">    <span class=\"attribute\">font-weight</span>: bold;</div><div class=\"line\">    <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span>:before,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span>:before&#123;</div><div class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">0px</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">32px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">10px</span> solid transparent;</div><div class=\"line\">    <span class=\"attribute\">border-right</span>:<span class=\"number\">10px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">    <span class=\"attribute\">z-index</span>:-<span class=\"number\">1</span>;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn <span class=\"number\">3s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span>:before&#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:-<span class=\"number\">33px</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">10px</span> solid transparent;</div><div class=\"line\">    <span class=\"attribute\">border-left</span>:<span class=\"number\">10px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span> <span class=\"selector-tag\">ul</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> <span class=\"selector-tag\">div</span> ul&#123;</div><div class=\"line\">    <span class=\"attribute\">list-style</span>: none;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">300px</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">5px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">border-top</span>:<span class=\"number\">2px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#fff</span>;</div><div class=\"line\">    <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span> <span class=\"selector-tag\">li</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> <span class=\"selector-tag\">div</span> li&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">25px</span>;</div><div class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">25px</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>效果如图<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVgy1fg4ayrr3xej30ib0njwux.jpg\" alt=\"\"></p>\n<h1 id=\"CSS实现弹幕功能\"><a href=\"#CSS实现弹幕功能\" class=\"headerlink\" title=\"CSS实现弹幕功能\"></a>CSS实现弹幕功能</h1><h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=<span class=\"string\">\"wutai\"</span> <span class=\"keyword\">class</span>=<span class=\"string\">\"wutai\"</span>&gt;</div><div class=\"line\"> <span class=\"comment\">//为每条弹幕设置不同的高度和时间</span></div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span>&gt;开始&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:150px;animation-delay: 2.5s;\"</span>&gt;<span class=\"number\">1</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:300px;animation-delay: 3s;\"</span>&gt;<span class=\"number\">2</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:450px;animation-delay: 1s;\"</span>&gt;<span class=\"number\">3</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:600px;animation-delay: 2s;\"</span>&gt;<span class=\"number\">4</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:750px;animation-delay: 1.5s;\"</span>&gt;<span class=\"number\">5</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:900px;animation-delay: 0s;\"</span>&gt;<span class=\"number\">6</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"animation-delay: 8s;\"</span>&gt;<span class=\"number\">7</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:150px;animation-delay: 6.5s;\"</span>&gt;<span class=\"number\">8</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:300px;animation-delay: 10s;\"</span>&gt;<span class=\"number\">9</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:450px;animation-delay: 6s;\"</span>&gt;<span class=\"number\">10</span>&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"CSS-1\"><a href=\"#CSS-1\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.wutai</span>&#123;</div><div class=\"line\"> <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100%</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.danmu</span>&#123;</div><div class=\"line\"> <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">200px</span>;</div><div class=\"line\"> <span class=\"attribute\">font-size</span>: <span class=\"number\">70px</span>;</div><div class=\"line\"> <span class=\"attribute\">left</span>:<span class=\"number\">100%</span>;</div><div class=\"line\"> <span class=\"attribute\">white-space</span>:nowrap;<span class=\"comment\">/* 不换行 */</span> </div><div class=\"line\"> <span class=\"attribute\">animation</span>: barrage <span class=\"number\">10s</span> linear <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">@-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> barrage &#123;</div><div class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate3d</span>(0,0,0);  </div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"selector-tag\">to</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate3d</span>(-100%,0,0);  </div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">keyframes</span> barrage &#123;</div><div class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate3d</span>(0,0,0);    </div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"selector-tag\">to</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate3d</span>(-100%,0,0);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"抽奖程序的后端\"><a href=\"#抽奖程序的后端\" class=\"headerlink\" title=\"抽奖程序的后端\"></a>抽奖程序的后端</h1><p>jsp加servlet的一个练手，开发过程遵循敏捷开发的TDD。最后测出的servlet的线程安全问题总结在另一篇文章。</p>\n","excerpt":"<p>来冰鉴实习快3个月了，时间过得真的是快啊，实习期过去一半了都。<br>最近在帮公司写司庆日的界面，就想把这几天学到的东西总结一下。<br>","more":"</p>\n<h1 id=\"CSS实现时间轴功能\"><a href=\"#CSS实现时间轴功能\" class=\"headerlink\" title=\"CSS实现时间轴功能\"></a>CSS实现时间轴功能</h1><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"time1\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timezone\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"time2\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"time\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>2015-06<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">                   \t 456</div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"time3\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timeLeft\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"top: 150px;\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>2015-09<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>789<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//定义一条轴</span></div><div class=\"line\">.timezone&#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">6px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">1000px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>: rgba(<span class=\"number\">0</span>,<span class=\"number\">32</span>,<span class=\"number\">70</span>,<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>:<span class=\"number\">250px</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">    -webkit-<span class=\"attribute\">transform</span>: scale(<span class=\"number\">1.3</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//定义轴的动画</span></div><div class=\"line\">@-webkit-keyframes heightSlide&#123;</div><div class=\"line\">    <span class=\"number\">0%</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"number\">100%</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">1000px</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//轴的末端的内容</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span>:after&#123;</div><div class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#fff</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">35px</span>;</div><div class=\"line\">    <span class=\"attribute\">bottom</span>: -<span class=\"number\">30px</span>;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn <span class=\"number\">6s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//左边模块和右边模块的样式</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span>,<span class=\"selector-class\">.timezone</span> .timeLeft&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">10px</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>:-<span class=\"number\">10px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">20px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">20px</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">4px</span> solid rgba(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">0.5</span>);</div><div class=\"line\">    <span class=\"attribute\">background</span>: rgba(<span class=\"number\">0</span>,<span class=\"number\">32</span>,<span class=\"number\">70</span>,<span class=\"number\">1</span>);</div><div class=\"line\">    -webkit-<span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn ease;</div><div class=\"line\">    <span class=\"attribute\">animation-play-state</span>: paused;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//timezone的第1个子元素</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span>:nth-child(<span class=\"number\">1</span>)&#123;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation-duration</span>:<span class=\"number\">1s</span>;<span class=\"comment\">//1s后播放</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//timezone的第2个子元素</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span>:nth-child(<span class=\"number\">2</span>)&#123;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation-duration</span>:<span class=\"number\">2s</span>;<span class=\"comment\">//2s后播放</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//透明度动画</span></div><div class=\"line\">@-webkit-keyframes showIn&#123;</div><div class=\"line\">    <span class=\"number\">0%</span>,<span class=\"number\">70%</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"number\">100%</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//以下样式不一一注释</span></div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">h2</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> h2&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">240px</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">3px</span>;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#eee</span>;</div><div class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">50px</span>;</div><div class=\"line\">    <span class=\"attribute\">cursor</span>:pointer;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn <span class=\"number\">3s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> h2&#123;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">60px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span>:hover,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span>:hover&#123;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">4px</span> solid lightblue;</div><div class=\"line\">    <span class=\"attribute\">background</span>: lemonchiffon;</div><div class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"number\">2px</span> rgba(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">0.4</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> div&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">25px</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">50px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>: rgba(<span class=\"number\">0</span>,<span class=\"number\">32</span>,<span class=\"number\">70</span>,<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">3px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</div><div class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">    <span class=\"attribute\">cursor</span>:pointer;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn <span class=\"number\">3s</span> ease;</div><div class=\"line\">    -webkit-<span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</div><div class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">34px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> div&#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:-<span class=\"number\">337px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span>:hover,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> <span class=\"selector-tag\">div</span>:hover&#123;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">280px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span> <span class=\"selector-tag\">p</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> <span class=\"selector-tag\">div</span> p&#123;</div><div class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</div><div class=\"line\">    <span class=\"attribute\">font-weight</span>: bold;</div><div class=\"line\">    <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span>:before,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span>:before&#123;</div><div class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">0px</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">32px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">10px</span> solid transparent;</div><div class=\"line\">    <span class=\"attribute\">border-right</span>:<span class=\"number\">10px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">    <span class=\"attribute\">z-index</span>:-<span class=\"number\">1</span>;</div><div class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: showIn <span class=\"number\">3s</span> ease;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span>:before&#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:-<span class=\"number\">33px</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">10px</span> solid transparent;</div><div class=\"line\">    <span class=\"attribute\">border-left</span>:<span class=\"number\">10px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span> <span class=\"selector-tag\">ul</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> <span class=\"selector-tag\">div</span> ul&#123;</div><div class=\"line\">    <span class=\"attribute\">list-style</span>: none;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">300px</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">5px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">border-top</span>:<span class=\"number\">2px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#fff</span>;</div><div class=\"line\">    <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.time</span> <span class=\"selector-tag\">div</span> <span class=\"selector-tag\">li</span>,<span class=\"selector-class\">.timezone</span> <span class=\"selector-class\">.timeLeft</span> <span class=\"selector-tag\">div</span> li&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">25px</span>;</div><div class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">25px</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>效果如图<br><img src=\"http://wx2.sinaimg.cn/mw690/005P8ayVgy1fg4ayrr3xej30ib0njwux.jpg\" alt=\"\"></p>\n<h1 id=\"CSS实现弹幕功能\"><a href=\"#CSS实现弹幕功能\" class=\"headerlink\" title=\"CSS实现弹幕功能\"></a>CSS实现弹幕功能</h1><h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=<span class=\"string\">\"wutai\"</span> <span class=\"keyword\">class</span>=<span class=\"string\">\"wutai\"</span>&gt;</div><div class=\"line\"> <span class=\"comment\">//为每条弹幕设置不同的高度和时间</span></div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span>&gt;开始&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:150px;animation-delay: 2.5s;\"</span>&gt;<span class=\"number\">1</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:300px;animation-delay: 3s;\"</span>&gt;<span class=\"number\">2</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:450px;animation-delay: 1s;\"</span>&gt;<span class=\"number\">3</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:600px;animation-delay: 2s;\"</span>&gt;<span class=\"number\">4</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:750px;animation-delay: 1.5s;\"</span>&gt;<span class=\"number\">5</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:900px;animation-delay: 0s;\"</span>&gt;<span class=\"number\">6</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"animation-delay: 8s;\"</span>&gt;<span class=\"number\">7</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:150px;animation-delay: 6.5s;\"</span>&gt;<span class=\"number\">8</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:300px;animation-delay: 10s;\"</span>&gt;<span class=\"number\">9</span>&lt;/div&gt;</div><div class=\"line\"> &lt;div <span class=\"keyword\">class</span>=<span class=\"string\">\"danmu\"</span> style=<span class=\"string\">\"margin-top:450px;animation-delay: 6s;\"</span>&gt;<span class=\"number\">10</span>&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"CSS-1\"><a href=\"#CSS-1\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.wutai</span>&#123;</div><div class=\"line\"> <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100%</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.danmu</span>&#123;</div><div class=\"line\"> <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">200px</span>;</div><div class=\"line\"> <span class=\"attribute\">font-size</span>: <span class=\"number\">70px</span>;</div><div class=\"line\"> <span class=\"attribute\">left</span>:<span class=\"number\">100%</span>;</div><div class=\"line\"> <span class=\"attribute\">white-space</span>:nowrap;<span class=\"comment\">/* 不换行 */</span> </div><div class=\"line\"> <span class=\"attribute\">animation</span>: barrage <span class=\"number\">10s</span> linear <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">@-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> barrage &#123;</div><div class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate3d</span>(0,0,0);  </div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"selector-tag\">to</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate3d</span>(-100%,0,0);  </div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">keyframes</span> barrage &#123;</div><div class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate3d</span>(0,0,0);    </div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"selector-tag\">to</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate3d</span>(-100%,0,0);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"抽奖程序的后端\"><a href=\"#抽奖程序的后端\" class=\"headerlink\" title=\"抽奖程序的后端\"></a>抽奖程序的后端</h1><p>jsp加servlet的一个练手，开发过程遵循敏捷开发的TDD。最后测出的servlet的线程安全问题总结在另一篇文章。</p>"},{"title":"图片上传预览功能","date":"2017-04-27T02:56:34.000Z","toc":true,"_content":"HTML5 FileReader\n<!--more-->\n原理其实就是通过FileReader API读取本地的图片文件，然后将文件转换成base64编码的字符串，即Data URL。\n得到Data URL编码串，最后将其提交到后台，后台再转换为二进制图片文件。\n\nFileReader的<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\">readAsDataURL</a>实例方法，用来将File 对象转换成Data URL，这样就完成了图片预览功能。","source":"_posts/图片上传预览功能.md","raw":"---\ntitle: 图片上传预览功能\ndate: 2017-04-27 10:56:34\ntags:\n- Web\ntoc: true\n---\nHTML5 FileReader\n<!--more-->\n原理其实就是通过FileReader API读取本地的图片文件，然后将文件转换成base64编码的字符串，即Data URL。\n得到Data URL编码串，最后将其提交到后台，后台再转换为二进制图片文件。\n\nFileReader的<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\">readAsDataURL</a>实例方法，用来将File 对象转换成Data URL，这样就完成了图片预览功能。","slug":"图片上传预览功能","published":1,"updated":"2018-01-20T06:44:37.663Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m92b005m44wap8to3t3r","content":"<p>HTML5 FileReader<br><a id=\"more\"></a><br>原理其实就是通过FileReader API读取本地的图片文件，然后将文件转换成base64编码的字符串，即Data URL。<br>得到Data URL编码串，最后将其提交到后台，后台再转换为二进制图片文件。</p>\n<p>FileReader的<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\" target=\"_blank\" rel=\"external\">readAsDataURL</a>实例方法，用来将File 对象转换成Data URL，这样就完成了图片预览功能。</p>\n","excerpt":"<p>HTML5 FileReader<br>","more":"<br>原理其实就是通过FileReader API读取本地的图片文件，然后将文件转换成base64编码的字符串，即Data URL。<br>得到Data URL编码串，最后将其提交到后台，后台再转换为二进制图片文件。</p>\n<p>FileReader的<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\">readAsDataURL</a>实例方法，用来将File 对象转换成Data URL，这样就完成了图片预览功能。</p>"},{"title":"卡文迪许的性格和成就","toc":true,"date":"2017-12-26T11:08:39.000Z","_content":"这篇文章为物理学与社会进步的报告，记录了卡文迪许的性格和成就。\n希望大家能够通过此文对卡文迪许有一个了解。\n<!--more-->\n\n# 卡文迪许的性格与成就\n【摘要】\n在世界科学界，亨利·卡文迪许恐怕是无人不知、无人不晓的，但是在其它领域亨利·卡文迪许可能并不有名。亨利·卡文迪许作为18世纪的物理学家和化学家，应该为人所熟知，本文主要介绍了卡文迪许的性格和成就，并在此之上进行了总结分析，以便通过此文让大家对亨利·卡文迪许有一个大概的了解。\n关键词：卡文迪许；物理学家；化学家；地球质量\n\n# 1  卡文迪许生平介绍\n亨利·卡文迪许是英国两大家族的后裔:父亲查尔斯·卡文迪许勋爵是德文郡公爵第二的第五个儿子，母亲安尼·格雷夫人是肯特公爵的第四个女儿。母亲的体质很差，不适应伦敦阴冷多雾的气候，她就迁往气候温暖的法国尼斯。1731年10月10日亨利诞生于尼斯。两年后，母亲又生下弟弟弗雷德里克后不久，就去世了。\n亨利11岁进入纽科姆博士在哈克尼办的一所中学，这所学校主要招收上层阶级的孩子。1749年，他进入剑桥的圣彼得学院求学，在剑桥一直待到1753年。因为他不赞成剑桥大学的宗教考试，所以没有取得任何学位，就离开了大学。离开剑桥后，他漫游了欧洲大陆，此后就与父亲居住在伦敦马尔博罗大街，在那儿装备了一间实验室和工作室。一开始，亨利只是做父亲的助手，父亲查尔斯是一位杰出的实验家，也是英国皇家学会的重要人物。他的实验技巧非常卓越，备受本杰明。富兰克林的赞扬。他鼓励儿子的科学爱好，把自己的仪器设备听任儿子使用。尤其重要的是，父亲把亨利引进伦敦的科学界，1760年亨利也成了皇家学会的会员。\n在十八世纪时，还没有公家办的实验室。他把他家的部分房子进行了改造，一所公馆改为实验室，一处住宅改为公用图书馆，把自家丰富的藏书供大家使用。1733年他父亲死后，他又将他的实验基地搬到乡下的别墅，将别墅富丽堂煌的装饰全部拆去，大客厅变成实验室，楼上卧室变成观象台，甚至在宅前的草地上竖起一个架子，以便攀上大树去观测星象。卡文迪许在自己家里设备了一座规模相当大的实验室，他终身在自己家里做实验工作。亨利·卡文迪许将所有的时间都用在做物理和化学实验上、他对任何音乐和艺术都不感兴趣，只有考虑到健康的目的而按时到户外散步。他一生没有结婚，过着独身的生活。 \n# 2  卡文迪许的性格\n## 2．1  性情孤僻\n许多熟人都知道卡文迪许性情孤僻，不喜欢与人谈话。在他的朋友中，能与卡文迪许交谈的没有几个人。化学家武拉斯顿算是其中一个。他总结了一条经验：“与卡文迪许交谈，千万不要看他，而要把头仰起，两眼望着天，就象对空谈话一样，这样才能听到他的一些见解。”就是这样，卡文迪许的话也不多，他沉默寡言得出奇，在同龄人中，可能是话说得最少的人了。\n他几乎不说话。一说话时就有些口吃。在必要时他可以与一个男人交换几句话，但从不与一个以上的男人讲话，而且从来不与女人讲话。他怕女人到这样的程度，甚至不敢去瞧她一眼。他用便条通知他的女佣人(例如开午饭)，任何女孩子偶然地跨过他房间的走道时，他就要在那个地点烧把火。他做了一个单独出入他房间的通道，这样他可以独自来往。\n有一天，一位英国科学家偕同一位奥地利科学家到班克斯爵士(sirJosePhBonks)的家里。适巧卡文迪许也在座。当时便介绍他们相识。在介绍时，班氏曾对这位远客盛赞卡氏而这位初见面的客人更对卡氏说出备致景仰的话，并说这次来伦敦的最大收获，就是专诚奉访这位名震一时的大科学家的。卡氏听到这话，起初大为伍泥，终于完全手足无措，便从人丛中冲出室外，坐上他自己的马车赶回家去了。\n在当时，贵族的社交生活花天酒地。卡文迪许却从不涉足。他只参加一种聚会，那就是皇家学会的科学家聚会。目的很明确：为了增进知识，了解科学动态。当时的目击者是这样描述的，卡文迪许来参加聚会，总是低着头，屈着身，双手搭在背后，悄悄地进入室内。然后脱下帽子，一声不响地找个地方坐下，对别人都不理会。若有人向他打招呼，他会立即面红耳赤，羞涩不堪。有一次聚会是一位会员作实验示范。这位会员在讲解中发现，一个穿着旧衣服、面容枯槁的老头，紧挨在身边认真听讲。当他看了他一眼，老头急忙逃开，躲在他人身后。过一会儿，这老头又悄悄地挤进前面注意地听讲。这奇怪的老头正是卡文迪许。\n这种怪僻性格的形成与他从小生长的环境有一定关系。他两岁时，母亲因生育他弟弟而病逝，从此他失去了母爱。他父亲忙于社交活动，撇下他交由保姆看管，与外界极少往来。直到11岁才被送入一所专收贵族子弟的学校，在学校里他仍然很少与别人交往，这就使他显得特别孤独、羞怯。\n## 2．2  热爱科学，严谨\n在社交生活中，他沉默寡言，显得很孤僻，然而在科学研究中，他思路开阔，兴趣广泛，显得异常活跃。上至天文气象，下至地质采矿，抽象的数学，具体的冶金工艺，他都进行过探讨。特别在化学和物理学的研究中，他有极高的造诣，取得许多重要的成果。\n卡文迪许当时信奉燃素说，曾认为氢气就是燃素。恰好，当时的许多燃素说信徒都猜测燃素具有负重量。充满氢气的气球徐徐升空，曾使燃素论信徒受到鼓舞，他们的猜测似乎有了证明。然而细心的卡文迪许在弄清了空气的浮力原理后，以精确的实验测出氢气确有重量，从而否定了燃素具有负重量的观点。尽管他是信奉燃素说的，但是他更尊重科学实验的事实。\n他做测定万有引力的实验时，微小的温度引起的空气对流和磁力等外部因素，都会对结果产生影响，需要反复进行多次测定，才能确定结果的准确性和可靠性。卡文迪许认真地不厌其烦地一次一次地作实验，进行测量，直到结果能够复现，有了足够的准确性后才肯罢手。他对自己不满意的论文绝不发表。\n他对自己严格要求的同时，却十分尊重他人的科学劳动。他虽不善交际，但却定期参加皇家学会的学术聚会，仔细听取科学家们的发言。他对别人的研究工作很感兴趣，并大力资助，例如，当他得知化学家戴维无钱购置昂贵的金属铂做实验时，主动给他送去铂。铂又称白金，是黄金价格的几十倍。在卡文迪许的支持和帮助下，戴维取得了许多重要成果。\n## 2．3  不图名，不图利\n卡文迪许从事科研工作不图名、不图利，当许多人推崇他发现氢气时，他谦逊他说：“这事早有别人注意到了。”他的许多论文和实验报告，没有急于发表，特别是关于自然哲学的许多论述基本上没有公开发表。\n经潜心研究，卡文迪许独立地发现了“比热”、“潜热”现象，并且撰写了《关于热的实验》的论文。但是，这篇论文并未送去发表，因为卡文迪许知道苏格兰科学家布拉克也在从事这一课题的研究和实验。他认为过早地发表自己的成果，对布拉克是不公平的。 \n# 3  卡文迪许的成就\n## 3．1  物理学\n在1784年到1809年这段时间内，卡文迪许发表了五篇关于天文学方面的论文。其中四篇成果较小，它们涉及极光的高度、印度民历的制订、航海天文的计算以及圆形天文仪的分标。影响较大的一篇是关于地球密度的测定，发表于1789年，那时卡文迪许将近70岁了。这项工作难度大、要求高，是他一生中最后的一项研究，称为卡文迪许实验。这一实验使用一架灵敏度很高的扭秤—一水平杆中间用一抗扭转的金属丝(或石英纤维)悬吊起来。这一装置原是由英国地质学家米歇尔制造的，米歇尔去世后，卡文迪许把这一仪器仔细地改装过。扭丝是长39英寸的镀银铜线，直径2英寸的两个铅球摆锤固定在长6英尺的松木杆的两端。用一对固定铅球(直径12英寸)来吸引这两个可摆动的球。卡文迪许根据所观察到的扭秤的摆动周期计算出两个铅球的引力，然后由计算得到的引力推算出地球的密度。\n他曾提出静电电容、电容率、电势等概念，揭示了静电荷聚集在导体表面上的事实。在1771年至1781年间卡文迪许所以从事的电学研究中，还取得了许多其它重要成果:曾早于迈克尔·法拉第(MichaelFaraday1791一1867)证实，电容器的电容取决于介于它的两板之间的物质。在对导体的一系列实验中，先于德国物理学家欧姆(GeogriSmonohm，1787一1854)发现，导体两端的电势与通过它们的电流成正比，等等。令人敬佩的是，当时无法测量电流的强弱，在电学研究中，卡文迪许把自己的身体当作实验仪器，根据手指、腕关节、肘等的部位对电振的麻木感觉来估计电流的强弱，凭着这种奋不顾身的精神，他发现了电荷的平方反比定律(即库仑定律)等重大电学规律。\n## 3．2  化学\t\n在化学方面，1766年卡文迪许发现化学元素周期表上的第一号元素氢。在《论人工空气》中指出，用稀硫酸和锌铁等反应可以制取氢，氢气可燃，还测定了氢气的密度。他研究二氧化碳，认识到由腐烂和发酵产生的气体，与大理石在酸作用下产生的气体相同。他提出“当量”这个十分重要的概念。研究了空气的组成，证明空气中有惰性气体，指出惰性气体的体积不会超过空气总量的1/120。卡文迪许还发现，燃爆反应后的硝酸或亚硝酸用钾碱溶液中和，过量的氧气用硫化押溶液吸收掉后，试管里仍剩下一个很小的气泡，这气泡的体积约是氮气总体积的1/120。这部分气体的性质与氮气不一样。根本不参加化学反应。它究竟是什么呢？卡文迪许没法讲清。但是他为后人提出了一个研究课题，直到100年以后，英国化学家瑞利和拉姆塞才证实，这部分气体是惰性气体。\n接下来他在1783年又研究了空气的组成成份，作了很多试验，发表论文的题目是，“空气实验”(ExPerimentsonAir)。也就在这个时候，他发现了水是氢和氧两种元素组成的。因为如果把氢元素和氧元素放在一个玻璃球里，以后通上电，他发现了水是这两种原素的化合物。它就这样证明了水是氢和氧的化合物。推翻了水、土、气、火“四元素学说”，为近代化学的创立作出了贡献。还通过氧、氮火花放电制得硝酸。\n从他尚存的未发表的手稿《关于运动论的评论》和《关于热的实验》中，可以发现他对热力学研究的许多论点:他认为热是振动粒子的机械动量。他还独立发现了“比热”和“潜热”的基本真相。\n## 3．3  其它\n卡文迪许的工作不全在纯科学方面。他对气象学和其他应用科学也有兴趣。他曾担任过某一委员会的委员，该委员会负责一项工作，想出最好的方法来保护拍弗利特处的火药库不遭雷击。\n他还曾应政府邀请，协助研究过各种成色的黄金的物理性质，确定最耐磨的合金，因为政府关注硬币中黄金因磨损造成的损耗。 \n# 4  总结\n从卡文迪许的科学研究活动中，我们可以了解到他那勤奋的、为科学勇于献身的和硕果累累的一生。他为开拓实验科学的方法做了不懈的努力，而这种科学的方法对推动自然科学的发展起到了积极的作用。非常遗憾的是卡文迪许所研究的许多重要成果由于没能及早发表，而没能被人们所认识，因而没能在自然科学的发展进程中起到应有的作用。一方面卡文迪许由于自幼失去母爱而养成了胆却、孤癖和不喜好交际的性格。他在伦敦没有什么亲近的朋友，加上又是离群索居者，所以与科学界接触甚少，与同行很少进行交流，因此产生了争论卡文迪许与瓦特关于水的组成问题的发现权问题。另一方面，卡文迪许处在那个时代最富有的阶层，由于经济上的富足使他没有为获得收入而尽早出成果的欲望，他的科学实验工作只是为了满足好奇心和兴趣，也就不会感到能否率先发表的压力。\n卡文迪许这样一个在英国科学界有很高地位的科学家，没有能够以他为核心，带领一批科学家形成一个学派，开展学术研究。卡文迪许不是教师，没有培养学生的条件，而他本人性格又是孤独的，不爱交际，未能与同行进行广泛的交流和合作。这样，他的思想、方法和许多计划没有人来继承和传播，大批的资料长期积压，不能发挥其作用。所以今天的科学工作者应从卡文迪许的事例中吸取教训。珍惜和利用所处的科学前沿的地位，形成以学术带失人为核心的，由其合作者、支持者所构成的学术集团，进行广泛的交流和合作，开展学术争鸣，冲破各种旧观念的束缚和压制，探索科学真理，推动自然科学的发展。 \n# 参 考 文 献\n```\n[1] 祁增年。卡文迪许称地球[J]。知识窗，2007，12:57-57\n[2] 张洋。亨利·卡文迪许在试验物理学上的贡献 [N]。辽宁师范大学学报，1988\n[3] 陈连余。思维方法运用的典范——卡文迪许扭秤实验赏析 [J]。物理之友，2017，33(5):1-2\n[4] 郭威。微小差异与底片质量——科学家的疏忽 [J]。知识就是力量，2011，11:60-61\n[5] 牟晓东。卡文迪许称量地球[J]。现代物理知识，2009，02:54-55\n[6] 李启明。科学怪杰——亨利·卡文迪许 [J]。中学物理教学参考，2003，32(8):62-64\n[7] 孙兴勤。把一生和一切献给科学事业的卡文迪许 [J]。科技杂谈，2004，2:62-62\n[8] 戴雪文。卡文迪许及其卓越的贡献 [J]。自然杂志，1981，12(4):937-940\n[9] 武际可。称量地球的人——卡文迪许的万有引力实验 [N]。中国社会科学报，2014.6.23\n[10] 颜学勤。第一个“称量地球”的卡文迪许 [J]。物理教学探讨，2006，260(24):62-62\n[11] 科苑。发现氢气的伟大学者——卡文迪许 [J]。今日科苑，2012，(24):78-81\n[12] 袁翰青。亨利·卡文迪许小传[J]。化学教育，1983，4(3):60-62\n[13] 容宣。卡文迪许和卡文迪许实验室 [J]。科技文萃，1999，10(10):1-3\n[14] 何万龄。卡文迪许趣闻[J]。中学物理教学参考，1994，8:40-40\n[15] 陈忠，凌北斗。卡文迪许和卡文迪许实验室 [J]。物理教学，1985，(5)\n[16] 佚名。卡文迪许--最富有的学者,最有学问的富翁 [J]。家庭与家教，2002，(4):7-8\n[17] 冰。科学怪人卡文迪许 [J]。物理教师，1982，(3)\n```","source":"_posts/卡文迪许的性格和成就.md","raw":"---\ntitle: 卡文迪许的性格和成就\ntoc: true\ndate: 2017-12-26 19:08:39\ntags:\n- 物理学\n---\n这篇文章为物理学与社会进步的报告，记录了卡文迪许的性格和成就。\n希望大家能够通过此文对卡文迪许有一个了解。\n<!--more-->\n\n# 卡文迪许的性格与成就\n【摘要】\n在世界科学界，亨利·卡文迪许恐怕是无人不知、无人不晓的，但是在其它领域亨利·卡文迪许可能并不有名。亨利·卡文迪许作为18世纪的物理学家和化学家，应该为人所熟知，本文主要介绍了卡文迪许的性格和成就，并在此之上进行了总结分析，以便通过此文让大家对亨利·卡文迪许有一个大概的了解。\n关键词：卡文迪许；物理学家；化学家；地球质量\n\n# 1  卡文迪许生平介绍\n亨利·卡文迪许是英国两大家族的后裔:父亲查尔斯·卡文迪许勋爵是德文郡公爵第二的第五个儿子，母亲安尼·格雷夫人是肯特公爵的第四个女儿。母亲的体质很差，不适应伦敦阴冷多雾的气候，她就迁往气候温暖的法国尼斯。1731年10月10日亨利诞生于尼斯。两年后，母亲又生下弟弟弗雷德里克后不久，就去世了。\n亨利11岁进入纽科姆博士在哈克尼办的一所中学，这所学校主要招收上层阶级的孩子。1749年，他进入剑桥的圣彼得学院求学，在剑桥一直待到1753年。因为他不赞成剑桥大学的宗教考试，所以没有取得任何学位，就离开了大学。离开剑桥后，他漫游了欧洲大陆，此后就与父亲居住在伦敦马尔博罗大街，在那儿装备了一间实验室和工作室。一开始，亨利只是做父亲的助手，父亲查尔斯是一位杰出的实验家，也是英国皇家学会的重要人物。他的实验技巧非常卓越，备受本杰明。富兰克林的赞扬。他鼓励儿子的科学爱好，把自己的仪器设备听任儿子使用。尤其重要的是，父亲把亨利引进伦敦的科学界，1760年亨利也成了皇家学会的会员。\n在十八世纪时，还没有公家办的实验室。他把他家的部分房子进行了改造，一所公馆改为实验室，一处住宅改为公用图书馆，把自家丰富的藏书供大家使用。1733年他父亲死后，他又将他的实验基地搬到乡下的别墅，将别墅富丽堂煌的装饰全部拆去，大客厅变成实验室，楼上卧室变成观象台，甚至在宅前的草地上竖起一个架子，以便攀上大树去观测星象。卡文迪许在自己家里设备了一座规模相当大的实验室，他终身在自己家里做实验工作。亨利·卡文迪许将所有的时间都用在做物理和化学实验上、他对任何音乐和艺术都不感兴趣，只有考虑到健康的目的而按时到户外散步。他一生没有结婚，过着独身的生活。 \n# 2  卡文迪许的性格\n## 2．1  性情孤僻\n许多熟人都知道卡文迪许性情孤僻，不喜欢与人谈话。在他的朋友中，能与卡文迪许交谈的没有几个人。化学家武拉斯顿算是其中一个。他总结了一条经验：“与卡文迪许交谈，千万不要看他，而要把头仰起，两眼望着天，就象对空谈话一样，这样才能听到他的一些见解。”就是这样，卡文迪许的话也不多，他沉默寡言得出奇，在同龄人中，可能是话说得最少的人了。\n他几乎不说话。一说话时就有些口吃。在必要时他可以与一个男人交换几句话，但从不与一个以上的男人讲话，而且从来不与女人讲话。他怕女人到这样的程度，甚至不敢去瞧她一眼。他用便条通知他的女佣人(例如开午饭)，任何女孩子偶然地跨过他房间的走道时，他就要在那个地点烧把火。他做了一个单独出入他房间的通道，这样他可以独自来往。\n有一天，一位英国科学家偕同一位奥地利科学家到班克斯爵士(sirJosePhBonks)的家里。适巧卡文迪许也在座。当时便介绍他们相识。在介绍时，班氏曾对这位远客盛赞卡氏而这位初见面的客人更对卡氏说出备致景仰的话，并说这次来伦敦的最大收获，就是专诚奉访这位名震一时的大科学家的。卡氏听到这话，起初大为伍泥，终于完全手足无措，便从人丛中冲出室外，坐上他自己的马车赶回家去了。\n在当时，贵族的社交生活花天酒地。卡文迪许却从不涉足。他只参加一种聚会，那就是皇家学会的科学家聚会。目的很明确：为了增进知识，了解科学动态。当时的目击者是这样描述的，卡文迪许来参加聚会，总是低着头，屈着身，双手搭在背后，悄悄地进入室内。然后脱下帽子，一声不响地找个地方坐下，对别人都不理会。若有人向他打招呼，他会立即面红耳赤，羞涩不堪。有一次聚会是一位会员作实验示范。这位会员在讲解中发现，一个穿着旧衣服、面容枯槁的老头，紧挨在身边认真听讲。当他看了他一眼，老头急忙逃开，躲在他人身后。过一会儿，这老头又悄悄地挤进前面注意地听讲。这奇怪的老头正是卡文迪许。\n这种怪僻性格的形成与他从小生长的环境有一定关系。他两岁时，母亲因生育他弟弟而病逝，从此他失去了母爱。他父亲忙于社交活动，撇下他交由保姆看管，与外界极少往来。直到11岁才被送入一所专收贵族子弟的学校，在学校里他仍然很少与别人交往，这就使他显得特别孤独、羞怯。\n## 2．2  热爱科学，严谨\n在社交生活中，他沉默寡言，显得很孤僻，然而在科学研究中，他思路开阔，兴趣广泛，显得异常活跃。上至天文气象，下至地质采矿，抽象的数学，具体的冶金工艺，他都进行过探讨。特别在化学和物理学的研究中，他有极高的造诣，取得许多重要的成果。\n卡文迪许当时信奉燃素说，曾认为氢气就是燃素。恰好，当时的许多燃素说信徒都猜测燃素具有负重量。充满氢气的气球徐徐升空，曾使燃素论信徒受到鼓舞，他们的猜测似乎有了证明。然而细心的卡文迪许在弄清了空气的浮力原理后，以精确的实验测出氢气确有重量，从而否定了燃素具有负重量的观点。尽管他是信奉燃素说的，但是他更尊重科学实验的事实。\n他做测定万有引力的实验时，微小的温度引起的空气对流和磁力等外部因素，都会对结果产生影响，需要反复进行多次测定，才能确定结果的准确性和可靠性。卡文迪许认真地不厌其烦地一次一次地作实验，进行测量，直到结果能够复现，有了足够的准确性后才肯罢手。他对自己不满意的论文绝不发表。\n他对自己严格要求的同时，却十分尊重他人的科学劳动。他虽不善交际，但却定期参加皇家学会的学术聚会，仔细听取科学家们的发言。他对别人的研究工作很感兴趣，并大力资助，例如，当他得知化学家戴维无钱购置昂贵的金属铂做实验时，主动给他送去铂。铂又称白金，是黄金价格的几十倍。在卡文迪许的支持和帮助下，戴维取得了许多重要成果。\n## 2．3  不图名，不图利\n卡文迪许从事科研工作不图名、不图利，当许多人推崇他发现氢气时，他谦逊他说：“这事早有别人注意到了。”他的许多论文和实验报告，没有急于发表，特别是关于自然哲学的许多论述基本上没有公开发表。\n经潜心研究，卡文迪许独立地发现了“比热”、“潜热”现象，并且撰写了《关于热的实验》的论文。但是，这篇论文并未送去发表，因为卡文迪许知道苏格兰科学家布拉克也在从事这一课题的研究和实验。他认为过早地发表自己的成果，对布拉克是不公平的。 \n# 3  卡文迪许的成就\n## 3．1  物理学\n在1784年到1809年这段时间内，卡文迪许发表了五篇关于天文学方面的论文。其中四篇成果较小，它们涉及极光的高度、印度民历的制订、航海天文的计算以及圆形天文仪的分标。影响较大的一篇是关于地球密度的测定，发表于1789年，那时卡文迪许将近70岁了。这项工作难度大、要求高，是他一生中最后的一项研究，称为卡文迪许实验。这一实验使用一架灵敏度很高的扭秤—一水平杆中间用一抗扭转的金属丝(或石英纤维)悬吊起来。这一装置原是由英国地质学家米歇尔制造的，米歇尔去世后，卡文迪许把这一仪器仔细地改装过。扭丝是长39英寸的镀银铜线，直径2英寸的两个铅球摆锤固定在长6英尺的松木杆的两端。用一对固定铅球(直径12英寸)来吸引这两个可摆动的球。卡文迪许根据所观察到的扭秤的摆动周期计算出两个铅球的引力，然后由计算得到的引力推算出地球的密度。\n他曾提出静电电容、电容率、电势等概念，揭示了静电荷聚集在导体表面上的事实。在1771年至1781年间卡文迪许所以从事的电学研究中，还取得了许多其它重要成果:曾早于迈克尔·法拉第(MichaelFaraday1791一1867)证实，电容器的电容取决于介于它的两板之间的物质。在对导体的一系列实验中，先于德国物理学家欧姆(GeogriSmonohm，1787一1854)发现，导体两端的电势与通过它们的电流成正比，等等。令人敬佩的是，当时无法测量电流的强弱，在电学研究中，卡文迪许把自己的身体当作实验仪器，根据手指、腕关节、肘等的部位对电振的麻木感觉来估计电流的强弱，凭着这种奋不顾身的精神，他发现了电荷的平方反比定律(即库仑定律)等重大电学规律。\n## 3．2  化学\t\n在化学方面，1766年卡文迪许发现化学元素周期表上的第一号元素氢。在《论人工空气》中指出，用稀硫酸和锌铁等反应可以制取氢，氢气可燃，还测定了氢气的密度。他研究二氧化碳，认识到由腐烂和发酵产生的气体，与大理石在酸作用下产生的气体相同。他提出“当量”这个十分重要的概念。研究了空气的组成，证明空气中有惰性气体，指出惰性气体的体积不会超过空气总量的1/120。卡文迪许还发现，燃爆反应后的硝酸或亚硝酸用钾碱溶液中和，过量的氧气用硫化押溶液吸收掉后，试管里仍剩下一个很小的气泡，这气泡的体积约是氮气总体积的1/120。这部分气体的性质与氮气不一样。根本不参加化学反应。它究竟是什么呢？卡文迪许没法讲清。但是他为后人提出了一个研究课题，直到100年以后，英国化学家瑞利和拉姆塞才证实，这部分气体是惰性气体。\n接下来他在1783年又研究了空气的组成成份，作了很多试验，发表论文的题目是，“空气实验”(ExPerimentsonAir)。也就在这个时候，他发现了水是氢和氧两种元素组成的。因为如果把氢元素和氧元素放在一个玻璃球里，以后通上电，他发现了水是这两种原素的化合物。它就这样证明了水是氢和氧的化合物。推翻了水、土、气、火“四元素学说”，为近代化学的创立作出了贡献。还通过氧、氮火花放电制得硝酸。\n从他尚存的未发表的手稿《关于运动论的评论》和《关于热的实验》中，可以发现他对热力学研究的许多论点:他认为热是振动粒子的机械动量。他还独立发现了“比热”和“潜热”的基本真相。\n## 3．3  其它\n卡文迪许的工作不全在纯科学方面。他对气象学和其他应用科学也有兴趣。他曾担任过某一委员会的委员，该委员会负责一项工作，想出最好的方法来保护拍弗利特处的火药库不遭雷击。\n他还曾应政府邀请，协助研究过各种成色的黄金的物理性质，确定最耐磨的合金，因为政府关注硬币中黄金因磨损造成的损耗。 \n# 4  总结\n从卡文迪许的科学研究活动中，我们可以了解到他那勤奋的、为科学勇于献身的和硕果累累的一生。他为开拓实验科学的方法做了不懈的努力，而这种科学的方法对推动自然科学的发展起到了积极的作用。非常遗憾的是卡文迪许所研究的许多重要成果由于没能及早发表，而没能被人们所认识，因而没能在自然科学的发展进程中起到应有的作用。一方面卡文迪许由于自幼失去母爱而养成了胆却、孤癖和不喜好交际的性格。他在伦敦没有什么亲近的朋友，加上又是离群索居者，所以与科学界接触甚少，与同行很少进行交流，因此产生了争论卡文迪许与瓦特关于水的组成问题的发现权问题。另一方面，卡文迪许处在那个时代最富有的阶层，由于经济上的富足使他没有为获得收入而尽早出成果的欲望，他的科学实验工作只是为了满足好奇心和兴趣，也就不会感到能否率先发表的压力。\n卡文迪许这样一个在英国科学界有很高地位的科学家，没有能够以他为核心，带领一批科学家形成一个学派，开展学术研究。卡文迪许不是教师，没有培养学生的条件，而他本人性格又是孤独的，不爱交际，未能与同行进行广泛的交流和合作。这样，他的思想、方法和许多计划没有人来继承和传播，大批的资料长期积压，不能发挥其作用。所以今天的科学工作者应从卡文迪许的事例中吸取教训。珍惜和利用所处的科学前沿的地位，形成以学术带失人为核心的，由其合作者、支持者所构成的学术集团，进行广泛的交流和合作，开展学术争鸣，冲破各种旧观念的束缚和压制，探索科学真理，推动自然科学的发展。 \n# 参 考 文 献\n```\n[1] 祁增年。卡文迪许称地球[J]。知识窗，2007，12:57-57\n[2] 张洋。亨利·卡文迪许在试验物理学上的贡献 [N]。辽宁师范大学学报，1988\n[3] 陈连余。思维方法运用的典范——卡文迪许扭秤实验赏析 [J]。物理之友，2017，33(5):1-2\n[4] 郭威。微小差异与底片质量——科学家的疏忽 [J]。知识就是力量，2011，11:60-61\n[5] 牟晓东。卡文迪许称量地球[J]。现代物理知识，2009，02:54-55\n[6] 李启明。科学怪杰——亨利·卡文迪许 [J]。中学物理教学参考，2003，32(8):62-64\n[7] 孙兴勤。把一生和一切献给科学事业的卡文迪许 [J]。科技杂谈，2004，2:62-62\n[8] 戴雪文。卡文迪许及其卓越的贡献 [J]。自然杂志，1981，12(4):937-940\n[9] 武际可。称量地球的人——卡文迪许的万有引力实验 [N]。中国社会科学报，2014.6.23\n[10] 颜学勤。第一个“称量地球”的卡文迪许 [J]。物理教学探讨，2006，260(24):62-62\n[11] 科苑。发现氢气的伟大学者——卡文迪许 [J]。今日科苑，2012，(24):78-81\n[12] 袁翰青。亨利·卡文迪许小传[J]。化学教育，1983，4(3):60-62\n[13] 容宣。卡文迪许和卡文迪许实验室 [J]。科技文萃，1999，10(10):1-3\n[14] 何万龄。卡文迪许趣闻[J]。中学物理教学参考，1994，8:40-40\n[15] 陈忠，凌北斗。卡文迪许和卡文迪许实验室 [J]。物理教学，1985，(5)\n[16] 佚名。卡文迪许--最富有的学者,最有学问的富翁 [J]。家庭与家教，2002，(4):7-8\n[17] 冰。科学怪人卡文迪许 [J]。物理教师，1982，(3)\n```","slug":"卡文迪许的性格和成就","published":1,"updated":"2018-01-20T06:44:37.657Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m92e005o44wanjb7sgbl","content":"<p>这篇文章为物理学与社会进步的报告，记录了卡文迪许的性格和成就。<br>希望大家能够通过此文对卡文迪许有一个了解。<br><a id=\"more\"></a></p>\n<h1 id=\"卡文迪许的性格与成就\"><a href=\"#卡文迪许的性格与成就\" class=\"headerlink\" title=\"卡文迪许的性格与成就\"></a>卡文迪许的性格与成就</h1><p>【摘要】<br>在世界科学界，亨利·卡文迪许恐怕是无人不知、无人不晓的，但是在其它领域亨利·卡文迪许可能并不有名。亨利·卡文迪许作为18世纪的物理学家和化学家，应该为人所熟知，本文主要介绍了卡文迪许的性格和成就，并在此之上进行了总结分析，以便通过此文让大家对亨利·卡文迪许有一个大概的了解。<br>关键词：卡文迪许；物理学家；化学家；地球质量</p>\n<h1 id=\"1-卡文迪许生平介绍\"><a href=\"#1-卡文迪许生平介绍\" class=\"headerlink\" title=\"1  卡文迪许生平介绍\"></a>1  卡文迪许生平介绍</h1><p>亨利·卡文迪许是英国两大家族的后裔:父亲查尔斯·卡文迪许勋爵是德文郡公爵第二的第五个儿子，母亲安尼·格雷夫人是肯特公爵的第四个女儿。母亲的体质很差，不适应伦敦阴冷多雾的气候，她就迁往气候温暖的法国尼斯。1731年10月10日亨利诞生于尼斯。两年后，母亲又生下弟弟弗雷德里克后不久，就去世了。<br>亨利11岁进入纽科姆博士在哈克尼办的一所中学，这所学校主要招收上层阶级的孩子。1749年，他进入剑桥的圣彼得学院求学，在剑桥一直待到1753年。因为他不赞成剑桥大学的宗教考试，所以没有取得任何学位，就离开了大学。离开剑桥后，他漫游了欧洲大陆，此后就与父亲居住在伦敦马尔博罗大街，在那儿装备了一间实验室和工作室。一开始，亨利只是做父亲的助手，父亲查尔斯是一位杰出的实验家，也是英国皇家学会的重要人物。他的实验技巧非常卓越，备受本杰明。富兰克林的赞扬。他鼓励儿子的科学爱好，把自己的仪器设备听任儿子使用。尤其重要的是，父亲把亨利引进伦敦的科学界，1760年亨利也成了皇家学会的会员。<br>在十八世纪时，还没有公家办的实验室。他把他家的部分房子进行了改造，一所公馆改为实验室，一处住宅改为公用图书馆，把自家丰富的藏书供大家使用。1733年他父亲死后，他又将他的实验基地搬到乡下的别墅，将别墅富丽堂煌的装饰全部拆去，大客厅变成实验室，楼上卧室变成观象台，甚至在宅前的草地上竖起一个架子，以便攀上大树去观测星象。卡文迪许在自己家里设备了一座规模相当大的实验室，他终身在自己家里做实验工作。亨利·卡文迪许将所有的时间都用在做物理和化学实验上、他对任何音乐和艺术都不感兴趣，只有考虑到健康的目的而按时到户外散步。他一生没有结婚，过着独身的生活。 </p>\n<h1 id=\"2-卡文迪许的性格\"><a href=\"#2-卡文迪许的性格\" class=\"headerlink\" title=\"2  卡文迪许的性格\"></a>2  卡文迪许的性格</h1><h2 id=\"2．1-性情孤僻\"><a href=\"#2．1-性情孤僻\" class=\"headerlink\" title=\"2．1  性情孤僻\"></a>2．1  性情孤僻</h2><p>许多熟人都知道卡文迪许性情孤僻，不喜欢与人谈话。在他的朋友中，能与卡文迪许交谈的没有几个人。化学家武拉斯顿算是其中一个。他总结了一条经验：“与卡文迪许交谈，千万不要看他，而要把头仰起，两眼望着天，就象对空谈话一样，这样才能听到他的一些见解。”就是这样，卡文迪许的话也不多，他沉默寡言得出奇，在同龄人中，可能是话说得最少的人了。<br>他几乎不说话。一说话时就有些口吃。在必要时他可以与一个男人交换几句话，但从不与一个以上的男人讲话，而且从来不与女人讲话。他怕女人到这样的程度，甚至不敢去瞧她一眼。他用便条通知他的女佣人(例如开午饭)，任何女孩子偶然地跨过他房间的走道时，他就要在那个地点烧把火。他做了一个单独出入他房间的通道，这样他可以独自来往。<br>有一天，一位英国科学家偕同一位奥地利科学家到班克斯爵士(sirJosePhBonks)的家里。适巧卡文迪许也在座。当时便介绍他们相识。在介绍时，班氏曾对这位远客盛赞卡氏而这位初见面的客人更对卡氏说出备致景仰的话，并说这次来伦敦的最大收获，就是专诚奉访这位名震一时的大科学家的。卡氏听到这话，起初大为伍泥，终于完全手足无措，便从人丛中冲出室外，坐上他自己的马车赶回家去了。<br>在当时，贵族的社交生活花天酒地。卡文迪许却从不涉足。他只参加一种聚会，那就是皇家学会的科学家聚会。目的很明确：为了增进知识，了解科学动态。当时的目击者是这样描述的，卡文迪许来参加聚会，总是低着头，屈着身，双手搭在背后，悄悄地进入室内。然后脱下帽子，一声不响地找个地方坐下，对别人都不理会。若有人向他打招呼，他会立即面红耳赤，羞涩不堪。有一次聚会是一位会员作实验示范。这位会员在讲解中发现，一个穿着旧衣服、面容枯槁的老头，紧挨在身边认真听讲。当他看了他一眼，老头急忙逃开，躲在他人身后。过一会儿，这老头又悄悄地挤进前面注意地听讲。这奇怪的老头正是卡文迪许。<br>这种怪僻性格的形成与他从小生长的环境有一定关系。他两岁时，母亲因生育他弟弟而病逝，从此他失去了母爱。他父亲忙于社交活动，撇下他交由保姆看管，与外界极少往来。直到11岁才被送入一所专收贵族子弟的学校，在学校里他仍然很少与别人交往，这就使他显得特别孤独、羞怯。</p>\n<h2 id=\"2．2-热爱科学，严谨\"><a href=\"#2．2-热爱科学，严谨\" class=\"headerlink\" title=\"2．2  热爱科学，严谨\"></a>2．2  热爱科学，严谨</h2><p>在社交生活中，他沉默寡言，显得很孤僻，然而在科学研究中，他思路开阔，兴趣广泛，显得异常活跃。上至天文气象，下至地质采矿，抽象的数学，具体的冶金工艺，他都进行过探讨。特别在化学和物理学的研究中，他有极高的造诣，取得许多重要的成果。<br>卡文迪许当时信奉燃素说，曾认为氢气就是燃素。恰好，当时的许多燃素说信徒都猜测燃素具有负重量。充满氢气的气球徐徐升空，曾使燃素论信徒受到鼓舞，他们的猜测似乎有了证明。然而细心的卡文迪许在弄清了空气的浮力原理后，以精确的实验测出氢气确有重量，从而否定了燃素具有负重量的观点。尽管他是信奉燃素说的，但是他更尊重科学实验的事实。<br>他做测定万有引力的实验时，微小的温度引起的空气对流和磁力等外部因素，都会对结果产生影响，需要反复进行多次测定，才能确定结果的准确性和可靠性。卡文迪许认真地不厌其烦地一次一次地作实验，进行测量，直到结果能够复现，有了足够的准确性后才肯罢手。他对自己不满意的论文绝不发表。<br>他对自己严格要求的同时，却十分尊重他人的科学劳动。他虽不善交际，但却定期参加皇家学会的学术聚会，仔细听取科学家们的发言。他对别人的研究工作很感兴趣，并大力资助，例如，当他得知化学家戴维无钱购置昂贵的金属铂做实验时，主动给他送去铂。铂又称白金，是黄金价格的几十倍。在卡文迪许的支持和帮助下，戴维取得了许多重要成果。</p>\n<h2 id=\"2．3-不图名，不图利\"><a href=\"#2．3-不图名，不图利\" class=\"headerlink\" title=\"2．3  不图名，不图利\"></a>2．3  不图名，不图利</h2><p>卡文迪许从事科研工作不图名、不图利，当许多人推崇他发现氢气时，他谦逊他说：“这事早有别人注意到了。”他的许多论文和实验报告，没有急于发表，特别是关于自然哲学的许多论述基本上没有公开发表。<br>经潜心研究，卡文迪许独立地发现了“比热”、“潜热”现象，并且撰写了《关于热的实验》的论文。但是，这篇论文并未送去发表，因为卡文迪许知道苏格兰科学家布拉克也在从事这一课题的研究和实验。他认为过早地发表自己的成果，对布拉克是不公平的。 </p>\n<h1 id=\"3-卡文迪许的成就\"><a href=\"#3-卡文迪许的成就\" class=\"headerlink\" title=\"3  卡文迪许的成就\"></a>3  卡文迪许的成就</h1><h2 id=\"3．1-物理学\"><a href=\"#3．1-物理学\" class=\"headerlink\" title=\"3．1  物理学\"></a>3．1  物理学</h2><p>在1784年到1809年这段时间内，卡文迪许发表了五篇关于天文学方面的论文。其中四篇成果较小，它们涉及极光的高度、印度民历的制订、航海天文的计算以及圆形天文仪的分标。影响较大的一篇是关于地球密度的测定，发表于1789年，那时卡文迪许将近70岁了。这项工作难度大、要求高，是他一生中最后的一项研究，称为卡文迪许实验。这一实验使用一架灵敏度很高的扭秤—一水平杆中间用一抗扭转的金属丝(或石英纤维)悬吊起来。这一装置原是由英国地质学家米歇尔制造的，米歇尔去世后，卡文迪许把这一仪器仔细地改装过。扭丝是长39英寸的镀银铜线，直径2英寸的两个铅球摆锤固定在长6英尺的松木杆的两端。用一对固定铅球(直径12英寸)来吸引这两个可摆动的球。卡文迪许根据所观察到的扭秤的摆动周期计算出两个铅球的引力，然后由计算得到的引力推算出地球的密度。<br>他曾提出静电电容、电容率、电势等概念，揭示了静电荷聚集在导体表面上的事实。在1771年至1781年间卡文迪许所以从事的电学研究中，还取得了许多其它重要成果:曾早于迈克尔·法拉第(MichaelFaraday1791一1867)证实，电容器的电容取决于介于它的两板之间的物质。在对导体的一系列实验中，先于德国物理学家欧姆(GeogriSmonohm，1787一1854)发现，导体两端的电势与通过它们的电流成正比，等等。令人敬佩的是，当时无法测量电流的强弱，在电学研究中，卡文迪许把自己的身体当作实验仪器，根据手指、腕关节、肘等的部位对电振的麻木感觉来估计电流的强弱，凭着这种奋不顾身的精神，他发现了电荷的平方反比定律(即库仑定律)等重大电学规律。</p>\n<h2 id=\"3．2-化学\"><a href=\"#3．2-化学\" class=\"headerlink\" title=\"3．2  化学\"></a>3．2  化学</h2><p>在化学方面，1766年卡文迪许发现化学元素周期表上的第一号元素氢。在《论人工空气》中指出，用稀硫酸和锌铁等反应可以制取氢，氢气可燃，还测定了氢气的密度。他研究二氧化碳，认识到由腐烂和发酵产生的气体，与大理石在酸作用下产生的气体相同。他提出“当量”这个十分重要的概念。研究了空气的组成，证明空气中有惰性气体，指出惰性气体的体积不会超过空气总量的1/120。卡文迪许还发现，燃爆反应后的硝酸或亚硝酸用钾碱溶液中和，过量的氧气用硫化押溶液吸收掉后，试管里仍剩下一个很小的气泡，这气泡的体积约是氮气总体积的1/120。这部分气体的性质与氮气不一样。根本不参加化学反应。它究竟是什么呢？卡文迪许没法讲清。但是他为后人提出了一个研究课题，直到100年以后，英国化学家瑞利和拉姆塞才证实，这部分气体是惰性气体。<br>接下来他在1783年又研究了空气的组成成份，作了很多试验，发表论文的题目是，“空气实验”(ExPerimentsonAir)。也就在这个时候，他发现了水是氢和氧两种元素组成的。因为如果把氢元素和氧元素放在一个玻璃球里，以后通上电，他发现了水是这两种原素的化合物。它就这样证明了水是氢和氧的化合物。推翻了水、土、气、火“四元素学说”，为近代化学的创立作出了贡献。还通过氧、氮火花放电制得硝酸。<br>从他尚存的未发表的手稿《关于运动论的评论》和《关于热的实验》中，可以发现他对热力学研究的许多论点:他认为热是振动粒子的机械动量。他还独立发现了“比热”和“潜热”的基本真相。</p>\n<h2 id=\"3．3-其它\"><a href=\"#3．3-其它\" class=\"headerlink\" title=\"3．3  其它\"></a>3．3  其它</h2><p>卡文迪许的工作不全在纯科学方面。他对气象学和其他应用科学也有兴趣。他曾担任过某一委员会的委员，该委员会负责一项工作，想出最好的方法来保护拍弗利特处的火药库不遭雷击。<br>他还曾应政府邀请，协助研究过各种成色的黄金的物理性质，确定最耐磨的合金，因为政府关注硬币中黄金因磨损造成的损耗。 </p>\n<h1 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4  总结\"></a>4  总结</h1><p>从卡文迪许的科学研究活动中，我们可以了解到他那勤奋的、为科学勇于献身的和硕果累累的一生。他为开拓实验科学的方法做了不懈的努力，而这种科学的方法对推动自然科学的发展起到了积极的作用。非常遗憾的是卡文迪许所研究的许多重要成果由于没能及早发表，而没能被人们所认识，因而没能在自然科学的发展进程中起到应有的作用。一方面卡文迪许由于自幼失去母爱而养成了胆却、孤癖和不喜好交际的性格。他在伦敦没有什么亲近的朋友，加上又是离群索居者，所以与科学界接触甚少，与同行很少进行交流，因此产生了争论卡文迪许与瓦特关于水的组成问题的发现权问题。另一方面，卡文迪许处在那个时代最富有的阶层，由于经济上的富足使他没有为获得收入而尽早出成果的欲望，他的科学实验工作只是为了满足好奇心和兴趣，也就不会感到能否率先发表的压力。<br>卡文迪许这样一个在英国科学界有很高地位的科学家，没有能够以他为核心，带领一批科学家形成一个学派，开展学术研究。卡文迪许不是教师，没有培养学生的条件，而他本人性格又是孤独的，不爱交际，未能与同行进行广泛的交流和合作。这样，他的思想、方法和许多计划没有人来继承和传播，大批的资料长期积压，不能发挥其作用。所以今天的科学工作者应从卡文迪许的事例中吸取教训。珍惜和利用所处的科学前沿的地位，形成以学术带失人为核心的，由其合作者、支持者所构成的学术集团，进行广泛的交流和合作，开展学术争鸣，冲破各种旧观念的束缚和压制，探索科学真理，推动自然科学的发展。 </p>\n<h1 id=\"参-考-文-献\"><a href=\"#参-考-文-献\" class=\"headerlink\" title=\"参 考 文 献\"></a>参 考 文 献</h1><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[1]</span> 祁增年。卡文迪许称地球<span class=\"selector-attr\">[J]</span>。知识窗，<span class=\"selector-tag\">2007</span>，<span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:57-57</span></div><div class=\"line\"><span class=\"selector-attr\">[2]</span> 张洋。亨利·卡文迪许在试验物理学上的贡献 <span class=\"selector-attr\">[N]</span>。辽宁师范大学学报，<span class=\"selector-tag\">1988</span></div><div class=\"line\"><span class=\"selector-attr\">[3]</span> 陈连余。思维方法运用的典范——卡文迪许扭秤实验赏析 <span class=\"selector-attr\">[J]</span>。物理之友，<span class=\"selector-tag\">2017</span>，<span class=\"selector-tag\">33</span>(<span class=\"number\">5</span>)<span class=\"selector-pseudo\">:1-2</span></div><div class=\"line\"><span class=\"selector-attr\">[4]</span> 郭威。微小差异与底片质量——科学家的疏忽 <span class=\"selector-attr\">[J]</span>。知识就是力量，<span class=\"selector-tag\">2011</span>，<span class=\"selector-tag\">11</span><span class=\"selector-pseudo\">:60-61</span></div><div class=\"line\"><span class=\"selector-attr\">[5]</span> 牟晓东。卡文迪许称量地球<span class=\"selector-attr\">[J]</span>。现代物理知识，<span class=\"selector-tag\">2009</span>，<span class=\"selector-tag\">02</span><span class=\"selector-pseudo\">:54-55</span></div><div class=\"line\"><span class=\"selector-attr\">[6]</span> 李启明。科学怪杰——亨利·卡文迪许 <span class=\"selector-attr\">[J]</span>。中学物理教学参考，<span class=\"selector-tag\">2003</span>，<span class=\"selector-tag\">32</span>(<span class=\"number\">8</span>)<span class=\"selector-pseudo\">:62-64</span></div><div class=\"line\"><span class=\"selector-attr\">[7]</span> 孙兴勤。把一生和一切献给科学事业的卡文迪许 <span class=\"selector-attr\">[J]</span>。科技杂谈，<span class=\"selector-tag\">2004</span>，<span class=\"selector-tag\">2</span><span class=\"selector-pseudo\">:62-62</span></div><div class=\"line\"><span class=\"selector-attr\">[8]</span> 戴雪文。卡文迪许及其卓越的贡献 <span class=\"selector-attr\">[J]</span>。自然杂志，<span class=\"selector-tag\">1981</span>，<span class=\"selector-tag\">12</span>(<span class=\"number\">4</span>)<span class=\"selector-pseudo\">:937-940</span></div><div class=\"line\"><span class=\"selector-attr\">[9]</span> 武际可。称量地球的人——卡文迪许的万有引力实验 <span class=\"selector-attr\">[N]</span>。中国社会科学报，<span class=\"selector-tag\">2014</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.23</span></div><div class=\"line\"><span class=\"selector-attr\">[10]</span> 颜学勤。第一个“称量地球”的卡文迪许 <span class=\"selector-attr\">[J]</span>。物理教学探讨，<span class=\"selector-tag\">2006</span>，<span class=\"selector-tag\">260</span>(<span class=\"number\">24</span>)<span class=\"selector-pseudo\">:62-62</span></div><div class=\"line\"><span class=\"selector-attr\">[11]</span> 科苑。发现氢气的伟大学者——卡文迪许 <span class=\"selector-attr\">[J]</span>。今日科苑，<span class=\"selector-tag\">2012</span>，(<span class=\"number\">24</span>)<span class=\"selector-pseudo\">:78-81</span></div><div class=\"line\"><span class=\"selector-attr\">[12]</span> 袁翰青。亨利·卡文迪许小传<span class=\"selector-attr\">[J]</span>。化学教育，<span class=\"selector-tag\">1983</span>，<span class=\"selector-tag\">4</span>(<span class=\"number\">3</span>)<span class=\"selector-pseudo\">:60-62</span></div><div class=\"line\"><span class=\"selector-attr\">[13]</span> 容宣。卡文迪许和卡文迪许实验室 <span class=\"selector-attr\">[J]</span>。科技文萃，<span class=\"selector-tag\">1999</span>，<span class=\"selector-tag\">10</span>(<span class=\"number\">10</span>)<span class=\"selector-pseudo\">:1-3</span></div><div class=\"line\"><span class=\"selector-attr\">[14]</span> 何万龄。卡文迪许趣闻<span class=\"selector-attr\">[J]</span>。中学物理教学参考，<span class=\"selector-tag\">1994</span>，<span class=\"selector-tag\">8</span><span class=\"selector-pseudo\">:40-40</span></div><div class=\"line\"><span class=\"selector-attr\">[15]</span> 陈忠，凌北斗。卡文迪许和卡文迪许实验室 <span class=\"selector-attr\">[J]</span>。物理教学，<span class=\"selector-tag\">1985</span>，(<span class=\"number\">5</span>)</div><div class=\"line\"><span class=\"selector-attr\">[16]</span> 佚名。卡文迪许<span class=\"selector-tag\">--</span>最富有的学者,最有学问的富翁 <span class=\"selector-attr\">[J]</span>。家庭与家教，<span class=\"selector-tag\">2002</span>，(<span class=\"number\">4</span>)<span class=\"selector-pseudo\">:7-8</span></div><div class=\"line\"><span class=\"selector-attr\">[17]</span> 冰。科学怪人卡文迪许 <span class=\"selector-attr\">[J]</span>。物理教师，<span class=\"selector-tag\">1982</span>，(<span class=\"number\">3</span>)</div></pre></td></tr></table></figure>","excerpt":"<p>这篇文章为物理学与社会进步的报告，记录了卡文迪许的性格和成就。<br>希望大家能够通过此文对卡文迪许有一个了解。<br>","more":"</p>\n<h1 id=\"卡文迪许的性格与成就\"><a href=\"#卡文迪许的性格与成就\" class=\"headerlink\" title=\"卡文迪许的性格与成就\"></a>卡文迪许的性格与成就</h1><p>【摘要】<br>在世界科学界，亨利·卡文迪许恐怕是无人不知、无人不晓的，但是在其它领域亨利·卡文迪许可能并不有名。亨利·卡文迪许作为18世纪的物理学家和化学家，应该为人所熟知，本文主要介绍了卡文迪许的性格和成就，并在此之上进行了总结分析，以便通过此文让大家对亨利·卡文迪许有一个大概的了解。<br>关键词：卡文迪许；物理学家；化学家；地球质量</p>\n<h1 id=\"1-卡文迪许生平介绍\"><a href=\"#1-卡文迪许生平介绍\" class=\"headerlink\" title=\"1  卡文迪许生平介绍\"></a>1  卡文迪许生平介绍</h1><p>亨利·卡文迪许是英国两大家族的后裔:父亲查尔斯·卡文迪许勋爵是德文郡公爵第二的第五个儿子，母亲安尼·格雷夫人是肯特公爵的第四个女儿。母亲的体质很差，不适应伦敦阴冷多雾的气候，她就迁往气候温暖的法国尼斯。1731年10月10日亨利诞生于尼斯。两年后，母亲又生下弟弟弗雷德里克后不久，就去世了。<br>亨利11岁进入纽科姆博士在哈克尼办的一所中学，这所学校主要招收上层阶级的孩子。1749年，他进入剑桥的圣彼得学院求学，在剑桥一直待到1753年。因为他不赞成剑桥大学的宗教考试，所以没有取得任何学位，就离开了大学。离开剑桥后，他漫游了欧洲大陆，此后就与父亲居住在伦敦马尔博罗大街，在那儿装备了一间实验室和工作室。一开始，亨利只是做父亲的助手，父亲查尔斯是一位杰出的实验家，也是英国皇家学会的重要人物。他的实验技巧非常卓越，备受本杰明。富兰克林的赞扬。他鼓励儿子的科学爱好，把自己的仪器设备听任儿子使用。尤其重要的是，父亲把亨利引进伦敦的科学界，1760年亨利也成了皇家学会的会员。<br>在十八世纪时，还没有公家办的实验室。他把他家的部分房子进行了改造，一所公馆改为实验室，一处住宅改为公用图书馆，把自家丰富的藏书供大家使用。1733年他父亲死后，他又将他的实验基地搬到乡下的别墅，将别墅富丽堂煌的装饰全部拆去，大客厅变成实验室，楼上卧室变成观象台，甚至在宅前的草地上竖起一个架子，以便攀上大树去观测星象。卡文迪许在自己家里设备了一座规模相当大的实验室，他终身在自己家里做实验工作。亨利·卡文迪许将所有的时间都用在做物理和化学实验上、他对任何音乐和艺术都不感兴趣，只有考虑到健康的目的而按时到户外散步。他一生没有结婚，过着独身的生活。 </p>\n<h1 id=\"2-卡文迪许的性格\"><a href=\"#2-卡文迪许的性格\" class=\"headerlink\" title=\"2  卡文迪许的性格\"></a>2  卡文迪许的性格</h1><h2 id=\"2．1-性情孤僻\"><a href=\"#2．1-性情孤僻\" class=\"headerlink\" title=\"2．1  性情孤僻\"></a>2．1  性情孤僻</h2><p>许多熟人都知道卡文迪许性情孤僻，不喜欢与人谈话。在他的朋友中，能与卡文迪许交谈的没有几个人。化学家武拉斯顿算是其中一个。他总结了一条经验：“与卡文迪许交谈，千万不要看他，而要把头仰起，两眼望着天，就象对空谈话一样，这样才能听到他的一些见解。”就是这样，卡文迪许的话也不多，他沉默寡言得出奇，在同龄人中，可能是话说得最少的人了。<br>他几乎不说话。一说话时就有些口吃。在必要时他可以与一个男人交换几句话，但从不与一个以上的男人讲话，而且从来不与女人讲话。他怕女人到这样的程度，甚至不敢去瞧她一眼。他用便条通知他的女佣人(例如开午饭)，任何女孩子偶然地跨过他房间的走道时，他就要在那个地点烧把火。他做了一个单独出入他房间的通道，这样他可以独自来往。<br>有一天，一位英国科学家偕同一位奥地利科学家到班克斯爵士(sirJosePhBonks)的家里。适巧卡文迪许也在座。当时便介绍他们相识。在介绍时，班氏曾对这位远客盛赞卡氏而这位初见面的客人更对卡氏说出备致景仰的话，并说这次来伦敦的最大收获，就是专诚奉访这位名震一时的大科学家的。卡氏听到这话，起初大为伍泥，终于完全手足无措，便从人丛中冲出室外，坐上他自己的马车赶回家去了。<br>在当时，贵族的社交生活花天酒地。卡文迪许却从不涉足。他只参加一种聚会，那就是皇家学会的科学家聚会。目的很明确：为了增进知识，了解科学动态。当时的目击者是这样描述的，卡文迪许来参加聚会，总是低着头，屈着身，双手搭在背后，悄悄地进入室内。然后脱下帽子，一声不响地找个地方坐下，对别人都不理会。若有人向他打招呼，他会立即面红耳赤，羞涩不堪。有一次聚会是一位会员作实验示范。这位会员在讲解中发现，一个穿着旧衣服、面容枯槁的老头，紧挨在身边认真听讲。当他看了他一眼，老头急忙逃开，躲在他人身后。过一会儿，这老头又悄悄地挤进前面注意地听讲。这奇怪的老头正是卡文迪许。<br>这种怪僻性格的形成与他从小生长的环境有一定关系。他两岁时，母亲因生育他弟弟而病逝，从此他失去了母爱。他父亲忙于社交活动，撇下他交由保姆看管，与外界极少往来。直到11岁才被送入一所专收贵族子弟的学校，在学校里他仍然很少与别人交往，这就使他显得特别孤独、羞怯。</p>\n<h2 id=\"2．2-热爱科学，严谨\"><a href=\"#2．2-热爱科学，严谨\" class=\"headerlink\" title=\"2．2  热爱科学，严谨\"></a>2．2  热爱科学，严谨</h2><p>在社交生活中，他沉默寡言，显得很孤僻，然而在科学研究中，他思路开阔，兴趣广泛，显得异常活跃。上至天文气象，下至地质采矿，抽象的数学，具体的冶金工艺，他都进行过探讨。特别在化学和物理学的研究中，他有极高的造诣，取得许多重要的成果。<br>卡文迪许当时信奉燃素说，曾认为氢气就是燃素。恰好，当时的许多燃素说信徒都猜测燃素具有负重量。充满氢气的气球徐徐升空，曾使燃素论信徒受到鼓舞，他们的猜测似乎有了证明。然而细心的卡文迪许在弄清了空气的浮力原理后，以精确的实验测出氢气确有重量，从而否定了燃素具有负重量的观点。尽管他是信奉燃素说的，但是他更尊重科学实验的事实。<br>他做测定万有引力的实验时，微小的温度引起的空气对流和磁力等外部因素，都会对结果产生影响，需要反复进行多次测定，才能确定结果的准确性和可靠性。卡文迪许认真地不厌其烦地一次一次地作实验，进行测量，直到结果能够复现，有了足够的准确性后才肯罢手。他对自己不满意的论文绝不发表。<br>他对自己严格要求的同时，却十分尊重他人的科学劳动。他虽不善交际，但却定期参加皇家学会的学术聚会，仔细听取科学家们的发言。他对别人的研究工作很感兴趣，并大力资助，例如，当他得知化学家戴维无钱购置昂贵的金属铂做实验时，主动给他送去铂。铂又称白金，是黄金价格的几十倍。在卡文迪许的支持和帮助下，戴维取得了许多重要成果。</p>\n<h2 id=\"2．3-不图名，不图利\"><a href=\"#2．3-不图名，不图利\" class=\"headerlink\" title=\"2．3  不图名，不图利\"></a>2．3  不图名，不图利</h2><p>卡文迪许从事科研工作不图名、不图利，当许多人推崇他发现氢气时，他谦逊他说：“这事早有别人注意到了。”他的许多论文和实验报告，没有急于发表，特别是关于自然哲学的许多论述基本上没有公开发表。<br>经潜心研究，卡文迪许独立地发现了“比热”、“潜热”现象，并且撰写了《关于热的实验》的论文。但是，这篇论文并未送去发表，因为卡文迪许知道苏格兰科学家布拉克也在从事这一课题的研究和实验。他认为过早地发表自己的成果，对布拉克是不公平的。 </p>\n<h1 id=\"3-卡文迪许的成就\"><a href=\"#3-卡文迪许的成就\" class=\"headerlink\" title=\"3  卡文迪许的成就\"></a>3  卡文迪许的成就</h1><h2 id=\"3．1-物理学\"><a href=\"#3．1-物理学\" class=\"headerlink\" title=\"3．1  物理学\"></a>3．1  物理学</h2><p>在1784年到1809年这段时间内，卡文迪许发表了五篇关于天文学方面的论文。其中四篇成果较小，它们涉及极光的高度、印度民历的制订、航海天文的计算以及圆形天文仪的分标。影响较大的一篇是关于地球密度的测定，发表于1789年，那时卡文迪许将近70岁了。这项工作难度大、要求高，是他一生中最后的一项研究，称为卡文迪许实验。这一实验使用一架灵敏度很高的扭秤—一水平杆中间用一抗扭转的金属丝(或石英纤维)悬吊起来。这一装置原是由英国地质学家米歇尔制造的，米歇尔去世后，卡文迪许把这一仪器仔细地改装过。扭丝是长39英寸的镀银铜线，直径2英寸的两个铅球摆锤固定在长6英尺的松木杆的两端。用一对固定铅球(直径12英寸)来吸引这两个可摆动的球。卡文迪许根据所观察到的扭秤的摆动周期计算出两个铅球的引力，然后由计算得到的引力推算出地球的密度。<br>他曾提出静电电容、电容率、电势等概念，揭示了静电荷聚集在导体表面上的事实。在1771年至1781年间卡文迪许所以从事的电学研究中，还取得了许多其它重要成果:曾早于迈克尔·法拉第(MichaelFaraday1791一1867)证实，电容器的电容取决于介于它的两板之间的物质。在对导体的一系列实验中，先于德国物理学家欧姆(GeogriSmonohm，1787一1854)发现，导体两端的电势与通过它们的电流成正比，等等。令人敬佩的是，当时无法测量电流的强弱，在电学研究中，卡文迪许把自己的身体当作实验仪器，根据手指、腕关节、肘等的部位对电振的麻木感觉来估计电流的强弱，凭着这种奋不顾身的精神，他发现了电荷的平方反比定律(即库仑定律)等重大电学规律。</p>\n<h2 id=\"3．2-化学\"><a href=\"#3．2-化学\" class=\"headerlink\" title=\"3．2  化学\"></a>3．2  化学</h2><p>在化学方面，1766年卡文迪许发现化学元素周期表上的第一号元素氢。在《论人工空气》中指出，用稀硫酸和锌铁等反应可以制取氢，氢气可燃，还测定了氢气的密度。他研究二氧化碳，认识到由腐烂和发酵产生的气体，与大理石在酸作用下产生的气体相同。他提出“当量”这个十分重要的概念。研究了空气的组成，证明空气中有惰性气体，指出惰性气体的体积不会超过空气总量的1/120。卡文迪许还发现，燃爆反应后的硝酸或亚硝酸用钾碱溶液中和，过量的氧气用硫化押溶液吸收掉后，试管里仍剩下一个很小的气泡，这气泡的体积约是氮气总体积的1/120。这部分气体的性质与氮气不一样。根本不参加化学反应。它究竟是什么呢？卡文迪许没法讲清。但是他为后人提出了一个研究课题，直到100年以后，英国化学家瑞利和拉姆塞才证实，这部分气体是惰性气体。<br>接下来他在1783年又研究了空气的组成成份，作了很多试验，发表论文的题目是，“空气实验”(ExPerimentsonAir)。也就在这个时候，他发现了水是氢和氧两种元素组成的。因为如果把氢元素和氧元素放在一个玻璃球里，以后通上电，他发现了水是这两种原素的化合物。它就这样证明了水是氢和氧的化合物。推翻了水、土、气、火“四元素学说”，为近代化学的创立作出了贡献。还通过氧、氮火花放电制得硝酸。<br>从他尚存的未发表的手稿《关于运动论的评论》和《关于热的实验》中，可以发现他对热力学研究的许多论点:他认为热是振动粒子的机械动量。他还独立发现了“比热”和“潜热”的基本真相。</p>\n<h2 id=\"3．3-其它\"><a href=\"#3．3-其它\" class=\"headerlink\" title=\"3．3  其它\"></a>3．3  其它</h2><p>卡文迪许的工作不全在纯科学方面。他对气象学和其他应用科学也有兴趣。他曾担任过某一委员会的委员，该委员会负责一项工作，想出最好的方法来保护拍弗利特处的火药库不遭雷击。<br>他还曾应政府邀请，协助研究过各种成色的黄金的物理性质，确定最耐磨的合金，因为政府关注硬币中黄金因磨损造成的损耗。 </p>\n<h1 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4  总结\"></a>4  总结</h1><p>从卡文迪许的科学研究活动中，我们可以了解到他那勤奋的、为科学勇于献身的和硕果累累的一生。他为开拓实验科学的方法做了不懈的努力，而这种科学的方法对推动自然科学的发展起到了积极的作用。非常遗憾的是卡文迪许所研究的许多重要成果由于没能及早发表，而没能被人们所认识，因而没能在自然科学的发展进程中起到应有的作用。一方面卡文迪许由于自幼失去母爱而养成了胆却、孤癖和不喜好交际的性格。他在伦敦没有什么亲近的朋友，加上又是离群索居者，所以与科学界接触甚少，与同行很少进行交流，因此产生了争论卡文迪许与瓦特关于水的组成问题的发现权问题。另一方面，卡文迪许处在那个时代最富有的阶层，由于经济上的富足使他没有为获得收入而尽早出成果的欲望，他的科学实验工作只是为了满足好奇心和兴趣，也就不会感到能否率先发表的压力。<br>卡文迪许这样一个在英国科学界有很高地位的科学家，没有能够以他为核心，带领一批科学家形成一个学派，开展学术研究。卡文迪许不是教师，没有培养学生的条件，而他本人性格又是孤独的，不爱交际，未能与同行进行广泛的交流和合作。这样，他的思想、方法和许多计划没有人来继承和传播，大批的资料长期积压，不能发挥其作用。所以今天的科学工作者应从卡文迪许的事例中吸取教训。珍惜和利用所处的科学前沿的地位，形成以学术带失人为核心的，由其合作者、支持者所构成的学术集团，进行广泛的交流和合作，开展学术争鸣，冲破各种旧观念的束缚和压制，探索科学真理，推动自然科学的发展。 </p>\n<h1 id=\"参-考-文-献\"><a href=\"#参-考-文-献\" class=\"headerlink\" title=\"参 考 文 献\"></a>参 考 文 献</h1><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[1]</span> 祁增年。卡文迪许称地球<span class=\"selector-attr\">[J]</span>。知识窗，<span class=\"selector-tag\">2007</span>，<span class=\"selector-tag\">12</span><span class=\"selector-pseudo\">:57-57</span></div><div class=\"line\"><span class=\"selector-attr\">[2]</span> 张洋。亨利·卡文迪许在试验物理学上的贡献 <span class=\"selector-attr\">[N]</span>。辽宁师范大学学报，<span class=\"selector-tag\">1988</span></div><div class=\"line\"><span class=\"selector-attr\">[3]</span> 陈连余。思维方法运用的典范——卡文迪许扭秤实验赏析 <span class=\"selector-attr\">[J]</span>。物理之友，<span class=\"selector-tag\">2017</span>，<span class=\"selector-tag\">33</span>(<span class=\"number\">5</span>)<span class=\"selector-pseudo\">:1-2</span></div><div class=\"line\"><span class=\"selector-attr\">[4]</span> 郭威。微小差异与底片质量——科学家的疏忽 <span class=\"selector-attr\">[J]</span>。知识就是力量，<span class=\"selector-tag\">2011</span>，<span class=\"selector-tag\">11</span><span class=\"selector-pseudo\">:60-61</span></div><div class=\"line\"><span class=\"selector-attr\">[5]</span> 牟晓东。卡文迪许称量地球<span class=\"selector-attr\">[J]</span>。现代物理知识，<span class=\"selector-tag\">2009</span>，<span class=\"selector-tag\">02</span><span class=\"selector-pseudo\">:54-55</span></div><div class=\"line\"><span class=\"selector-attr\">[6]</span> 李启明。科学怪杰——亨利·卡文迪许 <span class=\"selector-attr\">[J]</span>。中学物理教学参考，<span class=\"selector-tag\">2003</span>，<span class=\"selector-tag\">32</span>(<span class=\"number\">8</span>)<span class=\"selector-pseudo\">:62-64</span></div><div class=\"line\"><span class=\"selector-attr\">[7]</span> 孙兴勤。把一生和一切献给科学事业的卡文迪许 <span class=\"selector-attr\">[J]</span>。科技杂谈，<span class=\"selector-tag\">2004</span>，<span class=\"selector-tag\">2</span><span class=\"selector-pseudo\">:62-62</span></div><div class=\"line\"><span class=\"selector-attr\">[8]</span> 戴雪文。卡文迪许及其卓越的贡献 <span class=\"selector-attr\">[J]</span>。自然杂志，<span class=\"selector-tag\">1981</span>，<span class=\"selector-tag\">12</span>(<span class=\"number\">4</span>)<span class=\"selector-pseudo\">:937-940</span></div><div class=\"line\"><span class=\"selector-attr\">[9]</span> 武际可。称量地球的人——卡文迪许的万有引力实验 <span class=\"selector-attr\">[N]</span>。中国社会科学报，<span class=\"selector-tag\">2014</span><span class=\"selector-class\">.6</span><span class=\"selector-class\">.23</span></div><div class=\"line\"><span class=\"selector-attr\">[10]</span> 颜学勤。第一个“称量地球”的卡文迪许 <span class=\"selector-attr\">[J]</span>。物理教学探讨，<span class=\"selector-tag\">2006</span>，<span class=\"selector-tag\">260</span>(<span class=\"number\">24</span>)<span class=\"selector-pseudo\">:62-62</span></div><div class=\"line\"><span class=\"selector-attr\">[11]</span> 科苑。发现氢气的伟大学者——卡文迪许 <span class=\"selector-attr\">[J]</span>。今日科苑，<span class=\"selector-tag\">2012</span>，(<span class=\"number\">24</span>)<span class=\"selector-pseudo\">:78-81</span></div><div class=\"line\"><span class=\"selector-attr\">[12]</span> 袁翰青。亨利·卡文迪许小传<span class=\"selector-attr\">[J]</span>。化学教育，<span class=\"selector-tag\">1983</span>，<span class=\"selector-tag\">4</span>(<span class=\"number\">3</span>)<span class=\"selector-pseudo\">:60-62</span></div><div class=\"line\"><span class=\"selector-attr\">[13]</span> 容宣。卡文迪许和卡文迪许实验室 <span class=\"selector-attr\">[J]</span>。科技文萃，<span class=\"selector-tag\">1999</span>，<span class=\"selector-tag\">10</span>(<span class=\"number\">10</span>)<span class=\"selector-pseudo\">:1-3</span></div><div class=\"line\"><span class=\"selector-attr\">[14]</span> 何万龄。卡文迪许趣闻<span class=\"selector-attr\">[J]</span>。中学物理教学参考，<span class=\"selector-tag\">1994</span>，<span class=\"selector-tag\">8</span><span class=\"selector-pseudo\">:40-40</span></div><div class=\"line\"><span class=\"selector-attr\">[15]</span> 陈忠，凌北斗。卡文迪许和卡文迪许实验室 <span class=\"selector-attr\">[J]</span>。物理教学，<span class=\"selector-tag\">1985</span>，(<span class=\"number\">5</span>)</div><div class=\"line\"><span class=\"selector-attr\">[16]</span> 佚名。卡文迪许<span class=\"selector-tag\">--</span>最富有的学者,最有学问的富翁 <span class=\"selector-attr\">[J]</span>。家庭与家教，<span class=\"selector-tag\">2002</span>，(<span class=\"number\">4</span>)<span class=\"selector-pseudo\">:7-8</span></div><div class=\"line\"><span class=\"selector-attr\">[17]</span> 冰。科学怪人卡文迪许 <span class=\"selector-attr\">[J]</span>。物理教师，<span class=\"selector-tag\">1982</span>，(<span class=\"number\">3</span>)</div></pre></td></tr></table></figure>"},{"title":"可念不可说","date":"2017-05-04T07:43:40.000Z","toc":true,"_content":"思念会像这雨季，\n悄然的从周围划过，\n时而狂野，时而幽静，\n带来一种道不明的味道。 \n\n有时候会突然想起以前的日子\n<!--more-->\n做任何事都不可以教坏小孩子\n对小孩子好的人都不是坏人\n对小孩子说话要单膝下跪，不然小孩子听不清\n翻墙逃课看到小孩子要把书包丢回墙内\n\n人翻来覆去真的就只有那么几种需求，所以如果不去学习的话这个世界真的很无聊。\n有趣的东西到底藏在哪里，需要你自己去找出来。\n\n想你，想你的声音，想你的字迹，想你的球技，想你的一切一切，想你是我唯一能做且敢做的事，你千万要安好，然后我才能继续当过路人，假装已经忘记，假装不曾见过你，假装没有喜欢你... \n\n有时候不是不明白，而是明白了也不知道该怎么做，于是就保持了沉默。 \n\n我还是喜欢那个与世无争的你。\n\n梦中醒来，空余叹息\n\n这世间，原本是各自下雪，各人有各人的隐晦与皎洁，但一个单纯的举动，就会将雪消融，成为彼此最温暖的河。 《一杯茶垢》 \n\n我还是很喜欢你，像老故事里的泛黄桥段，半聋半哑，失了声息。 \n\n有趣的灵魂万里挑一\n\n鲁迅\n猛兽总是独行，牛羊才成群结队。\n\n中国人的性情是总喜欢调和折中的，譬如你说，这屋子太暗，须在这里开一个窗，大家一定不允许的。但如果你主张拆掉屋顶他们就来调和，愿意开窗了。\n\n贪安稳就没有自由，要自由就要历些危险。只有这两条路。\n\n哀其不幸，怒其不争。\n\n从来如此，便对麽。\n\n当我沉默的时候，我觉得很充实，当我开口说话，就感到了空虚。\n\n面具戴太久，就会长到脸上，再想揭下来，除非伤筋动骨扒皮。\n","source":"_posts/可念不可说.md","raw":"---\ntitle: 可念不可说\ndate: 2017-05-04 15:43:40\ntags:\n- 文学\ntoc: true\n---\n思念会像这雨季，\n悄然的从周围划过，\n时而狂野，时而幽静，\n带来一种道不明的味道。 \n\n有时候会突然想起以前的日子\n<!--more-->\n做任何事都不可以教坏小孩子\n对小孩子好的人都不是坏人\n对小孩子说话要单膝下跪，不然小孩子听不清\n翻墙逃课看到小孩子要把书包丢回墙内\n\n人翻来覆去真的就只有那么几种需求，所以如果不去学习的话这个世界真的很无聊。\n有趣的东西到底藏在哪里，需要你自己去找出来。\n\n想你，想你的声音，想你的字迹，想你的球技，想你的一切一切，想你是我唯一能做且敢做的事，你千万要安好，然后我才能继续当过路人，假装已经忘记，假装不曾见过你，假装没有喜欢你... \n\n有时候不是不明白，而是明白了也不知道该怎么做，于是就保持了沉默。 \n\n我还是喜欢那个与世无争的你。\n\n梦中醒来，空余叹息\n\n这世间，原本是各自下雪，各人有各人的隐晦与皎洁，但一个单纯的举动，就会将雪消融，成为彼此最温暖的河。 《一杯茶垢》 \n\n我还是很喜欢你，像老故事里的泛黄桥段，半聋半哑，失了声息。 \n\n有趣的灵魂万里挑一\n\n鲁迅\n猛兽总是独行，牛羊才成群结队。\n\n中国人的性情是总喜欢调和折中的，譬如你说，这屋子太暗，须在这里开一个窗，大家一定不允许的。但如果你主张拆掉屋顶他们就来调和，愿意开窗了。\n\n贪安稳就没有自由，要自由就要历些危险。只有这两条路。\n\n哀其不幸，怒其不争。\n\n从来如此，便对麽。\n\n当我沉默的时候，我觉得很充实，当我开口说话，就感到了空虚。\n\n面具戴太久，就会长到脸上，再想揭下来，除非伤筋动骨扒皮。\n","slug":"可念不可说","published":1,"updated":"2018-01-20T06:44:37.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m92w005q44waqauojf1o","content":"<p>思念会像这雨季，<br>悄然的从周围划过，<br>时而狂野，时而幽静，<br>带来一种道不明的味道。 </p>\n<p>有时候会突然想起以前的日子<br><a id=\"more\"></a><br>做任何事都不可以教坏小孩子<br>对小孩子好的人都不是坏人<br>对小孩子说话要单膝下跪，不然小孩子听不清<br>翻墙逃课看到小孩子要把书包丢回墙内</p>\n<p>人翻来覆去真的就只有那么几种需求，所以如果不去学习的话这个世界真的很无聊。<br>有趣的东西到底藏在哪里，需要你自己去找出来。</p>\n<p>想你，想你的声音，想你的字迹，想你的球技，想你的一切一切，想你是我唯一能做且敢做的事，你千万要安好，然后我才能继续当过路人，假装已经忘记，假装不曾见过你，假装没有喜欢你… </p>\n<p>有时候不是不明白，而是明白了也不知道该怎么做，于是就保持了沉默。 </p>\n<p>我还是喜欢那个与世无争的你。</p>\n<p>梦中醒来，空余叹息</p>\n<p>这世间，原本是各自下雪，各人有各人的隐晦与皎洁，但一个单纯的举动，就会将雪消融，成为彼此最温暖的河。 《一杯茶垢》 </p>\n<p>我还是很喜欢你，像老故事里的泛黄桥段，半聋半哑，失了声息。 </p>\n<p>有趣的灵魂万里挑一</p>\n<p>鲁迅<br>猛兽总是独行，牛羊才成群结队。</p>\n<p>中国人的性情是总喜欢调和折中的，譬如你说，这屋子太暗，须在这里开一个窗，大家一定不允许的。但如果你主张拆掉屋顶他们就来调和，愿意开窗了。</p>\n<p>贪安稳就没有自由，要自由就要历些危险。只有这两条路。</p>\n<p>哀其不幸，怒其不争。</p>\n<p>从来如此，便对麽。</p>\n<p>当我沉默的时候，我觉得很充实，当我开口说话，就感到了空虚。</p>\n<p>面具戴太久，就会长到脸上，再想揭下来，除非伤筋动骨扒皮。</p>\n","excerpt":"<p>思念会像这雨季，<br>悄然的从周围划过，<br>时而狂野，时而幽静，<br>带来一种道不明的味道。 </p>\n<p>有时候会突然想起以前的日子<br>","more":"<br>做任何事都不可以教坏小孩子<br>对小孩子好的人都不是坏人<br>对小孩子说话要单膝下跪，不然小孩子听不清<br>翻墙逃课看到小孩子要把书包丢回墙内</p>\n<p>人翻来覆去真的就只有那么几种需求，所以如果不去学习的话这个世界真的很无聊。<br>有趣的东西到底藏在哪里，需要你自己去找出来。</p>\n<p>想你，想你的声音，想你的字迹，想你的球技，想你的一切一切，想你是我唯一能做且敢做的事，你千万要安好，然后我才能继续当过路人，假装已经忘记，假装不曾见过你，假装没有喜欢你… </p>\n<p>有时候不是不明白，而是明白了也不知道该怎么做，于是就保持了沉默。 </p>\n<p>我还是喜欢那个与世无争的你。</p>\n<p>梦中醒来，空余叹息</p>\n<p>这世间，原本是各自下雪，各人有各人的隐晦与皎洁，但一个单纯的举动，就会将雪消融，成为彼此最温暖的河。 《一杯茶垢》 </p>\n<p>我还是很喜欢你，像老故事里的泛黄桥段，半聋半哑，失了声息。 </p>\n<p>有趣的灵魂万里挑一</p>\n<p>鲁迅<br>猛兽总是独行，牛羊才成群结队。</p>\n<p>中国人的性情是总喜欢调和折中的，譬如你说，这屋子太暗，须在这里开一个窗，大家一定不允许的。但如果你主张拆掉屋顶他们就来调和，愿意开窗了。</p>\n<p>贪安稳就没有自由，要自由就要历些危险。只有这两条路。</p>\n<p>哀其不幸，怒其不争。</p>\n<p>从来如此，便对麽。</p>\n<p>当我沉默的时候，我觉得很充实，当我开口说话，就感到了空虚。</p>\n<p>面具戴太久，就会长到脸上，再想揭下来，除非伤筋动骨扒皮。</p>"},{"title":"如果什么时候能俯瞰世界的话?","date":"2017-05-26T06:43:56.000Z","toc":true,"_content":"有远大梦想的人都被称为疯子。\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1495793287430&di=0840d091e712f3601dbd87cd76551419&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201509%2F19%2F20150919201116_XM2km.jpeg)\n<!--more-->\n在我很小的时候，也是一个疯子哦。\n\n那个时候的我的梦想就是希望世界和平，全世界只有1个国家。\n\n后来的我发现人真的是千奇百怪，梦想破灭了啊。\n\n渐渐的把人从1个疯子变成1个普通人的过程，就是所谓的社会吗？\n<hr>\n假如哪天能够俯瞰世界的话，我定会默不作声的看完整场。\n然后再次回到这个世界，记录下圈子内所看不到的一切。\n多么多么想回到小时候，察言观色的世界也容得下一个小小的疯子。\n\n假如有契机的话，定会变回疯子。我已不想在做常人，灵魂有趣才是真的有趣吧？\n怪人们？！！！\n<hr>\n假如哪天能够俯瞰世界的话，我定会带上你一同前去观看。\n看看人类最重要的东西究竟是什么，然后再次回到这个世界，一起珍惜这最重要的东西吧。\n如果你也想做回那个小小疯子的话，不妨同我一起。\n把平日不敢说的话，就在这里全部说出来吧。\n\n然后最终哭泣的会是我们，还是那些正常的大人呢？\n怪人们？！！！","source":"_posts/如果什么时候能俯瞰世界的话.md","raw":"---\ntitle: 如果什么时候能俯瞰世界的话?\ndate: 2017-05-26 14:43:56\ntags:\n- 生活\ntoc: true\n---\n有远大梦想的人都被称为疯子。\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1495793287430&di=0840d091e712f3601dbd87cd76551419&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201509%2F19%2F20150919201116_XM2km.jpeg)\n<!--more-->\n在我很小的时候，也是一个疯子哦。\n\n那个时候的我的梦想就是希望世界和平，全世界只有1个国家。\n\n后来的我发现人真的是千奇百怪，梦想破灭了啊。\n\n渐渐的把人从1个疯子变成1个普通人的过程，就是所谓的社会吗？\n<hr>\n假如哪天能够俯瞰世界的话，我定会默不作声的看完整场。\n然后再次回到这个世界，记录下圈子内所看不到的一切。\n多么多么想回到小时候，察言观色的世界也容得下一个小小的疯子。\n\n假如有契机的话，定会变回疯子。我已不想在做常人，灵魂有趣才是真的有趣吧？\n怪人们？！！！\n<hr>\n假如哪天能够俯瞰世界的话，我定会带上你一同前去观看。\n看看人类最重要的东西究竟是什么，然后再次回到这个世界，一起珍惜这最重要的东西吧。\n如果你也想做回那个小小疯子的话，不妨同我一起。\n把平日不敢说的话，就在这里全部说出来吧。\n\n然后最终哭泣的会是我们，还是那些正常的大人呢？\n怪人们？！！！","slug":"如果什么时候能俯瞰世界的话","published":1,"updated":"2018-01-20T06:44:37.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m932005t44wal8wzd7ei","content":"<p>有远大梦想的人都被称为疯子。<br><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1495793287430&amp;di=0840d091e712f3601dbd87cd76551419&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201509%2F19%2F20150919201116_XM2km.jpeg\" alt=\"\"><br><a id=\"more\"></a><br>在我很小的时候，也是一个疯子哦。</p>\n<p>那个时候的我的梦想就是希望世界和平，全世界只有1个国家。</p>\n<p>后来的我发现人真的是千奇百怪，梦想破灭了啊。</p>\n<p>渐渐的把人从1个疯子变成1个普通人的过程，就是所谓的社会吗？</p>\n<p><hr><br>假如哪天能够俯瞰世界的话，我定会默不作声的看完整场。<br>然后再次回到这个世界，记录下圈子内所看不到的一切。<br>多么多么想回到小时候，察言观色的世界也容得下一个小小的疯子。</p>\n<p>假如有契机的话，定会变回疯子。我已不想在做常人，灵魂有趣才是真的有趣吧？<br>怪人们？！！！</p>\n<p><hr><br>假如哪天能够俯瞰世界的话，我定会带上你一同前去观看。<br>看看人类最重要的东西究竟是什么，然后再次回到这个世界，一起珍惜这最重要的东西吧。<br>如果你也想做回那个小小疯子的话，不妨同我一起。<br>把平日不敢说的话，就在这里全部说出来吧。</p>\n<p>然后最终哭泣的会是我们，还是那些正常的大人呢？<br>怪人们？！！！</p>\n","excerpt":"<p>有远大梦想的人都被称为疯子。<br><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1495793287430&amp;di=0840d091e712f3601dbd87cd76551419&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201509%2F19%2F20150919201116_XM2km.jpeg\" alt=\"\"><br>","more":"<br>在我很小的时候，也是一个疯子哦。</p>\n<p>那个时候的我的梦想就是希望世界和平，全世界只有1个国家。</p>\n<p>后来的我发现人真的是千奇百怪，梦想破灭了啊。</p>\n<p>渐渐的把人从1个疯子变成1个普通人的过程，就是所谓的社会吗？</p>\n<p><hr><br>假如哪天能够俯瞰世界的话，我定会默不作声的看完整场。<br>然后再次回到这个世界，记录下圈子内所看不到的一切。<br>多么多么想回到小时候，察言观色的世界也容得下一个小小的疯子。</p>\n<p>假如有契机的话，定会变回疯子。我已不想在做常人，灵魂有趣才是真的有趣吧？<br>怪人们？！！！</p>\n<p><hr><br>假如哪天能够俯瞰世界的话，我定会带上你一同前去观看。<br>看看人类最重要的东西究竟是什么，然后再次回到这个世界，一起珍惜这最重要的东西吧。<br>如果你也想做回那个小小疯子的话，不妨同我一起。<br>把平日不敢说的话，就在这里全部说出来吧。</p>\n<p>然后最终哭泣的会是我们，还是那些正常的大人呢？<br>怪人们？！！！</p>"},{"title":"回乡偶书 6.19-6.25","toc":true,"date":"2017-06-26T01:44:57.000Z","_content":"![](http://hpimg.pianke.me/e4c33a453880d7fbaac558de73d64c2620170621.png?imageView2/2/w/640/format/jpg)\n说起这次回乡，也是有点故事的。\n周1的下午2点，我正在休息的时候突然看到老师发来的放假的消息。\n于是马上买了当天7.30的火车票，有种说走就走的旅行的感觉。\n关于回家还是瞒着“大表哥”的，我现在还记得当时我突然出现在他面前的时候他的表情。\n<!--more-->\n# 一\n但是归途并不那么顺利。\n硬座里的人们都是一些中年人。\n大家似乎并不在乎他人的感受，\n有半夜大声说话的，\n有随便脱鞋的，\n甚至还有喝白酒的。\n和我差不多的几个年轻人也很快在南充站下车了,\n恶心到想吐的我累着累着就睡着了，\n不知过了多久睡了又醒，醒了又睡的状态终于结束了。\n清醒过后发现快要到站了，也就继续把耳机的歌调到最大。\n# 二\n归时恰逢夏至，家里热的像个大烤炉。\n大家各有各的忙碌，却因为我的回来而放下工作。\n家里的生活让我舒服的不那么真实。\n有时候在想，自己这么享受真的好吗？\n家里的琐事还是很多，但是我也司空见惯了。\n姐姐家的孩子也不断的长大。\n朋友们的也快生孩子当父亲了。\n时间之海，永在流逝，不知哪天就把我们淹没了。\n# 三\n摇啊摇，很快便到了回去的时候。\n匆匆跟大家吃了一个饭就上了回来的火车。\n# 四\n回来的路上总感觉丢了些什么东西，却也无力总结出那到底是什么东西。\n为什么这里的东西都这么无情，我丢掉的，瞬间便被时间之海带到我的身后。\n而我只能一边失去，一边前行。\n泪水滴进海里，却竟也发不出半声声响，\n也许这就是人们为什么长大后就很少流泪的原因吧。\n\n再被海水淹没之前，是否能够再次遇到你呢？","source":"_posts/回乡偶书-6-19-6-25.md","raw":"---\ntitle: 回乡偶书 6.19-6.25\ntoc: true\ndate: 2017-06-26 09:44:57\ntags:\n- 生活\n---\n![](http://hpimg.pianke.me/e4c33a453880d7fbaac558de73d64c2620170621.png?imageView2/2/w/640/format/jpg)\n说起这次回乡，也是有点故事的。\n周1的下午2点，我正在休息的时候突然看到老师发来的放假的消息。\n于是马上买了当天7.30的火车票，有种说走就走的旅行的感觉。\n关于回家还是瞒着“大表哥”的，我现在还记得当时我突然出现在他面前的时候他的表情。\n<!--more-->\n# 一\n但是归途并不那么顺利。\n硬座里的人们都是一些中年人。\n大家似乎并不在乎他人的感受，\n有半夜大声说话的，\n有随便脱鞋的，\n甚至还有喝白酒的。\n和我差不多的几个年轻人也很快在南充站下车了,\n恶心到想吐的我累着累着就睡着了，\n不知过了多久睡了又醒，醒了又睡的状态终于结束了。\n清醒过后发现快要到站了，也就继续把耳机的歌调到最大。\n# 二\n归时恰逢夏至，家里热的像个大烤炉。\n大家各有各的忙碌，却因为我的回来而放下工作。\n家里的生活让我舒服的不那么真实。\n有时候在想，自己这么享受真的好吗？\n家里的琐事还是很多，但是我也司空见惯了。\n姐姐家的孩子也不断的长大。\n朋友们的也快生孩子当父亲了。\n时间之海，永在流逝，不知哪天就把我们淹没了。\n# 三\n摇啊摇，很快便到了回去的时候。\n匆匆跟大家吃了一个饭就上了回来的火车。\n# 四\n回来的路上总感觉丢了些什么东西，却也无力总结出那到底是什么东西。\n为什么这里的东西都这么无情，我丢掉的，瞬间便被时间之海带到我的身后。\n而我只能一边失去，一边前行。\n泪水滴进海里，却竟也发不出半声声响，\n也许这就是人们为什么长大后就很少流泪的原因吧。\n\n再被海水淹没之前，是否能够再次遇到你呢？","slug":"回乡偶书-6-19-6-25","published":1,"updated":"2018-01-20T06:44:37.662Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m935005v44wasqkc6rtl","content":"<p><img src=\"http://hpimg.pianke.me/e4c33a453880d7fbaac558de73d64c2620170621.png?imageView2/2/w/640/format/jpg\" alt=\"\"><br>说起这次回乡，也是有点故事的。<br>周1的下午2点，我正在休息的时候突然看到老师发来的放假的消息。<br>于是马上买了当天7.30的火车票，有种说走就走的旅行的感觉。<br>关于回家还是瞒着“大表哥”的，我现在还记得当时我突然出现在他面前的时候他的表情。<br><a id=\"more\"></a></p>\n<h1 id=\"一\"><a href=\"#一\" class=\"headerlink\" title=\"一\"></a>一</h1><p>但是归途并不那么顺利。<br>硬座里的人们都是一些中年人。<br>大家似乎并不在乎他人的感受，<br>有半夜大声说话的，<br>有随便脱鞋的，<br>甚至还有喝白酒的。<br>和我差不多的几个年轻人也很快在南充站下车了,<br>恶心到想吐的我累着累着就睡着了，<br>不知过了多久睡了又醒，醒了又睡的状态终于结束了。<br>清醒过后发现快要到站了，也就继续把耳机的歌调到最大。</p>\n<h1 id=\"二\"><a href=\"#二\" class=\"headerlink\" title=\"二\"></a>二</h1><p>归时恰逢夏至，家里热的像个大烤炉。<br>大家各有各的忙碌，却因为我的回来而放下工作。<br>家里的生活让我舒服的不那么真实。<br>有时候在想，自己这么享受真的好吗？<br>家里的琐事还是很多，但是我也司空见惯了。<br>姐姐家的孩子也不断的长大。<br>朋友们的也快生孩子当父亲了。<br>时间之海，永在流逝，不知哪天就把我们淹没了。</p>\n<h1 id=\"三\"><a href=\"#三\" class=\"headerlink\" title=\"三\"></a>三</h1><p>摇啊摇，很快便到了回去的时候。<br>匆匆跟大家吃了一个饭就上了回来的火车。</p>\n<h1 id=\"四\"><a href=\"#四\" class=\"headerlink\" title=\"四\"></a>四</h1><p>回来的路上总感觉丢了些什么东西，却也无力总结出那到底是什么东西。<br>为什么这里的东西都这么无情，我丢掉的，瞬间便被时间之海带到我的身后。<br>而我只能一边失去，一边前行。<br>泪水滴进海里，却竟也发不出半声声响，<br>也许这就是人们为什么长大后就很少流泪的原因吧。</p>\n<p>再被海水淹没之前，是否能够再次遇到你呢？</p>\n","excerpt":"<p><img src=\"http://hpimg.pianke.me/e4c33a453880d7fbaac558de73d64c2620170621.png?imageView2/2/w/640/format/jpg\" alt=\"\"><br>说起这次回乡，也是有点故事的。<br>周1的下午2点，我正在休息的时候突然看到老师发来的放假的消息。<br>于是马上买了当天7.30的火车票，有种说走就走的旅行的感觉。<br>关于回家还是瞒着“大表哥”的，我现在还记得当时我突然出现在他面前的时候他的表情。<br>","more":"</p>\n<h1 id=\"一\"><a href=\"#一\" class=\"headerlink\" title=\"一\"></a>一</h1><p>但是归途并不那么顺利。<br>硬座里的人们都是一些中年人。<br>大家似乎并不在乎他人的感受，<br>有半夜大声说话的，<br>有随便脱鞋的，<br>甚至还有喝白酒的。<br>和我差不多的几个年轻人也很快在南充站下车了,<br>恶心到想吐的我累着累着就睡着了，<br>不知过了多久睡了又醒，醒了又睡的状态终于结束了。<br>清醒过后发现快要到站了，也就继续把耳机的歌调到最大。</p>\n<h1 id=\"二\"><a href=\"#二\" class=\"headerlink\" title=\"二\"></a>二</h1><p>归时恰逢夏至，家里热的像个大烤炉。<br>大家各有各的忙碌，却因为我的回来而放下工作。<br>家里的生活让我舒服的不那么真实。<br>有时候在想，自己这么享受真的好吗？<br>家里的琐事还是很多，但是我也司空见惯了。<br>姐姐家的孩子也不断的长大。<br>朋友们的也快生孩子当父亲了。<br>时间之海，永在流逝，不知哪天就把我们淹没了。</p>\n<h1 id=\"三\"><a href=\"#三\" class=\"headerlink\" title=\"三\"></a>三</h1><p>摇啊摇，很快便到了回去的时候。<br>匆匆跟大家吃了一个饭就上了回来的火车。</p>\n<h1 id=\"四\"><a href=\"#四\" class=\"headerlink\" title=\"四\"></a>四</h1><p>回来的路上总感觉丢了些什么东西，却也无力总结出那到底是什么东西。<br>为什么这里的东西都这么无情，我丢掉的，瞬间便被时间之海带到我的身后。<br>而我只能一边失去，一边前行。<br>泪水滴进海里，却竟也发不出半声声响，<br>也许这就是人们为什么长大后就很少流泪的原因吧。</p>\n<p>再被海水淹没之前，是否能够再次遇到你呢？</p>"},{"title":"夜雪","date":"2016-11-29T12:35:12.000Z","toc":true,"_content":"\n\n已讶衾枕冷，复见窗户明。\n夜深知雪重，时闻折竹声。\n\n<!--more-->\n出自白居易之笔\n非常有意境的一首诗\n\n\n白居易（772年－846年），字乐天，号香山居士，又号醉吟先生，祖籍太原，到其曾祖父时迁居下邽，生于河南新郑。\n是唐代伟大的现实主义诗人，唐代三大诗人之一。白居易与元稹共同倡导新乐府运动，世称“元白”，与刘禹锡并称“刘白”。\n白居易的诗歌题材广泛，形式多样，语言平易通俗，有“诗魔”和“诗王”之称。官至翰林学士、左赞善大夫。\n公元846年，白居易在洛阳逝世，葬于香山。有《白氏长庆集》传世，代表诗作有《长恨歌》、《卖炭翁》、《琵琶行》等。\n","source":"_posts/夜雪.md","raw":"---\ntitle: 夜雪\ndate: 2016-11-29 20:35:12\ntags:\n- essay\n- 文学\ntoc: true\n---\n\n\n已讶衾枕冷，复见窗户明。\n夜深知雪重，时闻折竹声。\n\n<!--more-->\n出自白居易之笔\n非常有意境的一首诗\n\n\n白居易（772年－846年），字乐天，号香山居士，又号醉吟先生，祖籍太原，到其曾祖父时迁居下邽，生于河南新郑。\n是唐代伟大的现实主义诗人，唐代三大诗人之一。白居易与元稹共同倡导新乐府运动，世称“元白”，与刘禹锡并称“刘白”。\n白居易的诗歌题材广泛，形式多样，语言平易通俗，有“诗魔”和“诗王”之称。官至翰林学士、左赞善大夫。\n公元846年，白居易在洛阳逝世，葬于香山。有《白氏长庆集》传世，代表诗作有《长恨歌》、《卖炭翁》、《琵琶行》等。\n","slug":"夜雪","published":1,"updated":"2018-01-20T06:44:37.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m939005x44wa9qy68y7v","content":"<p>已讶衾枕冷，复见窗户明。<br>夜深知雪重，时闻折竹声。</p>\n<a id=\"more\"></a>\n<p>出自白居易之笔<br>非常有意境的一首诗</p>\n<p>白居易（772年－846年），字乐天，号香山居士，又号醉吟先生，祖籍太原，到其曾祖父时迁居下邽，生于河南新郑。<br>是唐代伟大的现实主义诗人，唐代三大诗人之一。白居易与元稹共同倡导新乐府运动，世称“元白”，与刘禹锡并称“刘白”。<br>白居易的诗歌题材广泛，形式多样，语言平易通俗，有“诗魔”和“诗王”之称。官至翰林学士、左赞善大夫。<br>公元846年，白居易在洛阳逝世，葬于香山。有《白氏长庆集》传世，代表诗作有《长恨歌》、《卖炭翁》、《琵琶行》等。</p>\n","excerpt":"<p>已讶衾枕冷，复见窗户明。<br>夜深知雪重，时闻折竹声。</p>","more":"<p>出自白居易之笔<br>非常有意境的一首诗</p>\n<p>白居易（772年－846年），字乐天，号香山居士，又号醉吟先生，祖籍太原，到其曾祖父时迁居下邽，生于河南新郑。<br>是唐代伟大的现实主义诗人，唐代三大诗人之一。白居易与元稹共同倡导新乐府运动，世称“元白”，与刘禹锡并称“刘白”。<br>白居易的诗歌题材广泛，形式多样，语言平易通俗，有“诗魔”和“诗王”之称。官至翰林学士、左赞善大夫。<br>公元846年，白居易在洛阳逝世，葬于香山。有《白氏长庆集》传世，代表诗作有《长恨歌》、《卖炭翁》、《琵琶行》等。</p>"},{"title":"少年与刀","date":"2017-04-11T05:55:32.000Z","toc":true,"_content":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=110 src=\"//music.163.com/outchain/player?type=1&id=35353599&auto=0&height=90\"></iframe>\n风起时 去回溯 故事最初\n![](https://steamuserimages-a.akamaihd.net/ugc/185045549113991760/497B00536E45D25491C679C4431CA19358C76FF4/)\n<!--more-->\n铭记一眼是初见少年\n\n转身在樱花绽放瞬间\n\n手中刀剑握紧更坚决\n\n只为出阵相遇那天\n\n曾一路远征并肩\n\n刀法完美呈现\n\n习以为常的画面\n\n你轻笑抬脸\n\n风起时 去回溯 故事最初\n\n平安世 我守护 从未辜负\n\n梦和光 尘与土 刀剑乱舞\n\n用一生 来追逐 不认输\n\n天真无邪斗万语千言\n\n也习惯把争吵当陪伴\n\n四季轮转雪落满庭院\n\n刀光剑影一如从前\n\n锻炼多久才成全\n\n最锋利的刀尖\n\n勇敢铸就我信念\n\n比永远还远\n\n风起时 去回溯 故事最初\n\n平安世 我守护 从未辜负\n\n梦和光 尘与土 刀剑乱舞\n\n用一生 来追逐 不认输\n\n风起时 去回溯 故事最初\n\n平安世 我守护 从未辜负\n\n梦和光 尘与土 刀剑乱舞\n\n用一生 来追逐\n\n用一生 来追逐\n\n用一生 来追逐\n\n不认输","source":"_posts/少年与刀.md","raw":"---\ntitle: 少年与刀\ndate: 2017-04-11 13:55:32\ntags:\n- essay\n- 文学\ntoc: true\n---\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=110 src=\"//music.163.com/outchain/player?type=1&id=35353599&auto=0&height=90\"></iframe>\n风起时 去回溯 故事最初\n![](https://steamuserimages-a.akamaihd.net/ugc/185045549113991760/497B00536E45D25491C679C4431CA19358C76FF4/)\n<!--more-->\n铭记一眼是初见少年\n\n转身在樱花绽放瞬间\n\n手中刀剑握紧更坚决\n\n只为出阵相遇那天\n\n曾一路远征并肩\n\n刀法完美呈现\n\n习以为常的画面\n\n你轻笑抬脸\n\n风起时 去回溯 故事最初\n\n平安世 我守护 从未辜负\n\n梦和光 尘与土 刀剑乱舞\n\n用一生 来追逐 不认输\n\n天真无邪斗万语千言\n\n也习惯把争吵当陪伴\n\n四季轮转雪落满庭院\n\n刀光剑影一如从前\n\n锻炼多久才成全\n\n最锋利的刀尖\n\n勇敢铸就我信念\n\n比永远还远\n\n风起时 去回溯 故事最初\n\n平安世 我守护 从未辜负\n\n梦和光 尘与土 刀剑乱舞\n\n用一生 来追逐 不认输\n\n风起时 去回溯 故事最初\n\n平安世 我守护 从未辜负\n\n梦和光 尘与土 刀剑乱舞\n\n用一生 来追逐\n\n用一生 来追逐\n\n用一生 来追逐\n\n不认输","slug":"少年与刀","published":1,"updated":"2018-01-20T06:44:37.672Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m93c005z44waf8yza5fp","content":"<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"110\" src=\"//music.163.com/outchain/player?type=1&id=35353599&auto=0&height=90\"></iframe><br>风起时 去回溯 故事最初<br><img src=\"https://steamuserimages-a.akamaihd.net/ugc/185045549113991760/497B00536E45D25491C679C4431CA19358C76FF4/\" alt=\"\"><br><a id=\"more\"></a><br>铭记一眼是初见少年</p>\n<p>转身在樱花绽放瞬间</p>\n<p>手中刀剑握紧更坚决</p>\n<p>只为出阵相遇那天</p>\n<p>曾一路远征并肩</p>\n<p>刀法完美呈现</p>\n<p>习以为常的画面</p>\n<p>你轻笑抬脸</p>\n<p>风起时 去回溯 故事最初</p>\n<p>平安世 我守护 从未辜负</p>\n<p>梦和光 尘与土 刀剑乱舞</p>\n<p>用一生 来追逐 不认输</p>\n<p>天真无邪斗万语千言</p>\n<p>也习惯把争吵当陪伴</p>\n<p>四季轮转雪落满庭院</p>\n<p>刀光剑影一如从前</p>\n<p>锻炼多久才成全</p>\n<p>最锋利的刀尖</p>\n<p>勇敢铸就我信念</p>\n<p>比永远还远</p>\n<p>风起时 去回溯 故事最初</p>\n<p>平安世 我守护 从未辜负</p>\n<p>梦和光 尘与土 刀剑乱舞</p>\n<p>用一生 来追逐 不认输</p>\n<p>风起时 去回溯 故事最初</p>\n<p>平安世 我守护 从未辜负</p>\n<p>梦和光 尘与土 刀剑乱舞</p>\n<p>用一生 来追逐</p>\n<p>用一生 来追逐</p>\n<p>用一生 来追逐</p>\n<p>不认输</p>\n","excerpt":"<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=110 src=\"//music.163.com/outchain/player?type=1&id=35353599&auto=0&height=90\"></iframe><br>风起时 去回溯 故事最初<br><img src=\"https://steamuserimages-a.akamaihd.net/ugc/185045549113991760/497B00536E45D25491C679C4431CA19358C76FF4/\" alt=\"\"><br>","more":"<br>铭记一眼是初见少年</p>\n<p>转身在樱花绽放瞬间</p>\n<p>手中刀剑握紧更坚决</p>\n<p>只为出阵相遇那天</p>\n<p>曾一路远征并肩</p>\n<p>刀法完美呈现</p>\n<p>习以为常的画面</p>\n<p>你轻笑抬脸</p>\n<p>风起时 去回溯 故事最初</p>\n<p>平安世 我守护 从未辜负</p>\n<p>梦和光 尘与土 刀剑乱舞</p>\n<p>用一生 来追逐 不认输</p>\n<p>天真无邪斗万语千言</p>\n<p>也习惯把争吵当陪伴</p>\n<p>四季轮转雪落满庭院</p>\n<p>刀光剑影一如从前</p>\n<p>锻炼多久才成全</p>\n<p>最锋利的刀尖</p>\n<p>勇敢铸就我信念</p>\n<p>比永远还远</p>\n<p>风起时 去回溯 故事最初</p>\n<p>平安世 我守护 从未辜负</p>\n<p>梦和光 尘与土 刀剑乱舞</p>\n<p>用一生 来追逐 不认输</p>\n<p>风起时 去回溯 故事最初</p>\n<p>平安世 我守护 从未辜负</p>\n<p>梦和光 尘与土 刀剑乱舞</p>\n<p>用一生 来追逐</p>\n<p>用一生 来追逐</p>\n<p>用一生 来追逐</p>\n<p>不认输</p>"},{"title":"感悟5.19","date":"2017-05-19T08:00:05.000Z","toc":true,"_content":"想起大学入学已经是2年前。\n5年前的那个时候我也跟2年前一样。\n\n来到新的环境，独自一人。小心翼翼，不动声息，待在自己的地方回忆着以前的事情。\n<!--more-->\n# 5年前\n那个时候心智不成熟的自己，仅仅因为哥哥的一句话就去了他在的学校。\n\n学校真的很严，三年，3个365天，我每天在想的都是\n如何睡觉不被老师发现，少写哪门功课老师才不会找麻烦。\n\n高一入学的那段时间，我过着相当自闭的生活。\n没有人会在意一个不想说话的男孩子的想法，2个月过去了，我甚至连自己的同桌叫什么都不知道。\n英语老师骂着，回去亲自问问你同桌叫什么在来找我！\n任性的我回去之后就再也没有去找老师。\n是的，直到文理分班我都不知道同桌的名字。只是在想，大概是个文科生吧。\n\n高二的成绩一路上升，因为不在考文科了。\n学校玩不到游戏，于是就发现了新的兴趣，青春文学。\n说的有点好听了，其实就是言情小说。\n深夜2,3点，在被子里打着手电筒，边看边流泪，努力想象着为什么生活这么痛苦，他们还是坚强的活着。\n独抱浓愁无好梦啊。\n\n高三的我很平淡的混了下来。\n\n偶尔空闲还是会想那个从很小就开始思考的问题---\n我为什么活着？\n\n这也是很多人，都在思考的问题。\n但是我想说的是，也许我们不该是提问者，而是答题者。\n需要耗尽自己的一生来得到答案。\n也许答案最后会很无趣，但有趣的不正是寻找这个答案的过程吗？\n\n如果你问我，希望再次回到那个教室，和同学老师一起再上一遍高中吗？\n我的回答是，qnmd，老子绝对不会在回去了！\n# 2年前\n心智成熟的自己有了自己的想法，描绘着自己未来的生活。\n一个人真的很孤独，我非常同意这个大家选择结婚的理由。\n<hr>\n不想结婚的我，希望未来的自己能够养只可爱的猫，要黑色的，聪明。\n\n全世界只剩下一个人真的还有意义吗？\n\n前天的自己被实习的工作压的喘不过气，晚上回去坐在沙发感觉\n也许人生需要一个沙发就满足了。\n耳边传来TK撕裂的嗓音，\n心里想着，\n\n明天，\n可以重新开始。","source":"_posts/感悟5-19.md","raw":"---\ntitle: 感悟5.19\ndate: 2017-05-19 16:00:05\ntags:\n- 生活\ntoc: true\n---\n想起大学入学已经是2年前。\n5年前的那个时候我也跟2年前一样。\n\n来到新的环境，独自一人。小心翼翼，不动声息，待在自己的地方回忆着以前的事情。\n<!--more-->\n# 5年前\n那个时候心智不成熟的自己，仅仅因为哥哥的一句话就去了他在的学校。\n\n学校真的很严，三年，3个365天，我每天在想的都是\n如何睡觉不被老师发现，少写哪门功课老师才不会找麻烦。\n\n高一入学的那段时间，我过着相当自闭的生活。\n没有人会在意一个不想说话的男孩子的想法，2个月过去了，我甚至连自己的同桌叫什么都不知道。\n英语老师骂着，回去亲自问问你同桌叫什么在来找我！\n任性的我回去之后就再也没有去找老师。\n是的，直到文理分班我都不知道同桌的名字。只是在想，大概是个文科生吧。\n\n高二的成绩一路上升，因为不在考文科了。\n学校玩不到游戏，于是就发现了新的兴趣，青春文学。\n说的有点好听了，其实就是言情小说。\n深夜2,3点，在被子里打着手电筒，边看边流泪，努力想象着为什么生活这么痛苦，他们还是坚强的活着。\n独抱浓愁无好梦啊。\n\n高三的我很平淡的混了下来。\n\n偶尔空闲还是会想那个从很小就开始思考的问题---\n我为什么活着？\n\n这也是很多人，都在思考的问题。\n但是我想说的是，也许我们不该是提问者，而是答题者。\n需要耗尽自己的一生来得到答案。\n也许答案最后会很无趣，但有趣的不正是寻找这个答案的过程吗？\n\n如果你问我，希望再次回到那个教室，和同学老师一起再上一遍高中吗？\n我的回答是，qnmd，老子绝对不会在回去了！\n# 2年前\n心智成熟的自己有了自己的想法，描绘着自己未来的生活。\n一个人真的很孤独，我非常同意这个大家选择结婚的理由。\n<hr>\n不想结婚的我，希望未来的自己能够养只可爱的猫，要黑色的，聪明。\n\n全世界只剩下一个人真的还有意义吗？\n\n前天的自己被实习的工作压的喘不过气，晚上回去坐在沙发感觉\n也许人生需要一个沙发就满足了。\n耳边传来TK撕裂的嗓音，\n心里想着，\n\n明天，\n可以重新开始。","slug":"感悟5-19","published":1,"updated":"2018-01-20T06:44:37.673Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m93f006144wa5o5or2eg","content":"<p>想起大学入学已经是2年前。<br>5年前的那个时候我也跟2年前一样。</p>\n<p>来到新的环境，独自一人。小心翼翼，不动声息，待在自己的地方回忆着以前的事情。<br><a id=\"more\"></a></p>\n<h1 id=\"5年前\"><a href=\"#5年前\" class=\"headerlink\" title=\"5年前\"></a>5年前</h1><p>那个时候心智不成熟的自己，仅仅因为哥哥的一句话就去了他在的学校。</p>\n<p>学校真的很严，三年，3个365天，我每天在想的都是<br>如何睡觉不被老师发现，少写哪门功课老师才不会找麻烦。</p>\n<p>高一入学的那段时间，我过着相当自闭的生活。<br>没有人会在意一个不想说话的男孩子的想法，2个月过去了，我甚至连自己的同桌叫什么都不知道。<br>英语老师骂着，回去亲自问问你同桌叫什么在来找我！<br>任性的我回去之后就再也没有去找老师。<br>是的，直到文理分班我都不知道同桌的名字。只是在想，大概是个文科生吧。</p>\n<p>高二的成绩一路上升，因为不在考文科了。<br>学校玩不到游戏，于是就发现了新的兴趣，青春文学。<br>说的有点好听了，其实就是言情小说。<br>深夜2,3点，在被子里打着手电筒，边看边流泪，努力想象着为什么生活这么痛苦，他们还是坚强的活着。<br>独抱浓愁无好梦啊。</p>\n<p>高三的我很平淡的混了下来。</p>\n<p>偶尔空闲还是会想那个从很小就开始思考的问题—<br>我为什么活着？</p>\n<p>这也是很多人，都在思考的问题。<br>但是我想说的是，也许我们不该是提问者，而是答题者。<br>需要耗尽自己的一生来得到答案。<br>也许答案最后会很无趣，但有趣的不正是寻找这个答案的过程吗？</p>\n<p>如果你问我，希望再次回到那个教室，和同学老师一起再上一遍高中吗？<br>我的回答是，qnmd，老子绝对不会在回去了！</p>\n<h1 id=\"2年前\"><a href=\"#2年前\" class=\"headerlink\" title=\"2年前\"></a>2年前</h1><p>心智成熟的自己有了自己的想法，描绘着自己未来的生活。<br>一个人真的很孤独，我非常同意这个大家选择结婚的理由。</p>\n<p><hr><br>不想结婚的我，希望未来的自己能够养只可爱的猫，要黑色的，聪明。</p>\n<p>全世界只剩下一个人真的还有意义吗？</p>\n<p>前天的自己被实习的工作压的喘不过气，晚上回去坐在沙发感觉<br>也许人生需要一个沙发就满足了。<br>耳边传来TK撕裂的嗓音，<br>心里想着，</p>\n<p>明天，<br>可以重新开始。</p>\n","excerpt":"<p>想起大学入学已经是2年前。<br>5年前的那个时候我也跟2年前一样。</p>\n<p>来到新的环境，独自一人。小心翼翼，不动声息，待在自己的地方回忆着以前的事情。<br>","more":"</p>\n<h1 id=\"5年前\"><a href=\"#5年前\" class=\"headerlink\" title=\"5年前\"></a>5年前</h1><p>那个时候心智不成熟的自己，仅仅因为哥哥的一句话就去了他在的学校。</p>\n<p>学校真的很严，三年，3个365天，我每天在想的都是<br>如何睡觉不被老师发现，少写哪门功课老师才不会找麻烦。</p>\n<p>高一入学的那段时间，我过着相当自闭的生活。<br>没有人会在意一个不想说话的男孩子的想法，2个月过去了，我甚至连自己的同桌叫什么都不知道。<br>英语老师骂着，回去亲自问问你同桌叫什么在来找我！<br>任性的我回去之后就再也没有去找老师。<br>是的，直到文理分班我都不知道同桌的名字。只是在想，大概是个文科生吧。</p>\n<p>高二的成绩一路上升，因为不在考文科了。<br>学校玩不到游戏，于是就发现了新的兴趣，青春文学。<br>说的有点好听了，其实就是言情小说。<br>深夜2,3点，在被子里打着手电筒，边看边流泪，努力想象着为什么生活这么痛苦，他们还是坚强的活着。<br>独抱浓愁无好梦啊。</p>\n<p>高三的我很平淡的混了下来。</p>\n<p>偶尔空闲还是会想那个从很小就开始思考的问题—<br>我为什么活着？</p>\n<p>这也是很多人，都在思考的问题。<br>但是我想说的是，也许我们不该是提问者，而是答题者。<br>需要耗尽自己的一生来得到答案。<br>也许答案最后会很无趣，但有趣的不正是寻找这个答案的过程吗？</p>\n<p>如果你问我，希望再次回到那个教室，和同学老师一起再上一遍高中吗？<br>我的回答是，qnmd，老子绝对不会在回去了！</p>\n<h1 id=\"2年前\"><a href=\"#2年前\" class=\"headerlink\" title=\"2年前\"></a>2年前</h1><p>心智成熟的自己有了自己的想法，描绘着自己未来的生活。<br>一个人真的很孤独，我非常同意这个大家选择结婚的理由。</p>\n<p><hr><br>不想结婚的我，希望未来的自己能够养只可爱的猫，要黑色的，聪明。</p>\n<p>全世界只剩下一个人真的还有意义吗？</p>\n<p>前天的自己被实习的工作压的喘不过气，晚上回去坐在沙发感觉<br>也许人生需要一个沙发就满足了。<br>耳边传来TK撕裂的嗓音，<br>心里想着，</p>\n<p>明天，<br>可以重新开始。</p>"},{"title":"排序算法","toc":true,"date":"2017-10-09T14:44:45.000Z","_content":"一些算法的Java实现\n<!--more-->\n# 直接插入排序算法\n算法描述：对于给定的一个数组，初始时假设第一个记录自成一个有序序列，其余记录为无序序列。接着从第二个记录开始，按照记录的大小依次将当前处理的记录插入到其之前的有序序列中，直至最后一个记录插入到有序序列中为止。\n```\npublic class StraightInsertionSort {\n\n\tpublic static void main(String[] args) {\n\t\tint a[] = {3,1,5,7,2,4,9,6};\n\t\tInsertSort(a);\n\t}\n\t//直接插入排序算法\n\tpublic static void InsertSort(int a[]){\n\t\tfor(int i= 1; i<a.length; i++){  \n\t\t\t if(a[i] < a[i-1]){\t//如果a[i]与前面的数组有序就直接跳出      \n\t\t\t\t \tint j;\n\t\t\t\t \tint x = a[i];        //将x复制为哨兵，即存储待排序元素 \n\t\t            for(j = i-1; j >= 0 && x < a[j]; j--){  //查找在有序表的插入位置  \n\t\t                a[j+1] = a[j];\n\t\t            }\n\t\t            a[j+1] = x;      //插入到正确位置  \n\t\t            System.out.print(Arrays.toString(a));\t//打印每次移动后的数组 \n\t\t\t\t \tSystem.out.println();\n\t\t        }\n\t\t}\n\t}\n}\n```\n# 二分插入排序算法\n算法的基本过程：\n（1）计算 0 ~ i-1 的中间点，用 i 索引处的元素与中间值进行比较，如果 i 索引处的元素大，说明要插入的这个元素应该在中间值和刚加入i索引之间，反之，就是在刚开始的位置 到中间值的位置，这样很简单的完成了折半；\n（2）在相应的半个范围里面找插入的位置时，不断的用（1）步骤缩小范围，不停的折半，范围依次缩小为 1/2 1/4 1/8 .......快速的确定出第 i 个元素要插在什么地方；\n（3）确定位置之后，将整个序列后移，并将元素插入到相应位置。\n```\npublic class BinaryInsertSort {\n\t\n\tpublic static void main(String[] args) {\n\t\tint a[] = {3,1,5,7,2,4,9,6};\n\t\tInsertSort(a);\n\t}\n\t//二分插入排序算法\n\tprivate static void InsertSort(int[] a) {\n\t\tfor(int i = 1; i < a.length; i++){  \n\t\t\tif(a[i] < a[i-1]){\t//如果a[i]与前面的数组有序就直接跳出      \n\t\t\t\tint x = a[i];   //将x复制为哨兵，即存储待排序元素 \n\t\t\t\tint low = 0;\t//low和high为插入位置的初始区间\n\t\t\t\tint high = i-1;\n\t\t\t\twhile(low <= high){\t//while循环确定插入位置为high+1\n\t\t\t\t\tint mid = (low+high)/2;\n\t\t\t\t\tif(x > a[mid]){\n\t\t\t\t\t\tlow = mid+1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thigh = mid-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int j = i-1; j >= high+1; j--){\t//向后移动数据\n\t\t\t\t\t a[j+1] = a[j];\n\t\t\t\t}\n\t\t\t\ta[high+1] = x; \t//插入到正确位置  \n\t\t\t\t\n\t\t\t\tSystem.out.print(Arrays.toString(a));\t//打印每次移动后的数组 \n\t\t\t\tSystem.out.println();\n\t\t }\n\t\t}\n\t}\n}\n```","source":"_posts/排序算法.md","raw":"---\ntitle: 排序算法\ntoc: true\ndate: 2017-10-09 22:44:45\ntags:\n- 数据结构\n---\n一些算法的Java实现\n<!--more-->\n# 直接插入排序算法\n算法描述：对于给定的一个数组，初始时假设第一个记录自成一个有序序列，其余记录为无序序列。接着从第二个记录开始，按照记录的大小依次将当前处理的记录插入到其之前的有序序列中，直至最后一个记录插入到有序序列中为止。\n```\npublic class StraightInsertionSort {\n\n\tpublic static void main(String[] args) {\n\t\tint a[] = {3,1,5,7,2,4,9,6};\n\t\tInsertSort(a);\n\t}\n\t//直接插入排序算法\n\tpublic static void InsertSort(int a[]){\n\t\tfor(int i= 1; i<a.length; i++){  \n\t\t\t if(a[i] < a[i-1]){\t//如果a[i]与前面的数组有序就直接跳出      \n\t\t\t\t \tint j;\n\t\t\t\t \tint x = a[i];        //将x复制为哨兵，即存储待排序元素 \n\t\t            for(j = i-1; j >= 0 && x < a[j]; j--){  //查找在有序表的插入位置  \n\t\t                a[j+1] = a[j];\n\t\t            }\n\t\t            a[j+1] = x;      //插入到正确位置  \n\t\t            System.out.print(Arrays.toString(a));\t//打印每次移动后的数组 \n\t\t\t\t \tSystem.out.println();\n\t\t        }\n\t\t}\n\t}\n}\n```\n# 二分插入排序算法\n算法的基本过程：\n（1）计算 0 ~ i-1 的中间点，用 i 索引处的元素与中间值进行比较，如果 i 索引处的元素大，说明要插入的这个元素应该在中间值和刚加入i索引之间，反之，就是在刚开始的位置 到中间值的位置，这样很简单的完成了折半；\n（2）在相应的半个范围里面找插入的位置时，不断的用（1）步骤缩小范围，不停的折半，范围依次缩小为 1/2 1/4 1/8 .......快速的确定出第 i 个元素要插在什么地方；\n（3）确定位置之后，将整个序列后移，并将元素插入到相应位置。\n```\npublic class BinaryInsertSort {\n\t\n\tpublic static void main(String[] args) {\n\t\tint a[] = {3,1,5,7,2,4,9,6};\n\t\tInsertSort(a);\n\t}\n\t//二分插入排序算法\n\tprivate static void InsertSort(int[] a) {\n\t\tfor(int i = 1; i < a.length; i++){  \n\t\t\tif(a[i] < a[i-1]){\t//如果a[i]与前面的数组有序就直接跳出      \n\t\t\t\tint x = a[i];   //将x复制为哨兵，即存储待排序元素 \n\t\t\t\tint low = 0;\t//low和high为插入位置的初始区间\n\t\t\t\tint high = i-1;\n\t\t\t\twhile(low <= high){\t//while循环确定插入位置为high+1\n\t\t\t\t\tint mid = (low+high)/2;\n\t\t\t\t\tif(x > a[mid]){\n\t\t\t\t\t\tlow = mid+1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thigh = mid-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int j = i-1; j >= high+1; j--){\t//向后移动数据\n\t\t\t\t\t a[j+1] = a[j];\n\t\t\t\t}\n\t\t\t\ta[high+1] = x; \t//插入到正确位置  \n\t\t\t\t\n\t\t\t\tSystem.out.print(Arrays.toString(a));\t//打印每次移动后的数组 \n\t\t\t\tSystem.out.println();\n\t\t }\n\t\t}\n\t}\n}\n```","slug":"排序算法","published":1,"updated":"2018-01-20T06:44:37.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m93k006344wa7j7magfs","content":"<p>一些算法的Java实现<br><a id=\"more\"></a></p>\n<h1 id=\"直接插入排序算法\"><a href=\"#直接插入排序算法\" class=\"headerlink\" title=\"直接插入排序算法\"></a>直接插入排序算法</h1><p>算法描述：对于给定的一个数组，初始时假设第一个记录自成一个有序序列，其余记录为无序序列。接着从第二个记录开始，按照记录的大小依次将当前处理的记录插入到其之前的有序序列中，直至最后一个记录插入到有序序列中为止。<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">StraightInsertionSort</span> &#123;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String[] args</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">int</span> a[] = &#123;<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">6</span>&#125;;</div><div class=\"line\">  InsertSort(a);</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//直接插入排序算法</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">InsertSort</span>(<span class=\"params\"><span class=\"keyword\">int</span> a[]</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i= <span class=\"number\">1</span>; i&lt;a.length; i++)&#123;  </div><div class=\"line\">    <span class=\"keyword\">if</span>(a[i] &lt; a[i<span class=\"number\">-1</span>])&#123;\t<span class=\"comment\">//如果a[i]与前面的数组有序就直接跳出      </span></div><div class=\"line\">     \t<span class=\"keyword\">int</span> j;</div><div class=\"line\">     \t<span class=\"keyword\">int</span> x = a[i];        <span class=\"comment\">//将x复制为哨兵，即存储待排序元素 </span></div><div class=\"line\">              <span class=\"keyword\">for</span>(j = i<span class=\"number\">-1</span>; j &gt;= <span class=\"number\">0</span> &amp;&amp; x &lt; a[j]; j--)&#123;  <span class=\"comment\">//查找在有序表的插入位置  </span></div><div class=\"line\">                  a[j+<span class=\"number\">1</span>] = a[j];</div><div class=\"line\">              &#125;</div><div class=\"line\">              a[j+<span class=\"number\">1</span>] = x;      <span class=\"comment\">//插入到正确位置  </span></div><div class=\"line\">              System.<span class=\"keyword\">out</span>.print(Arrays.toString(a));\t<span class=\"comment\">//打印每次移动后的数组 </span></div><div class=\"line\">     \tSystem.<span class=\"keyword\">out</span>.println();</div><div class=\"line\">          &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"二分插入排序算法\"><a href=\"#二分插入排序算法\" class=\"headerlink\" title=\"二分插入排序算法\"></a>二分插入排序算法</h1><p>算法的基本过程：<br>（1）计算 0 ~ i-1 的中间点，用 i 索引处的元素与中间值进行比较，如果 i 索引处的元素大，说明要插入的这个元素应该在中间值和刚加入i索引之间，反之，就是在刚开始的位置 到中间值的位置，这样很简单的完成了折半；<br>（2）在相应的半个范围里面找插入的位置时，不断的用（1）步骤缩小范围，不停的折半，范围依次缩小为 1/2 1/4 1/8 …….快速的确定出第 i 个元素要插在什么地方；<br>（3）确定位置之后，将整个序列后移，并将元素插入到相应位置。<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">BinaryInsertSort</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String[] args</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">int</span> a[] = &#123;<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">6</span>&#125;;</div><div class=\"line\">  InsertSort(a);</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//二分插入排序算法</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">InsertSort</span>(<span class=\"params\"><span class=\"keyword\">int</span>[] a</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; a.length; i++)&#123;  </div><div class=\"line\">   <span class=\"keyword\">if</span>(a[i] &lt; a[i<span class=\"number\">-1</span>])&#123;\t<span class=\"comment\">//如果a[i]与前面的数组有序就直接跳出      </span></div><div class=\"line\">    <span class=\"keyword\">int</span> x = a[i];   <span class=\"comment\">//将x复制为哨兵，即存储待排序元素 </span></div><div class=\"line\">    <span class=\"keyword\">int</span> low = <span class=\"number\">0</span>;\t<span class=\"comment\">//low和high为插入位置的初始区间</span></div><div class=\"line\">    <span class=\"keyword\">int</span> high = i<span class=\"number\">-1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(low &lt;= high)&#123;\t<span class=\"comment\">//while循环确定插入位置为high+1</span></div><div class=\"line\">     <span class=\"keyword\">int</span> mid = (low+high)/<span class=\"number\">2</span>;</div><div class=\"line\">     <span class=\"keyword\">if</span>(x &gt; a[mid])&#123;</div><div class=\"line\">      low = mid+<span class=\"number\">1</span>;</div><div class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">      high = mid<span class=\"number\">-1</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i<span class=\"number\">-1</span>; j &gt;= high+<span class=\"number\">1</span>; j--)&#123;\t<span class=\"comment\">//向后移动数据</span></div><div class=\"line\">      a[j+<span class=\"number\">1</span>] = a[j];</div><div class=\"line\">    &#125;</div><div class=\"line\">    a[high+<span class=\"number\">1</span>] = x; \t<span class=\"comment\">//插入到正确位置  </span></div><div class=\"line\">    </div><div class=\"line\">    System.<span class=\"keyword\">out</span>.print(Arrays.toString(a));\t<span class=\"comment\">//打印每次移动后的数组 </span></div><div class=\"line\">    System.<span class=\"keyword\">out</span>.println();</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>一些算法的Java实现<br>","more":"</p>\n<h1 id=\"直接插入排序算法\"><a href=\"#直接插入排序算法\" class=\"headerlink\" title=\"直接插入排序算法\"></a>直接插入排序算法</h1><p>算法描述：对于给定的一个数组，初始时假设第一个记录自成一个有序序列，其余记录为无序序列。接着从第二个记录开始，按照记录的大小依次将当前处理的记录插入到其之前的有序序列中，直至最后一个记录插入到有序序列中为止。<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">StraightInsertionSort</span> &#123;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String[] args</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">int</span> a[] = &#123;<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">6</span>&#125;;</div><div class=\"line\">  InsertSort(a);</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//直接插入排序算法</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">InsertSort</span>(<span class=\"params\"><span class=\"keyword\">int</span> a[]</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i= <span class=\"number\">1</span>; i&lt;a.length; i++)&#123;  </div><div class=\"line\">    <span class=\"keyword\">if</span>(a[i] &lt; a[i<span class=\"number\">-1</span>])&#123;\t<span class=\"comment\">//如果a[i]与前面的数组有序就直接跳出      </span></div><div class=\"line\">     \t<span class=\"keyword\">int</span> j;</div><div class=\"line\">     \t<span class=\"keyword\">int</span> x = a[i];        <span class=\"comment\">//将x复制为哨兵，即存储待排序元素 </span></div><div class=\"line\">              <span class=\"keyword\">for</span>(j = i<span class=\"number\">-1</span>; j &gt;= <span class=\"number\">0</span> &amp;&amp; x &lt; a[j]; j--)&#123;  <span class=\"comment\">//查找在有序表的插入位置  </span></div><div class=\"line\">                  a[j+<span class=\"number\">1</span>] = a[j];</div><div class=\"line\">              &#125;</div><div class=\"line\">              a[j+<span class=\"number\">1</span>] = x;      <span class=\"comment\">//插入到正确位置  </span></div><div class=\"line\">              System.<span class=\"keyword\">out</span>.print(Arrays.toString(a));\t<span class=\"comment\">//打印每次移动后的数组 </span></div><div class=\"line\">     \tSystem.<span class=\"keyword\">out</span>.println();</div><div class=\"line\">          &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"二分插入排序算法\"><a href=\"#二分插入排序算法\" class=\"headerlink\" title=\"二分插入排序算法\"></a>二分插入排序算法</h1><p>算法的基本过程：<br>（1）计算 0 ~ i-1 的中间点，用 i 索引处的元素与中间值进行比较，如果 i 索引处的元素大，说明要插入的这个元素应该在中间值和刚加入i索引之间，反之，就是在刚开始的位置 到中间值的位置，这样很简单的完成了折半；<br>（2）在相应的半个范围里面找插入的位置时，不断的用（1）步骤缩小范围，不停的折半，范围依次缩小为 1/2 1/4 1/8 …….快速的确定出第 i 个元素要插在什么地方；<br>（3）确定位置之后，将整个序列后移，并将元素插入到相应位置。<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">BinaryInsertSort</span> &#123;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String[] args</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">int</span> a[] = &#123;<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">6</span>&#125;;</div><div class=\"line\">  InsertSort(a);</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"comment\">//二分插入排序算法</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">InsertSort</span>(<span class=\"params\"><span class=\"keyword\">int</span>[] a</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; a.length; i++)&#123;  </div><div class=\"line\">   <span class=\"keyword\">if</span>(a[i] &lt; a[i<span class=\"number\">-1</span>])&#123;\t<span class=\"comment\">//如果a[i]与前面的数组有序就直接跳出      </span></div><div class=\"line\">    <span class=\"keyword\">int</span> x = a[i];   <span class=\"comment\">//将x复制为哨兵，即存储待排序元素 </span></div><div class=\"line\">    <span class=\"keyword\">int</span> low = <span class=\"number\">0</span>;\t<span class=\"comment\">//low和high为插入位置的初始区间</span></div><div class=\"line\">    <span class=\"keyword\">int</span> high = i<span class=\"number\">-1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(low &lt;= high)&#123;\t<span class=\"comment\">//while循环确定插入位置为high+1</span></div><div class=\"line\">     <span class=\"keyword\">int</span> mid = (low+high)/<span class=\"number\">2</span>;</div><div class=\"line\">     <span class=\"keyword\">if</span>(x &gt; a[mid])&#123;</div><div class=\"line\">      low = mid+<span class=\"number\">1</span>;</div><div class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">      high = mid<span class=\"number\">-1</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i<span class=\"number\">-1</span>; j &gt;= high+<span class=\"number\">1</span>; j--)&#123;\t<span class=\"comment\">//向后移动数据</span></div><div class=\"line\">      a[j+<span class=\"number\">1</span>] = a[j];</div><div class=\"line\">    &#125;</div><div class=\"line\">    a[high+<span class=\"number\">1</span>] = x; \t<span class=\"comment\">//插入到正确位置  </span></div><div class=\"line\">    </div><div class=\"line\">    System.<span class=\"keyword\">out</span>.print(Arrays.toString(a));\t<span class=\"comment\">//打印每次移动后的数组 </span></div><div class=\"line\">    System.<span class=\"keyword\">out</span>.println();</div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"绯","toc":true,"date":"2017-06-29T07:15:38.000Z","_content":"![](http://hpimg.pianke.me/d332a48a7b83d0dc111f6f0912bff39420170629.jpg?imageView2/2/w/640/format/jpg)\n杏花雨中醉\n游人何时归\n归来同看燕南徊\n相依相偎\n鬓边珠儿翠\n迎面春风拂去梨花泪\n但愿 长相长随\n清宵霖铃叩门扉\n灯火烛焰微\n朝朝暮暮\n聚散成灰\n百川只取一瓢水\n水中月如眉\n眉若柳丝 绵绵溪边垂\n花开藏心蕊 含香只为谁\n谁人一心予兰穗\n不争芳菲\n落红池中碎\n化作珠翠罗绮追鱼尾\n但愿 相思相随 ","source":"_posts/绯.md","raw":"---\ntitle: 绯\ntoc: true\ndate: 2017-06-29 15:15:38\ntags:\n- 文学\n---\n![](http://hpimg.pianke.me/d332a48a7b83d0dc111f6f0912bff39420170629.jpg?imageView2/2/w/640/format/jpg)\n杏花雨中醉\n游人何时归\n归来同看燕南徊\n相依相偎\n鬓边珠儿翠\n迎面春风拂去梨花泪\n但愿 长相长随\n清宵霖铃叩门扉\n灯火烛焰微\n朝朝暮暮\n聚散成灰\n百川只取一瓢水\n水中月如眉\n眉若柳丝 绵绵溪边垂\n花开藏心蕊 含香只为谁\n谁人一心予兰穗\n不争芳菲\n落红池中碎\n化作珠翠罗绮追鱼尾\n但愿 相思相随 ","slug":"绯","published":1,"updated":"2018-01-20T06:44:37.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m93o006544waccx09jyv","content":"<p><img src=\"http://hpimg.pianke.me/d332a48a7b83d0dc111f6f0912bff39420170629.jpg?imageView2/2/w/640/format/jpg\" alt=\"\"><br>杏花雨中醉<br>游人何时归<br>归来同看燕南徊<br>相依相偎<br>鬓边珠儿翠<br>迎面春风拂去梨花泪<br>但愿 长相长随<br>清宵霖铃叩门扉<br>灯火烛焰微<br>朝朝暮暮<br>聚散成灰<br>百川只取一瓢水<br>水中月如眉<br>眉若柳丝 绵绵溪边垂<br>花开藏心蕊 含香只为谁<br>谁人一心予兰穗<br>不争芳菲<br>落红池中碎<br>化作珠翠罗绮追鱼尾<br>但愿 相思相随 </p>\n","excerpt":"","more":"<p><img src=\"http://hpimg.pianke.me/d332a48a7b83d0dc111f6f0912bff39420170629.jpg?imageView2/2/w/640/format/jpg\" alt=\"\"><br>杏花雨中醉<br>游人何时归<br>归来同看燕南徊<br>相依相偎<br>鬓边珠儿翠<br>迎面春风拂去梨花泪<br>但愿 长相长随<br>清宵霖铃叩门扉<br>灯火烛焰微<br>朝朝暮暮<br>聚散成灰<br>百川只取一瓢水<br>水中月如眉<br>眉若柳丝 绵绵溪边垂<br>花开藏心蕊 含香只为谁<br>谁人一心予兰穗<br>不争芳菲<br>落红池中碎<br>化作珠翠罗绮追鱼尾<br>但愿 相思相随 </p>\n"},{"title":"我与四月は君の嘘","date":"2017-04-06T04:05:09.000Z","toc":true,"_content":"![](http://wx3.sinaimg.cn/large/005P8ayVgy1fectyz9k2fj31hc0u012d.jpg)\n\n<!--more-->\n记得第一次看到这部动漫是在2015年末，那年冬天还是很冷的，所以就经常一个人躲在被子里一呆就是一整天。当时的状态就是边看边哭。\n\n四月是我看过的唯一一部音乐番，整部番给我的感觉就是细腻的感情完全融入进音乐之中。\n\n看过四谎的朋友都知道这是个悲伤的故事，几乎每个人都会看哭。这部番在我看来和未闻花名有些相似，都是来描述童年的感情故事。不同的是四谎讲的是熏在生命即将到头的时候鼓起勇气释放自己生命的光芒，照亮了公生的世界。而未闻花名则是通过面码的复活让大家感受到长大后的物是人非，和得到真诚面对过去的勇气。\n\n每年四月我都会模仿公生说一句，没有你的四月又要来了。\n\n说这句话呢，第一是因为中二，第二是希望自己可以像熏一样勇敢的面对生活。\n<hr>\n可能，人只要愿意\n\n就可以永远活的像个无所畏惧的混蛋吧。\n\n\n","source":"_posts/我与四月は君の嘘.md","raw":"---\ntitle: 我与四月は君の嘘\ndate: 2017-04-06 12:05:09\ntags:\n- essay\n- 生活\ntoc: true\n---\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fectyz9k2fj31hc0u012d.jpg)\n\n<!--more-->\n记得第一次看到这部动漫是在2015年末，那年冬天还是很冷的，所以就经常一个人躲在被子里一呆就是一整天。当时的状态就是边看边哭。\n\n四月是我看过的唯一一部音乐番，整部番给我的感觉就是细腻的感情完全融入进音乐之中。\n\n看过四谎的朋友都知道这是个悲伤的故事，几乎每个人都会看哭。这部番在我看来和未闻花名有些相似，都是来描述童年的感情故事。不同的是四谎讲的是熏在生命即将到头的时候鼓起勇气释放自己生命的光芒，照亮了公生的世界。而未闻花名则是通过面码的复活让大家感受到长大后的物是人非，和得到真诚面对过去的勇气。\n\n每年四月我都会模仿公生说一句，没有你的四月又要来了。\n\n说这句话呢，第一是因为中二，第二是希望自己可以像熏一样勇敢的面对生活。\n<hr>\n可能，人只要愿意\n\n就可以永远活的像个无所畏惧的混蛋吧。\n\n\n","slug":"我与四月は君の嘘","published":1,"updated":"2018-01-20T06:44:37.674Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m93r006844wavdnau40g","content":"<p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fectyz9k2fj31hc0u012d.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p>记得第一次看到这部动漫是在2015年末，那年冬天还是很冷的，所以就经常一个人躲在被子里一呆就是一整天。当时的状态就是边看边哭。</p>\n<p>四月是我看过的唯一一部音乐番，整部番给我的感觉就是细腻的感情完全融入进音乐之中。</p>\n<p>看过四谎的朋友都知道这是个悲伤的故事，几乎每个人都会看哭。这部番在我看来和未闻花名有些相似，都是来描述童年的感情故事。不同的是四谎讲的是熏在生命即将到头的时候鼓起勇气释放自己生命的光芒，照亮了公生的世界。而未闻花名则是通过面码的复活让大家感受到长大后的物是人非，和得到真诚面对过去的勇气。</p>\n<p>每年四月我都会模仿公生说一句，没有你的四月又要来了。</p>\n<p>说这句话呢，第一是因为中二，第二是希望自己可以像熏一样勇敢的面对生活。</p>\n<p><hr><br>可能，人只要愿意</p>\n<p>就可以永远活的像个无所畏惧的混蛋吧。</p>\n","excerpt":"<p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fectyz9k2fj31hc0u012d.jpg\" alt=\"\"></p>","more":"<p>记得第一次看到这部动漫是在2015年末，那年冬天还是很冷的，所以就经常一个人躲在被子里一呆就是一整天。当时的状态就是边看边哭。</p>\n<p>四月是我看过的唯一一部音乐番，整部番给我的感觉就是细腻的感情完全融入进音乐之中。</p>\n<p>看过四谎的朋友都知道这是个悲伤的故事，几乎每个人都会看哭。这部番在我看来和未闻花名有些相似，都是来描述童年的感情故事。不同的是四谎讲的是熏在生命即将到头的时候鼓起勇气释放自己生命的光芒，照亮了公生的世界。而未闻花名则是通过面码的复活让大家感受到长大后的物是人非，和得到真诚面对过去的勇气。</p>\n<p>每年四月我都会模仿公生说一句，没有你的四月又要来了。</p>\n<p>说这句话呢，第一是因为中二，第二是希望自己可以像熏一样勇敢的面对生活。</p>\n<p><hr><br>可能，人只要愿意</p>\n<p>就可以永远活的像个无所畏惧的混蛋吧。</p>"},{"title":"登录注册练习","date":"2017-04-11T02:44:35.000Z","toc":true,"_content":"很简单的一个练习。\n<!--more-->\n# 准备工作\n\tDomain:\n\t\tUser,VerifyCode\n\tDao:\n\t\tXML文件存放数据,UserDao//向XML里面添加user，通过名字查找user\n\tService:\n\t\tUserException//自定义异常,登录注册失败后抛出,UserService//登录注册功能\n\tServlet:\n\t\tLoginServlet,RegistServlet,VerifyCodeServlet\n\tJSP:\n\t\tlogin.jsp,regist.jsp,welcome.jsp\n\tJAR包:\n\t\tcommons-beanutils-1.8.0.jar\n\t\tcommons-beanutils-1.9.3.jar\n\t\tcommons-logging-1.2.jar\n\t\tdom4j.jar\n\t\tjaxen-1.1-beta-10.jar\n\t\tjstl-1.2.jar\n\t\tservlet-api.jar\n<hr>\n# 简单介绍\n由于代码都比较简单,这里只对Servlet里面的内容进行简单的介绍.\n### LoginServlet\n\t1.封装表单\n```\n\t\tUser form = new User();\n\t\ttry {\n\t\t\tBeanUtils.populate(form, request.getParameterMap());\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}//将用户提交的表单封装进JavaBean中\n```\n\t2.登录判断\n```\n\t\ttry{\n\t\t\t//登录成功\n\t\t\tUser user = userService.login(form);\n\t\t\trequest.getSession().setAttribute(\"sessionUser\", user);\n\t\t\tresponse.sendRedirect(request.getContextPath() + \"/user/welcome.jsp\");\n\t\t} catch(UserException e){\n\t\t\t//登录失败\n\t\t\trequest.setAttribute(\"msg\", e.getMessage());\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/login.jsp\").forward(request, response);\n\t\t}\n```\n### RegistServlet\n\t1.封装表单，同上\n\t2.表单校验\n```\n\t\t//用户名校验\n\t\tString sessionUsername = form.getUsername();\n\t\tif(sessionUsername ==null || sessionUsername.trim().isEmpty()){\n\t\t\trequest.setAttribute(\"username\", \"用户名不能为空!\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}else if(sessionUsername.length() < 3 || sessionUsername.length() >15){\n\t\t\trequest.setAttribute(\"username\", \"用户名长度必须在3~15之间\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//密码校验\n\t\tString sessionPassword = form.getPassword();\n\t\tif(sessionPassword ==null || sessionPassword.trim().isEmpty()){\n\t\t\trequest.setAttribute(\"password\", \"密码不能为空!\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}else if(sessionPassword.length() < 9 || sessionPassword.length() >17){\n\t\t\trequest.setAttribute(\"password\", \"密码长度必须在9~17之间\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}\n\n\t\t//验证码校验\n\t\tString sessionVerifyCode = (String) request.getSession().getAttribute(\"session_vcode\");\n\t\tif(!sessionVerifyCode.equalsIgnoreCase(form.getVerifyCode())){\n\t\t\trequest.setAttribute(\"verifycode\", \"验证码错误!\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}\n```\n\t3.注册判断\n```\n\t\ttry {\n\t\t\t//注册成功\n\t\t\tuserService.regist(form);\n\t\t\tresponse.getWriter().print(\"<h1>注册成功!</h1><a href='\" + \n\t\t\t\t\trequest.getContextPath() + \n\t\t\t\t\t\"/user/login.jsp\" + \"'>登录</a>\");\n\t\t} catch (UserException e) {\n\t\t\t//注册失败\n\t\t\trequest.setAttribute(\"username\", e.getMessage());\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\t\n\t\t}\n```\n<hr>\n# 总结\n\t本案例利用JavaWeb三层结构实现了最简单的登录注册案例，通过本案例可以了解登录注册的基本流程。","source":"_posts/登录注册练习.md","raw":"---\ntitle: 登录注册练习\ndate: 2017-04-11 10:44:35\ntags:\n- Web\ntoc: true\n---\n很简单的一个练习。\n<!--more-->\n# 准备工作\n\tDomain:\n\t\tUser,VerifyCode\n\tDao:\n\t\tXML文件存放数据,UserDao//向XML里面添加user，通过名字查找user\n\tService:\n\t\tUserException//自定义异常,登录注册失败后抛出,UserService//登录注册功能\n\tServlet:\n\t\tLoginServlet,RegistServlet,VerifyCodeServlet\n\tJSP:\n\t\tlogin.jsp,regist.jsp,welcome.jsp\n\tJAR包:\n\t\tcommons-beanutils-1.8.0.jar\n\t\tcommons-beanutils-1.9.3.jar\n\t\tcommons-logging-1.2.jar\n\t\tdom4j.jar\n\t\tjaxen-1.1-beta-10.jar\n\t\tjstl-1.2.jar\n\t\tservlet-api.jar\n<hr>\n# 简单介绍\n由于代码都比较简单,这里只对Servlet里面的内容进行简单的介绍.\n### LoginServlet\n\t1.封装表单\n```\n\t\tUser form = new User();\n\t\ttry {\n\t\t\tBeanUtils.populate(form, request.getParameterMap());\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}//将用户提交的表单封装进JavaBean中\n```\n\t2.登录判断\n```\n\t\ttry{\n\t\t\t//登录成功\n\t\t\tUser user = userService.login(form);\n\t\t\trequest.getSession().setAttribute(\"sessionUser\", user);\n\t\t\tresponse.sendRedirect(request.getContextPath() + \"/user/welcome.jsp\");\n\t\t} catch(UserException e){\n\t\t\t//登录失败\n\t\t\trequest.setAttribute(\"msg\", e.getMessage());\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/login.jsp\").forward(request, response);\n\t\t}\n```\n### RegistServlet\n\t1.封装表单，同上\n\t2.表单校验\n```\n\t\t//用户名校验\n\t\tString sessionUsername = form.getUsername();\n\t\tif(sessionUsername ==null || sessionUsername.trim().isEmpty()){\n\t\t\trequest.setAttribute(\"username\", \"用户名不能为空!\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}else if(sessionUsername.length() < 3 || sessionUsername.length() >15){\n\t\t\trequest.setAttribute(\"username\", \"用户名长度必须在3~15之间\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//密码校验\n\t\tString sessionPassword = form.getPassword();\n\t\tif(sessionPassword ==null || sessionPassword.trim().isEmpty()){\n\t\t\trequest.setAttribute(\"password\", \"密码不能为空!\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}else if(sessionPassword.length() < 9 || sessionPassword.length() >17){\n\t\t\trequest.setAttribute(\"password\", \"密码长度必须在9~17之间\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}\n\n\t\t//验证码校验\n\t\tString sessionVerifyCode = (String) request.getSession().getAttribute(\"session_vcode\");\n\t\tif(!sessionVerifyCode.equalsIgnoreCase(form.getVerifyCode())){\n\t\t\trequest.setAttribute(\"verifycode\", \"验证码错误!\");\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\treturn;\n\t\t}\n```\n\t3.注册判断\n```\n\t\ttry {\n\t\t\t//注册成功\n\t\t\tuserService.regist(form);\n\t\t\tresponse.getWriter().print(\"<h1>注册成功!</h1><a href='\" + \n\t\t\t\t\trequest.getContextPath() + \n\t\t\t\t\t\"/user/login.jsp\" + \"'>登录</a>\");\n\t\t} catch (UserException e) {\n\t\t\t//注册失败\n\t\t\trequest.setAttribute(\"username\", e.getMessage());\n\t\t\trequest.setAttribute(\"user\", form);\n\t\t\trequest.getRequestDispatcher(\"/user/regist.jsp\").forward(request, response);\n\t\t\t\n\t\t}\n```\n<hr>\n# 总结\n\t本案例利用JavaWeb三层结构实现了最简单的登录注册案例，通过本案例可以了解登录注册的基本流程。","slug":"登录注册练习","published":1,"updated":"2018-01-20T06:44:37.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m93y006a44wa4cin9uc8","content":"<p>很简单的一个练习。<br><a id=\"more\"></a></p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><pre><code>Domain:\n    User,VerifyCode\nDao:\n    XML文件存放数据,UserDao//向XML里面添加user，通过名字查找user\nService:\n    UserException//自定义异常,登录注册失败后抛出,UserService//登录注册功能\nServlet:\n    LoginServlet,RegistServlet,VerifyCodeServlet\nJSP:\n    login.jsp,regist.jsp,welcome.jsp\nJAR包:\n    commons-beanutils-1.8.0.jar\n    commons-beanutils-1.9.3.jar\n    commons-logging-1.2.jar\n    dom4j.jar\n    jaxen-1.1-beta-10.jar\n    jstl-1.2.jar\n    servlet-api.jar\n</code></pre><p><hr></p>\n<h1 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h1><p>由于代码都比较简单,这里只对Servlet里面的内容进行简单的介绍.</p>\n<h3 id=\"LoginServlet\"><a href=\"#LoginServlet\" class=\"headerlink\" title=\"LoginServlet\"></a>LoginServlet</h3><pre><code>1.封装表单\n</code></pre><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">User form = <span class=\"keyword\">new</span> <span class=\"type\">User</span>();</div><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\"> BeanUtils.populate(form, request.getParameterMap());</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\"> <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">RuntimeException</span>(e);</div><div class=\"line\">&#125;<span class=\"comment\">//将用户提交的表单封装进JavaBean中</span></div></pre></td></tr></table></figure>\n<pre><code>2.登录判断\n</code></pre><figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">try&#123;</div><div class=\"line\"> //登录成功</div><div class=\"line\"> User <span class=\"keyword\">user</span> = <span class=\"keyword\">user</span>Service.login(form);</div><div class=\"line\"> request.getSession().<span class=\"built_in\">set</span>Attribute(<span class=\"string\">\"sessionUser\"</span>, <span class=\"keyword\">user</span>);</div><div class=\"line\"> response.sendRedirect(request.getContextPath() + <span class=\"string\">\"/user/welcome.jsp\"</span>);</div><div class=\"line\">&#125; catch(UserException e)&#123;</div><div class=\"line\"> //登录失败</div><div class=\"line\"> request.<span class=\"built_in\">set</span>Attribute(<span class=\"string\">\"msg\"</span>, e.getMessage());</div><div class=\"line\"> request.<span class=\"built_in\">set</span>Attribute(<span class=\"string\">\"user\"</span>, form);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/login.jsp\"</span>).forward(request, response);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"RegistServlet\"><a href=\"#RegistServlet\" class=\"headerlink\" title=\"RegistServlet\"></a>RegistServlet</h3><pre><code>1.封装表单，同上\n2.表单校验\n</code></pre><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//用户名校验</span></div><div class=\"line\">String sessionUsername = <span class=\"keyword\">form</span>.getUsername();</div><div class=\"line\"><span class=\"keyword\">if</span>(sessionUsername ==null || sessionUsername.<span class=\"built_in\">trim</span>().isEmpty())&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"用户名不能为空!\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sessionUsername.<span class=\"built_in\">length</span>() &lt; 3 || sessionUsername.<span class=\"built_in\">length</span>() &gt;15)&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"用户名长度必须在3~15之间\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//密码校验</span></div><div class=\"line\">String sessionPassword = <span class=\"keyword\">form</span>.getPassword();</div><div class=\"line\"><span class=\"keyword\">if</span>(sessionPassword ==null || sessionPassword.<span class=\"built_in\">trim</span>().isEmpty())&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"password\"</span>, <span class=\"string\">\"密码不能为空!\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sessionPassword.<span class=\"built_in\">length</span>() &lt; 9 || sessionPassword.<span class=\"built_in\">length</span>() &gt;17)&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"password\"</span>, <span class=\"string\">\"密码长度必须在9~17之间\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//验证码校验</span></div><div class=\"line\">String sessionVerifyCode = (String) request.getSession().getAttribute(<span class=\"string\">\"session_vcode\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span>(!sessionVerifyCode.equalsIgnoreCase(<span class=\"keyword\">form</span>.getVerifyCode()))&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"verifycode\"</span>, <span class=\"string\">\"验证码错误!\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>3.注册判断\n</code></pre><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">try</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//注册成功</span></div><div class=\"line\"> <span class=\"selector-tag\">userService</span><span class=\"selector-class\">.regist</span>(form);</div><div class=\"line\"> <span class=\"selector-tag\">response</span><span class=\"selector-class\">.getWriter</span>()<span class=\"selector-class\">.print</span>(<span class=\"string\">\"&lt;h1&gt;注册成功!&lt;/h1&gt;&lt;a href='\"</span> + </div><div class=\"line\">   request.getContextPath() + </div><div class=\"line\">   <span class=\"string\">\"/user/login.jsp\"</span> + <span class=\"string\">\"'&gt;登录&lt;/a&gt;\"</span>);</div><div class=\"line\">&#125; <span class=\"selector-tag\">catch</span> (UserException e) &#123;</div><div class=\"line\"> <span class=\"comment\">//注册失败</span></div><div class=\"line\"> <span class=\"selector-tag\">request</span><span class=\"selector-class\">.setAttribute</span>(<span class=\"string\">\"username\"</span>, e.getMessage());</div><div class=\"line\"> <span class=\"selector-tag\">request</span><span class=\"selector-class\">.setAttribute</span>(<span class=\"string\">\"user\"</span>, form);</div><div class=\"line\"> <span class=\"selector-tag\">request</span><span class=\"selector-class\">.getRequestDispatcher</span>(<span class=\"string\">\"/user/regist.jsp\"</span>)<span class=\"selector-class\">.forward</span>(request, response);</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><hr></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><pre><code>本案例利用JavaWeb三层结构实现了最简单的登录注册案例，通过本案例可以了解登录注册的基本流程。\n</code></pre>","excerpt":"<p>很简单的一个练习。<br>","more":"</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><pre><code>Domain:\n    User,VerifyCode\nDao:\n    XML文件存放数据,UserDao//向XML里面添加user，通过名字查找user\nService:\n    UserException//自定义异常,登录注册失败后抛出,UserService//登录注册功能\nServlet:\n    LoginServlet,RegistServlet,VerifyCodeServlet\nJSP:\n    login.jsp,regist.jsp,welcome.jsp\nJAR包:\n    commons-beanutils-1.8.0.jar\n    commons-beanutils-1.9.3.jar\n    commons-logging-1.2.jar\n    dom4j.jar\n    jaxen-1.1-beta-10.jar\n    jstl-1.2.jar\n    servlet-api.jar\n</code></pre><p><hr></p>\n<h1 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h1><p>由于代码都比较简单,这里只对Servlet里面的内容进行简单的介绍.</p>\n<h3 id=\"LoginServlet\"><a href=\"#LoginServlet\" class=\"headerlink\" title=\"LoginServlet\"></a>LoginServlet</h3><pre><code>1.封装表单\n</code></pre><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">User form = <span class=\"keyword\">new</span> <span class=\"type\">User</span>();</div><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\"> BeanUtils.populate(form, request.getParameterMap());</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\"> <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">RuntimeException</span>(e);</div><div class=\"line\">&#125;<span class=\"comment\">//将用户提交的表单封装进JavaBean中</span></div></pre></td></tr></table></figure>\n<pre><code>2.登录判断\n</code></pre><figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">try&#123;</div><div class=\"line\"> //登录成功</div><div class=\"line\"> User <span class=\"keyword\">user</span> = <span class=\"keyword\">user</span>Service.login(form);</div><div class=\"line\"> request.getSession().<span class=\"built_in\">set</span>Attribute(<span class=\"string\">\"sessionUser\"</span>, <span class=\"keyword\">user</span>);</div><div class=\"line\"> response.sendRedirect(request.getContextPath() + <span class=\"string\">\"/user/welcome.jsp\"</span>);</div><div class=\"line\">&#125; catch(UserException e)&#123;</div><div class=\"line\"> //登录失败</div><div class=\"line\"> request.<span class=\"built_in\">set</span>Attribute(<span class=\"string\">\"msg\"</span>, e.getMessage());</div><div class=\"line\"> request.<span class=\"built_in\">set</span>Attribute(<span class=\"string\">\"user\"</span>, form);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/login.jsp\"</span>).forward(request, response);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"RegistServlet\"><a href=\"#RegistServlet\" class=\"headerlink\" title=\"RegistServlet\"></a>RegistServlet</h3><pre><code>1.封装表单，同上\n2.表单校验\n</code></pre><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//用户名校验</span></div><div class=\"line\">String sessionUsername = <span class=\"keyword\">form</span>.getUsername();</div><div class=\"line\"><span class=\"keyword\">if</span>(sessionUsername ==null || sessionUsername.<span class=\"built_in\">trim</span>().isEmpty())&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"用户名不能为空!\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sessionUsername.<span class=\"built_in\">length</span>() &lt; 3 || sessionUsername.<span class=\"built_in\">length</span>() &gt;15)&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"用户名长度必须在3~15之间\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//密码校验</span></div><div class=\"line\">String sessionPassword = <span class=\"keyword\">form</span>.getPassword();</div><div class=\"line\"><span class=\"keyword\">if</span>(sessionPassword ==null || sessionPassword.<span class=\"built_in\">trim</span>().isEmpty())&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"password\"</span>, <span class=\"string\">\"密码不能为空!\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sessionPassword.<span class=\"built_in\">length</span>() &lt; 9 || sessionPassword.<span class=\"built_in\">length</span>() &gt;17)&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"password\"</span>, <span class=\"string\">\"密码长度必须在9~17之间\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//验证码校验</span></div><div class=\"line\">String sessionVerifyCode = (String) request.getSession().getAttribute(<span class=\"string\">\"session_vcode\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span>(!sessionVerifyCode.equalsIgnoreCase(<span class=\"keyword\">form</span>.getVerifyCode()))&#123;</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"verifycode\"</span>, <span class=\"string\">\"验证码错误!\"</span>);</div><div class=\"line\"> request.setAttribute(<span class=\"string\">\"user\"</span>, <span class=\"keyword\">form</span>);</div><div class=\"line\"> request.getRequestDispatcher(<span class=\"string\">\"/user/regist.jsp\"</span>).forward(request, response);</div><div class=\"line\"> <span class=\"keyword\">return</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>3.注册判断\n</code></pre><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">try</span> &#123;</div><div class=\"line\"> <span class=\"comment\">//注册成功</span></div><div class=\"line\"> <span class=\"selector-tag\">userService</span><span class=\"selector-class\">.regist</span>(form);</div><div class=\"line\"> <span class=\"selector-tag\">response</span><span class=\"selector-class\">.getWriter</span>()<span class=\"selector-class\">.print</span>(<span class=\"string\">\"&lt;h1&gt;注册成功!&lt;/h1&gt;&lt;a href='\"</span> + </div><div class=\"line\">   request.getContextPath() + </div><div class=\"line\">   <span class=\"string\">\"/user/login.jsp\"</span> + <span class=\"string\">\"'&gt;登录&lt;/a&gt;\"</span>);</div><div class=\"line\">&#125; <span class=\"selector-tag\">catch</span> (UserException e) &#123;</div><div class=\"line\"> <span class=\"comment\">//注册失败</span></div><div class=\"line\"> <span class=\"selector-tag\">request</span><span class=\"selector-class\">.setAttribute</span>(<span class=\"string\">\"username\"</span>, e.getMessage());</div><div class=\"line\"> <span class=\"selector-tag\">request</span><span class=\"selector-class\">.setAttribute</span>(<span class=\"string\">\"user\"</span>, form);</div><div class=\"line\"> <span class=\"selector-tag\">request</span><span class=\"selector-class\">.getRequestDispatcher</span>(<span class=\"string\">\"/user/regist.jsp\"</span>)<span class=\"selector-class\">.forward</span>(request, response);</div><div class=\"line\"> </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><hr></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><pre><code>本案例利用JavaWeb三层结构实现了最简单的登录注册案例，通过本案例可以了解登录注册的基本流程。\n</code></pre>"},{"title":"模拟登录教务系统","date":"2017-03-30T06:21:47.000Z","toc":true,"_content":"最近在学java web,就想着写一个post方法模拟登录的案例。\n<!--more-->\n虽然案例十分简单,但是我花了将近2天时间才写完，而且算是一个半成品吧(后面会提)。现在修复完成。\n一开始不懂cookie的重要性,居然没有自己保存cookie,后来问了问Soon(他曾经拿python写过一样的东西)。Soon没有给我讲HttpClient的用法,而是给我讲了服务器的认证原理,真的是恍然大悟。\n图片如下\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fe4vn69zvoj312z0hg74f.jpg)\n那么登录到底是做什么东西呢,我的理解就是读写cookie，post数据。\n当我们需要获取内容的时候,就需要解析html,jsoup(良心库,仿jquery操作模式),htmlcleaner(我亲测,不好用...所以我用的正则表达式.......)。\n好了,现在进入正题。\n# 准备工作\n\tJDK,HttpClient的包,(htmlcleaner.jar或者jsoup.jar)\n# 创建HttpClient对象\n```\n\tRequestConfig requestConfig = RequestConfig.custom().setCookieSpec(CookieSpecs.STANDARD_STRICT).build();  \n\tCloseableHttpClient httpClient = HttpClients.custom().setDefaultRequestConfig(requestConfig).build();\n```\n# 通过get方法得到lt,execution2个动态参数,保存cookie\n```\n\tHttpGet httpGet = new HttpGet(\"http://idas.uestc.edu.cn/authserver/login?service=http%3A%2F%2Fportal.uestc.edu.cn%2F\");\n\tCloseableHttpResponse response = httpClient.execute(httpGet); \n        String cookie1 = setCookie(response);//保存得到的cookie(setCookie的函数也不写了)\n\t//得到2个动态参数的过程这里就不写了\n```\n# post方法模拟登录\n```\n\tList<NameValuePair> params = new ArrayList<NameValuePair>();\n\tHttpPost httpPost = new HttpPost(\"http://idas.uestc.edu.cn/authserver/login?service=http://portal.uestc.edu.cn/index.portal\");\n\t//httpPost.setHeader(\"Cookie\", cookie1);//将get得到的cookie放进去,之前程序的问题是因为这句话，一定不要在这里设置cookie！\n\t//学校教务系统post需要的7个参数,我用wireshark抓包看的\n\tparams.add(new BasicNameValuePair(\"username\", \"xxxxxxxxxxxxx\"));\n        params.add(new BasicNameValuePair(\"password\", \"xxxxxxxx\"));\n        params.add(new BasicNameValuePair(\"lt\", lt));\n        params.add(new BasicNameValuePair(\"execution\", execution));\n        params.add(new BasicNameValuePair(\"dllt\", \"userNamePasswordLogin\"));\n        params.add(new BasicNameValuePair(\"_eventId\", \"submit\"));\n        params.add(new BasicNameValuePair(\"rmShown\", \"1\"));\n\thttpPost.setEntity(new UrlEncodedFormEntity(params,Consts.UTF_8));\n        //执行post得到结果\n        HttpResponse httpResponse1 = httpClient.execute(httpPost); \n\tHeader[] loca = httpResponse1.getAllHeaders();\n\t//状态码302,响应体为空这里也不写了\n        for(Header loca1 : loca){\n       \t if(loca1.getName().equals(\"Location\"))\n       \t  System.out.println(loca1.getValue());\n        }//通过locatio的地址可以看出是否登录成功\n```\n# 查询成绩\n```\n\tHttpGet g = new HttpGet(\"http://eams.uestc.edu.cn/eams/teach/grade/course/person!historyCourseGrade.action?projectType=MAJOR\");\n        //得到post请求返回的cookie信息\n        String c = setCookie(httpResponse1);\n\t//将cookie注入到get请求头当中\n        g.setHeader(\"Cookie\",c);\n        CloseableHttpResponse r = httpClient.execute(g);\n        String content = EntityUtils.toString(r.getEntity());\n        r.close();\n        File uestc = new File(\"uestc.html\"); //将成绩页面放进uestc.html(进一步处理可以用jsoup和htmlcleaner) \n       \tPrintWriter pw1 = new PrintWriter(uestc,\"UTF-8\");  \n       \tpw1.println(content);  \n       \tpw1.close();  \n```\n# Update\n我将程序的源码放在github上,[点击这里][1]访问源码.对python感兴趣的同学可以去看看Soon写的,Soon的blog在我友链里面.\n[1]: https://github.com/SuperQiang4444/-        \"点击这里\" \n# 总结\n\t这个程序很玄学,运行好几次才能成功一次，我估计是get方法的到的execution有问题,execution可能在.js的页面中生成动态的,我的每次都是e1s1.但是现在的我很菜,看不懂js,所以只能在这挖个坑,等以后变强了,再来填坑了.//填坑,事实证明是post里面设置cookie的原因","source":"_posts/模拟登录教务系统.md","raw":"---\ntitle: 模拟登录教务系统\ndate: 2017-03-30 14:21:47\n\ntags:\n- Web\n- demo\ntoc: true\n---\n最近在学java web,就想着写一个post方法模拟登录的案例。\n<!--more-->\n虽然案例十分简单,但是我花了将近2天时间才写完，而且算是一个半成品吧(后面会提)。现在修复完成。\n一开始不懂cookie的重要性,居然没有自己保存cookie,后来问了问Soon(他曾经拿python写过一样的东西)。Soon没有给我讲HttpClient的用法,而是给我讲了服务器的认证原理,真的是恍然大悟。\n图片如下\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fe4vn69zvoj312z0hg74f.jpg)\n那么登录到底是做什么东西呢,我的理解就是读写cookie，post数据。\n当我们需要获取内容的时候,就需要解析html,jsoup(良心库,仿jquery操作模式),htmlcleaner(我亲测,不好用...所以我用的正则表达式.......)。\n好了,现在进入正题。\n# 准备工作\n\tJDK,HttpClient的包,(htmlcleaner.jar或者jsoup.jar)\n# 创建HttpClient对象\n```\n\tRequestConfig requestConfig = RequestConfig.custom().setCookieSpec(CookieSpecs.STANDARD_STRICT).build();  \n\tCloseableHttpClient httpClient = HttpClients.custom().setDefaultRequestConfig(requestConfig).build();\n```\n# 通过get方法得到lt,execution2个动态参数,保存cookie\n```\n\tHttpGet httpGet = new HttpGet(\"http://idas.uestc.edu.cn/authserver/login?service=http%3A%2F%2Fportal.uestc.edu.cn%2F\");\n\tCloseableHttpResponse response = httpClient.execute(httpGet); \n        String cookie1 = setCookie(response);//保存得到的cookie(setCookie的函数也不写了)\n\t//得到2个动态参数的过程这里就不写了\n```\n# post方法模拟登录\n```\n\tList<NameValuePair> params = new ArrayList<NameValuePair>();\n\tHttpPost httpPost = new HttpPost(\"http://idas.uestc.edu.cn/authserver/login?service=http://portal.uestc.edu.cn/index.portal\");\n\t//httpPost.setHeader(\"Cookie\", cookie1);//将get得到的cookie放进去,之前程序的问题是因为这句话，一定不要在这里设置cookie！\n\t//学校教务系统post需要的7个参数,我用wireshark抓包看的\n\tparams.add(new BasicNameValuePair(\"username\", \"xxxxxxxxxxxxx\"));\n        params.add(new BasicNameValuePair(\"password\", \"xxxxxxxx\"));\n        params.add(new BasicNameValuePair(\"lt\", lt));\n        params.add(new BasicNameValuePair(\"execution\", execution));\n        params.add(new BasicNameValuePair(\"dllt\", \"userNamePasswordLogin\"));\n        params.add(new BasicNameValuePair(\"_eventId\", \"submit\"));\n        params.add(new BasicNameValuePair(\"rmShown\", \"1\"));\n\thttpPost.setEntity(new UrlEncodedFormEntity(params,Consts.UTF_8));\n        //执行post得到结果\n        HttpResponse httpResponse1 = httpClient.execute(httpPost); \n\tHeader[] loca = httpResponse1.getAllHeaders();\n\t//状态码302,响应体为空这里也不写了\n        for(Header loca1 : loca){\n       \t if(loca1.getName().equals(\"Location\"))\n       \t  System.out.println(loca1.getValue());\n        }//通过locatio的地址可以看出是否登录成功\n```\n# 查询成绩\n```\n\tHttpGet g = new HttpGet(\"http://eams.uestc.edu.cn/eams/teach/grade/course/person!historyCourseGrade.action?projectType=MAJOR\");\n        //得到post请求返回的cookie信息\n        String c = setCookie(httpResponse1);\n\t//将cookie注入到get请求头当中\n        g.setHeader(\"Cookie\",c);\n        CloseableHttpResponse r = httpClient.execute(g);\n        String content = EntityUtils.toString(r.getEntity());\n        r.close();\n        File uestc = new File(\"uestc.html\"); //将成绩页面放进uestc.html(进一步处理可以用jsoup和htmlcleaner) \n       \tPrintWriter pw1 = new PrintWriter(uestc,\"UTF-8\");  \n       \tpw1.println(content);  \n       \tpw1.close();  \n```\n# Update\n我将程序的源码放在github上,[点击这里][1]访问源码.对python感兴趣的同学可以去看看Soon写的,Soon的blog在我友链里面.\n[1]: https://github.com/SuperQiang4444/-        \"点击这里\" \n# 总结\n\t这个程序很玄学,运行好几次才能成功一次，我估计是get方法的到的execution有问题,execution可能在.js的页面中生成动态的,我的每次都是e1s1.但是现在的我很菜,看不懂js,所以只能在这挖个坑,等以后变强了,再来填坑了.//填坑,事实证明是post里面设置cookie的原因","slug":"模拟登录教务系统","published":1,"updated":"2018-01-20T06:44:37.678Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m944006c44wa3urgr86j","content":"<p>最近在学java web,就想着写一个post方法模拟登录的案例。<br><a id=\"more\"></a><br>虽然案例十分简单,但是我花了将近2天时间才写完，而且算是一个半成品吧(后面会提)。现在修复完成。<br>一开始不懂cookie的重要性,居然没有自己保存cookie,后来问了问Soon(他曾经拿python写过一样的东西)。Soon没有给我讲HttpClient的用法,而是给我讲了服务器的认证原理,真的是恍然大悟。<br>图片如下<br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fe4vn69zvoj312z0hg74f.jpg\" alt=\"\"><br>那么登录到底是做什么东西呢,我的理解就是读写cookie，post数据。<br>当我们需要获取内容的时候,就需要解析html,jsoup(良心库,仿jquery操作模式),htmlcleaner(我亲测,不好用…所以我用的正则表达式…….)。<br>好了,现在进入正题。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><pre><code>JDK,HttpClient的包,(htmlcleaner.jar或者jsoup.jar)\n</code></pre><h1 id=\"创建HttpClient对象\"><a href=\"#创建HttpClient对象\" class=\"headerlink\" title=\"创建HttpClient对象\"></a>创建HttpClient对象</h1><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">RequestConfig requestConfig</span> = RequestConfig.custom().setCookieSpec(CookieSpecs.STANDARD_STRICT).build();  </div><div class=\"line\"><span class=\"attribute\">CloseableHttpClient httpClient</span> = HttpClients.custom().setDefaultRequestConfig(requestConfig).build();</div></pre></td></tr></table></figure>\n<h1 id=\"通过get方法得到lt-execution2个动态参数-保存cookie\"><a href=\"#通过get方法得到lt-execution2个动态参数-保存cookie\" class=\"headerlink\" title=\"通过get方法得到lt,execution2个动态参数,保存cookie\"></a>通过get方法得到lt,execution2个动态参数,保存cookie</h1><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> <span class=\"type\">HttpGet</span>(<span class=\"string\">\"http://idas.uestc.edu.cn/authserver/login?service=http%3A%2F%2Fportal.uestc.edu.cn%2F\"</span>);</div><div class=\"line\">CloseableHttpResponse response = httpClient.execute(httpGet); </div><div class=\"line\">       <span class=\"keyword\">String</span> cookie1 = setCookie(response);<span class=\"comment\">//保存得到的cookie(setCookie的函数也不写了)</span></div><div class=\"line\"><span class=\"comment\">//得到2个动态参数的过程这里就不写了</span></div></pre></td></tr></table></figure>\n<h1 id=\"post方法模拟登录\"><a href=\"#post方法模拟登录\" class=\"headerlink\" title=\"post方法模拟登录\"></a>post方法模拟登录</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;NameValuePair&gt; <span class=\"keyword\">params</span> = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://idas.uestc.edu.cn/authserver/login?service=http://portal.uestc.edu.cn/index.portal\"</span>);</div><div class=\"line\"><span class=\"comment\">//httpPost.setHeader(\"Cookie\", cookie1);//将get得到的cookie放进去,之前程序的问题是因为这句话，一定不要在这里设置cookie！</span></div><div class=\"line\"><span class=\"comment\">//学校教务系统post需要的7个参数,我用wireshark抓包看的</span></div><div class=\"line\"><span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"xxxxxxxxxxxxx\"</span>));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"password\"</span>, <span class=\"string\">\"xxxxxxxx\"</span>));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"lt\"</span>, lt));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"execution\"</span>, execution));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"dllt\"</span>, <span class=\"string\">\"userNamePasswordLogin\"</span>));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"_eventId\"</span>, <span class=\"string\">\"submit\"</span>));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"rmShown\"</span>, <span class=\"string\">\"1\"</span>));</div><div class=\"line\">httpPost.setEntity(<span class=\"keyword\">new</span> UrlEncodedFormEntity(<span class=\"keyword\">params</span>,Consts.UTF_8));</div><div class=\"line\">       <span class=\"comment\">//执行post得到结果</span></div><div class=\"line\">       HttpResponse httpResponse1 = httpClient.execute(httpPost); </div><div class=\"line\">Header[] loca = httpResponse1.getAllHeaders();</div><div class=\"line\"><span class=\"comment\">//状态码302,响应体为空这里也不写了</span></div><div class=\"line\">       <span class=\"keyword\">for</span>(Header loca1 : loca)&#123;</div><div class=\"line\">      \t <span class=\"keyword\">if</span>(loca1.getName().<span class=\"keyword\">equals</span>(<span class=\"string\">\"Location\"</span>))</div><div class=\"line\">      \t  System.<span class=\"keyword\">out</span>.println(loca1.getValue());</div><div class=\"line\">       &#125;<span class=\"comment\">//通过locatio的地址可以看出是否登录成功</span></div></pre></td></tr></table></figure>\n<h1 id=\"查询成绩\"><a href=\"#查询成绩\" class=\"headerlink\" title=\"查询成绩\"></a>查询成绩</h1><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpGet g = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://eams.uestc.edu.cn/eams/teach/grade/course/person!historyCourseGrade.action?projectType=MAJOR\"</span>);</div><div class=\"line\">       <span class=\"comment\">//得到post请求返回的cookie信息</span></div><div class=\"line\">       <span class=\"keyword\">String</span> c = setCookie(httpResponse1);</div><div class=\"line\"><span class=\"comment\">//将cookie注入到get请求头当中</span></div><div class=\"line\">       g.setHeader(<span class=\"string\">\"Cookie\"</span>,c);</div><div class=\"line\">       CloseableHttpResponse r = httpClient.execute(g);</div><div class=\"line\">       <span class=\"keyword\">String</span> content = EntityUtils.toString(r.getEntity());</div><div class=\"line\">       r.<span class=\"built_in\">close</span>();</div><div class=\"line\">       <span class=\"built_in\">File</span> uestc = <span class=\"keyword\">new</span> <span class=\"built_in\">File</span>(<span class=\"string\">\"uestc.html\"</span>); <span class=\"comment\">//将成绩页面放进uestc.html(进一步处理可以用jsoup和htmlcleaner) </span></div><div class=\"line\">      \tPrintWriter pw1 = <span class=\"keyword\">new</span> PrintWriter(uestc,<span class=\"string\">\"UTF-8\"</span>);  </div><div class=\"line\">      \tpw1.<span class=\"built_in\">println</span>(content);  </div><div class=\"line\">      \tpw1.<span class=\"built_in\">close</span>();</div></pre></td></tr></table></figure>\n<h1 id=\"Update\"><a href=\"#Update\" class=\"headerlink\" title=\"Update\"></a>Update</h1><p>我将程序的源码放在github上,<a href=\"https://github.com/SuperQiang4444/-\" title=\"点击这里\" target=\"_blank\" rel=\"external\">点击这里</a>访问源码.对python感兴趣的同学可以去看看Soon写的,Soon的blog在我友链里面.</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><pre><code>这个程序很玄学,运行好几次才能成功一次，我估计是get方法的到的execution有问题,execution可能在.js的页面中生成动态的,我的每次都是e1s1.但是现在的我很菜,看不懂js,所以只能在这挖个坑,等以后变强了,再来填坑了.//填坑,事实证明是post里面设置cookie的原因\n</code></pre>","excerpt":"<p>最近在学java web,就想着写一个post方法模拟登录的案例。<br>","more":"<br>虽然案例十分简单,但是我花了将近2天时间才写完，而且算是一个半成品吧(后面会提)。现在修复完成。<br>一开始不懂cookie的重要性,居然没有自己保存cookie,后来问了问Soon(他曾经拿python写过一样的东西)。Soon没有给我讲HttpClient的用法,而是给我讲了服务器的认证原理,真的是恍然大悟。<br>图片如下<br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fe4vn69zvoj312z0hg74f.jpg\" alt=\"\"><br>那么登录到底是做什么东西呢,我的理解就是读写cookie，post数据。<br>当我们需要获取内容的时候,就需要解析html,jsoup(良心库,仿jquery操作模式),htmlcleaner(我亲测,不好用…所以我用的正则表达式…….)。<br>好了,现在进入正题。</p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><pre><code>JDK,HttpClient的包,(htmlcleaner.jar或者jsoup.jar)\n</code></pre><h1 id=\"创建HttpClient对象\"><a href=\"#创建HttpClient对象\" class=\"headerlink\" title=\"创建HttpClient对象\"></a>创建HttpClient对象</h1><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">RequestConfig requestConfig</span> = RequestConfig.custom().setCookieSpec(CookieSpecs.STANDARD_STRICT).build();  </div><div class=\"line\"><span class=\"attribute\">CloseableHttpClient httpClient</span> = HttpClients.custom().setDefaultRequestConfig(requestConfig).build();</div></pre></td></tr></table></figure>\n<h1 id=\"通过get方法得到lt-execution2个动态参数-保存cookie\"><a href=\"#通过get方法得到lt-execution2个动态参数-保存cookie\" class=\"headerlink\" title=\"通过get方法得到lt,execution2个动态参数,保存cookie\"></a>通过get方法得到lt,execution2个动态参数,保存cookie</h1><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> <span class=\"type\">HttpGet</span>(<span class=\"string\">\"http://idas.uestc.edu.cn/authserver/login?service=http%3A%2F%2Fportal.uestc.edu.cn%2F\"</span>);</div><div class=\"line\">CloseableHttpResponse response = httpClient.execute(httpGet); </div><div class=\"line\">       <span class=\"keyword\">String</span> cookie1 = setCookie(response);<span class=\"comment\">//保存得到的cookie(setCookie的函数也不写了)</span></div><div class=\"line\"><span class=\"comment\">//得到2个动态参数的过程这里就不写了</span></div></pre></td></tr></table></figure>\n<h1 id=\"post方法模拟登录\"><a href=\"#post方法模拟登录\" class=\"headerlink\" title=\"post方法模拟登录\"></a>post方法模拟登录</h1><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;NameValuePair&gt; <span class=\"keyword\">params</span> = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://idas.uestc.edu.cn/authserver/login?service=http://portal.uestc.edu.cn/index.portal\"</span>);</div><div class=\"line\"><span class=\"comment\">//httpPost.setHeader(\"Cookie\", cookie1);//将get得到的cookie放进去,之前程序的问题是因为这句话，一定不要在这里设置cookie！</span></div><div class=\"line\"><span class=\"comment\">//学校教务系统post需要的7个参数,我用wireshark抓包看的</span></div><div class=\"line\"><span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"xxxxxxxxxxxxx\"</span>));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"password\"</span>, <span class=\"string\">\"xxxxxxxx\"</span>));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"lt\"</span>, lt));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"execution\"</span>, execution));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"dllt\"</span>, <span class=\"string\">\"userNamePasswordLogin\"</span>));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"_eventId\"</span>, <span class=\"string\">\"submit\"</span>));</div><div class=\"line\">       <span class=\"keyword\">params</span>.<span class=\"keyword\">add</span>(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"rmShown\"</span>, <span class=\"string\">\"1\"</span>));</div><div class=\"line\">httpPost.setEntity(<span class=\"keyword\">new</span> UrlEncodedFormEntity(<span class=\"keyword\">params</span>,Consts.UTF_8));</div><div class=\"line\">       <span class=\"comment\">//执行post得到结果</span></div><div class=\"line\">       HttpResponse httpResponse1 = httpClient.execute(httpPost); </div><div class=\"line\">Header[] loca = httpResponse1.getAllHeaders();</div><div class=\"line\"><span class=\"comment\">//状态码302,响应体为空这里也不写了</span></div><div class=\"line\">       <span class=\"keyword\">for</span>(Header loca1 : loca)&#123;</div><div class=\"line\">      \t <span class=\"keyword\">if</span>(loca1.getName().<span class=\"keyword\">equals</span>(<span class=\"string\">\"Location\"</span>))</div><div class=\"line\">      \t  System.<span class=\"keyword\">out</span>.println(loca1.getValue());</div><div class=\"line\">       &#125;<span class=\"comment\">//通过locatio的地址可以看出是否登录成功</span></div></pre></td></tr></table></figure>\n<h1 id=\"查询成绩\"><a href=\"#查询成绩\" class=\"headerlink\" title=\"查询成绩\"></a>查询成绩</h1><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpGet g = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://eams.uestc.edu.cn/eams/teach/grade/course/person!historyCourseGrade.action?projectType=MAJOR\"</span>);</div><div class=\"line\">       <span class=\"comment\">//得到post请求返回的cookie信息</span></div><div class=\"line\">       <span class=\"keyword\">String</span> c = setCookie(httpResponse1);</div><div class=\"line\"><span class=\"comment\">//将cookie注入到get请求头当中</span></div><div class=\"line\">       g.setHeader(<span class=\"string\">\"Cookie\"</span>,c);</div><div class=\"line\">       CloseableHttpResponse r = httpClient.execute(g);</div><div class=\"line\">       <span class=\"keyword\">String</span> content = EntityUtils.toString(r.getEntity());</div><div class=\"line\">       r.<span class=\"built_in\">close</span>();</div><div class=\"line\">       <span class=\"built_in\">File</span> uestc = <span class=\"keyword\">new</span> <span class=\"built_in\">File</span>(<span class=\"string\">\"uestc.html\"</span>); <span class=\"comment\">//将成绩页面放进uestc.html(进一步处理可以用jsoup和htmlcleaner) </span></div><div class=\"line\">      \tPrintWriter pw1 = <span class=\"keyword\">new</span> PrintWriter(uestc,<span class=\"string\">\"UTF-8\"</span>);  </div><div class=\"line\">      \tpw1.<span class=\"built_in\">println</span>(content);  </div><div class=\"line\">      \tpw1.<span class=\"built_in\">close</span>();</div></pre></td></tr></table></figure>\n<h1 id=\"Update\"><a href=\"#Update\" class=\"headerlink\" title=\"Update\"></a>Update</h1><p>我将程序的源码放在github上,<a href=\"https://github.com/SuperQiang4444/-\" title=\"点击这里\">点击这里</a>访问源码.对python感兴趣的同学可以去看看Soon写的,Soon的blog在我友链里面.</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><pre><code>这个程序很玄学,运行好几次才能成功一次，我估计是get方法的到的execution有问题,execution可能在.js的页面中生成动态的,我的每次都是e1s1.但是现在的我很菜,看不懂js,所以只能在这挖个坑,等以后变强了,再来填坑了.//填坑,事实证明是post里面设置cookie的原因\n</code></pre>"},{"title":"英语学习1","date":"2017-04-24T03:57:02.000Z","toc":true,"_content":"#### herald v.预示；通报n.预兆；传令官\nA timely heavy snow is considered the herald of a fruitful year.\n瑞雪兆丰年。\n#### preface n.前言\n#### personality n.个性\nShe had a sunny personality that was very engaging(迷人的).\n她很有正能量，这点很迷人。\n#### personnel n.员工；人事部\nThe personnel not only hava a good knowledge of computer science,but also understand enterprises management.\n这些员工不但对计算机有足够的知识，同时也了解企业管理。\n#### perimeter n.周长；外围区域；周界\nA fence marked the perimeter of the field.\n一道篱笆标明了那块田地的周界。\n#### pertinent a.相关的，有关的\nbe pertinent to\nrelevant a.相关的，有关的\nYour remark is not pertinent to the subject.\n你的话不切题。\n#### proverb n.谚语，格言\n\"if you want yo go fast,go alone;if you want to go far,go with others.\"says an African proverb.\n非洲的一个谚语说:\"如果你想走得快，就自己独行；如果你想走得远，就与人同行。\"\n#### peril n.危险\nperilous a.危险的\nThe economy is in peril.\n经济要出问题了。\n#### rescue n/vt.营救\n#### tact n.机智；老练\ntactic n.策略；战术(常用复数tactics)\n#### rebuke vt./n.非难；指责\nreproach vt./n.指责\n#### incense n.香vt.使...变香；惹怒\nincense stick 香烛，香薰棒\nbe incensed at 对...很生气\n#### intake n.摄入量；摄入；吸入\ndose n.剂量\nIf you want to keep fit,you hava to regulate your food intake.\n#### expand vt.扩张\nexpansion n.扩张\n#### expend v.花费，消费\nconsume v.消费，浪费\nexpenditure n.花费，支出，经费\nupdate 2017.4.30\n#### interpersonal a.人际的\ninterpersonal skills 人际交往技巧\n#### intercourse n.交际，性交\n#### adapt v.改变；适应\nadopt v.收养\n#### cooperate vi.合作\n#### compact a.紧凑的；简洁的vt.压紧；使简洁\n#### conceit n.自负；狂妄\n#### distribute v.分配\nupdate 2017.5.3\n#### attribute v.归功于n.特征\n#### subdue vt.克服，减轻，抑制；征服\n#### superb a.最佳的\n#### supreme a.最高的；至高无上的\n#### discard v.丢弃，抛弃\n#### dismiss v.解雇；解散\n#### disclose v.揭露\n#### despise vt.鄙视\n#### irrespective a.不考虑的，不管的\n#### prospect n.前途；前方的风景\n#### retrospect n.回顾\n#### spectacle n.大场面，壮观的景色；眼镜\n#### spectacular a.壮观的；很好的\n#### spectator n.观众\n#### exceed v.超过\n#### excess n.超过；过量a.过量的;附加的\n#### proceed vt.继续进行\n#### procession n.队伍\n#### precede v.领先\n#### unprecedented a.前所未有的\n#### predecessor n.前任；前辈\n#### recede v.退潮；衰退\n#### concede vt.承认；让步；割让，赔款\n#### transcend v.超出；超越\n","source":"_posts/英语学习1.md","raw":"---\ntitle: 英语学习1\ndate: 2017-04-24 11:57:02\ntags:\n- 英语\ntoc: true\n---\n#### herald v.预示；通报n.预兆；传令官\nA timely heavy snow is considered the herald of a fruitful year.\n瑞雪兆丰年。\n#### preface n.前言\n#### personality n.个性\nShe had a sunny personality that was very engaging(迷人的).\n她很有正能量，这点很迷人。\n#### personnel n.员工；人事部\nThe personnel not only hava a good knowledge of computer science,but also understand enterprises management.\n这些员工不但对计算机有足够的知识，同时也了解企业管理。\n#### perimeter n.周长；外围区域；周界\nA fence marked the perimeter of the field.\n一道篱笆标明了那块田地的周界。\n#### pertinent a.相关的，有关的\nbe pertinent to\nrelevant a.相关的，有关的\nYour remark is not pertinent to the subject.\n你的话不切题。\n#### proverb n.谚语，格言\n\"if you want yo go fast,go alone;if you want to go far,go with others.\"says an African proverb.\n非洲的一个谚语说:\"如果你想走得快，就自己独行；如果你想走得远，就与人同行。\"\n#### peril n.危险\nperilous a.危险的\nThe economy is in peril.\n经济要出问题了。\n#### rescue n/vt.营救\n#### tact n.机智；老练\ntactic n.策略；战术(常用复数tactics)\n#### rebuke vt./n.非难；指责\nreproach vt./n.指责\n#### incense n.香vt.使...变香；惹怒\nincense stick 香烛，香薰棒\nbe incensed at 对...很生气\n#### intake n.摄入量；摄入；吸入\ndose n.剂量\nIf you want to keep fit,you hava to regulate your food intake.\n#### expand vt.扩张\nexpansion n.扩张\n#### expend v.花费，消费\nconsume v.消费，浪费\nexpenditure n.花费，支出，经费\nupdate 2017.4.30\n#### interpersonal a.人际的\ninterpersonal skills 人际交往技巧\n#### intercourse n.交际，性交\n#### adapt v.改变；适应\nadopt v.收养\n#### cooperate vi.合作\n#### compact a.紧凑的；简洁的vt.压紧；使简洁\n#### conceit n.自负；狂妄\n#### distribute v.分配\nupdate 2017.5.3\n#### attribute v.归功于n.特征\n#### subdue vt.克服，减轻，抑制；征服\n#### superb a.最佳的\n#### supreme a.最高的；至高无上的\n#### discard v.丢弃，抛弃\n#### dismiss v.解雇；解散\n#### disclose v.揭露\n#### despise vt.鄙视\n#### irrespective a.不考虑的，不管的\n#### prospect n.前途；前方的风景\n#### retrospect n.回顾\n#### spectacle n.大场面，壮观的景色；眼镜\n#### spectacular a.壮观的；很好的\n#### spectator n.观众\n#### exceed v.超过\n#### excess n.超过；过量a.过量的;附加的\n#### proceed vt.继续进行\n#### procession n.队伍\n#### precede v.领先\n#### unprecedented a.前所未有的\n#### predecessor n.前任；前辈\n#### recede v.退潮；衰退\n#### concede vt.承认；让步；割让，赔款\n#### transcend v.超出；超越\n","slug":"英语学习1","published":1,"updated":"2018-01-20T06:44:37.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m94a006e44wakiuybc9s","content":"<h4 id=\"herald-v-预示；通报n-预兆；传令官\"><a href=\"#herald-v-预示；通报n-预兆；传令官\" class=\"headerlink\" title=\"herald v.预示；通报n.预兆；传令官\"></a>herald v.预示；通报n.预兆；传令官</h4><p>A timely heavy snow is considered the herald of a fruitful year.<br>瑞雪兆丰年。</p>\n<h4 id=\"preface-n-前言\"><a href=\"#preface-n-前言\" class=\"headerlink\" title=\"preface n.前言\"></a>preface n.前言</h4><h4 id=\"personality-n-个性\"><a href=\"#personality-n-个性\" class=\"headerlink\" title=\"personality n.个性\"></a>personality n.个性</h4><p>She had a sunny personality that was very engaging(迷人的).<br>她很有正能量，这点很迷人。</p>\n<h4 id=\"personnel-n-员工；人事部\"><a href=\"#personnel-n-员工；人事部\" class=\"headerlink\" title=\"personnel n.员工；人事部\"></a>personnel n.员工；人事部</h4><p>The personnel not only hava a good knowledge of computer science,but also understand enterprises management.<br>这些员工不但对计算机有足够的知识，同时也了解企业管理。</p>\n<h4 id=\"perimeter-n-周长；外围区域；周界\"><a href=\"#perimeter-n-周长；外围区域；周界\" class=\"headerlink\" title=\"perimeter n.周长；外围区域；周界\"></a>perimeter n.周长；外围区域；周界</h4><p>A fence marked the perimeter of the field.<br>一道篱笆标明了那块田地的周界。</p>\n<h4 id=\"pertinent-a-相关的，有关的\"><a href=\"#pertinent-a-相关的，有关的\" class=\"headerlink\" title=\"pertinent a.相关的，有关的\"></a>pertinent a.相关的，有关的</h4><p>be pertinent to<br>relevant a.相关的，有关的<br>Your remark is not pertinent to the subject.<br>你的话不切题。</p>\n<h4 id=\"proverb-n-谚语，格言\"><a href=\"#proverb-n-谚语，格言\" class=\"headerlink\" title=\"proverb n.谚语，格言\"></a>proverb n.谚语，格言</h4><p>“if you want yo go fast,go alone;if you want to go far,go with others.”says an African proverb.<br>非洲的一个谚语说:”如果你想走得快，就自己独行；如果你想走得远，就与人同行。”</p>\n<h4 id=\"peril-n-危险\"><a href=\"#peril-n-危险\" class=\"headerlink\" title=\"peril n.危险\"></a>peril n.危险</h4><p>perilous a.危险的<br>The economy is in peril.<br>经济要出问题了。</p>\n<h4 id=\"rescue-n-vt-营救\"><a href=\"#rescue-n-vt-营救\" class=\"headerlink\" title=\"rescue n/vt.营救\"></a>rescue n/vt.营救</h4><h4 id=\"tact-n-机智；老练\"><a href=\"#tact-n-机智；老练\" class=\"headerlink\" title=\"tact n.机智；老练\"></a>tact n.机智；老练</h4><p>tactic n.策略；战术(常用复数tactics)</p>\n<h4 id=\"rebuke-vt-n-非难；指责\"><a href=\"#rebuke-vt-n-非难；指责\" class=\"headerlink\" title=\"rebuke vt./n.非难；指责\"></a>rebuke vt./n.非难；指责</h4><p>reproach vt./n.指责</p>\n<h4 id=\"incense-n-香vt-使…变香；惹怒\"><a href=\"#incense-n-香vt-使…变香；惹怒\" class=\"headerlink\" title=\"incense n.香vt.使…变香；惹怒\"></a>incense n.香vt.使…变香；惹怒</h4><p>incense stick 香烛，香薰棒<br>be incensed at 对…很生气</p>\n<h4 id=\"intake-n-摄入量；摄入；吸入\"><a href=\"#intake-n-摄入量；摄入；吸入\" class=\"headerlink\" title=\"intake n.摄入量；摄入；吸入\"></a>intake n.摄入量；摄入；吸入</h4><p>dose n.剂量<br>If you want to keep fit,you hava to regulate your food intake.</p>\n<h4 id=\"expand-vt-扩张\"><a href=\"#expand-vt-扩张\" class=\"headerlink\" title=\"expand vt.扩张\"></a>expand vt.扩张</h4><p>expansion n.扩张</p>\n<h4 id=\"expend-v-花费，消费\"><a href=\"#expend-v-花费，消费\" class=\"headerlink\" title=\"expend v.花费，消费\"></a>expend v.花费，消费</h4><p>consume v.消费，浪费<br>expenditure n.花费，支出，经费<br>update 2017.4.30</p>\n<h4 id=\"interpersonal-a-人际的\"><a href=\"#interpersonal-a-人际的\" class=\"headerlink\" title=\"interpersonal a.人际的\"></a>interpersonal a.人际的</h4><p>interpersonal skills 人际交往技巧</p>\n<h4 id=\"intercourse-n-交际，性交\"><a href=\"#intercourse-n-交际，性交\" class=\"headerlink\" title=\"intercourse n.交际，性交\"></a>intercourse n.交际，性交</h4><h4 id=\"adapt-v-改变；适应\"><a href=\"#adapt-v-改变；适应\" class=\"headerlink\" title=\"adapt v.改变；适应\"></a>adapt v.改变；适应</h4><p>adopt v.收养</p>\n<h4 id=\"cooperate-vi-合作\"><a href=\"#cooperate-vi-合作\" class=\"headerlink\" title=\"cooperate vi.合作\"></a>cooperate vi.合作</h4><h4 id=\"compact-a-紧凑的；简洁的vt-压紧；使简洁\"><a href=\"#compact-a-紧凑的；简洁的vt-压紧；使简洁\" class=\"headerlink\" title=\"compact a.紧凑的；简洁的vt.压紧；使简洁\"></a>compact a.紧凑的；简洁的vt.压紧；使简洁</h4><h4 id=\"conceit-n-自负；狂妄\"><a href=\"#conceit-n-自负；狂妄\" class=\"headerlink\" title=\"conceit n.自负；狂妄\"></a>conceit n.自负；狂妄</h4><h4 id=\"distribute-v-分配\"><a href=\"#distribute-v-分配\" class=\"headerlink\" title=\"distribute v.分配\"></a>distribute v.分配</h4><p>update 2017.5.3</p>\n<h4 id=\"attribute-v-归功于n-特征\"><a href=\"#attribute-v-归功于n-特征\" class=\"headerlink\" title=\"attribute v.归功于n.特征\"></a>attribute v.归功于n.特征</h4><h4 id=\"subdue-vt-克服，减轻，抑制；征服\"><a href=\"#subdue-vt-克服，减轻，抑制；征服\" class=\"headerlink\" title=\"subdue vt.克服，减轻，抑制；征服\"></a>subdue vt.克服，减轻，抑制；征服</h4><h4 id=\"superb-a-最佳的\"><a href=\"#superb-a-最佳的\" class=\"headerlink\" title=\"superb a.最佳的\"></a>superb a.最佳的</h4><h4 id=\"supreme-a-最高的；至高无上的\"><a href=\"#supreme-a-最高的；至高无上的\" class=\"headerlink\" title=\"supreme a.最高的；至高无上的\"></a>supreme a.最高的；至高无上的</h4><h4 id=\"discard-v-丢弃，抛弃\"><a href=\"#discard-v-丢弃，抛弃\" class=\"headerlink\" title=\"discard v.丢弃，抛弃\"></a>discard v.丢弃，抛弃</h4><h4 id=\"dismiss-v-解雇；解散\"><a href=\"#dismiss-v-解雇；解散\" class=\"headerlink\" title=\"dismiss v.解雇；解散\"></a>dismiss v.解雇；解散</h4><h4 id=\"disclose-v-揭露\"><a href=\"#disclose-v-揭露\" class=\"headerlink\" title=\"disclose v.揭露\"></a>disclose v.揭露</h4><h4 id=\"despise-vt-鄙视\"><a href=\"#despise-vt-鄙视\" class=\"headerlink\" title=\"despise vt.鄙视\"></a>despise vt.鄙视</h4><h4 id=\"irrespective-a-不考虑的，不管的\"><a href=\"#irrespective-a-不考虑的，不管的\" class=\"headerlink\" title=\"irrespective a.不考虑的，不管的\"></a>irrespective a.不考虑的，不管的</h4><h4 id=\"prospect-n-前途；前方的风景\"><a href=\"#prospect-n-前途；前方的风景\" class=\"headerlink\" title=\"prospect n.前途；前方的风景\"></a>prospect n.前途；前方的风景</h4><h4 id=\"retrospect-n-回顾\"><a href=\"#retrospect-n-回顾\" class=\"headerlink\" title=\"retrospect n.回顾\"></a>retrospect n.回顾</h4><h4 id=\"spectacle-n-大场面，壮观的景色；眼镜\"><a href=\"#spectacle-n-大场面，壮观的景色；眼镜\" class=\"headerlink\" title=\"spectacle n.大场面，壮观的景色；眼镜\"></a>spectacle n.大场面，壮观的景色；眼镜</h4><h4 id=\"spectacular-a-壮观的；很好的\"><a href=\"#spectacular-a-壮观的；很好的\" class=\"headerlink\" title=\"spectacular a.壮观的；很好的\"></a>spectacular a.壮观的；很好的</h4><h4 id=\"spectator-n-观众\"><a href=\"#spectator-n-观众\" class=\"headerlink\" title=\"spectator n.观众\"></a>spectator n.观众</h4><h4 id=\"exceed-v-超过\"><a href=\"#exceed-v-超过\" class=\"headerlink\" title=\"exceed v.超过\"></a>exceed v.超过</h4><h4 id=\"excess-n-超过；过量a-过量的-附加的\"><a href=\"#excess-n-超过；过量a-过量的-附加的\" class=\"headerlink\" title=\"excess n.超过；过量a.过量的;附加的\"></a>excess n.超过；过量a.过量的;附加的</h4><h4 id=\"proceed-vt-继续进行\"><a href=\"#proceed-vt-继续进行\" class=\"headerlink\" title=\"proceed vt.继续进行\"></a>proceed vt.继续进行</h4><h4 id=\"procession-n-队伍\"><a href=\"#procession-n-队伍\" class=\"headerlink\" title=\"procession n.队伍\"></a>procession n.队伍</h4><h4 id=\"precede-v-领先\"><a href=\"#precede-v-领先\" class=\"headerlink\" title=\"precede v.领先\"></a>precede v.领先</h4><h4 id=\"unprecedented-a-前所未有的\"><a href=\"#unprecedented-a-前所未有的\" class=\"headerlink\" title=\"unprecedented a.前所未有的\"></a>unprecedented a.前所未有的</h4><h4 id=\"predecessor-n-前任；前辈\"><a href=\"#predecessor-n-前任；前辈\" class=\"headerlink\" title=\"predecessor n.前任；前辈\"></a>predecessor n.前任；前辈</h4><h4 id=\"recede-v-退潮；衰退\"><a href=\"#recede-v-退潮；衰退\" class=\"headerlink\" title=\"recede v.退潮；衰退\"></a>recede v.退潮；衰退</h4><h4 id=\"concede-vt-承认；让步；割让，赔款\"><a href=\"#concede-vt-承认；让步；割让，赔款\" class=\"headerlink\" title=\"concede vt.承认；让步；割让，赔款\"></a>concede vt.承认；让步；割让，赔款</h4><h4 id=\"transcend-v-超出；超越\"><a href=\"#transcend-v-超出；超越\" class=\"headerlink\" title=\"transcend v.超出；超越\"></a>transcend v.超出；超越</h4>","excerpt":"","more":"<h4 id=\"herald-v-预示；通报n-预兆；传令官\"><a href=\"#herald-v-预示；通报n-预兆；传令官\" class=\"headerlink\" title=\"herald v.预示；通报n.预兆；传令官\"></a>herald v.预示；通报n.预兆；传令官</h4><p>A timely heavy snow is considered the herald of a fruitful year.<br>瑞雪兆丰年。</p>\n<h4 id=\"preface-n-前言\"><a href=\"#preface-n-前言\" class=\"headerlink\" title=\"preface n.前言\"></a>preface n.前言</h4><h4 id=\"personality-n-个性\"><a href=\"#personality-n-个性\" class=\"headerlink\" title=\"personality n.个性\"></a>personality n.个性</h4><p>She had a sunny personality that was very engaging(迷人的).<br>她很有正能量，这点很迷人。</p>\n<h4 id=\"personnel-n-员工；人事部\"><a href=\"#personnel-n-员工；人事部\" class=\"headerlink\" title=\"personnel n.员工；人事部\"></a>personnel n.员工；人事部</h4><p>The personnel not only hava a good knowledge of computer science,but also understand enterprises management.<br>这些员工不但对计算机有足够的知识，同时也了解企业管理。</p>\n<h4 id=\"perimeter-n-周长；外围区域；周界\"><a href=\"#perimeter-n-周长；外围区域；周界\" class=\"headerlink\" title=\"perimeter n.周长；外围区域；周界\"></a>perimeter n.周长；外围区域；周界</h4><p>A fence marked the perimeter of the field.<br>一道篱笆标明了那块田地的周界。</p>\n<h4 id=\"pertinent-a-相关的，有关的\"><a href=\"#pertinent-a-相关的，有关的\" class=\"headerlink\" title=\"pertinent a.相关的，有关的\"></a>pertinent a.相关的，有关的</h4><p>be pertinent to<br>relevant a.相关的，有关的<br>Your remark is not pertinent to the subject.<br>你的话不切题。</p>\n<h4 id=\"proverb-n-谚语，格言\"><a href=\"#proverb-n-谚语，格言\" class=\"headerlink\" title=\"proverb n.谚语，格言\"></a>proverb n.谚语，格言</h4><p>“if you want yo go fast,go alone;if you want to go far,go with others.”says an African proverb.<br>非洲的一个谚语说:”如果你想走得快，就自己独行；如果你想走得远，就与人同行。”</p>\n<h4 id=\"peril-n-危险\"><a href=\"#peril-n-危险\" class=\"headerlink\" title=\"peril n.危险\"></a>peril n.危险</h4><p>perilous a.危险的<br>The economy is in peril.<br>经济要出问题了。</p>\n<h4 id=\"rescue-n-vt-营救\"><a href=\"#rescue-n-vt-营救\" class=\"headerlink\" title=\"rescue n/vt.营救\"></a>rescue n/vt.营救</h4><h4 id=\"tact-n-机智；老练\"><a href=\"#tact-n-机智；老练\" class=\"headerlink\" title=\"tact n.机智；老练\"></a>tact n.机智；老练</h4><p>tactic n.策略；战术(常用复数tactics)</p>\n<h4 id=\"rebuke-vt-n-非难；指责\"><a href=\"#rebuke-vt-n-非难；指责\" class=\"headerlink\" title=\"rebuke vt./n.非难；指责\"></a>rebuke vt./n.非难；指责</h4><p>reproach vt./n.指责</p>\n<h4 id=\"incense-n-香vt-使…变香；惹怒\"><a href=\"#incense-n-香vt-使…变香；惹怒\" class=\"headerlink\" title=\"incense n.香vt.使…变香；惹怒\"></a>incense n.香vt.使…变香；惹怒</h4><p>incense stick 香烛，香薰棒<br>be incensed at 对…很生气</p>\n<h4 id=\"intake-n-摄入量；摄入；吸入\"><a href=\"#intake-n-摄入量；摄入；吸入\" class=\"headerlink\" title=\"intake n.摄入量；摄入；吸入\"></a>intake n.摄入量；摄入；吸入</h4><p>dose n.剂量<br>If you want to keep fit,you hava to regulate your food intake.</p>\n<h4 id=\"expand-vt-扩张\"><a href=\"#expand-vt-扩张\" class=\"headerlink\" title=\"expand vt.扩张\"></a>expand vt.扩张</h4><p>expansion n.扩张</p>\n<h4 id=\"expend-v-花费，消费\"><a href=\"#expend-v-花费，消费\" class=\"headerlink\" title=\"expend v.花费，消费\"></a>expend v.花费，消费</h4><p>consume v.消费，浪费<br>expenditure n.花费，支出，经费<br>update 2017.4.30</p>\n<h4 id=\"interpersonal-a-人际的\"><a href=\"#interpersonal-a-人际的\" class=\"headerlink\" title=\"interpersonal a.人际的\"></a>interpersonal a.人际的</h4><p>interpersonal skills 人际交往技巧</p>\n<h4 id=\"intercourse-n-交际，性交\"><a href=\"#intercourse-n-交际，性交\" class=\"headerlink\" title=\"intercourse n.交际，性交\"></a>intercourse n.交际，性交</h4><h4 id=\"adapt-v-改变；适应\"><a href=\"#adapt-v-改变；适应\" class=\"headerlink\" title=\"adapt v.改变；适应\"></a>adapt v.改变；适应</h4><p>adopt v.收养</p>\n<h4 id=\"cooperate-vi-合作\"><a href=\"#cooperate-vi-合作\" class=\"headerlink\" title=\"cooperate vi.合作\"></a>cooperate vi.合作</h4><h4 id=\"compact-a-紧凑的；简洁的vt-压紧；使简洁\"><a href=\"#compact-a-紧凑的；简洁的vt-压紧；使简洁\" class=\"headerlink\" title=\"compact a.紧凑的；简洁的vt.压紧；使简洁\"></a>compact a.紧凑的；简洁的vt.压紧；使简洁</h4><h4 id=\"conceit-n-自负；狂妄\"><a href=\"#conceit-n-自负；狂妄\" class=\"headerlink\" title=\"conceit n.自负；狂妄\"></a>conceit n.自负；狂妄</h4><h4 id=\"distribute-v-分配\"><a href=\"#distribute-v-分配\" class=\"headerlink\" title=\"distribute v.分配\"></a>distribute v.分配</h4><p>update 2017.5.3</p>\n<h4 id=\"attribute-v-归功于n-特征\"><a href=\"#attribute-v-归功于n-特征\" class=\"headerlink\" title=\"attribute v.归功于n.特征\"></a>attribute v.归功于n.特征</h4><h4 id=\"subdue-vt-克服，减轻，抑制；征服\"><a href=\"#subdue-vt-克服，减轻，抑制；征服\" class=\"headerlink\" title=\"subdue vt.克服，减轻，抑制；征服\"></a>subdue vt.克服，减轻，抑制；征服</h4><h4 id=\"superb-a-最佳的\"><a href=\"#superb-a-最佳的\" class=\"headerlink\" title=\"superb a.最佳的\"></a>superb a.最佳的</h4><h4 id=\"supreme-a-最高的；至高无上的\"><a href=\"#supreme-a-最高的；至高无上的\" class=\"headerlink\" title=\"supreme a.最高的；至高无上的\"></a>supreme a.最高的；至高无上的</h4><h4 id=\"discard-v-丢弃，抛弃\"><a href=\"#discard-v-丢弃，抛弃\" class=\"headerlink\" title=\"discard v.丢弃，抛弃\"></a>discard v.丢弃，抛弃</h4><h4 id=\"dismiss-v-解雇；解散\"><a href=\"#dismiss-v-解雇；解散\" class=\"headerlink\" title=\"dismiss v.解雇；解散\"></a>dismiss v.解雇；解散</h4><h4 id=\"disclose-v-揭露\"><a href=\"#disclose-v-揭露\" class=\"headerlink\" title=\"disclose v.揭露\"></a>disclose v.揭露</h4><h4 id=\"despise-vt-鄙视\"><a href=\"#despise-vt-鄙视\" class=\"headerlink\" title=\"despise vt.鄙视\"></a>despise vt.鄙视</h4><h4 id=\"irrespective-a-不考虑的，不管的\"><a href=\"#irrespective-a-不考虑的，不管的\" class=\"headerlink\" title=\"irrespective a.不考虑的，不管的\"></a>irrespective a.不考虑的，不管的</h4><h4 id=\"prospect-n-前途；前方的风景\"><a href=\"#prospect-n-前途；前方的风景\" class=\"headerlink\" title=\"prospect n.前途；前方的风景\"></a>prospect n.前途；前方的风景</h4><h4 id=\"retrospect-n-回顾\"><a href=\"#retrospect-n-回顾\" class=\"headerlink\" title=\"retrospect n.回顾\"></a>retrospect n.回顾</h4><h4 id=\"spectacle-n-大场面，壮观的景色；眼镜\"><a href=\"#spectacle-n-大场面，壮观的景色；眼镜\" class=\"headerlink\" title=\"spectacle n.大场面，壮观的景色；眼镜\"></a>spectacle n.大场面，壮观的景色；眼镜</h4><h4 id=\"spectacular-a-壮观的；很好的\"><a href=\"#spectacular-a-壮观的；很好的\" class=\"headerlink\" title=\"spectacular a.壮观的；很好的\"></a>spectacular a.壮观的；很好的</h4><h4 id=\"spectator-n-观众\"><a href=\"#spectator-n-观众\" class=\"headerlink\" title=\"spectator n.观众\"></a>spectator n.观众</h4><h4 id=\"exceed-v-超过\"><a href=\"#exceed-v-超过\" class=\"headerlink\" title=\"exceed v.超过\"></a>exceed v.超过</h4><h4 id=\"excess-n-超过；过量a-过量的-附加的\"><a href=\"#excess-n-超过；过量a-过量的-附加的\" class=\"headerlink\" title=\"excess n.超过；过量a.过量的;附加的\"></a>excess n.超过；过量a.过量的;附加的</h4><h4 id=\"proceed-vt-继续进行\"><a href=\"#proceed-vt-继续进行\" class=\"headerlink\" title=\"proceed vt.继续进行\"></a>proceed vt.继续进行</h4><h4 id=\"procession-n-队伍\"><a href=\"#procession-n-队伍\" class=\"headerlink\" title=\"procession n.队伍\"></a>procession n.队伍</h4><h4 id=\"precede-v-领先\"><a href=\"#precede-v-领先\" class=\"headerlink\" title=\"precede v.领先\"></a>precede v.领先</h4><h4 id=\"unprecedented-a-前所未有的\"><a href=\"#unprecedented-a-前所未有的\" class=\"headerlink\" title=\"unprecedented a.前所未有的\"></a>unprecedented a.前所未有的</h4><h4 id=\"predecessor-n-前任；前辈\"><a href=\"#predecessor-n-前任；前辈\" class=\"headerlink\" title=\"predecessor n.前任；前辈\"></a>predecessor n.前任；前辈</h4><h4 id=\"recede-v-退潮；衰退\"><a href=\"#recede-v-退潮；衰退\" class=\"headerlink\" title=\"recede v.退潮；衰退\"></a>recede v.退潮；衰退</h4><h4 id=\"concede-vt-承认；让步；割让，赔款\"><a href=\"#concede-vt-承认；让步；割让，赔款\" class=\"headerlink\" title=\"concede vt.承认；让步；割让，赔款\"></a>concede vt.承认；让步；割让，赔款</h4><h4 id=\"transcend-v-超出；超越\"><a href=\"#transcend-v-超出；超越\" class=\"headerlink\" title=\"transcend v.超出；超越\"></a>transcend v.超出；超越</h4>"},{"title":"监听器学习笔记","date":"2017-04-18T06:09:58.000Z","toc":true,"_content":"监听器\n<!--more-->\n# 生命周期监听器和属性监听器\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feqtb9su8dj30j20dwgom.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feqtbas6jqj30iz03igm4.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feqtbbajirj30lm07rwg5.jpg)\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feqtbbsknij30c407ydgy.jpg)\n# 感知监听器\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feqtg50n0uj30hz03kq36.jpg)\nHttpSessionActivactionListener\n# Session的序列化\ncontext.xml中写上\n<Manager pathname=\"\" />就可以不让session序列化\n# Session的钝化和活化\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feqto8tc55j30q70bewh2.jpg)\n\n\n","source":"_posts/监听器学习笔记.md","raw":"---\ntitle: 监听器学习笔记\ndate: 2017-04-18 14:09:58\ntags:\n- Web\n- 监听器\ntoc: true\n---\n监听器\n<!--more-->\n# 生命周期监听器和属性监听器\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feqtb9su8dj30j20dwgom.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feqtbas6jqj30iz03igm4.jpg)\n![](http://wx4.sinaimg.cn/large/005P8ayVgy1feqtbbajirj30lm07rwg5.jpg)\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feqtbbsknij30c407ydgy.jpg)\n# 感知监听器\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feqtg50n0uj30hz03kq36.jpg)\nHttpSessionActivactionListener\n# Session的序列化\ncontext.xml中写上\n<Manager pathname=\"\" />就可以不让session序列化\n# Session的钝化和活化\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1feqto8tc55j30q70bewh2.jpg)\n\n\n","slug":"监听器学习笔记","published":1,"updated":"2018-01-20T06:44:37.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m94d006g44wal8xoexpz","content":"<p>监听器<br><a id=\"more\"></a></p>\n<h1 id=\"生命周期监听器和属性监听器\"><a href=\"#生命周期监听器和属性监听器\" class=\"headerlink\" title=\"生命周期监听器和属性监听器\"></a>生命周期监听器和属性监听器</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feqtb9su8dj30j20dwgom.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feqtbas6jqj30iz03igm4.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feqtbbajirj30lm07rwg5.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feqtbbsknij30c407ydgy.jpg\" alt=\"\"></p>\n<h1 id=\"感知监听器\"><a href=\"#感知监听器\" class=\"headerlink\" title=\"感知监听器\"></a>感知监听器</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feqtg50n0uj30hz03kq36.jpg\" alt=\"\"><br>HttpSessionActivactionListener</p>\n<h1 id=\"Session的序列化\"><a href=\"#Session的序列化\" class=\"headerlink\" title=\"Session的序列化\"></a>Session的序列化</h1><p>context.xml中写上</p>\n<p><manager pathname=\"\">就可以不让session序列化</manager></p>\n<h1 id=\"Session的钝化和活化\"><a href=\"#Session的钝化和活化\" class=\"headerlink\" title=\"Session的钝化和活化\"></a>Session的钝化和活化</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feqto8tc55j30q70bewh2.jpg\" alt=\"\"></p>\n","excerpt":"<p>监听器<br>","more":"</p>\n<h1 id=\"生命周期监听器和属性监听器\"><a href=\"#生命周期监听器和属性监听器\" class=\"headerlink\" title=\"生命周期监听器和属性监听器\"></a>生命周期监听器和属性监听器</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feqtb9su8dj30j20dwgom.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feqtbas6jqj30iz03igm4.jpg\" alt=\"\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1feqtbbajirj30lm07rwg5.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feqtbbsknij30c407ydgy.jpg\" alt=\"\"></p>\n<h1 id=\"感知监听器\"><a href=\"#感知监听器\" class=\"headerlink\" title=\"感知监听器\"></a>感知监听器</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feqtg50n0uj30hz03kq36.jpg\" alt=\"\"><br>HttpSessionActivactionListener</p>\n<h1 id=\"Session的序列化\"><a href=\"#Session的序列化\" class=\"headerlink\" title=\"Session的序列化\"></a>Session的序列化</h1><p>context.xml中写上</p>\n<p><Manager pathname=\"\" />就可以不让session序列化</p>\n<h1 id=\"Session的钝化和活化\"><a href=\"#Session的钝化和活化\" class=\"headerlink\" title=\"Session的钝化和活化\"></a>Session的钝化和活化</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1feqto8tc55j30q70bewh2.jpg\" alt=\"\"></p>"},{"title":"落花该为何色","date":"2017-06-01T06:05:26.000Z","toc":true,"_content":"关于经典 不想多说。\n只是那些旧时光，念念不忘。\n![](http://hpimg.pianke.me/5a22309be30cd6280a6d44a81b318b8620170523.jpg?imageView2/2/w/640/format/jpg)\n<!--more-->\n夏日蓝色的夜晚，我将踏上小径， \n拨开尖尖麦芒，穿越青青草地： \n梦想者，我从脚底感受到阵阵清新。 \n我的头顶凉风习习。 \n什么也不说，什么也不想： \n无尽的爱却永入我的灵魂， \n我将远去，到很远的地方， \n就像波西米亚人， \n顺从自然——快乐得如同身边有位女郎。\n\n——兰波\n<hr>\n# 孤独是高贵的\n宁可要一个人的孤独 \n\n也不要一群人的貌合神离 \n# 对与错\n别告诉我\n\n什么是对与错\n\n我只相信我自己\n# 人\n人在我眼里是矛盾的存在，不可能有人单纯的善良。\n\n只不过是将邪恶的想法藏在心里，这样的人便被称为好人。\n\n所谓圣人是无法活在这个世界的。\n# 我喜欢的东西\n有很多东西\n其实我也很喜欢\n只是我选择了谦让\n\n但是被谦让的你们似乎并没有细心的发现\n长久如此\n邪恶便在我内心滋生了\n\n魔眼----命运探知\n可悲的人类，我已经看到你们的未来了。\n<hr>\n关于落花的颜色\n你的想法是什么\n在我眼里\n落花该为灰色。\n\n也许落花并不是无情\n\n只是无能。","source":"_posts/落花该为何色.md","raw":"---\ntitle: 落花该为何色\ndate: 2017-06-01 14:05:26\ntags:\n- 文学\ntoc: true\n---\n关于经典 不想多说。\n只是那些旧时光，念念不忘。\n![](http://hpimg.pianke.me/5a22309be30cd6280a6d44a81b318b8620170523.jpg?imageView2/2/w/640/format/jpg)\n<!--more-->\n夏日蓝色的夜晚，我将踏上小径， \n拨开尖尖麦芒，穿越青青草地： \n梦想者，我从脚底感受到阵阵清新。 \n我的头顶凉风习习。 \n什么也不说，什么也不想： \n无尽的爱却永入我的灵魂， \n我将远去，到很远的地方， \n就像波西米亚人， \n顺从自然——快乐得如同身边有位女郎。\n\n——兰波\n<hr>\n# 孤独是高贵的\n宁可要一个人的孤独 \n\n也不要一群人的貌合神离 \n# 对与错\n别告诉我\n\n什么是对与错\n\n我只相信我自己\n# 人\n人在我眼里是矛盾的存在，不可能有人单纯的善良。\n\n只不过是将邪恶的想法藏在心里，这样的人便被称为好人。\n\n所谓圣人是无法活在这个世界的。\n# 我喜欢的东西\n有很多东西\n其实我也很喜欢\n只是我选择了谦让\n\n但是被谦让的你们似乎并没有细心的发现\n长久如此\n邪恶便在我内心滋生了\n\n魔眼----命运探知\n可悲的人类，我已经看到你们的未来了。\n<hr>\n关于落花的颜色\n你的想法是什么\n在我眼里\n落花该为灰色。\n\n也许落花并不是无情\n\n只是无能。","slug":"落花该为何色","published":1,"updated":"2018-01-20T06:44:37.686Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m94g006j44wa5slzzisq","content":"<p>关于经典 不想多说。<br>只是那些旧时光，念念不忘。<br><img src=\"http://hpimg.pianke.me/5a22309be30cd6280a6d44a81b318b8620170523.jpg?imageView2/2/w/640/format/jpg\" alt=\"\"><br><a id=\"more\"></a><br>夏日蓝色的夜晚，我将踏上小径，<br>拨开尖尖麦芒，穿越青青草地：<br>梦想者，我从脚底感受到阵阵清新。<br>我的头顶凉风习习。<br>什么也不说，什么也不想：<br>无尽的爱却永入我的灵魂，<br>我将远去，到很远的地方，<br>就像波西米亚人，<br>顺从自然——快乐得如同身边有位女郎。</p>\n<p>——兰波</p>\n<p><hr></p>\n<h1 id=\"孤独是高贵的\"><a href=\"#孤独是高贵的\" class=\"headerlink\" title=\"孤独是高贵的\"></a>孤独是高贵的</h1><p>宁可要一个人的孤独 </p>\n<p>也不要一群人的貌合神离 </p>\n<h1 id=\"对与错\"><a href=\"#对与错\" class=\"headerlink\" title=\"对与错\"></a>对与错</h1><p>别告诉我</p>\n<p>什么是对与错</p>\n<p>我只相信我自己</p>\n<h1 id=\"人\"><a href=\"#人\" class=\"headerlink\" title=\"人\"></a>人</h1><p>人在我眼里是矛盾的存在，不可能有人单纯的善良。</p>\n<p>只不过是将邪恶的想法藏在心里，这样的人便被称为好人。</p>\n<p>所谓圣人是无法活在这个世界的。</p>\n<h1 id=\"我喜欢的东西\"><a href=\"#我喜欢的东西\" class=\"headerlink\" title=\"我喜欢的东西\"></a>我喜欢的东西</h1><p>有很多东西<br>其实我也很喜欢<br>只是我选择了谦让</p>\n<p>但是被谦让的你们似乎并没有细心的发现<br>长久如此<br>邪恶便在我内心滋生了</p>\n<p>魔眼—-命运探知<br>可悲的人类，我已经看到你们的未来了。</p>\n<p><hr><br>关于落花的颜色<br>你的想法是什么<br>在我眼里<br>落花该为灰色。</p>\n<p>也许落花并不是无情</p>\n<p>只是无能。</p>\n","excerpt":"<p>关于经典 不想多说。<br>只是那些旧时光，念念不忘。<br><img src=\"http://hpimg.pianke.me/5a22309be30cd6280a6d44a81b318b8620170523.jpg?imageView2/2/w/640/format/jpg\" alt=\"\"><br>","more":"<br>夏日蓝色的夜晚，我将踏上小径，<br>拨开尖尖麦芒，穿越青青草地：<br>梦想者，我从脚底感受到阵阵清新。<br>我的头顶凉风习习。<br>什么也不说，什么也不想：<br>无尽的爱却永入我的灵魂，<br>我将远去，到很远的地方，<br>就像波西米亚人，<br>顺从自然——快乐得如同身边有位女郎。</p>\n<p>——兰波</p>\n<p><hr></p>\n<h1 id=\"孤独是高贵的\"><a href=\"#孤独是高贵的\" class=\"headerlink\" title=\"孤独是高贵的\"></a>孤独是高贵的</h1><p>宁可要一个人的孤独 </p>\n<p>也不要一群人的貌合神离 </p>\n<h1 id=\"对与错\"><a href=\"#对与错\" class=\"headerlink\" title=\"对与错\"></a>对与错</h1><p>别告诉我</p>\n<p>什么是对与错</p>\n<p>我只相信我自己</p>\n<h1 id=\"人\"><a href=\"#人\" class=\"headerlink\" title=\"人\"></a>人</h1><p>人在我眼里是矛盾的存在，不可能有人单纯的善良。</p>\n<p>只不过是将邪恶的想法藏在心里，这样的人便被称为好人。</p>\n<p>所谓圣人是无法活在这个世界的。</p>\n<h1 id=\"我喜欢的东西\"><a href=\"#我喜欢的东西\" class=\"headerlink\" title=\"我喜欢的东西\"></a>我喜欢的东西</h1><p>有很多东西<br>其实我也很喜欢<br>只是我选择了谦让</p>\n<p>但是被谦让的你们似乎并没有细心的发现<br>长久如此<br>邪恶便在我内心滋生了</p>\n<p>魔眼—-命运探知<br>可悲的人类，我已经看到你们的未来了。</p>\n<p><hr><br>关于落花的颜色<br>你的想法是什么<br>在我眼里<br>落花该为灰色。</p>\n<p>也许落花并不是无情</p>\n<p>只是无能。</p>"},{"title":"越人歌","date":"2017-03-10T05:00:31.000Z","toc":true,"_content":"![](http://ww3.sinaimg.cn/mw1024/005P8ayVgw1f78kregcddj31400p0n3n.jpg)\n# <center>越人歌</center>\n\n<center>今夕何夕兮搴洲中流。</center>\n\n<center>今日何日兮得与王子同舟。</center>\n\n<center>蒙羞被好兮不訾诟耻。</center>\n\n<center>心几烦而不绝兮得知王子。</center>\n\n<center>山有木兮木有枝。</center>\n\n<center>心说君兮君不知。 </center>\n\n\n","source":"_posts/越人歌.md","raw":"---\ntitle: 越人歌\ndate: 2017-03-10 13:00:31\ntags:\n- essay\n- 文学\ntoc: true\n---\n![](http://ww3.sinaimg.cn/mw1024/005P8ayVgw1f78kregcddj31400p0n3n.jpg)\n# <center>越人歌</center>\n\n<center>今夕何夕兮搴洲中流。</center>\n\n<center>今日何日兮得与王子同舟。</center>\n\n<center>蒙羞被好兮不訾诟耻。</center>\n\n<center>心几烦而不绝兮得知王子。</center>\n\n<center>山有木兮木有枝。</center>\n\n<center>心说君兮君不知。 </center>\n\n\n","slug":"越人歌","published":1,"updated":"2018-01-20T06:44:37.692Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m94k006l44wa0d0tk6bo","content":"<p><img src=\"http://ww3.sinaimg.cn/mw1024/005P8ayVgw1f78kregcddj31400p0n3n.jpg\" alt=\"\"></p>\n<h1 id=\"越人歌\"><a href=\"#越人歌\" class=\"headerlink\" title=\"越人歌\"></a><center>越人歌</center></h1><center>今夕何夕兮搴洲中流。</center>\n\n<center>今日何日兮得与王子同舟。</center>\n\n<center>蒙羞被好兮不訾诟耻。</center>\n\n<center>心几烦而不绝兮得知王子。</center>\n\n<center>山有木兮木有枝。</center>\n\n<center>心说君兮君不知。 </center>\n\n\n","excerpt":"","more":"<p><img src=\"http://ww3.sinaimg.cn/mw1024/005P8ayVgw1f78kregcddj31400p0n3n.jpg\" alt=\"\"></p>\n<h1 id=\"越人歌\"><a href=\"#越人歌\" class=\"headerlink\" title=\"越人歌\"></a><center>越人歌</center></h1><center>今夕何夕兮搴洲中流。</center>\n\n<center>今日何日兮得与王子同舟。</center>\n\n<center>蒙羞被好兮不訾诟耻。</center>\n\n<center>心几烦而不绝兮得知王子。</center>\n\n<center>山有木兮木有枝。</center>\n\n<center>心说君兮君不知。 </center>\n\n\n"},{"title":"过滤器","date":"2017-04-19T04:00:35.000Z","toc":true,"_content":"过滤器\n<!--more-->\n# 过滤器编写\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fery7bdv60j30dc0bj0u4.jpg)\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fery7bc67nj30c5045aak.jpg)\n# 多个过滤器执行顺序和四种拦截方式\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fery7br5k8j30p307ogmk.jpg)\n```\n<filter-mapping>的配置顺序决定执行顺序\n```\n","source":"_posts/过滤器.md","raw":"---\ntitle: 过滤器\ndate: 2017-04-19 12:00:35\ntags:\n- 过滤器\n- Web\ntoc: true\n---\n过滤器\n<!--more-->\n# 过滤器编写\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fery7bdv60j30dc0bj0u4.jpg)\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fery7bc67nj30c5045aak.jpg)\n# 多个过滤器执行顺序和四种拦截方式\n![](http://wx3.sinaimg.cn/large/005P8ayVgy1fery7br5k8j30p307ogmk.jpg)\n```\n<filter-mapping>的配置顺序决定执行顺序\n```\n","slug":"过滤器","published":1,"updated":"2018-01-20T06:44:37.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m94n006n44waynf7w8ue","content":"<p>过滤器<br><a id=\"more\"></a></p>\n<h1 id=\"过滤器编写\"><a href=\"#过滤器编写\" class=\"headerlink\" title=\"过滤器编写\"></a>过滤器编写</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fery7bdv60j30dc0bj0u4.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fery7bc67nj30c5045aak.jpg\" alt=\"\"></p>\n<h1 id=\"多个过滤器执行顺序和四种拦截方式\"><a href=\"#多个过滤器执行顺序和四种拦截方式\" class=\"headerlink\" title=\"多个过滤器执行顺序和四种拦截方式\"></a>多个过滤器执行顺序和四种拦截方式</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fery7br5k8j30p307ogmk.jpg\" alt=\"\"><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span>的配置顺序决定执行顺序</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>过滤器<br>","more":"</p>\n<h1 id=\"过滤器编写\"><a href=\"#过滤器编写\" class=\"headerlink\" title=\"过滤器编写\"></a>过滤器编写</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fery7bdv60j30dc0bj0u4.jpg\" alt=\"\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fery7bc67nj30c5045aak.jpg\" alt=\"\"></p>\n<h1 id=\"多个过滤器执行顺序和四种拦截方式\"><a href=\"#多个过滤器执行顺序和四种拦截方式\" class=\"headerlink\" title=\"多个过滤器执行顺序和四种拦截方式\"></a>多个过滤器执行顺序和四种拦截方式</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1fery7br5k8j30p307ogmk.jpg\" alt=\"\"><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span>的配置顺序决定执行顺序</div></pre></td></tr></table></figure></p>"},{"title":"言叶之庭","date":"2016-12-01T07:27:54.000Z","toc":true,"_content":"\n隐约雷鸣 阴霾天空 但盼风雨来 能留你在此\n隐约雷鸣 阴霾天空 即使天无雨 我亦留此地\n\n<!--more-->\n小时候，天空分明触手可及 于是喜欢上雨，因它带来天空的气味 经常在下雨的早晨，不再换乘地铁，转身走出车站。\n\n\n我喜欢雨。因为它带来天空的味道。\n\n\n我不介意啊 反正所谓人类多多少少都有些不正常。\n\n\n但原来你一直都注视着别的世界。\n\n\n二十七岁的我，丝毫不比十五岁的我聪明，只有我，一直停留在原地\n\n\n可在连呼吸都会痛的那段日子里，你却只肯埋头收集周围的声音，丝毫不肯相信我的只言片语，自那时起，我…谎话连篇。\n\n\n每晚临睡前，\n每天睁开眼的瞬间，\n不知不觉，我都在祈盼雨天，\n祈盼雨天，祈盼和那个人，再次相会\n\n\n请忘记我刚才说的话吧，我其实根本不喜欢你，你从一开始就似乎不招人喜欢，一大早就喝啤酒，\n用莫名其妙的短歌来糊弄人自己的事只字不提，却不停套出别人的心思，\n你早就知道我们是师生关系了吧，也太狡猾了，如果知道你是老师，我也不会提起制鞋的事了，反正也做不到，不可能实现；\n为什么不这么告诉我呢？是不是觉得小孩子的梦话随便敷衍一下就行了。\n我再憧憬什么，再爱慕谁，也无法传达，不过一厢情愿，你从一开始就知道了，那就说清楚啊，真碍眼，小孩子就该乖乖去上学，说你讨厌我。\n你啊，你就一直那样！总对重要的事只字不提，然后摆出若无其事的标签，一直孤单一人，度过一生吧。\n\n\n每天早上，都穿戴整齐，准备去学校，但总是被恐惧压得迈不出脚步，在那里 是你，是你给了我前行的力量\n\n\n回想当初，那时的我也一定在练习着自己的迈步吧，想着如果有一天能走的更稳更远了，就去找她吧……\n\n\n夏天结束了，转眼又到冬天，期末考试不出所料成绩一塌糊涂，浪费了好几张昂贵的皮革\n寒假仍然每天打工，每当外出时又要多加一件衣服，总想到，她还好吗\n\n\n配音\n秋月孝雄：入野自由\n雪野百香里：花泽香菜","source":"_posts/言叶之庭.md","raw":"---\ntitle: 言叶之庭\ndate: 2016-12-01 15:27:54\ntags:\n- essay\n- 文学\ntoc: true\n---\n\n隐约雷鸣 阴霾天空 但盼风雨来 能留你在此\n隐约雷鸣 阴霾天空 即使天无雨 我亦留此地\n\n<!--more-->\n小时候，天空分明触手可及 于是喜欢上雨，因它带来天空的气味 经常在下雨的早晨，不再换乘地铁，转身走出车站。\n\n\n我喜欢雨。因为它带来天空的味道。\n\n\n我不介意啊 反正所谓人类多多少少都有些不正常。\n\n\n但原来你一直都注视着别的世界。\n\n\n二十七岁的我，丝毫不比十五岁的我聪明，只有我，一直停留在原地\n\n\n可在连呼吸都会痛的那段日子里，你却只肯埋头收集周围的声音，丝毫不肯相信我的只言片语，自那时起，我…谎话连篇。\n\n\n每晚临睡前，\n每天睁开眼的瞬间，\n不知不觉，我都在祈盼雨天，\n祈盼雨天，祈盼和那个人，再次相会\n\n\n请忘记我刚才说的话吧，我其实根本不喜欢你，你从一开始就似乎不招人喜欢，一大早就喝啤酒，\n用莫名其妙的短歌来糊弄人自己的事只字不提，却不停套出别人的心思，\n你早就知道我们是师生关系了吧，也太狡猾了，如果知道你是老师，我也不会提起制鞋的事了，反正也做不到，不可能实现；\n为什么不这么告诉我呢？是不是觉得小孩子的梦话随便敷衍一下就行了。\n我再憧憬什么，再爱慕谁，也无法传达，不过一厢情愿，你从一开始就知道了，那就说清楚啊，真碍眼，小孩子就该乖乖去上学，说你讨厌我。\n你啊，你就一直那样！总对重要的事只字不提，然后摆出若无其事的标签，一直孤单一人，度过一生吧。\n\n\n每天早上，都穿戴整齐，准备去学校，但总是被恐惧压得迈不出脚步，在那里 是你，是你给了我前行的力量\n\n\n回想当初，那时的我也一定在练习着自己的迈步吧，想着如果有一天能走的更稳更远了，就去找她吧……\n\n\n夏天结束了，转眼又到冬天，期末考试不出所料成绩一塌糊涂，浪费了好几张昂贵的皮革\n寒假仍然每天打工，每当外出时又要多加一件衣服，总想到，她还好吗\n\n\n配音\n秋月孝雄：入野自由\n雪野百香里：花泽香菜","slug":"言叶之庭","published":1,"updated":"2018-01-20T06:44:37.687Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m94q006q44waw2j2rcxt","content":"<p>隐约雷鸣 阴霾天空 但盼风雨来 能留你在此<br>隐约雷鸣 阴霾天空 即使天无雨 我亦留此地</p>\n<a id=\"more\"></a>\n<p>小时候，天空分明触手可及 于是喜欢上雨，因它带来天空的气味 经常在下雨的早晨，不再换乘地铁，转身走出车站。</p>\n<p>我喜欢雨。因为它带来天空的味道。</p>\n<p>我不介意啊 反正所谓人类多多少少都有些不正常。</p>\n<p>但原来你一直都注视着别的世界。</p>\n<p>二十七岁的我，丝毫不比十五岁的我聪明，只有我，一直停留在原地</p>\n<p>可在连呼吸都会痛的那段日子里，你却只肯埋头收集周围的声音，丝毫不肯相信我的只言片语，自那时起，我…谎话连篇。</p>\n<p>每晚临睡前，<br>每天睁开眼的瞬间，<br>不知不觉，我都在祈盼雨天，<br>祈盼雨天，祈盼和那个人，再次相会</p>\n<p>请忘记我刚才说的话吧，我其实根本不喜欢你，你从一开始就似乎不招人喜欢，一大早就喝啤酒，<br>用莫名其妙的短歌来糊弄人自己的事只字不提，却不停套出别人的心思，<br>你早就知道我们是师生关系了吧，也太狡猾了，如果知道你是老师，我也不会提起制鞋的事了，反正也做不到，不可能实现；<br>为什么不这么告诉我呢？是不是觉得小孩子的梦话随便敷衍一下就行了。<br>我再憧憬什么，再爱慕谁，也无法传达，不过一厢情愿，你从一开始就知道了，那就说清楚啊，真碍眼，小孩子就该乖乖去上学，说你讨厌我。<br>你啊，你就一直那样！总对重要的事只字不提，然后摆出若无其事的标签，一直孤单一人，度过一生吧。</p>\n<p>每天早上，都穿戴整齐，准备去学校，但总是被恐惧压得迈不出脚步，在那里 是你，是你给了我前行的力量</p>\n<p>回想当初，那时的我也一定在练习着自己的迈步吧，想着如果有一天能走的更稳更远了，就去找她吧……</p>\n<p>夏天结束了，转眼又到冬天，期末考试不出所料成绩一塌糊涂，浪费了好几张昂贵的皮革<br>寒假仍然每天打工，每当外出时又要多加一件衣服，总想到，她还好吗</p>\n<p>配音<br>秋月孝雄：入野自由<br>雪野百香里：花泽香菜</p>\n","excerpt":"<p>隐约雷鸣 阴霾天空 但盼风雨来 能留你在此<br>隐约雷鸣 阴霾天空 即使天无雨 我亦留此地</p>","more":"<p>小时候，天空分明触手可及 于是喜欢上雨，因它带来天空的气味 经常在下雨的早晨，不再换乘地铁，转身走出车站。</p>\n<p>我喜欢雨。因为它带来天空的味道。</p>\n<p>我不介意啊 反正所谓人类多多少少都有些不正常。</p>\n<p>但原来你一直都注视着别的世界。</p>\n<p>二十七岁的我，丝毫不比十五岁的我聪明，只有我，一直停留在原地</p>\n<p>可在连呼吸都会痛的那段日子里，你却只肯埋头收集周围的声音，丝毫不肯相信我的只言片语，自那时起，我…谎话连篇。</p>\n<p>每晚临睡前，<br>每天睁开眼的瞬间，<br>不知不觉，我都在祈盼雨天，<br>祈盼雨天，祈盼和那个人，再次相会</p>\n<p>请忘记我刚才说的话吧，我其实根本不喜欢你，你从一开始就似乎不招人喜欢，一大早就喝啤酒，<br>用莫名其妙的短歌来糊弄人自己的事只字不提，却不停套出别人的心思，<br>你早就知道我们是师生关系了吧，也太狡猾了，如果知道你是老师，我也不会提起制鞋的事了，反正也做不到，不可能实现；<br>为什么不这么告诉我呢？是不是觉得小孩子的梦话随便敷衍一下就行了。<br>我再憧憬什么，再爱慕谁，也无法传达，不过一厢情愿，你从一开始就知道了，那就说清楚啊，真碍眼，小孩子就该乖乖去上学，说你讨厌我。<br>你啊，你就一直那样！总对重要的事只字不提，然后摆出若无其事的标签，一直孤单一人，度过一生吧。</p>\n<p>每天早上，都穿戴整齐，准备去学校，但总是被恐惧压得迈不出脚步，在那里 是你，是你给了我前行的力量</p>\n<p>回想当初，那时的我也一定在练习着自己的迈步吧，想着如果有一天能走的更稳更远了，就去找她吧……</p>\n<p>夏天结束了，转眼又到冬天，期末考试不出所料成绩一塌糊涂，浪费了好几张昂贵的皮革<br>寒假仍然每天打工，每当外出时又要多加一件衣服，总想到，她还好吗</p>\n<p>配音<br>秋月孝雄：入野自由<br>雪野百香里：花泽香菜</p>"},{"title":"谷雨","date":"2017-04-20T02:53:46.000Z","toc":true,"_content":"谷雨，三月中。 自雨水後，土膏脉动，今又雨其谷于水也。\n![谷雨](http://wx1.sinaimg.cn/mw690/005P8ayVgy1fesyin5fdfj30hs0vmdhs.jpg)\n<!--more-->\n### 【摸鱼集•谷雨】\n谷雨，三月中。 自雨水後，土膏脉动，今又雨其谷于水也。雨读作去声，如雨我公田之雨。盖谷以此时播种，自上而下也。故《说文》云雨本去声，今风雨之雨在上声，雨下之雨在去声也。 萍始生。萍，水草也，与水相平故曰萍，漂流随风，故又曰漂。《历解》曰，萍，阳物，静以承阳也。鸣鸠拂其羽。鸠，即鹰所化者布谷也。拂，过击也。《本草》云，拂羽飞而翼拍其身，气使然也。盖当三月之时趋农急矣，鸠乃追逐而鸣鼓羽直刺上飞，故俗称布谷。戴胜降于桑。戴胜，一名戴鵀。《尔雅》注曰，头上有胜毛，此时恒在于桑，盖蚕将生之候矣。\n### 二十四节气\n| 春            | 夏           | 秋           | 冬           |\n|:-------------:|:------------:|:-----------:|:-----------:|\n| 立春<br>2月3-4日   | 立夏<br>5月5-6日 | 立秋<br>8月6-9日 | 立冬<br>11月7-8日 |\n| 雨水<br>2月18-19日 | 小满<br>5月20-22日| 处暑<br>8月22-24日| 小雪<br>11月22-23日 |\n| 惊蛰<br>3月5-6日   | 芒种<br>6月5-6日 | 白露<br>9月7-8日 | 大雪<br>12月7-8日 |\n| 春分<br>3月20-21日 | 夏至<br>6月21-22日| 秋分<br>9月22-24日| 冬至<br>12月21-23日 |\n| 清明<br>4月4-6日   | 小暑<br>7月7-8日 | 寒露<br>10月7-9日 | 小寒<br>1月5-6日 |\n| <a href=\"http://www.bilibili.com/video/av4396221/\">谷雨</a><br>4月19-20日 | 大暑<br>7月22-23日| 霜降<br>10月23-24日| 大寒<br>1月19-21日 |","source":"_posts/谷雨.md","raw":"---\ntitle: 谷雨\ndate: 2017-04-20 10:53:46\ntags:\n- essay\n- 文学\ntoc: true\n---\n谷雨，三月中。 自雨水後，土膏脉动，今又雨其谷于水也。\n![谷雨](http://wx1.sinaimg.cn/mw690/005P8ayVgy1fesyin5fdfj30hs0vmdhs.jpg)\n<!--more-->\n### 【摸鱼集•谷雨】\n谷雨，三月中。 自雨水後，土膏脉动，今又雨其谷于水也。雨读作去声，如雨我公田之雨。盖谷以此时播种，自上而下也。故《说文》云雨本去声，今风雨之雨在上声，雨下之雨在去声也。 萍始生。萍，水草也，与水相平故曰萍，漂流随风，故又曰漂。《历解》曰，萍，阳物，静以承阳也。鸣鸠拂其羽。鸠，即鹰所化者布谷也。拂，过击也。《本草》云，拂羽飞而翼拍其身，气使然也。盖当三月之时趋农急矣，鸠乃追逐而鸣鼓羽直刺上飞，故俗称布谷。戴胜降于桑。戴胜，一名戴鵀。《尔雅》注曰，头上有胜毛，此时恒在于桑，盖蚕将生之候矣。\n### 二十四节气\n| 春            | 夏           | 秋           | 冬           |\n|:-------------:|:------------:|:-----------:|:-----------:|\n| 立春<br>2月3-4日   | 立夏<br>5月5-6日 | 立秋<br>8月6-9日 | 立冬<br>11月7-8日 |\n| 雨水<br>2月18-19日 | 小满<br>5月20-22日| 处暑<br>8月22-24日| 小雪<br>11月22-23日 |\n| 惊蛰<br>3月5-6日   | 芒种<br>6月5-6日 | 白露<br>9月7-8日 | 大雪<br>12月7-8日 |\n| 春分<br>3月20-21日 | 夏至<br>6月21-22日| 秋分<br>9月22-24日| 冬至<br>12月21-23日 |\n| 清明<br>4月4-6日   | 小暑<br>7月7-8日 | 寒露<br>10月7-9日 | 小寒<br>1月5-6日 |\n| <a href=\"http://www.bilibili.com/video/av4396221/\">谷雨</a><br>4月19-20日 | 大暑<br>7月22-23日| 霜降<br>10月23-24日| 大寒<br>1月19-21日 |","slug":"谷雨","published":1,"updated":"2018-01-20T06:44:37.692Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m94u006s44wams8nnecc","content":"<p>谷雨，三月中。 自雨水後，土膏脉动，今又雨其谷于水也。<br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVgy1fesyin5fdfj30hs0vmdhs.jpg\" alt=\"谷雨\"><br><a id=\"more\"></a></p>\n<h3 id=\"【摸鱼集•谷雨】\"><a href=\"#【摸鱼集•谷雨】\" class=\"headerlink\" title=\"【摸鱼集•谷雨】\"></a>【摸鱼集•谷雨】</h3><p>谷雨，三月中。 自雨水後，土膏脉动，今又雨其谷于水也。雨读作去声，如雨我公田之雨。盖谷以此时播种，自上而下也。故《说文》云雨本去声，今风雨之雨在上声，雨下之雨在去声也。 萍始生。萍，水草也，与水相平故曰萍，漂流随风，故又曰漂。《历解》曰，萍，阳物，静以承阳也。鸣鸠拂其羽。鸠，即鹰所化者布谷也。拂，过击也。《本草》云，拂羽飞而翼拍其身，气使然也。盖当三月之时趋农急矣，鸠乃追逐而鸣鼓羽直刺上飞，故俗称布谷。戴胜降于桑。戴胜，一名戴鵀。《尔雅》注曰，头上有胜毛，此时恒在于桑，盖蚕将生之候矣。</p>\n<h3 id=\"二十四节气\"><a href=\"#二十四节气\" class=\"headerlink\" title=\"二十四节气\"></a>二十四节气</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">春</th>\n<th style=\"text-align:center\">夏</th>\n<th style=\"text-align:center\">秋</th>\n<th style=\"text-align:center\">冬</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">立春<br>2月3-4日</td>\n<td style=\"text-align:center\">立夏<br>5月5-6日</td>\n<td style=\"text-align:center\">立秋<br>8月6-9日</td>\n<td style=\"text-align:center\">立冬<br>11月7-8日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">雨水<br>2月18-19日</td>\n<td style=\"text-align:center\">小满<br>5月20-22日</td>\n<td style=\"text-align:center\">处暑<br>8月22-24日</td>\n<td style=\"text-align:center\">小雪<br>11月22-23日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">惊蛰<br>3月5-6日</td>\n<td style=\"text-align:center\">芒种<br>6月5-6日</td>\n<td style=\"text-align:center\">白露<br>9月7-8日</td>\n<td style=\"text-align:center\">大雪<br>12月7-8日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">春分<br>3月20-21日</td>\n<td style=\"text-align:center\">夏至<br>6月21-22日</td>\n<td style=\"text-align:center\">秋分<br>9月22-24日</td>\n<td style=\"text-align:center\">冬至<br>12月21-23日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">清明<br>4月4-6日</td>\n<td style=\"text-align:center\">小暑<br>7月7-8日</td>\n<td style=\"text-align:center\">寒露<br>10月7-9日</td>\n<td style=\"text-align:center\">小寒<br>1月5-6日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"http://www.bilibili.com/video/av4396221/\" target=\"_blank\" rel=\"external\">谷雨</a><br>4月19-20日</td>\n<td style=\"text-align:center\">大暑<br>7月22-23日</td>\n<td style=\"text-align:center\">霜降<br>10月23-24日</td>\n<td style=\"text-align:center\">大寒<br>1月19-21日</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"<p>谷雨，三月中。 自雨水後，土膏脉动，今又雨其谷于水也。<br><img src=\"http://wx1.sinaimg.cn/mw690/005P8ayVgy1fesyin5fdfj30hs0vmdhs.jpg\" alt=\"谷雨\"><br>","more":"</p>\n<h3 id=\"【摸鱼集•谷雨】\"><a href=\"#【摸鱼集•谷雨】\" class=\"headerlink\" title=\"【摸鱼集•谷雨】\"></a>【摸鱼集•谷雨】</h3><p>谷雨，三月中。 自雨水後，土膏脉动，今又雨其谷于水也。雨读作去声，如雨我公田之雨。盖谷以此时播种，自上而下也。故《说文》云雨本去声，今风雨之雨在上声，雨下之雨在去声也。 萍始生。萍，水草也，与水相平故曰萍，漂流随风，故又曰漂。《历解》曰，萍，阳物，静以承阳也。鸣鸠拂其羽。鸠，即鹰所化者布谷也。拂，过击也。《本草》云，拂羽飞而翼拍其身，气使然也。盖当三月之时趋农急矣，鸠乃追逐而鸣鼓羽直刺上飞，故俗称布谷。戴胜降于桑。戴胜，一名戴鵀。《尔雅》注曰，头上有胜毛，此时恒在于桑，盖蚕将生之候矣。</p>\n<h3 id=\"二十四节气\"><a href=\"#二十四节气\" class=\"headerlink\" title=\"二十四节气\"></a>二十四节气</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">春</th>\n<th style=\"text-align:center\">夏</th>\n<th style=\"text-align:center\">秋</th>\n<th style=\"text-align:center\">冬</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">立春<br>2月3-4日</td>\n<td style=\"text-align:center\">立夏<br>5月5-6日</td>\n<td style=\"text-align:center\">立秋<br>8月6-9日</td>\n<td style=\"text-align:center\">立冬<br>11月7-8日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">雨水<br>2月18-19日</td>\n<td style=\"text-align:center\">小满<br>5月20-22日</td>\n<td style=\"text-align:center\">处暑<br>8月22-24日</td>\n<td style=\"text-align:center\">小雪<br>11月22-23日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">惊蛰<br>3月5-6日</td>\n<td style=\"text-align:center\">芒种<br>6月5-6日</td>\n<td style=\"text-align:center\">白露<br>9月7-8日</td>\n<td style=\"text-align:center\">大雪<br>12月7-8日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">春分<br>3月20-21日</td>\n<td style=\"text-align:center\">夏至<br>6月21-22日</td>\n<td style=\"text-align:center\">秋分<br>9月22-24日</td>\n<td style=\"text-align:center\">冬至<br>12月21-23日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">清明<br>4月4-6日</td>\n<td style=\"text-align:center\">小暑<br>7月7-8日</td>\n<td style=\"text-align:center\">寒露<br>10月7-9日</td>\n<td style=\"text-align:center\">小寒<br>1月5-6日</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"http://www.bilibili.com/video/av4396221/\">谷雨</a><br>4月19-20日</td>\n<td style=\"text-align:center\">大暑<br>7月22-23日</td>\n<td style=\"text-align:center\">霜降<br>10月23-24日</td>\n<td style=\"text-align:center\">大寒<br>1月19-21日</td>\n</tr>\n</tbody>\n</table>"},{"title":"过去与未来","date":"2017-04-17T05:43:50.000Z","toc":true,"_content":"原来人生有时候真的会很绝望，因为在某一个时候，\n当你忽然回头的时候就会发现你已经失去了很多，\n而当你在朝前看的时候才发现，在漫长的岁月里，\n你真的已经没什么好失去的了……\n那些时光总会匆匆走远，那些记忆总会慢慢淡去。\n<!--more-->\n## 过去(遗忘与思念的混沌体)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fepqyjthvkj31hc0u0wpv.jpg)\n昨晚看到大家以前给我空间的留言，感觉夏日的微风似乎将我吹回了那个青涩的年代。\n<hr>\n那时候，我们一旦四目相对就一定会先移开视线，然后再次对上。\n\n留言里有陌生人的无意到访，同学的问候，老姐的忠告，兄弟的关心。\n一瞬间，感觉自己并不是那么孤单。\n后来发现在时间的长河中，\n走散了我多少宝贵的朋友，\n最后剩下的只有自己这颗被无情岁月磨出棱角的\n孤独且坚硬的心......\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=27890935&auto=0&height=66\"></iframe>\n<iframe  frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=364296&auto=1&height=66\"></iframe>\n这歌声，就是我记忆中温柔的歌声。\n<hr>\n风轻花落定，时光踏下轻盈的足迹，卷起昔日的美丽悠然长去。\n在这里，我穿越秘密的门扉而来，独自搜寻着那些消失的话语，回忆着我的过去。\n## 未来(美好与希望的结合体)\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fepqjm7csqj31hc0u07ie.jpg)\n虽然，许多大人都有所误解，但孩子们并没有无知到那种程度。\n他们也跟成人一样，拥有理解这个世界的能力。\n所以，他们很了解，这个世界并没有简单到只要小时候用功念书就能获得幸福的程度。\n\n我不知道自己的未来会怎样，也不知道会不会有未来。\n但是现在的我还是会对未来的自己有点期望。\n希望未来的自己能去日本看一看，会日语，会英语。\n<hr>\n我喜欢一个人孤独的看着天空，想象着未来的你会不会遇见未来的我。\n","source":"_posts/过去与未来.md","raw":"---\ntitle: 过去与未来\ndate: 2017-04-17 13:43:50\ntags:\n- essay\n- 生活\ntoc: true\n---\n原来人生有时候真的会很绝望，因为在某一个时候，\n当你忽然回头的时候就会发现你已经失去了很多，\n而当你在朝前看的时候才发现，在漫长的岁月里，\n你真的已经没什么好失去的了……\n那些时光总会匆匆走远，那些记忆总会慢慢淡去。\n<!--more-->\n## 过去(遗忘与思念的混沌体)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1fepqyjthvkj31hc0u0wpv.jpg)\n昨晚看到大家以前给我空间的留言，感觉夏日的微风似乎将我吹回了那个青涩的年代。\n<hr>\n那时候，我们一旦四目相对就一定会先移开视线，然后再次对上。\n\n留言里有陌生人的无意到访，同学的问候，老姐的忠告，兄弟的关心。\n一瞬间，感觉自己并不是那么孤单。\n后来发现在时间的长河中，\n走散了我多少宝贵的朋友，\n最后剩下的只有自己这颗被无情岁月磨出棱角的\n孤独且坚硬的心......\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=27890935&auto=0&height=66\"></iframe>\n<iframe  frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=364296&auto=1&height=66\"></iframe>\n这歌声，就是我记忆中温柔的歌声。\n<hr>\n风轻花落定，时光踏下轻盈的足迹，卷起昔日的美丽悠然长去。\n在这里，我穿越秘密的门扉而来，独自搜寻着那些消失的话语，回忆着我的过去。\n## 未来(美好与希望的结合体)\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1fepqjm7csqj31hc0u07ie.jpg)\n虽然，许多大人都有所误解，但孩子们并没有无知到那种程度。\n他们也跟成人一样，拥有理解这个世界的能力。\n所以，他们很了解，这个世界并没有简单到只要小时候用功念书就能获得幸福的程度。\n\n我不知道自己的未来会怎样，也不知道会不会有未来。\n但是现在的我还是会对未来的自己有点期望。\n希望未来的自己能去日本看一看，会日语，会英语。\n<hr>\n我喜欢一个人孤独的看着天空，想象着未来的你会不会遇见未来的我。\n","slug":"过去与未来","published":1,"updated":"2018-01-20T06:44:37.693Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m950006v44wavgosa5le","content":"<p>原来人生有时候真的会很绝望，因为在某一个时候，<br>当你忽然回头的时候就会发现你已经失去了很多，<br>而当你在朝前看的时候才发现，在漫长的岁月里，<br>你真的已经没什么好失去的了……<br>那些时光总会匆匆走远，那些记忆总会慢慢淡去。<br><a id=\"more\"></a></p>\n<h2 id=\"过去-遗忘与思念的混沌体\"><a href=\"#过去-遗忘与思念的混沌体\" class=\"headerlink\" title=\"过去(遗忘与思念的混沌体)\"></a>过去(遗忘与思念的混沌体)</h2><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fepqyjthvkj31hc0u0wpv.jpg\" alt=\"\"><br>昨晚看到大家以前给我空间的留言，感觉夏日的微风似乎将我吹回了那个青涩的年代。</p>\n<p><hr><br>那时候，我们一旦四目相对就一定会先移开视线，然后再次对上。</p>\n<p>留言里有陌生人的无意到访，同学的问候，老姐的忠告，兄弟的关心。<br>一瞬间，感觉自己并不是那么孤单。<br>后来发现在时间的长河中，<br>走散了我多少宝贵的朋友，<br>最后剩下的只有自己这颗被无情岁月磨出棱角的<br>孤独且坚硬的心……</p>\n<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=27890935&auto=0&height=66\"></iframe></p>\n<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=364296&auto=1&height=66\"></iframe><br>这歌声，就是我记忆中温柔的歌声。</p>\n<p><hr><br>风轻花落定，时光踏下轻盈的足迹，卷起昔日的美丽悠然长去。<br>在这里，我穿越秘密的门扉而来，独自搜寻着那些消失的话语，回忆着我的过去。</p>\n<h2 id=\"未来-美好与希望的结合体\"><a href=\"#未来-美好与希望的结合体\" class=\"headerlink\" title=\"未来(美好与希望的结合体)\"></a>未来(美好与希望的结合体)</h2><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fepqjm7csqj31hc0u07ie.jpg\" alt=\"\"><br>虽然，许多大人都有所误解，但孩子们并没有无知到那种程度。<br>他们也跟成人一样，拥有理解这个世界的能力。<br>所以，他们很了解，这个世界并没有简单到只要小时候用功念书就能获得幸福的程度。</p>\n<p>我不知道自己的未来会怎样，也不知道会不会有未来。<br>但是现在的我还是会对未来的自己有点期望。<br>希望未来的自己能去日本看一看，会日语，会英语。</p>\n<p><hr><br>我喜欢一个人孤独的看着天空，想象着未来的你会不会遇见未来的我。</p>\n","excerpt":"<p>原来人生有时候真的会很绝望，因为在某一个时候，<br>当你忽然回头的时候就会发现你已经失去了很多，<br>而当你在朝前看的时候才发现，在漫长的岁月里，<br>你真的已经没什么好失去的了……<br>那些时光总会匆匆走远，那些记忆总会慢慢淡去。<br>","more":"</p>\n<h2 id=\"过去-遗忘与思念的混沌体\"><a href=\"#过去-遗忘与思念的混沌体\" class=\"headerlink\" title=\"过去(遗忘与思念的混沌体)\"></a>过去(遗忘与思念的混沌体)</h2><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1fepqyjthvkj31hc0u0wpv.jpg\" alt=\"\"><br>昨晚看到大家以前给我空间的留言，感觉夏日的微风似乎将我吹回了那个青涩的年代。</p>\n<p><hr><br>那时候，我们一旦四目相对就一定会先移开视线，然后再次对上。</p>\n<p>留言里有陌生人的无意到访，同学的问候，老姐的忠告，兄弟的关心。<br>一瞬间，感觉自己并不是那么孤单。<br>后来发现在时间的长河中，<br>走散了我多少宝贵的朋友，<br>最后剩下的只有自己这颗被无情岁月磨出棱角的<br>孤独且坚硬的心……</p>\n<p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=27890935&auto=0&height=66\"></iframe></p>\n<p><iframe  frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=364296&auto=1&height=66\"></iframe><br>这歌声，就是我记忆中温柔的歌声。</p>\n<p><hr><br>风轻花落定，时光踏下轻盈的足迹，卷起昔日的美丽悠然长去。<br>在这里，我穿越秘密的门扉而来，独自搜寻着那些消失的话语，回忆着我的过去。</p>\n<h2 id=\"未来-美好与希望的结合体\"><a href=\"#未来-美好与希望的结合体\" class=\"headerlink\" title=\"未来(美好与希望的结合体)\"></a>未来(美好与希望的结合体)</h2><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1fepqjm7csqj31hc0u07ie.jpg\" alt=\"\"><br>虽然，许多大人都有所误解，但孩子们并没有无知到那种程度。<br>他们也跟成人一样，拥有理解这个世界的能力。<br>所以，他们很了解，这个世界并没有简单到只要小时候用功念书就能获得幸福的程度。</p>\n<p>我不知道自己的未来会怎样，也不知道会不会有未来。<br>但是现在的我还是会对未来的自己有点期望。<br>希望未来的自己能去日本看一看，会日语，会英语。</p>\n<p><hr><br>我喜欢一个人孤独的看着天空，想象着未来的你会不会遇见未来的我。</p>"},{"title":"通配符,注解,反射","date":"2017-05-05T08:54:55.000Z","toc":true,"_content":"通配符,注解,反射\n<!--more-->\n# 通配符\n![通配符](http://wx3.sinaimg.cn/large/005P8ayVgy1ffal8vdejtj30jh0e5dib.jpg)\n# 注解\n![注解](http://wx1.sinaimg.cn/large/005P8ayVgy1ffalg1294wj30fo0b9gng.jpg)\n![注解](http://wx1.sinaimg.cn/large/005P8ayVgy1ffalg1l4l4j30sz09owgi.jpg)\n![注解](http://wx3.sinaimg.cn/large/005P8ayVgy1ffalg26y0sj30fq09t3zb.jpg)\n![注解](http://wx4.sinaimg.cn/large/005P8ayVgy1ffalg2mmt2j30qr094mzk.jpg)\n# 反射\n### 反射泛型信息\n![反射泛型信息](http://wx2.sinaimg.cn/large/005P8ayVgy1ffamed4obej30g603i0td.jpg)\n![反射泛型信息](http://wx2.sinaimg.cn/large/005P8ayVgy1ffamedjn0xj30ji055q47.jpg)\n### 反射注解\n![反射注解](http://wx3.sinaimg.cn/large/005P8ayVgy1ffamedveaej30eu083gn5.jpg)","source":"_posts/通配符-注解-反射.md","raw":"---\ntitle: '通配符,注解,反射'\ndate: 2017-05-05 16:54:55\ntags:\n- Java基础\ntoc: true\n---\n通配符,注解,反射\n<!--more-->\n# 通配符\n![通配符](http://wx3.sinaimg.cn/large/005P8ayVgy1ffal8vdejtj30jh0e5dib.jpg)\n# 注解\n![注解](http://wx1.sinaimg.cn/large/005P8ayVgy1ffalg1294wj30fo0b9gng.jpg)\n![注解](http://wx1.sinaimg.cn/large/005P8ayVgy1ffalg1l4l4j30sz09owgi.jpg)\n![注解](http://wx3.sinaimg.cn/large/005P8ayVgy1ffalg26y0sj30fq09t3zb.jpg)\n![注解](http://wx4.sinaimg.cn/large/005P8ayVgy1ffalg2mmt2j30qr094mzk.jpg)\n# 反射\n### 反射泛型信息\n![反射泛型信息](http://wx2.sinaimg.cn/large/005P8ayVgy1ffamed4obej30g603i0td.jpg)\n![反射泛型信息](http://wx2.sinaimg.cn/large/005P8ayVgy1ffamedjn0xj30ji055q47.jpg)\n### 反射注解\n![反射注解](http://wx3.sinaimg.cn/large/005P8ayVgy1ffamedveaej30eu083gn5.jpg)","slug":"通配符-注解-反射","published":1,"updated":"2018-01-20T06:44:37.698Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m953006x44wauvv68df3","content":"<p>通配符,注解,反射<br><a id=\"more\"></a></p>\n<h1 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1ffal8vdejtj30jh0e5dib.jpg\" alt=\"通配符\"></p>\n<h1 id=\"注解\"><a href=\"#注解\" class=\"headerlink\" title=\"注解\"></a>注解</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1ffalg1294wj30fo0b9gng.jpg\" alt=\"注解\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1ffalg1l4l4j30sz09owgi.jpg\" alt=\"注解\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1ffalg26y0sj30fq09t3zb.jpg\" alt=\"注解\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1ffalg2mmt2j30qr094mzk.jpg\" alt=\"注解\"></p>\n<h1 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h1><h3 id=\"反射泛型信息\"><a href=\"#反射泛型信息\" class=\"headerlink\" title=\"反射泛型信息\"></a>反射泛型信息</h3><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1ffamed4obej30g603i0td.jpg\" alt=\"反射泛型信息\"><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1ffamedjn0xj30ji055q47.jpg\" alt=\"反射泛型信息\"></p>\n<h3 id=\"反射注解\"><a href=\"#反射注解\" class=\"headerlink\" title=\"反射注解\"></a>反射注解</h3><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1ffamedveaej30eu083gn5.jpg\" alt=\"反射注解\"></p>\n","excerpt":"<p>通配符,注解,反射<br>","more":"</p>\n<h1 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h1><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1ffal8vdejtj30jh0e5dib.jpg\" alt=\"通配符\"></p>\n<h1 id=\"注解\"><a href=\"#注解\" class=\"headerlink\" title=\"注解\"></a>注解</h1><p><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1ffalg1294wj30fo0b9gng.jpg\" alt=\"注解\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1ffalg1l4l4j30sz09owgi.jpg\" alt=\"注解\"><br><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1ffalg26y0sj30fq09t3zb.jpg\" alt=\"注解\"><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVgy1ffalg2mmt2j30qr094mzk.jpg\" alt=\"注解\"></p>\n<h1 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h1><h3 id=\"反射泛型信息\"><a href=\"#反射泛型信息\" class=\"headerlink\" title=\"反射泛型信息\"></a>反射泛型信息</h3><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1ffamed4obej30g603i0td.jpg\" alt=\"反射泛型信息\"><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1ffamedjn0xj30ji055q47.jpg\" alt=\"反射泛型信息\"></p>\n<h3 id=\"反射注解\"><a href=\"#反射注解\" class=\"headerlink\" title=\"反射注解\"></a>反射注解</h3><p><img src=\"http://wx3.sinaimg.cn/large/005P8ayVgy1ffamedveaej30eu083gn5.jpg\" alt=\"反射注解\"></p>"},{"title":"途中","date":"2016-11-30T09:29:10.000Z","toc":true,"_content":"今天给大家分享一首来自陈鸿宇的歌曲，作词 唐映枫\n直接上链接http://music.163.com/#/m/song?id=34380395&userid=114707089\n<!--more-->\n作曲 : 陈鸿宇\n\n作词 : 唐映枫\n\n吉他：孙鹏\n\n编曲：赵鑫/马雨阳\n\n混音：马雨阳\n\n夕沉下\n\n的飞鸟\n\n影子多细长\n\n夜宿在\n\n某山口\n\n雾气湿衣裳\n\n挎壶酒\n\n给荒野\n\n饮酌那秋黄\n\n不吁然\n\n不吟唱\n\n只拾掇行囊\n\n趟出这片枯寂就趟过生长\n\n遇见风起水浪就遇过虚妄\n\n忍住顷刻回望就忍过恓惶\n\n一如年少模样\n\n日升抑或潮涨\n\n痛彻抑或善忘\n\n你要去的地方\n\n四野细雨春芒\n\n太轻太急恓惶\n\n听街声\n\n闻世况\n\n或走俗寻常\n\n经戈壁\n\n过断桥\n\n塌落泥土香\n\n递根烟\n\n给路客\n\n解乏这星光\n\n茧磨在\n\n鞋跟上\n\n无所谓远方\n\n趟出这片枯寂就趟过生长\n\n遇见风起水浪就遇过虚妄\n\n忍住顷刻回望就忍过恓惶\n\n一如年少模样\n\n苦旅抑或迷香\n\n欢喜抑或坠亡\n\n你要去的地方\n\n遗情处有诗章\n\n更行更远还唱\n\n沿途避走齐脖的深草\n\n和滚落衰亡的陡坡\n\n给蹭过车的老司机递烟解乏\n\n不惦记竹筒盛雨露的事儿\n\n你要爱荒野上的风声\n\n胜过爱贫穷和思考\n\n暮冬时烤雪迟夏写长信\n\n早春不过一棵树\n","source":"_posts/途中.md","raw":"---\ntitle: 途中\ndate: 2016-11-30 17:29:10\ntags:\n- essay\n- 文学\ntoc: true\n---\n今天给大家分享一首来自陈鸿宇的歌曲，作词 唐映枫\n直接上链接http://music.163.com/#/m/song?id=34380395&userid=114707089\n<!--more-->\n作曲 : 陈鸿宇\n\n作词 : 唐映枫\n\n吉他：孙鹏\n\n编曲：赵鑫/马雨阳\n\n混音：马雨阳\n\n夕沉下\n\n的飞鸟\n\n影子多细长\n\n夜宿在\n\n某山口\n\n雾气湿衣裳\n\n挎壶酒\n\n给荒野\n\n饮酌那秋黄\n\n不吁然\n\n不吟唱\n\n只拾掇行囊\n\n趟出这片枯寂就趟过生长\n\n遇见风起水浪就遇过虚妄\n\n忍住顷刻回望就忍过恓惶\n\n一如年少模样\n\n日升抑或潮涨\n\n痛彻抑或善忘\n\n你要去的地方\n\n四野细雨春芒\n\n太轻太急恓惶\n\n听街声\n\n闻世况\n\n或走俗寻常\n\n经戈壁\n\n过断桥\n\n塌落泥土香\n\n递根烟\n\n给路客\n\n解乏这星光\n\n茧磨在\n\n鞋跟上\n\n无所谓远方\n\n趟出这片枯寂就趟过生长\n\n遇见风起水浪就遇过虚妄\n\n忍住顷刻回望就忍过恓惶\n\n一如年少模样\n\n苦旅抑或迷香\n\n欢喜抑或坠亡\n\n你要去的地方\n\n遗情处有诗章\n\n更行更远还唱\n\n沿途避走齐脖的深草\n\n和滚落衰亡的陡坡\n\n给蹭过车的老司机递烟解乏\n\n不惦记竹筒盛雨露的事儿\n\n你要爱荒野上的风声\n\n胜过爱贫穷和思考\n\n暮冬时烤雪迟夏写长信\n\n早春不过一棵树\n","slug":"途中","published":1,"updated":"2018-01-20T06:44:37.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m958006z44wa2lf3sxn5","content":"<p>今天给大家分享一首来自陈鸿宇的歌曲，作词 唐映枫<br>直接上链接<a href=\"http://music.163.com/#/m/song?id=34380395&amp;userid=114707089\" target=\"_blank\" rel=\"external\">http://music.163.com/#/m/song?id=34380395&amp;userid=114707089</a><br><a id=\"more\"></a><br>作曲 : 陈鸿宇</p>\n<p>作词 : 唐映枫</p>\n<p>吉他：孙鹏</p>\n<p>编曲：赵鑫/马雨阳</p>\n<p>混音：马雨阳</p>\n<p>夕沉下</p>\n<p>的飞鸟</p>\n<p>影子多细长</p>\n<p>夜宿在</p>\n<p>某山口</p>\n<p>雾气湿衣裳</p>\n<p>挎壶酒</p>\n<p>给荒野</p>\n<p>饮酌那秋黄</p>\n<p>不吁然</p>\n<p>不吟唱</p>\n<p>只拾掇行囊</p>\n<p>趟出这片枯寂就趟过生长</p>\n<p>遇见风起水浪就遇过虚妄</p>\n<p>忍住顷刻回望就忍过恓惶</p>\n<p>一如年少模样</p>\n<p>日升抑或潮涨</p>\n<p>痛彻抑或善忘</p>\n<p>你要去的地方</p>\n<p>四野细雨春芒</p>\n<p>太轻太急恓惶</p>\n<p>听街声</p>\n<p>闻世况</p>\n<p>或走俗寻常</p>\n<p>经戈壁</p>\n<p>过断桥</p>\n<p>塌落泥土香</p>\n<p>递根烟</p>\n<p>给路客</p>\n<p>解乏这星光</p>\n<p>茧磨在</p>\n<p>鞋跟上</p>\n<p>无所谓远方</p>\n<p>趟出这片枯寂就趟过生长</p>\n<p>遇见风起水浪就遇过虚妄</p>\n<p>忍住顷刻回望就忍过恓惶</p>\n<p>一如年少模样</p>\n<p>苦旅抑或迷香</p>\n<p>欢喜抑或坠亡</p>\n<p>你要去的地方</p>\n<p>遗情处有诗章</p>\n<p>更行更远还唱</p>\n<p>沿途避走齐脖的深草</p>\n<p>和滚落衰亡的陡坡</p>\n<p>给蹭过车的老司机递烟解乏</p>\n<p>不惦记竹筒盛雨露的事儿</p>\n<p>你要爱荒野上的风声</p>\n<p>胜过爱贫穷和思考</p>\n<p>暮冬时烤雪迟夏写长信</p>\n<p>早春不过一棵树</p>\n","excerpt":"<p>今天给大家分享一首来自陈鸿宇的歌曲，作词 唐映枫<br>直接上链接<a href=\"http://music.163.com/#/m/song?id=34380395&amp;userid=114707089\">http://music.163.com/#/m/song?id=34380395&amp;userid=114707089</a><br>","more":"<br>作曲 : 陈鸿宇</p>\n<p>作词 : 唐映枫</p>\n<p>吉他：孙鹏</p>\n<p>编曲：赵鑫/马雨阳</p>\n<p>混音：马雨阳</p>\n<p>夕沉下</p>\n<p>的飞鸟</p>\n<p>影子多细长</p>\n<p>夜宿在</p>\n<p>某山口</p>\n<p>雾气湿衣裳</p>\n<p>挎壶酒</p>\n<p>给荒野</p>\n<p>饮酌那秋黄</p>\n<p>不吁然</p>\n<p>不吟唱</p>\n<p>只拾掇行囊</p>\n<p>趟出这片枯寂就趟过生长</p>\n<p>遇见风起水浪就遇过虚妄</p>\n<p>忍住顷刻回望就忍过恓惶</p>\n<p>一如年少模样</p>\n<p>日升抑或潮涨</p>\n<p>痛彻抑或善忘</p>\n<p>你要去的地方</p>\n<p>四野细雨春芒</p>\n<p>太轻太急恓惶</p>\n<p>听街声</p>\n<p>闻世况</p>\n<p>或走俗寻常</p>\n<p>经戈壁</p>\n<p>过断桥</p>\n<p>塌落泥土香</p>\n<p>递根烟</p>\n<p>给路客</p>\n<p>解乏这星光</p>\n<p>茧磨在</p>\n<p>鞋跟上</p>\n<p>无所谓远方</p>\n<p>趟出这片枯寂就趟过生长</p>\n<p>遇见风起水浪就遇过虚妄</p>\n<p>忍住顷刻回望就忍过恓惶</p>\n<p>一如年少模样</p>\n<p>苦旅抑或迷香</p>\n<p>欢喜抑或坠亡</p>\n<p>你要去的地方</p>\n<p>遗情处有诗章</p>\n<p>更行更远还唱</p>\n<p>沿途避走齐脖的深草</p>\n<p>和滚落衰亡的陡坡</p>\n<p>给蹭过车的老司机递烟解乏</p>\n<p>不惦记竹筒盛雨露的事儿</p>\n<p>你要爱荒野上的风声</p>\n<p>胜过爱贫穷和思考</p>\n<p>暮冬时烤雪迟夏写长信</p>\n<p>早春不过一棵树</p>"},{"title":"邮件","date":"2017-04-20T08:55:02.000Z","toc":true,"_content":"利用JavaMail发送邮件\n<!--more-->\n# JavaMail\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1feueiskbukj30g60eyjt5.jpg)\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1feueit5y9sj30lc02m3yt.jpg)\n# 实际代码\n```\npublic class Demo1 {\n\t@Test\n\tpublic void fun1() throws AddressException, MessagingException, IOException{\n\t\t\n\t\tProperties properties = new Properties();\n\t\tproperties.setProperty(\"mail.host\", \"smtp.qq.com\");\n\t\tproperties.setProperty(\"mail.smtp.auth\", \"true\");\n\t\tproperties.setProperty(\"mail.transport.protocol\", \"smtp\");\n\t\tproperties.setProperty(\"mail.smtp.socketFactory.class\", \"javax.net.ssl.SSLSocketFactory\");\n\t\tproperties.setProperty(\"mail.smtp.port\", \"465\");\n\t\tproperties.setProperty(\"mail.smtp.socketFactory.port\", \"465\");\n\t\t\n\t\tAuthenticator authenticator = new Authenticator(){\n\t\t\t@Override\n\t\t\tprotected PasswordAuthentication getPasswordAuthentication(){\n\t\t\t\treturn new PasswordAuthentication(\"自己的地址\", \"QQ邮箱pop3/smtp服务的授权码\");//注意授权码不是Q Q密码\n\t\t\t}\n\t\t};\n\t\t\n\t\tSession session = Session.getInstance(properties, authenticator);\n\n\t\tMimeMessage message = new MimeMessage(session);\n\t\tmessage.setFrom(new InternetAddress(\"自己的地址\"));//自己的地址\n\t\tmessage.setRecipients(RecipientType.TO, \"收件人地址\");//收件人地址\n\t\n\t\tmessage.setSubject(\"少女所见之原风景的测试邮件\");\n\n//下面部分为发送带附件的mail \n//\t\tMimeMultipart list = new MimeMultipart();\n//\t\t\n//\t\tMimeBodyPart part1 = new MimeBodyPart();\n//\t\tpart1.setContent(\"落花时节又逢君\",\"text/html;charset=utf-8\");\n//\t\tlist.addBodyPart(part1);\n//\t\t\n//\t\t\n//\t\tMimeBodyPart part2 = new MimeBodyPart();\n//\t\tpart2.attachFile(new File(\"d:/1.jpg\"));\n//\t\t//设置文件名\n//\t\tpart2.setFileName(MimeUtility.encodeText(\"萤火之森.jpg\"));\n//\t\tlist.addBodyPart(part2);\n//\t\t\n//\t\tmessage.setContent(list);\n\t\t\n\t\tmessage.setContent(\"落花时节又逢君\",\"text/html;charset=utf-8\");\n\t\t\n\t\tTransport.send(message);//发送\n\t}\n}\n```","source":"_posts/邮件.md","raw":"---\ntitle: 邮件\ndate: 2017-04-20 16:55:02\ntags:\n- Web\ntoc: true\n---\n利用JavaMail发送邮件\n<!--more-->\n# JavaMail\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1feueiskbukj30g60eyjt5.jpg)\n![](http://wx2.sinaimg.cn/large/005P8ayVgy1feueit5y9sj30lc02m3yt.jpg)\n# 实际代码\n```\npublic class Demo1 {\n\t@Test\n\tpublic void fun1() throws AddressException, MessagingException, IOException{\n\t\t\n\t\tProperties properties = new Properties();\n\t\tproperties.setProperty(\"mail.host\", \"smtp.qq.com\");\n\t\tproperties.setProperty(\"mail.smtp.auth\", \"true\");\n\t\tproperties.setProperty(\"mail.transport.protocol\", \"smtp\");\n\t\tproperties.setProperty(\"mail.smtp.socketFactory.class\", \"javax.net.ssl.SSLSocketFactory\");\n\t\tproperties.setProperty(\"mail.smtp.port\", \"465\");\n\t\tproperties.setProperty(\"mail.smtp.socketFactory.port\", \"465\");\n\t\t\n\t\tAuthenticator authenticator = new Authenticator(){\n\t\t\t@Override\n\t\t\tprotected PasswordAuthentication getPasswordAuthentication(){\n\t\t\t\treturn new PasswordAuthentication(\"自己的地址\", \"QQ邮箱pop3/smtp服务的授权码\");//注意授权码不是Q Q密码\n\t\t\t}\n\t\t};\n\t\t\n\t\tSession session = Session.getInstance(properties, authenticator);\n\n\t\tMimeMessage message = new MimeMessage(session);\n\t\tmessage.setFrom(new InternetAddress(\"自己的地址\"));//自己的地址\n\t\tmessage.setRecipients(RecipientType.TO, \"收件人地址\");//收件人地址\n\t\n\t\tmessage.setSubject(\"少女所见之原风景的测试邮件\");\n\n//下面部分为发送带附件的mail \n//\t\tMimeMultipart list = new MimeMultipart();\n//\t\t\n//\t\tMimeBodyPart part1 = new MimeBodyPart();\n//\t\tpart1.setContent(\"落花时节又逢君\",\"text/html;charset=utf-8\");\n//\t\tlist.addBodyPart(part1);\n//\t\t\n//\t\t\n//\t\tMimeBodyPart part2 = new MimeBodyPart();\n//\t\tpart2.attachFile(new File(\"d:/1.jpg\"));\n//\t\t//设置文件名\n//\t\tpart2.setFileName(MimeUtility.encodeText(\"萤火之森.jpg\"));\n//\t\tlist.addBodyPart(part2);\n//\t\t\n//\t\tmessage.setContent(list);\n\t\t\n\t\tmessage.setContent(\"落花时节又逢君\",\"text/html;charset=utf-8\");\n\t\t\n\t\tTransport.send(message);//发送\n\t}\n}\n```","slug":"邮件","published":1,"updated":"2018-01-20T06:44:37.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m95a007144wan8bzsuk8","content":"<p>利用JavaMail发送邮件<br><a id=\"more\"></a></p>\n<h1 id=\"JavaMail\"><a href=\"#JavaMail\" class=\"headerlink\" title=\"JavaMail\"></a>JavaMail</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1feueiskbukj30g60eyjt5.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1feueit5y9sj30lc02m3yt.jpg\" alt=\"\"></p>\n<h1 id=\"实际代码\"><a href=\"#实际代码\" class=\"headerlink\" title=\"实际代码\"></a>实际代码</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1</span> </span>&#123;</div><div class=\"line\"> <span class=\"meta\">@Test</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">fun1</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> AddressException, MessagingException, IOException</span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  Properties properties = <span class=\"keyword\">new</span> Properties();</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.host\"</span>, <span class=\"string\">\"smtp.qq.com\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.smtp.auth\"</span>, <span class=\"string\">\"true\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.transport.protocol\"</span>, <span class=\"string\">\"smtp\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.smtp.socketFactory.class\"</span>, <span class=\"string\">\"javax.net.ssl.SSLSocketFactory\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.smtp.port\"</span>, <span class=\"string\">\"465\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.smtp.socketFactory.port\"</span>, <span class=\"string\">\"465\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  Authenticator authenticator = <span class=\"keyword\">new</span> Authenticator()&#123;</div><div class=\"line\">   <span class=\"meta\">@Override</span></div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> PasswordAuthentication <span class=\"title\">getPasswordAuthentication</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> PasswordAuthentication(<span class=\"string\">\"自己的地址\"</span>, <span class=\"string\">\"QQ邮箱pop3/smtp服务的授权码\"</span>);<span class=\"comment\">//注意授权码不是Q Q密码</span></div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\">  </div><div class=\"line\">  Session session = Session.getInstance(properties, authenticator);</div><div class=\"line\"></div><div class=\"line\">  MimeMessage message = <span class=\"keyword\">new</span> MimeMessage(session);</div><div class=\"line\">  message.setFrom(<span class=\"keyword\">new</span> InternetAddress(<span class=\"string\">\"自己的地址\"</span>));<span class=\"comment\">//自己的地址</span></div><div class=\"line\">  message.setRecipients(RecipientType.TO, <span class=\"string\">\"收件人地址\"</span>);<span class=\"comment\">//收件人地址</span></div><div class=\"line\"> </div><div class=\"line\">  message.setSubject(<span class=\"string\">\"少女所见之原风景的测试邮件\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//下面部分为发送带附件的mail </span></div><div class=\"line\"><span class=\"comment\">//\t\tMimeMultipart list = new MimeMultipart();</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\tMimeBodyPart part1 = new MimeBodyPart();</span></div><div class=\"line\"><span class=\"comment\">//\t\tpart1.setContent(\"落花时节又逢君\",\"text/html;charset=utf-8\");</span></div><div class=\"line\"><span class=\"comment\">//\t\tlist.addBodyPart(part1);</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\tMimeBodyPart part2 = new MimeBodyPart();</span></div><div class=\"line\"><span class=\"comment\">//\t\tpart2.attachFile(new File(\"d:/1.jpg\"));</span></div><div class=\"line\"><span class=\"comment\">//\t\t//设置文件名</span></div><div class=\"line\"><span class=\"comment\">//\t\tpart2.setFileName(MimeUtility.encodeText(\"萤火之森.jpg\"));</span></div><div class=\"line\"><span class=\"comment\">//\t\tlist.addBodyPart(part2);</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\tmessage.setContent(list);</span></div><div class=\"line\">  </div><div class=\"line\">  message.setContent(<span class=\"string\">\"落花时节又逢君\"</span>,<span class=\"string\">\"text/html;charset=utf-8\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  Transport.send(message);<span class=\"comment\">//发送</span></div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"<p>利用JavaMail发送邮件<br>","more":"</p>\n<h1 id=\"JavaMail\"><a href=\"#JavaMail\" class=\"headerlink\" title=\"JavaMail\"></a>JavaMail</h1><p><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1feueiskbukj30g60eyjt5.jpg\" alt=\"\"><br><img src=\"http://wx2.sinaimg.cn/large/005P8ayVgy1feueit5y9sj30lc02m3yt.jpg\" alt=\"\"></p>\n<h1 id=\"实际代码\"><a href=\"#实际代码\" class=\"headerlink\" title=\"实际代码\"></a>实际代码</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1</span> </span>&#123;</div><div class=\"line\"> <span class=\"meta\">@Test</span></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">fun1</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> AddressException, MessagingException, IOException</span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  Properties properties = <span class=\"keyword\">new</span> Properties();</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.host\"</span>, <span class=\"string\">\"smtp.qq.com\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.smtp.auth\"</span>, <span class=\"string\">\"true\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.transport.protocol\"</span>, <span class=\"string\">\"smtp\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.smtp.socketFactory.class\"</span>, <span class=\"string\">\"javax.net.ssl.SSLSocketFactory\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.smtp.port\"</span>, <span class=\"string\">\"465\"</span>);</div><div class=\"line\">  properties.setProperty(<span class=\"string\">\"mail.smtp.socketFactory.port\"</span>, <span class=\"string\">\"465\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  Authenticator authenticator = <span class=\"keyword\">new</span> Authenticator()&#123;</div><div class=\"line\">   <span class=\"meta\">@Override</span></div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> PasswordAuthentication <span class=\"title\">getPasswordAuthentication</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> PasswordAuthentication(<span class=\"string\">\"自己的地址\"</span>, <span class=\"string\">\"QQ邮箱pop3/smtp服务的授权码\"</span>);<span class=\"comment\">//注意授权码不是Q Q密码</span></div><div class=\"line\">   &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\">  </div><div class=\"line\">  Session session = Session.getInstance(properties, authenticator);</div><div class=\"line\"></div><div class=\"line\">  MimeMessage message = <span class=\"keyword\">new</span> MimeMessage(session);</div><div class=\"line\">  message.setFrom(<span class=\"keyword\">new</span> InternetAddress(<span class=\"string\">\"自己的地址\"</span>));<span class=\"comment\">//自己的地址</span></div><div class=\"line\">  message.setRecipients(RecipientType.TO, <span class=\"string\">\"收件人地址\"</span>);<span class=\"comment\">//收件人地址</span></div><div class=\"line\"> </div><div class=\"line\">  message.setSubject(<span class=\"string\">\"少女所见之原风景的测试邮件\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//下面部分为发送带附件的mail </span></div><div class=\"line\"><span class=\"comment\">//\t\tMimeMultipart list = new MimeMultipart();</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\tMimeBodyPart part1 = new MimeBodyPart();</span></div><div class=\"line\"><span class=\"comment\">//\t\tpart1.setContent(\"落花时节又逢君\",\"text/html;charset=utf-8\");</span></div><div class=\"line\"><span class=\"comment\">//\t\tlist.addBodyPart(part1);</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\tMimeBodyPart part2 = new MimeBodyPart();</span></div><div class=\"line\"><span class=\"comment\">//\t\tpart2.attachFile(new File(\"d:/1.jpg\"));</span></div><div class=\"line\"><span class=\"comment\">//\t\t//设置文件名</span></div><div class=\"line\"><span class=\"comment\">//\t\tpart2.setFileName(MimeUtility.encodeText(\"萤火之森.jpg\"));</span></div><div class=\"line\"><span class=\"comment\">//\t\tlist.addBodyPart(part2);</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\tmessage.setContent(list);</span></div><div class=\"line\">  </div><div class=\"line\">  message.setContent(<span class=\"string\">\"落花时节又逢君\"</span>,<span class=\"string\">\"text/html;charset=utf-8\"</span>);</div><div class=\"line\">  </div><div class=\"line\">  Transport.send(message);<span class=\"comment\">//发送</span></div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"页面国际化","date":"2017-04-18T06:42:21.000Z","toc":true,"_content":"页面国际化\n<!--more-->\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feqtzpdzeej30nc08ggml.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feqtzpv5evj30fh06mt9f.jpg)\n配置文件名为res_en_US.properties等\n","source":"_posts/页面国际化.md","raw":"---\ntitle: 页面国际化\ndate: 2017-04-18 14:42:21\ntags:\n- Web\ntoc: true\n---\n页面国际化\n<!--more-->\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feqtzpdzeej30nc08ggml.jpg)\n![](http://wx1.sinaimg.cn/large/005P8ayVgy1feqtzpv5evj30fh06mt9f.jpg)\n配置文件名为res_en_US.properties等\n","slug":"页面国际化","published":1,"updated":"2018-01-20T06:44:37.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m95c007344wabf80hgr9","content":"<p>页面国际化<br><a id=\"more\"></a><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feqtzpdzeej30nc08ggml.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feqtzpv5evj30fh06mt9f.jpg\" alt=\"\"><br>配置文件名为res_en_US.properties等</p>\n","excerpt":"<p>页面国际化<br>","more":"<br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feqtzpdzeej30nc08ggml.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/large/005P8ayVgy1feqtzpv5evj30fh06mt9f.jpg\" alt=\"\"><br>配置文件名为res_en_US.properties等</p>"},{"title":"随笔","date":"2016-12-10T11:44:14.000Z","toc":true,"_content":"你喜欢花吗?\n\n现在不讨厌了.\n<!--more-->\n直面艰险\n就因为依靠这种东西，看到的世界才会是扭曲的吧。\n\n人生路上本来就少不了困难挫折，对于这些挫折，不躲避逃跑而勇敢面对才是最好的选择吧。\n为了成为更好的人，就算再苦再累也会努力。\n天无绝人之路，即使大家都不被看好，而自己也差点放弃，只要拥有正确的「心态」与「方法」，相信每个人都具备足以改变现状的力量。\n你把梦想写下来的时候，它就会成真。你想着所有好的事情，它们就会来到你身边。\n之所以有压力是因为你有可以成功的自信。\n\n那是数次踏入死亡之地之人的眼神\n\n你喜欢花吗\n现在不讨厌了\n\n\n时间的流逝有没有让你安心\n\n落花时节又逢君\n\n每个人内心都有2个自己，一个做梦，一个去做\n\n日历一天一天的翻过，我的时间还在哪里停下呢\n那些真实到让我害怕的东西，让我变得不那么真实\n什么时候才能做回自己呢\n\n\n天空中的繁星 向我传达一道\n你 被囚禁于某处\n倾盆大雨下 同被淋湿的些许梦想\n又会出现怎样的转折\n哭泣 也疲于解答种种谜题\n夜幕散去之时 曙光不复存在\n只因黎明...已然湮灭\n梦境破碎 唯独流泪\n仅于扉页之处的理想\n街道 被杂音与喧嚣覆盖\n而我舍弃掉方向之标 还有一切\n犹如 暴风雨之前的 那种宁静。 不必害怕，拂晓已至！\n\n不断寻找自己个性的源头，分析自己精神的历史，是我救助自己的方法之一。\n\n如果你喜欢热闹，我祝福你，友谊和人群有它的意义和温度。如果你不太合群，我也会恭喜你，至少你没那么容易被控制和绑架。\n\n贫穷下面有更广阔的世界，资本上面也有更广阔的世界。\n我曾踏足山巅，也曾跌落低谷，两者皆让我受益良多。\n\n燎原之上生驹驰，\n寒月花落本无名。\n\n这一次，一定要成为让自己自豪的人！\n//TODO\n欢迎回到现实世界","source":"_posts/随笔.md","raw":"---\ntitle: 随笔\ndate: 2016-12-10 19:44:14\ntags:\n- essay\n- 文学\ntoc: true\n---\n你喜欢花吗?\n\n现在不讨厌了.\n<!--more-->\n直面艰险\n就因为依靠这种东西，看到的世界才会是扭曲的吧。\n\n人生路上本来就少不了困难挫折，对于这些挫折，不躲避逃跑而勇敢面对才是最好的选择吧。\n为了成为更好的人，就算再苦再累也会努力。\n天无绝人之路，即使大家都不被看好，而自己也差点放弃，只要拥有正确的「心态」与「方法」，相信每个人都具备足以改变现状的力量。\n你把梦想写下来的时候，它就会成真。你想着所有好的事情，它们就会来到你身边。\n之所以有压力是因为你有可以成功的自信。\n\n那是数次踏入死亡之地之人的眼神\n\n你喜欢花吗\n现在不讨厌了\n\n\n时间的流逝有没有让你安心\n\n落花时节又逢君\n\n每个人内心都有2个自己，一个做梦，一个去做\n\n日历一天一天的翻过，我的时间还在哪里停下呢\n那些真实到让我害怕的东西，让我变得不那么真实\n什么时候才能做回自己呢\n\n\n天空中的繁星 向我传达一道\n你 被囚禁于某处\n倾盆大雨下 同被淋湿的些许梦想\n又会出现怎样的转折\n哭泣 也疲于解答种种谜题\n夜幕散去之时 曙光不复存在\n只因黎明...已然湮灭\n梦境破碎 唯独流泪\n仅于扉页之处的理想\n街道 被杂音与喧嚣覆盖\n而我舍弃掉方向之标 还有一切\n犹如 暴风雨之前的 那种宁静。 不必害怕，拂晓已至！\n\n不断寻找自己个性的源头，分析自己精神的历史，是我救助自己的方法之一。\n\n如果你喜欢热闹，我祝福你，友谊和人群有它的意义和温度。如果你不太合群，我也会恭喜你，至少你没那么容易被控制和绑架。\n\n贫穷下面有更广阔的世界，资本上面也有更广阔的世界。\n我曾踏足山巅，也曾跌落低谷，两者皆让我受益良多。\n\n燎原之上生驹驰，\n寒月花落本无名。\n\n这一次，一定要成为让自己自豪的人！\n//TODO\n欢迎回到现实世界","slug":"随笔","published":1,"updated":"2018-01-20T06:44:37.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m95e007544wa4cbawrnc","content":"<p>你喜欢花吗?</p>\n<p>现在不讨厌了.<br><a id=\"more\"></a><br>直面艰险<br>就因为依靠这种东西，看到的世界才会是扭曲的吧。</p>\n<p>人生路上本来就少不了困难挫折，对于这些挫折，不躲避逃跑而勇敢面对才是最好的选择吧。<br>为了成为更好的人，就算再苦再累也会努力。<br>天无绝人之路，即使大家都不被看好，而自己也差点放弃，只要拥有正确的「心态」与「方法」，相信每个人都具备足以改变现状的力量。<br>你把梦想写下来的时候，它就会成真。你想着所有好的事情，它们就会来到你身边。<br>之所以有压力是因为你有可以成功的自信。</p>\n<p>那是数次踏入死亡之地之人的眼神</p>\n<p>你喜欢花吗<br>现在不讨厌了</p>\n<p>时间的流逝有没有让你安心</p>\n<p>落花时节又逢君</p>\n<p>每个人内心都有2个自己，一个做梦，一个去做</p>\n<p>日历一天一天的翻过，我的时间还在哪里停下呢<br>那些真实到让我害怕的东西，让我变得不那么真实<br>什么时候才能做回自己呢</p>\n<p>天空中的繁星 向我传达一道<br>你 被囚禁于某处<br>倾盆大雨下 同被淋湿的些许梦想<br>又会出现怎样的转折<br>哭泣 也疲于解答种种谜题<br>夜幕散去之时 曙光不复存在<br>只因黎明…已然湮灭<br>梦境破碎 唯独流泪<br>仅于扉页之处的理想<br>街道 被杂音与喧嚣覆盖<br>而我舍弃掉方向之标 还有一切<br>犹如 暴风雨之前的 那种宁静。 不必害怕，拂晓已至！</p>\n<p>不断寻找自己个性的源头，分析自己精神的历史，是我救助自己的方法之一。</p>\n<p>如果你喜欢热闹，我祝福你，友谊和人群有它的意义和温度。如果你不太合群，我也会恭喜你，至少你没那么容易被控制和绑架。</p>\n<p>贫穷下面有更广阔的世界，资本上面也有更广阔的世界。<br>我曾踏足山巅，也曾跌落低谷，两者皆让我受益良多。</p>\n<p>燎原之上生驹驰，<br>寒月花落本无名。</p>\n<p>这一次，一定要成为让自己自豪的人！<br>//TODO<br>欢迎回到现实世界</p>\n","excerpt":"<p>你喜欢花吗?</p>\n<p>现在不讨厌了.<br>","more":"<br>直面艰险<br>就因为依靠这种东西，看到的世界才会是扭曲的吧。</p>\n<p>人生路上本来就少不了困难挫折，对于这些挫折，不躲避逃跑而勇敢面对才是最好的选择吧。<br>为了成为更好的人，就算再苦再累也会努力。<br>天无绝人之路，即使大家都不被看好，而自己也差点放弃，只要拥有正确的「心态」与「方法」，相信每个人都具备足以改变现状的力量。<br>你把梦想写下来的时候，它就会成真。你想着所有好的事情，它们就会来到你身边。<br>之所以有压力是因为你有可以成功的自信。</p>\n<p>那是数次踏入死亡之地之人的眼神</p>\n<p>你喜欢花吗<br>现在不讨厌了</p>\n<p>时间的流逝有没有让你安心</p>\n<p>落花时节又逢君</p>\n<p>每个人内心都有2个自己，一个做梦，一个去做</p>\n<p>日历一天一天的翻过，我的时间还在哪里停下呢<br>那些真实到让我害怕的东西，让我变得不那么真实<br>什么时候才能做回自己呢</p>\n<p>天空中的繁星 向我传达一道<br>你 被囚禁于某处<br>倾盆大雨下 同被淋湿的些许梦想<br>又会出现怎样的转折<br>哭泣 也疲于解答种种谜题<br>夜幕散去之时 曙光不复存在<br>只因黎明…已然湮灭<br>梦境破碎 唯独流泪<br>仅于扉页之处的理想<br>街道 被杂音与喧嚣覆盖<br>而我舍弃掉方向之标 还有一切<br>犹如 暴风雨之前的 那种宁静。 不必害怕，拂晓已至！</p>\n<p>不断寻找自己个性的源头，分析自己精神的历史，是我救助自己的方法之一。</p>\n<p>如果你喜欢热闹，我祝福你，友谊和人群有它的意义和温度。如果你不太合群，我也会恭喜你，至少你没那么容易被控制和绑架。</p>\n<p>贫穷下面有更广阔的世界，资本上面也有更广阔的世界。<br>我曾踏足山巅，也曾跌落低谷，两者皆让我受益良多。</p>\n<p>燎原之上生驹驰，<br>寒月花落本无名。</p>\n<p>这一次，一定要成为让自己自豪的人！<br>//TODO<br>欢迎回到现实世界</p>"},{"title":"青春之旅","date":"2017-04-06T12:01:26.000Z","toc":true,"_content":"![](http://www.bz55.com/uploads/allimg/140727/1-140HF91G2-50.jpg)\n下班看了青春之旅的电影版，虽然和动漫有很大差距，但总体还是可以。\n<!--more-->\n<embed height=\"415\" width=\"544\" quality=\"best\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\" src=\"//static.hdslb.com/miniloader.swf\" flashvars=\"aid=8828032&page=1\" pluginspage=\"//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash\"></embed>\n\n<hr>\n第一次看青春之旅的时候感觉画风并不适合自己，至于为什么看了下去呢，无非就是2点原因。一点是kaji的声音实在太苏了，最重要的一点是女主角吉冈双叶的性格跟我太像了。\n\n关于自己的青春呢，应该和大多数人一样，被狗吃了。最重要的是大部分我居然都忘了。。。。。。哎，我这人啊。\n总之是总结不出什么，只能是感叹一下时光的流逝。\n<hr>\n![](http://wx4.sinaimg.cn/large/005P8ayVly1ffk4wbgrskj30go0b277y.jpg)\n非常喜欢里面的一句话。\n\n青春总会犯错，\n但是，\n有错误的青春才是真的青春。\n","source":"_posts/青春之旅.md","raw":"---\ntitle: 青春之旅\ndate: 2017-04-06 20:01:26\ntags:\n- essay\n- 生活\ntoc: true\n---\n![](http://www.bz55.com/uploads/allimg/140727/1-140HF91G2-50.jpg)\n下班看了青春之旅的电影版，虽然和动漫有很大差距，但总体还是可以。\n<!--more-->\n<embed height=\"415\" width=\"544\" quality=\"best\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\" src=\"//static.hdslb.com/miniloader.swf\" flashvars=\"aid=8828032&page=1\" pluginspage=\"//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash\"></embed>\n\n<hr>\n第一次看青春之旅的时候感觉画风并不适合自己，至于为什么看了下去呢，无非就是2点原因。一点是kaji的声音实在太苏了，最重要的一点是女主角吉冈双叶的性格跟我太像了。\n\n关于自己的青春呢，应该和大多数人一样，被狗吃了。最重要的是大部分我居然都忘了。。。。。。哎，我这人啊。\n总之是总结不出什么，只能是感叹一下时光的流逝。\n<hr>\n![](http://wx4.sinaimg.cn/large/005P8ayVly1ffk4wbgrskj30go0b277y.jpg)\n非常喜欢里面的一句话。\n\n青春总会犯错，\n但是，\n有错误的青春才是真的青春。\n","slug":"青春之旅","published":1,"updated":"2018-01-20T06:44:37.705Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m95h007744wajlmzalvq","content":"<p><img src=\"http://www.bz55.com/uploads/allimg/140727/1-140HF91G2-50.jpg\" alt=\"\"><br>下班看了青春之旅的电影版，虽然和动漫有很大差距，但总体还是可以。<br><a id=\"more\"></a></p>\n<embed height=\"415\" width=\"544\" quality=\"best\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\" src=\"//static.hdslb.com/miniloader.swf\" flashvars=\"aid=8828032&page=1\" pluginspage=\"//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash\">\n\n<p><hr><br>第一次看青春之旅的时候感觉画风并不适合自己，至于为什么看了下去呢，无非就是2点原因。一点是kaji的声音实在太苏了，最重要的一点是女主角吉冈双叶的性格跟我太像了。</p>\n<p>关于自己的青春呢，应该和大多数人一样，被狗吃了。最重要的是大部分我居然都忘了。。。。。。哎，我这人啊。<br>总之是总结不出什么，只能是感叹一下时光的流逝。</p>\n<p><hr><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVly1ffk4wbgrskj30go0b277y.jpg\" alt=\"\"><br>非常喜欢里面的一句话。</p>\n<p>青春总会犯错，<br>但是，<br>有错误的青春才是真的青春。</p>\n","excerpt":"<p><img src=\"http://www.bz55.com/uploads/allimg/140727/1-140HF91G2-50.jpg\" alt=\"\"><br>下班看了青春之旅的电影版，虽然和动漫有很大差距，但总体还是可以。<br>","more":"</p>\n<embed height=\"415\" width=\"544\" quality=\"best\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\" src=\"//static.hdslb.com/miniloader.swf\" flashvars=\"aid=8828032&page=1\" pluginspage=\"//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash\"></embed>\n\n<p><hr><br>第一次看青春之旅的时候感觉画风并不适合自己，至于为什么看了下去呢，无非就是2点原因。一点是kaji的声音实在太苏了，最重要的一点是女主角吉冈双叶的性格跟我太像了。</p>\n<p>关于自己的青春呢，应该和大多数人一样，被狗吃了。最重要的是大部分我居然都忘了。。。。。。哎，我这人啊。<br>总之是总结不出什么，只能是感叹一下时光的流逝。</p>\n<p><hr><br><img src=\"http://wx4.sinaimg.cn/large/005P8ayVly1ffk4wbgrskj30go0b277y.jpg\" alt=\"\"><br>非常喜欢里面的一句话。</p>\n<p>青春总会犯错，<br>但是，<br>有错误的青春才是真的青春。</p>"},{"title":"雨中记","date":"2017-06-05T03:54:05.000Z","toc":true,"_content":"儿童节过后整个清水河就下了3天的雨，自然我很高兴会下雨。\n![](http://hpimg.pianke.me/49e49e109f75db29c8c918d93081af5e20170605.jpg?imageView2/2/w/640/format/jpg)\n<!--more-->\n# 6.2\n周五是司庆日，所以我们也象征性的玩了一天。\n虽然并没有我们实习生什么事...\n# 6.3\n周六直接睡到中午才起床，晚上和粗粗约好久违的去通宵。\n\n网吧遇到2个通宵的老外，\n似乎在看球赛，\n时而举起双手高呼，\n吸引着我的目光。\n清晨的时候国际友人走了，我也想着是时候回去睡觉了。\n就随着国际友人的脚步一起走出了网吧。\n# 6.4\n当我再次醒来已经是下午4点钟，\n之后接到魏铭辰的电话说要过来，\n于是直接穿着拖鞋短裤就出门了。\n<hr>\n一起吃了次牛排海鲜自助，非常喜欢喝里面的西柚果汁。\n晚上在肯德基坐着聊天，\n跟我说着他接下来的复习打算。\n\n片刻之后便是分离之时，\n天空被乌云遮住，\n只留下天边的一丝缝隙透露出银白的希望之光，\n看到他上车之后，\n随着飘落的雨丝，\n我便也回去了。\n\n路上天空便放晴了，\n幸运的是看到了晴空后皎洁的月光，\n要知道在成都能看到月亮是很难得的。\n<hr>\n回去之后，躺在床上，这样累了累了就睡了。\n接下来的一个月要辛苦你了，少年。","source":"_posts/雨中记.md","raw":"---\ntitle: 雨中记\ndate: 2017-06-05 11:54:05\ntags:\n- 生活\ntoc: true\n---\n儿童节过后整个清水河就下了3天的雨，自然我很高兴会下雨。\n![](http://hpimg.pianke.me/49e49e109f75db29c8c918d93081af5e20170605.jpg?imageView2/2/w/640/format/jpg)\n<!--more-->\n# 6.2\n周五是司庆日，所以我们也象征性的玩了一天。\n虽然并没有我们实习生什么事...\n# 6.3\n周六直接睡到中午才起床，晚上和粗粗约好久违的去通宵。\n\n网吧遇到2个通宵的老外，\n似乎在看球赛，\n时而举起双手高呼，\n吸引着我的目光。\n清晨的时候国际友人走了，我也想着是时候回去睡觉了。\n就随着国际友人的脚步一起走出了网吧。\n# 6.4\n当我再次醒来已经是下午4点钟，\n之后接到魏铭辰的电话说要过来，\n于是直接穿着拖鞋短裤就出门了。\n<hr>\n一起吃了次牛排海鲜自助，非常喜欢喝里面的西柚果汁。\n晚上在肯德基坐着聊天，\n跟我说着他接下来的复习打算。\n\n片刻之后便是分离之时，\n天空被乌云遮住，\n只留下天边的一丝缝隙透露出银白的希望之光，\n看到他上车之后，\n随着飘落的雨丝，\n我便也回去了。\n\n路上天空便放晴了，\n幸运的是看到了晴空后皎洁的月光，\n要知道在成都能看到月亮是很难得的。\n<hr>\n回去之后，躺在床上，这样累了累了就睡了。\n接下来的一个月要辛苦你了，少年。","slug":"雨中记","published":1,"updated":"2018-01-20T06:44:37.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m95k007944waw7ibj3gu","content":"<p>儿童节过后整个清水河就下了3天的雨，自然我很高兴会下雨。<br><img src=\"http://hpimg.pianke.me/49e49e109f75db29c8c918d93081af5e20170605.jpg?imageView2/2/w/640/format/jpg\" alt=\"\"><br><a id=\"more\"></a></p>\n<h1 id=\"6-2\"><a href=\"#6-2\" class=\"headerlink\" title=\"6.2\"></a>6.2</h1><p>周五是司庆日，所以我们也象征性的玩了一天。<br>虽然并没有我们实习生什么事…</p>\n<h1 id=\"6-3\"><a href=\"#6-3\" class=\"headerlink\" title=\"6.3\"></a>6.3</h1><p>周六直接睡到中午才起床，晚上和粗粗约好久违的去通宵。</p>\n<p>网吧遇到2个通宵的老外，<br>似乎在看球赛，<br>时而举起双手高呼，<br>吸引着我的目光。<br>清晨的时候国际友人走了，我也想着是时候回去睡觉了。<br>就随着国际友人的脚步一起走出了网吧。</p>\n<h1 id=\"6-4\"><a href=\"#6-4\" class=\"headerlink\" title=\"6.4\"></a>6.4</h1><p>当我再次醒来已经是下午4点钟，<br>之后接到魏铭辰的电话说要过来，<br>于是直接穿着拖鞋短裤就出门了。</p>\n<p><hr><br>一起吃了次牛排海鲜自助，非常喜欢喝里面的西柚果汁。<br>晚上在肯德基坐着聊天，<br>跟我说着他接下来的复习打算。</p>\n<p>片刻之后便是分离之时，<br>天空被乌云遮住，<br>只留下天边的一丝缝隙透露出银白的希望之光，<br>看到他上车之后，<br>随着飘落的雨丝，<br>我便也回去了。</p>\n<p>路上天空便放晴了，<br>幸运的是看到了晴空后皎洁的月光，<br>要知道在成都能看到月亮是很难得的。</p>\n<p><hr><br>回去之后，躺在床上，这样累了累了就睡了。<br>接下来的一个月要辛苦你了，少年。</p>\n","excerpt":"<p>儿童节过后整个清水河就下了3天的雨，自然我很高兴会下雨。<br><img src=\"http://hpimg.pianke.me/49e49e109f75db29c8c918d93081af5e20170605.jpg?imageView2/2/w/640/format/jpg\" alt=\"\"><br>","more":"</p>\n<h1 id=\"6-2\"><a href=\"#6-2\" class=\"headerlink\" title=\"6.2\"></a>6.2</h1><p>周五是司庆日，所以我们也象征性的玩了一天。<br>虽然并没有我们实习生什么事…</p>\n<h1 id=\"6-3\"><a href=\"#6-3\" class=\"headerlink\" title=\"6.3\"></a>6.3</h1><p>周六直接睡到中午才起床，晚上和粗粗约好久违的去通宵。</p>\n<p>网吧遇到2个通宵的老外，<br>似乎在看球赛，<br>时而举起双手高呼，<br>吸引着我的目光。<br>清晨的时候国际友人走了，我也想着是时候回去睡觉了。<br>就随着国际友人的脚步一起走出了网吧。</p>\n<h1 id=\"6-4\"><a href=\"#6-4\" class=\"headerlink\" title=\"6.4\"></a>6.4</h1><p>当我再次醒来已经是下午4点钟，<br>之后接到魏铭辰的电话说要过来，<br>于是直接穿着拖鞋短裤就出门了。</p>\n<p><hr><br>一起吃了次牛排海鲜自助，非常喜欢喝里面的西柚果汁。<br>晚上在肯德基坐着聊天，<br>跟我说着他接下来的复习打算。</p>\n<p>片刻之后便是分离之时，<br>天空被乌云遮住，<br>只留下天边的一丝缝隙透露出银白的希望之光，<br>看到他上车之后，<br>随着飘落的雨丝，<br>我便也回去了。</p>\n<p>路上天空便放晴了，<br>幸运的是看到了晴空后皎洁的月光，<br>要知道在成都能看到月亮是很难得的。</p>\n<p><hr><br>回去之后，躺在床上，这样累了累了就睡了。<br>接下来的一个月要辛苦你了，少年。</p>"},{"title":"静态代码块，代码块和构造函数的初始化顺序","date":"2017-02-15T05:06:01.000Z","toc":true,"_content":"\n\n被群里人问到初始化顺序，发现自己也不是很清楚，就查了下。\n出处http://blog.csdn.net/w627782664/article/details/7064261\n1父类静态初始化块\n2子类静态初始化块\n3父类初始化块\n4父类构造函数\n5子类初始化块\n6子类构造函数\n测试代码如下:\n<!--more-->\n\n```\nclass Blocks {  \n    static {  \n        System.out.println(\"父类静态初始化块\");  \n    }  \n   \n    {  \n        System.out.println(\"父类初始化块\");  \n    }  \n   \n    Blocks() {  \n        System.out.println(\"父类构造函数\");  \n    }  \n}  \n   \npublic class InitailizeBlocks extends Blocks {  \n    static {  \n        System.out.println(\"子类静态初始化块\");  \n    }  \n   \n    {  \n        System.out.println(\"子类初始化块\");  \n    }  \n   \n    public InitailizeBlocks() {  \n        System.out.println(\"子类构造函数\");  \n    }  \n   \n    public static void main(String[] args) {  \n        new InitailizeBlocks();  \n    }  \n}  \n```","source":"_posts/静态代码块，代码块和构造函数的初始化顺序.md","raw":"---\ntitle: 静态代码块，代码块和构造函数的初始化顺序\n\ndate: 2017-02-15 13:06:01\ntags:\n- Java基础\ntoc: true\n---\n\n\n被群里人问到初始化顺序，发现自己也不是很清楚，就查了下。\n出处http://blog.csdn.net/w627782664/article/details/7064261\n1父类静态初始化块\n2子类静态初始化块\n3父类初始化块\n4父类构造函数\n5子类初始化块\n6子类构造函数\n测试代码如下:\n<!--more-->\n\n```\nclass Blocks {  \n    static {  \n        System.out.println(\"父类静态初始化块\");  \n    }  \n   \n    {  \n        System.out.println(\"父类初始化块\");  \n    }  \n   \n    Blocks() {  \n        System.out.println(\"父类构造函数\");  \n    }  \n}  \n   \npublic class InitailizeBlocks extends Blocks {  \n    static {  \n        System.out.println(\"子类静态初始化块\");  \n    }  \n   \n    {  \n        System.out.println(\"子类初始化块\");  \n    }  \n   \n    public InitailizeBlocks() {  \n        System.out.println(\"子类构造函数\");  \n    }  \n   \n    public static void main(String[] args) {  \n        new InitailizeBlocks();  \n    }  \n}  \n```","slug":"静态代码块，代码块和构造函数的初始化顺序","published":1,"updated":"2018-01-20T06:44:37.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcu9m95o007b44waqnc14gtk","content":"<p>被群里人问到初始化顺序，发现自己也不是很清楚，就查了下。<br>出处<a href=\"http://blog.csdn.net/w627782664/article/details/7064261\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/w627782664/article/details/7064261</a><br>1父类静态初始化块<br>2子类静态初始化块<br>3父类初始化块<br>4父类构造函数<br>5子类初始化块<br>6子类构造函数<br>测试代码如下:<br><a id=\"more\"></a></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Blocks</span> &#123;  </div><div class=\"line\">    <span class=\"keyword\">static</span> &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"父类静态初始化块\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"父类初始化块\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    Blocks() &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"父类构造函数\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;  </div><div class=\"line\">   </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">InitailizeBlocks</span> <span class=\"title\">extends</span> <span class=\"title\">Blocks</span> &#123;  </div><div class=\"line\">    <span class=\"keyword\">static</span> &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"子类静态初始化块\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"子类初始化块\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">InitailizeBlocks</span>(<span class=\"params\"></span>) </span>&#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"子类构造函数\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String[] args</span>) </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">new</span> InitailizeBlocks();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"<p>被群里人问到初始化顺序，发现自己也不是很清楚，就查了下。<br>出处<a href=\"http://blog.csdn.net/w627782664/article/details/7064261\">http://blog.csdn.net/w627782664/article/details/7064261</a><br>1父类静态初始化块<br>2子类静态初始化块<br>3父类初始化块<br>4父类构造函数<br>5子类初始化块<br>6子类构造函数<br>测试代码如下:<br>","more":"</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Blocks</span> &#123;  </div><div class=\"line\">    <span class=\"keyword\">static</span> &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"父类静态初始化块\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"父类初始化块\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    Blocks() &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"父类构造函数\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;  </div><div class=\"line\">   </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">InitailizeBlocks</span> <span class=\"title\">extends</span> <span class=\"title\">Blocks</span> &#123;  </div><div class=\"line\">    <span class=\"keyword\">static</span> &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"子类静态初始化块\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    &#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"子类初始化块\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">InitailizeBlocks</span>(<span class=\"params\"></span>) </span>&#123;  </div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"子类构造函数\"</span>);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">   </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String[] args</span>) </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">new</span> InitailizeBlocks();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjcu9m8u0000044wa4p0vwt3n","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8v2000f44wannmdk8zi"},{"post_id":"cjcu9m8u0000044wa4p0vwt3n","tag_id":"cjcu9m8uv000a44waa8jhkb0o","_id":"cjcu9m8v4000h44wawzgv4gvm"},{"post_id":"cjcu9m8ux000c44waq6jdfxj1","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8v6000k44wamc9n1tz8"},{"post_id":"cjcu9m8u8000244wa6ykgkfhj","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m8vb000m44wa8k3aobqu"},{"post_id":"cjcu9m8v3000g44wazodvkpau","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8ve000p44waouzrvt19"},{"post_id":"cjcu9m8v4000j44wa7fk6piw0","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8vf000r44wa6e4m949x"},{"post_id":"cjcu9m8v4000j44wa7fk6piw0","tag_id":"cjcu9m8uv000a44waa8jhkb0o","_id":"cjcu9m8vi000u44wahhffj1vh"},{"post_id":"cjcu9m8v6000l44wa829mxrt4","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8vj000w44wavxj61ivf"},{"post_id":"cjcu9m8ui000544wa5d5xxd68","tag_id":"cjcu9m8v4000i44wafcfqfw9q","_id":"cjcu9m8vk000z44waylm8iad7"},{"post_id":"cjcu9m8ui000544wa5d5xxd68","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8vm001144wauyqa5e6s"},{"post_id":"cjcu9m8uo000744waqopy3vi6","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m8vn001444wae5nq36ca"},{"post_id":"cjcu9m8uo000744waqopy3vi6","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m8vp001644waflx7q4nk"},{"post_id":"cjcu9m8uu000944wasnnan8v7","tag_id":"cjcu9m8vn001344wabu772a6s","_id":"cjcu9m8vr001a44wa5qthgzqb"},{"post_id":"cjcu9m8uu000944wasnnan8v7","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8vs001c44waxe911dz9"},{"post_id":"cjcu9m8uv000b44wan90u3x5l","tag_id":"cjcu9m8vq001844waqlefd241","_id":"cjcu9m8vu001f44wa8nypoox0"},{"post_id":"cjcu9m8v1000e44wahxoth76u","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m8vy001j44wacp6btbgz"},{"post_id":"cjcu9m8v1000e44wahxoth76u","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m8vz001l44wak7dhj82b"},{"post_id":"cjcu9m8vx001i44wax5wyqjj6","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8w3001o44wabook4srr"},{"post_id":"cjcu9m8vc000o44wa5k6k29wa","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8w9001q44wazesn30wn"},{"post_id":"cjcu9m8vy001k44waakiksjjx","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8wd001t44wapvdy7c7v"},{"post_id":"cjcu9m8vz001n44wa6m20sbwz","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8wg001v44waeysd576l"},{"post_id":"cjcu9m8ve000q44wazcl23vzp","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8wj001y44wacr2ifybq"},{"post_id":"cjcu9m8w4001p44wa5cikrpx0","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8wk002044wats7lkecw"},{"post_id":"cjcu9m8wa001s44wa4goa7rqm","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8wo002344wat9koxqlt"},{"post_id":"cjcu9m8we001u44wal5iyb92l","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8ws002544wa2q1ngxgb"},{"post_id":"cjcu9m8vg000t44wabqyxcuq4","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8wu002844wa6u27g5jy"},{"post_id":"cjcu9m8vg000t44wabqyxcuq4","tag_id":"cjcu9m8wa001r44wahpdx1fhp","_id":"cjcu9m8ww002a44wajvi9fmyb"},{"post_id":"cjcu9m8wh001w44wakiepfyxe","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8wx002c44wadwbcnwc8"},{"post_id":"cjcu9m8wj001z44wavsdnkoak","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8wz002f44wawbv86glv"},{"post_id":"cjcu9m8vi000v44wahxt7jd59","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8x0002h44wa1qoq7exk"},{"post_id":"cjcu9m8vi000v44wahxt7jd59","tag_id":"cjcu9m8wa001r44wahpdx1fhp","_id":"cjcu9m8x2002k44wa3b51gw8j"},{"post_id":"cjcu9m8wk002144wa425zdz5i","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8x3002m44wam49b1lzg"},{"post_id":"cjcu9m8wp002444wa4h6bwf8w","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8x5002p44wavhg4inkl"},{"post_id":"cjcu9m8vj000x44waorwnte3q","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8x7002r44warg6syl85"},{"post_id":"cjcu9m8vj000x44waorwnte3q","tag_id":"cjcu9m8wl002244wabm3diup1","_id":"cjcu9m8xa002u44wabf2832yy"},{"post_id":"cjcu9m8wt002644waf31ws0rj","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8xe002w44waunce5e7t"},{"post_id":"cjcu9m8wv002944wauoy6daju","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8xh002z44waxoqq64ll"},{"post_id":"cjcu9m8vl001044wat5dvweyi","tag_id":"cjcu9m8wu002744wa2md0ihuu","_id":"cjcu9m8xl003144wapighoknx"},{"post_id":"cjcu9m8vl001044wat5dvweyi","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8xt003444warhq74rk4"},{"post_id":"cjcu9m8ww002b44waqmaak9bg","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8xy003644waiiombbtu"},{"post_id":"cjcu9m8wy002e44wahv970itd","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m8y6003944waoids65zf"},{"post_id":"cjcu9m8wy002e44wahv970itd","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m8y9003b44waz1sr2fit"},{"post_id":"cjcu9m8vm001244waa8spq73l","tag_id":"cjcu9m8wx002d44wa6zq3jjl5","_id":"cjcu9m8yd003e44wawry39unt"},{"post_id":"cjcu9m8vm001244waa8spq73l","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8yi003g44wa848jjemv"},{"post_id":"cjcu9m8wz002g44wae1om2l44","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8ys003j44wa51prqlo4"},{"post_id":"cjcu9m8x1002j44waxebtpuyx","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m8yz003l44wa5qvlfl6x"},{"post_id":"cjcu9m8x1002j44waxebtpuyx","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m8z5003o44waq3790h30"},{"post_id":"cjcu9m8vo001544wa43lks755","tag_id":"cjcu9m8wx002d44wa6zq3jjl5","_id":"cjcu9m8z9003q44wajbj502v3"},{"post_id":"cjcu9m8vo001544wa43lks755","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8zc003s44wajtwre1s4"},{"post_id":"cjcu9m8x2002l44wacm0rxkjb","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m8zg003v44wajd6xir89"},{"post_id":"cjcu9m8x2002l44wacm0rxkjb","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m8zj003x44war4fip25w"},{"post_id":"cjcu9m8x4002o44wa70m62nmt","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m8zn004044wadmirk9o5"},{"post_id":"cjcu9m8vp001744wam6q1g82x","tag_id":"cjcu9m8wx002d44wa6zq3jjl5","_id":"cjcu9m8zs004244wadpsgoxnv"},{"post_id":"cjcu9m8vp001744wam6q1g82x","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m8zw004544wapsobpu98"},{"post_id":"cjcu9m8x5002q44wa0vavifbj","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m8zz004744wa5wyruium"},{"post_id":"cjcu9m8vq001944wap3sf0xce","tag_id":"cjcu9m8wx002d44wa6zq3jjl5","_id":"cjcu9m901004a44wa2dpqplag"},{"post_id":"cjcu9m8vq001944wap3sf0xce","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m904004c44wa40uvugxd"},{"post_id":"cjcu9m8xc002v44waqt3ptpcb","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m90b004f44war95gy41h"},{"post_id":"cjcu9m8vs001b44wa4rtjs2r1","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m90j004h44wajfuxmkta"},{"post_id":"cjcu9m8xk003044wa0gwo7brq","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m90l004j44wa8nys67ug"},{"post_id":"cjcu9m8vt001e44waz1qa8gjn","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m90p004m44waeokjj7f8"},{"post_id":"cjcu9m8vv001g44warxhkmdil","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m90s004o44wabxhc7dei"},{"post_id":"cjcu9m8y7003a44wan89bdhy6","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m90y004r44wa43ka8hsg"},{"post_id":"cjcu9m8yf003f44wahrdg1apy","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m912004t44wa78lcuhkh"},{"post_id":"cjcu9m8ys003k44wa7dkqa588","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m917004w44walnp4j13o"},{"post_id":"cjcu9m8x8002t44wa44qd4krh","tag_id":"cjcu9m8ya003c44wab6drhta6","_id":"cjcu9m919004y44wao97glxge"},{"post_id":"cjcu9m8x8002t44wa44qd4krh","tag_id":"cjcu9m8yr003i44wa9gr4fxu0","_id":"cjcu9m91c005144waehvs6fxg"},{"post_id":"cjcu9m8yz003m44wa0x5b3fbo","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m91i005344wa7y41801d"},{"post_id":"cjcu9m8z8003p44wavpgl8jv0","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m91n005644wazw1b20n4"},{"post_id":"cjcu9m8xf002y44wa5j7vngda","tag_id":"cjcu9m8z4003n44was8oao1fw","_id":"cjcu9m91p005844wa0swfyb36"},{"post_id":"cjcu9m8xf002y44wa5j7vngda","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m91s005b44wan931cc8e"},{"post_id":"cjcu9m8za003r44wanovurdtr","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m91v005d44warm1jc9tk"},{"post_id":"cjcu9m8zd003u44wae2drvg1s","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m921005f44wampt8uoi6"},{"post_id":"cjcu9m8xm003344wate0qy2wo","tag_id":"cjcu9m8yr003i44wa9gr4fxu0","_id":"cjcu9m925005h44wajgjhg2tj"},{"post_id":"cjcu9m8zh003w44watq3arl98","tag_id":"cjcu9m8yr003i44wa9gr4fxu0","_id":"cjcu9m928005j44wa0cnnl70l"},{"post_id":"cjcu9m8zo004144wapm65tg6f","tag_id":"cjcu9m8yr003i44wa9gr4fxu0","_id":"cjcu9m92b005l44wa4ww14ias"},{"post_id":"cjcu9m8zu004444wa94xsb9sl","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m92d005n44wawn9r8ma4"},{"post_id":"cjcu9m8zx004644wam55w06ch","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m92w005p44wau1w7875k"},{"post_id":"cjcu9m8xw003544watko7dqb7","tag_id":"cjcu9m8zk003y44waq7mp3tup","_id":"cjcu9m931005r44wats8kvpgd"},{"post_id":"cjcu9m8xw003544watko7dqb7","tag_id":"cjcu9m8zt004344waniuuszns","_id":"cjcu9m935005u44wak5en7yst"},{"post_id":"cjcu9m8xw003544watko7dqb7","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m938005w44waklyfgzgk"},{"post_id":"cjcu9m902004b44wa8blsz4qm","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m93b005y44wag9fg70bl"},{"post_id":"cjcu9m8xz003844wapskeof9e","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m93f006044wa2fawsdlz"},{"post_id":"cjcu9m8xz003844wapskeof9e","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m93i006244wagxiqy576"},{"post_id":"cjcu9m907004d44wam79i8far","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m93o006444wayi39o8h7"},{"post_id":"cjcu9m90g004g44wadhb5azs8","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m93q006644wasrjoxwod"},{"post_id":"cjcu9m90j004i44wadmkhzs9i","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m93x006944wa7myxh5ee"},{"post_id":"cjcu9m90m004l44wafbfrxvmu","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m944006b44wamza7ubd7"},{"post_id":"cjcu9m8ya003d44wa5p7hstvf","tag_id":"cjcu9m90b004e44wa1ux6bayi","_id":"cjcu9m949006d44waj1w97eum"},{"post_id":"cjcu9m8ya003d44wa5p7hstvf","tag_id":"cjcu9m8wx002d44wa6zq3jjl5","_id":"cjcu9m94c006f44wanvsywwvq"},{"post_id":"cjcu9m8ya003d44wa5p7hstvf","tag_id":"cjcu9m8yr003i44wa9gr4fxu0","_id":"cjcu9m94f006h44wad3rydttq"},{"post_id":"cjcu9m90q004n44wa2rdq8t4j","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m94j006k44wapswf0fq9"},{"post_id":"cjcu9m90u004q44walcrjzu22","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m94m006m44wagj978n0x"},{"post_id":"cjcu9m8yi003h44waqt1gb06h","tag_id":"cjcu9m8zt004344waniuuszns","_id":"cjcu9m94p006p44wacdva62iz"},{"post_id":"cjcu9m8yi003h44waqt1gb06h","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m94t006r44waze01ipzk"},{"post_id":"cjcu9m90y004s44wagaxwdltf","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m94z006u44wa9lwy318f"},{"post_id":"cjcu9m915004v44wahronx3b5","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m953006w44wauzoi74ul"},{"post_id":"cjcu9m91a005044wa1ezur3v7","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m957006y44wa8lj6o8ko"},{"post_id":"cjcu9m91a005044wa1ezur3v7","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m959007044wartcs3r57"},{"post_id":"cjcu9m8zl003z44wah3vzkrmp","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m95c007244waxyfv8qb7"},{"post_id":"cjcu9m8zl003z44wah3vzkrmp","tag_id":"cjcu9m913004u44wa9mx2mj4m","_id":"cjcu9m95e007444wapoe5y1kp"},{"post_id":"cjcu9m8zl003z44wah3vzkrmp","tag_id":"cjcu9m8zt004344waniuuszns","_id":"cjcu9m95h007644wam0430wl3"},{"post_id":"cjcu9m91d005244wa4k0jyb4z","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m95j007844wa2tb2scf5"},{"post_id":"cjcu9m91d005244wa4k0jyb4z","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m95n007a44waai7argjr"},{"post_id":"cjcu9m91k005544wagu6kscna","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m95q007c44wakb6kce9z"},{"post_id":"cjcu9m91n005744wa88nk6yrj","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m95r007d44wa8xkz51c4"},{"post_id":"cjcu9m91n005744wa88nk6yrj","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m95r007e44wa76mkvxhn"},{"post_id":"cjcu9m8zz004844wajyqg5tjc","tag_id":"cjcu9m91j005444wa2sqa0n54","_id":"cjcu9m95r007f44wa9mz61m03"},{"post_id":"cjcu9m8zz004844wajyqg5tjc","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m95s007g44wab7h02y53"},{"post_id":"cjcu9m91q005944wa0goahnln","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m95s007h44wazn1sgozr"},{"post_id":"cjcu9m91t005c44wa5ybajeeg","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m95s007i44wasifowsqw"},{"post_id":"cjcu9m918004x44wacpt3gy7g","tag_id":"cjcu9m91r005a44wa9v0k4wwc","_id":"cjcu9m95s007j44wa85th91cb"},{"post_id":"cjcu9m91y005e44wa9vwkzbeq","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m95t007k44wagn9rmr68"},{"post_id":"cjcu9m921005g44waraxyutgw","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m95t007l44wa0bn1mvio"},{"post_id":"cjcu9m921005g44waraxyutgw","tag_id":"cjcu9m90b004e44wa1ux6bayi","_id":"cjcu9m95t007m44wamagmxp6x"},{"post_id":"cjcu9m926005i44wabj3kmmzq","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m95u007n44was12gbf4a"},{"post_id":"cjcu9m929005k44wavr0kjm1t","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m95v007o44wa1jv0ox46"},{"post_id":"cjcu9m929005k44wavr0kjm1t","tag_id":"cjcu9m8vn001344wabu772a6s","_id":"cjcu9m95v007p44wabmwcyef8"},{"post_id":"cjcu9m92b005m44wap8to3t3r","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m95w007q44watwnrfe1j"},{"post_id":"cjcu9m92w005q44waqauojf1o","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m95w007r44wappizhmbt"},{"post_id":"cjcu9m932005t44wal8wzd7ei","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m95w007s44wawmluro49"},{"post_id":"cjcu9m935005v44wasqkc6rtl","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m95w007t44waq2wbkml0"},{"post_id":"cjcu9m92e005o44wanjb7sgbl","tag_id":"cjcu9m931005s44wak8sip042","_id":"cjcu9m95w007u44wav060290s"},{"post_id":"cjcu9m939005x44wa9qy68y7v","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m95x007v44waou5kn3h4"},{"post_id":"cjcu9m939005x44wa9qy68y7v","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m95x007w44waqi9uejci"},{"post_id":"cjcu9m93c005z44waf8yza5fp","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m95y007x44wa59ycvnfm"},{"post_id":"cjcu9m93c005z44waf8yza5fp","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m95y007y44wa3w3jsswt"},{"post_id":"cjcu9m93f006144wa5o5or2eg","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m95y007z44wa7f65dorf"},{"post_id":"cjcu9m93o006544waccx09jyv","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m95y008044wa64nxeibz"},{"post_id":"cjcu9m93r006844wavdnau40g","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m95z008144wa10m7j5va"},{"post_id":"cjcu9m93r006844wavdnau40g","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m95z008244wabrsofl7x"},{"post_id":"cjcu9m93y006a44wa4cin9uc8","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m95z008344waklqgqwof"},{"post_id":"cjcu9m93k006344wa7j7magfs","tag_id":"cjcu9m93r006744wa9jcscu6p","_id":"cjcu9m95z008444wa4nokxzga"},{"post_id":"cjcu9m944006c44wa3urgr86j","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m960008544wajg4a74e6"},{"post_id":"cjcu9m944006c44wa3urgr86j","tag_id":"cjcu9m90b004e44wa1ux6bayi","_id":"cjcu9m960008644waf6a34w33"},{"post_id":"cjcu9m94g006j44wa5slzzisq","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m960008744wavc52u4t3"},{"post_id":"cjcu9m94k006l44wa0d0tk6bo","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m960008844wazreq3ati"},{"post_id":"cjcu9m94k006l44wa0d0tk6bo","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m960008944waztoh9676"},{"post_id":"cjcu9m94a006e44wakiuybc9s","tag_id":"cjcu9m94f006i44waw7qncq4w","_id":"cjcu9m961008a44wa5aokunqe"},{"post_id":"cjcu9m94q006q44waw2j2rcxt","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m961008b44wast53m0k5"},{"post_id":"cjcu9m94q006q44waw2j2rcxt","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m961008c44wacyzmunzd"},{"post_id":"cjcu9m94d006g44wal8xoexpz","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m961008d44wa6dhkedgr"},{"post_id":"cjcu9m94d006g44wal8xoexpz","tag_id":"cjcu9m94o006o44wapu7ozlwq","_id":"cjcu9m961008e44wa7r8c51r2"},{"post_id":"cjcu9m94u006s44wams8nnecc","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m962008f44wapag1ext1"},{"post_id":"cjcu9m94u006s44wams8nnecc","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m963008g44wa0r0rzn9r"},{"post_id":"cjcu9m950006v44wavgosa5le","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m963008h44wa53cucs36"},{"post_id":"cjcu9m950006v44wavgosa5le","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m963008i44wa6u3vjjtb"},{"post_id":"cjcu9m94n006n44waynf7w8ue","tag_id":"cjcu9m94y006t44wavkk9jyax","_id":"cjcu9m963008j44wa6evphsz3"},{"post_id":"cjcu9m94n006n44waynf7w8ue","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m964008k44wa4279bj77"},{"post_id":"cjcu9m953006x44wauvv68df3","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m964008l44waqmi0fylp"},{"post_id":"cjcu9m958006z44wa2lf3sxn5","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m965008m44wajlxhx5bu"},{"post_id":"cjcu9m958006z44wa2lf3sxn5","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m966008n44wai4oykzfj"},{"post_id":"cjcu9m95a007144wan8bzsuk8","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m966008o44wa74bgy8nj"},{"post_id":"cjcu9m95c007344wabf80hgr9","tag_id":"cjcu9m8uc000444wavmo029oe","_id":"cjcu9m966008p44wawgk5zmyg"},{"post_id":"cjcu9m95e007544wa4cbawrnc","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m967008q44wah9xzmfv7"},{"post_id":"cjcu9m95e007544wa4cbawrnc","tag_id":"cjcu9m901004944wae8z34nr9","_id":"cjcu9m967008r44wak331y0ml"},{"post_id":"cjcu9m95h007744wajlmzalvq","tag_id":"cjcu9m8vf000s44wavsy7rlid","_id":"cjcu9m967008s44waqgbic9h0"},{"post_id":"cjcu9m95h007744wajlmzalvq","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m967008t44wabe495kcb"},{"post_id":"cjcu9m95k007944waw7ibj3gu","tag_id":"cjcu9m8uy000d44wa4jkvseyf","_id":"cjcu9m967008u44wacas1ursc"},{"post_id":"cjcu9m95o007b44waqnc14gtk","tag_id":"cjcu9m8vw001h44wa87hup0cx","_id":"cjcu9m968008v44wablpy8ud5"}],"Tag":[{"name":"Web","_id":"cjcu9m8uc000444wavmo029oe"},{"name":"AJAX","_id":"cjcu9m8uv000a44waa8jhkb0o"},{"name":"生活","_id":"cjcu9m8uy000d44wa4jkvseyf"},{"name":"cookie","_id":"cjcu9m8v4000i44wafcfqfw9q"},{"name":"essay","_id":"cjcu9m8vf000s44wavsy7rlid"},{"name":"CSS","_id":"cjcu9m8vn001344wabu772a6s"},{"name":"数学","_id":"cjcu9m8vq001844waqlefd241"},{"name":"Java基础","_id":"cjcu9m8vw001h44wa87hup0cx"},{"name":"JSP","_id":"cjcu9m8wa001r44wahpdx1fhp"},{"name":"数据库","_id":"cjcu9m8wl002244wabm3diup1"},{"name":"JSTL","_id":"cjcu9m8wu002744wa2md0ihuu"},{"name":"JS","_id":"cjcu9m8wx002d44wa6zq3jjl5"},{"name":"C","_id":"cjcu9m8ya003c44wab6drhta6"},{"name":"编程","_id":"cjcu9m8yr003i44wa9gr4fxu0"},{"name":"Session","_id":"cjcu9m8z4003n44was8oao1fw"},{"name":"dom4j","_id":"cjcu9m8zk003y44waq7mp3tup"},{"name":"XML","_id":"cjcu9m8zt004344waniuuszns"},{"name":"文学","_id":"cjcu9m901004944wae8z34nr9"},{"name":"demo","_id":"cjcu9m90b004e44wa1ux6bayi"},{"name":"jaxp","_id":"cjcu9m913004u44wa9mx2mj4m"},{"name":"Servlet","_id":"cjcu9m91j005444wa2sqa0n54"},{"name":"JVM","_id":"cjcu9m91r005a44wa9v0k4wwc"},{"name":"物理学","_id":"cjcu9m931005s44wak8sip042"},{"name":"数据结构","_id":"cjcu9m93r006744wa9jcscu6p"},{"name":"英语","_id":"cjcu9m94f006i44waw7qncq4w"},{"name":"监听器","_id":"cjcu9m94o006o44wapu7ozlwq"},{"name":"过滤器","_id":"cjcu9m94y006t44wavkk9jyax"}]}}